

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 15:08:21 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.40
    42                           ; Generated 17/11/2021 GMT
    43                           ; 
    44                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F1827 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0016                     	;# 
    97  0017                     	;# 
    98  0018                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0095                     	;# 
   112  0096                     	;# 
   113  0097                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009A                     	;# 
   117  009B                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  0111                     	;# 
   125  0112                     	;# 
   126  0113                     	;# 
   127  0114                     	;# 
   128  0115                     	;# 
   129  0116                     	;# 
   130  0117                     	;# 
   131  0118                     	;# 
   132  0119                     	;# 
   133  011A                     	;# 
   134  011B                     	;# 
   135  011D                     	;# 
   136  011E                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0191                     	;# 
   140  0191                     	;# 
   141  0192                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0193                     	;# 
   145  0194                     	;# 
   146  0195                     	;# 
   147  0196                     	;# 
   148  0199                     	;# 
   149  019A                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019B                     	;# 
   154  019C                     	;# 
   155  019C                     	;# 
   156  019D                     	;# 
   157  019E                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020D                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021E                     	;# 
   182  021F                     	;# 
   183  0291                     	;# 
   184  0291                     	;# 
   185  0292                     	;# 
   186  0293                     	;# 
   187  0294                     	;# 
   188  0295                     	;# 
   189  0295                     	;# 
   190  0296                     	;# 
   191  0298                     	;# 
   192  0298                     	;# 
   193  0299                     	;# 
   194  029A                     	;# 
   195  029B                     	;# 
   196  029C                     	;# 
   197  029C                     	;# 
   198  029D                     	;# 
   199  029E                     	;# 
   200  029E                     	;# 
   201  0311                     	;# 
   202  0311                     	;# 
   203  0312                     	;# 
   204  0313                     	;# 
   205  0318                     	;# 
   206  0318                     	;# 
   207  0319                     	;# 
   208  031A                     	;# 
   209  0394                     	;# 
   210  0395                     	;# 
   211  0396                     	;# 
   212  039A                     	;# 
   213  039C                     	;# 
   214  039D                     	;# 
   215  039E                     	;# 
   216  039F                     	;# 
   217  0415                     	;# 
   218  0416                     	;# 
   219  0417                     	;# 
   220  041C                     	;# 
   221  041D                     	;# 
   222  041E                     	;# 
   223  0FE4                     	;# 
   224  0FE5                     	;# 
   225  0FE6                     	;# 
   226  0FE7                     	;# 
   227  0FE8                     	;# 
   228  0FE9                     	;# 
   229  0FEA                     	;# 
   230  0FEB                     	;# 
   231  0FED                     	;# 
   232  0FEE                     	;# 
   233  0FEF                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  0111                     	;# 
   283  0112                     	;# 
   284  0113                     	;# 
   285  0114                     	;# 
   286  0115                     	;# 
   287  0116                     	;# 
   288  0117                     	;# 
   289  0118                     	;# 
   290  0119                     	;# 
   291  011A                     	;# 
   292  011B                     	;# 
   293  011D                     	;# 
   294  011E                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0191                     	;# 
   298  0191                     	;# 
   299  0192                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0193                     	;# 
   303  0194                     	;# 
   304  0195                     	;# 
   305  0196                     	;# 
   306  0199                     	;# 
   307  019A                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019B                     	;# 
   312  019C                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  0211                     	;# 
   320  0211                     	;# 
   321  0212                     	;# 
   322  0212                     	;# 
   323  0213                     	;# 
   324  0213                     	;# 
   325  0214                     	;# 
   326  0214                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0216                     	;# 
   331  0216                     	;# 
   332  0217                     	;# 
   333  0217                     	;# 
   334  0219                     	;# 
   335  021A                     	;# 
   336  021B                     	;# 
   337  021C                     	;# 
   338  021D                     	;# 
   339  021E                     	;# 
   340  021F                     	;# 
   341  0291                     	;# 
   342  0291                     	;# 
   343  0292                     	;# 
   344  0293                     	;# 
   345  0294                     	;# 
   346  0295                     	;# 
   347  0295                     	;# 
   348  0296                     	;# 
   349  0298                     	;# 
   350  0298                     	;# 
   351  0299                     	;# 
   352  029A                     	;# 
   353  029B                     	;# 
   354  029C                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  029E                     	;# 
   359  0311                     	;# 
   360  0311                     	;# 
   361  0312                     	;# 
   362  0313                     	;# 
   363  0318                     	;# 
   364  0318                     	;# 
   365  0319                     	;# 
   366  031A                     	;# 
   367  0394                     	;# 
   368  0395                     	;# 
   369  0396                     	;# 
   370  039A                     	;# 
   371  039C                     	;# 
   372  039D                     	;# 
   373  039E                     	;# 
   374  039F                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0FE4                     	;# 
   382  0FE5                     	;# 
   383  0FE6                     	;# 
   384  0FE7                     	;# 
   385  0FE8                     	;# 
   386  0FE9                     	;# 
   387  0FEA                     	;# 
   388  0FEB                     	;# 
   389  0FED                     	;# 
   390  0FEE                     	;# 
   391  0FEF                     	;# 
   392  0000                     	;# 
   393  0001                     	;# 
   394  0002                     	;# 
   395  0003                     	;# 
   396  0004                     	;# 
   397  0005                     	;# 
   398  0006                     	;# 
   399  0007                     	;# 
   400  0008                     	;# 
   401  0009                     	;# 
   402  000A                     	;# 
   403  000B                     	;# 
   404  000C                     	;# 
   405  000D                     	;# 
   406  0011                     	;# 
   407  0012                     	;# 
   408  0013                     	;# 
   409  0014                     	;# 
   410  0015                     	;# 
   411  0016                     	;# 
   412  0016                     	;# 
   413  0017                     	;# 
   414  0018                     	;# 
   415  0019                     	;# 
   416  001A                     	;# 
   417  001B                     	;# 
   418  001C                     	;# 
   419  001E                     	;# 
   420  001F                     	;# 
   421  008C                     	;# 
   422  008D                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  010C                     	;# 
   439  010D                     	;# 
   440  0111                     	;# 
   441  0112                     	;# 
   442  0113                     	;# 
   443  0114                     	;# 
   444  0115                     	;# 
   445  0116                     	;# 
   446  0117                     	;# 
   447  0118                     	;# 
   448  0119                     	;# 
   449  011A                     	;# 
   450  011B                     	;# 
   451  011D                     	;# 
   452  011E                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0191                     	;# 
   456  0191                     	;# 
   457  0192                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0193                     	;# 
   461  0194                     	;# 
   462  0195                     	;# 
   463  0196                     	;# 
   464  0199                     	;# 
   465  019A                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019B                     	;# 
   470  019C                     	;# 
   471  019C                     	;# 
   472  019D                     	;# 
   473  019E                     	;# 
   474  019F                     	;# 
   475  020C                     	;# 
   476  020D                     	;# 
   477  0211                     	;# 
   478  0211                     	;# 
   479  0212                     	;# 
   480  0212                     	;# 
   481  0213                     	;# 
   482  0213                     	;# 
   483  0214                     	;# 
   484  0214                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0215                     	;# 
   488  0216                     	;# 
   489  0216                     	;# 
   490  0217                     	;# 
   491  0217                     	;# 
   492  0219                     	;# 
   493  021A                     	;# 
   494  021B                     	;# 
   495  021C                     	;# 
   496  021D                     	;# 
   497  021E                     	;# 
   498  021F                     	;# 
   499  0291                     	;# 
   500  0291                     	;# 
   501  0292                     	;# 
   502  0293                     	;# 
   503  0294                     	;# 
   504  0295                     	;# 
   505  0295                     	;# 
   506  0296                     	;# 
   507  0298                     	;# 
   508  0298                     	;# 
   509  0299                     	;# 
   510  029A                     	;# 
   511  029B                     	;# 
   512  029C                     	;# 
   513  029C                     	;# 
   514  029D                     	;# 
   515  029E                     	;# 
   516  029E                     	;# 
   517  0311                     	;# 
   518  0311                     	;# 
   519  0312                     	;# 
   520  0313                     	;# 
   521  0318                     	;# 
   522  0318                     	;# 
   523  0319                     	;# 
   524  031A                     	;# 
   525  0394                     	;# 
   526  0395                     	;# 
   527  0396                     	;# 
   528  039A                     	;# 
   529  039C                     	;# 
   530  039D                     	;# 
   531  039E                     	;# 
   532  039F                     	;# 
   533  0415                     	;# 
   534  0416                     	;# 
   535  0417                     	;# 
   536  041C                     	;# 
   537  041D                     	;# 
   538  041E                     	;# 
   539  0FE4                     	;# 
   540  0FE5                     	;# 
   541  0FE6                     	;# 
   542  0FE7                     	;# 
   543  0FE8                     	;# 
   544  0FE9                     	;# 
   545  0FEA                     	;# 
   546  0FEB                     	;# 
   547  0FED                     	;# 
   548  0FEE                     	;# 
   549  0FEF                     	;# 
   550  0000                     	;# 
   551  0001                     	;# 
   552  0002                     	;# 
   553  0003                     	;# 
   554  0004                     	;# 
   555  0005                     	;# 
   556  0006                     	;# 
   557  0007                     	;# 
   558  0008                     	;# 
   559  0009                     	;# 
   560  000A                     	;# 
   561  000B                     	;# 
   562  000C                     	;# 
   563  000D                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001E                     	;# 
   578  001F                     	;# 
   579  008C                     	;# 
   580  008D                     	;# 
   581  0091                     	;# 
   582  0092                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  0111                     	;# 
   599  0112                     	;# 
   600  0113                     	;# 
   601  0114                     	;# 
   602  0115                     	;# 
   603  0116                     	;# 
   604  0117                     	;# 
   605  0118                     	;# 
   606  0119                     	;# 
   607  011A                     	;# 
   608  011B                     	;# 
   609  011D                     	;# 
   610  011E                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  0191                     	;# 
   614  0191                     	;# 
   615  0192                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0193                     	;# 
   619  0194                     	;# 
   620  0195                     	;# 
   621  0196                     	;# 
   622  0199                     	;# 
   623  019A                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019B                     	;# 
   628  019C                     	;# 
   629  019C                     	;# 
   630  019D                     	;# 
   631  019E                     	;# 
   632  019F                     	;# 
   633  020C                     	;# 
   634  020D                     	;# 
   635  0211                     	;# 
   636  0211                     	;# 
   637  0212                     	;# 
   638  0212                     	;# 
   639  0213                     	;# 
   640  0213                     	;# 
   641  0214                     	;# 
   642  0214                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0215                     	;# 
   646  0216                     	;# 
   647  0216                     	;# 
   648  0217                     	;# 
   649  0217                     	;# 
   650  0219                     	;# 
   651  021A                     	;# 
   652  021B                     	;# 
   653  021C                     	;# 
   654  021D                     	;# 
   655  021E                     	;# 
   656  021F                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0298                     	;# 
   666  0298                     	;# 
   667  0299                     	;# 
   668  029A                     	;# 
   669  029B                     	;# 
   670  029C                     	;# 
   671  029C                     	;# 
   672  029D                     	;# 
   673  029E                     	;# 
   674  029E                     	;# 
   675  0311                     	;# 
   676  0311                     	;# 
   677  0312                     	;# 
   678  0313                     	;# 
   679  0318                     	;# 
   680  0318                     	;# 
   681  0319                     	;# 
   682  031A                     	;# 
   683  0394                     	;# 
   684  0395                     	;# 
   685  0396                     	;# 
   686  039A                     	;# 
   687  039C                     	;# 
   688  039D                     	;# 
   689  039E                     	;# 
   690  039F                     	;# 
   691  0415                     	;# 
   692  0416                     	;# 
   693  0417                     	;# 
   694  041C                     	;# 
   695  041D                     	;# 
   696  041E                     	;# 
   697  0FE4                     	;# 
   698  0FE5                     	;# 
   699  0FE6                     	;# 
   700  0FE7                     	;# 
   701  0FE8                     	;# 
   702  0FE9                     	;# 
   703  0FEA                     	;# 
   704  0FEB                     	;# 
   705  0FED                     	;# 
   706  0FEE                     	;# 
   707  0FEF                     	;# 
   708  0000                     	;# 
   709  0001                     	;# 
   710  0002                     	;# 
   711  0003                     	;# 
   712  0004                     	;# 
   713  0005                     	;# 
   714  0006                     	;# 
   715  0007                     	;# 
   716  0008                     	;# 
   717  0009                     	;# 
   718  000A                     	;# 
   719  000B                     	;# 
   720  000C                     	;# 
   721  000D                     	;# 
   722  0011                     	;# 
   723  0012                     	;# 
   724  0013                     	;# 
   725  0014                     	;# 
   726  0015                     	;# 
   727  0016                     	;# 
   728  0016                     	;# 
   729  0017                     	;# 
   730  0018                     	;# 
   731  0019                     	;# 
   732  001A                     	;# 
   733  001B                     	;# 
   734  001C                     	;# 
   735  001E                     	;# 
   736  001F                     	;# 
   737  008C                     	;# 
   738  008D                     	;# 
   739  0091                     	;# 
   740  0092                     	;# 
   741  0093                     	;# 
   742  0094                     	;# 
   743  0095                     	;# 
   744  0096                     	;# 
   745  0097                     	;# 
   746  0098                     	;# 
   747  0099                     	;# 
   748  009A                     	;# 
   749  009B                     	;# 
   750  009B                     	;# 
   751  009C                     	;# 
   752  009D                     	;# 
   753  009E                     	;# 
   754  010C                     	;# 
   755  010D                     	;# 
   756  0111                     	;# 
   757  0112                     	;# 
   758  0113                     	;# 
   759  0114                     	;# 
   760  0115                     	;# 
   761  0116                     	;# 
   762  0117                     	;# 
   763  0118                     	;# 
   764  0119                     	;# 
   765  011A                     	;# 
   766  011B                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  0191                     	;# 
   772  0191                     	;# 
   773  0192                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0193                     	;# 
   777  0194                     	;# 
   778  0195                     	;# 
   779  0196                     	;# 
   780  0199                     	;# 
   781  019A                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019B                     	;# 
   786  019C                     	;# 
   787  019C                     	;# 
   788  019D                     	;# 
   789  019E                     	;# 
   790  019F                     	;# 
   791  020C                     	;# 
   792  020D                     	;# 
   793  0211                     	;# 
   794  0211                     	;# 
   795  0212                     	;# 
   796  0212                     	;# 
   797  0213                     	;# 
   798  0213                     	;# 
   799  0214                     	;# 
   800  0214                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0219                     	;# 
   809  021A                     	;# 
   810  021B                     	;# 
   811  021C                     	;# 
   812  021D                     	;# 
   813  021E                     	;# 
   814  021F                     	;# 
   815  0291                     	;# 
   816  0291                     	;# 
   817  0292                     	;# 
   818  0293                     	;# 
   819  0294                     	;# 
   820  0295                     	;# 
   821  0295                     	;# 
   822  0296                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  029A                     	;# 
   827  029B                     	;# 
   828  029C                     	;# 
   829  029C                     	;# 
   830  029D                     	;# 
   831  029E                     	;# 
   832  029E                     	;# 
   833  0311                     	;# 
   834  0311                     	;# 
   835  0312                     	;# 
   836  0313                     	;# 
   837  0318                     	;# 
   838  0318                     	;# 
   839  0319                     	;# 
   840  031A                     	;# 
   841  0394                     	;# 
   842  0395                     	;# 
   843  0396                     	;# 
   844  039A                     	;# 
   845  039C                     	;# 
   846  039D                     	;# 
   847  039E                     	;# 
   848  039F                     	;# 
   849  0415                     	;# 
   850  0416                     	;# 
   851  0417                     	;# 
   852  041C                     	;# 
   853  041D                     	;# 
   854  041E                     	;# 
   855  0FE4                     	;# 
   856  0FE5                     	;# 
   857  0FE6                     	;# 
   858  0FE7                     	;# 
   859  0FE8                     	;# 
   860  0FE9                     	;# 
   861  0FEA                     	;# 
   862  0FEB                     	;# 
   863  0FED                     	;# 
   864  0FEE                     	;# 
   865  0FEF                     	;# 
   866  0000                     	;# 
   867  0001                     	;# 
   868  0002                     	;# 
   869  0003                     	;# 
   870  0004                     	;# 
   871  0005                     	;# 
   872  0006                     	;# 
   873  0007                     	;# 
   874  0008                     	;# 
   875  0009                     	;# 
   876  000A                     	;# 
   877  000B                     	;# 
   878  000C                     	;# 
   879  000D                     	;# 
   880  0011                     	;# 
   881  0012                     	;# 
   882  0013                     	;# 
   883  0014                     	;# 
   884  0015                     	;# 
   885  0016                     	;# 
   886  0016                     	;# 
   887  0017                     	;# 
   888  0018                     	;# 
   889  0019                     	;# 
   890  001A                     	;# 
   891  001B                     	;# 
   892  001C                     	;# 
   893  001E                     	;# 
   894  001F                     	;# 
   895  008C                     	;# 
   896  008D                     	;# 
   897  0091                     	;# 
   898  0092                     	;# 
   899  0093                     	;# 
   900  0094                     	;# 
   901  0095                     	;# 
   902  0096                     	;# 
   903  0097                     	;# 
   904  0098                     	;# 
   905  0099                     	;# 
   906  009A                     	;# 
   907  009B                     	;# 
   908  009B                     	;# 
   909  009C                     	;# 
   910  009D                     	;# 
   911  009E                     	;# 
   912  010C                     	;# 
   913  010D                     	;# 
   914  0111                     	;# 
   915  0112                     	;# 
   916  0113                     	;# 
   917  0114                     	;# 
   918  0115                     	;# 
   919  0116                     	;# 
   920  0117                     	;# 
   921  0118                     	;# 
   922  0119                     	;# 
   923  011A                     	;# 
   924  011B                     	;# 
   925  011D                     	;# 
   926  011E                     	;# 
   927  018C                     	;# 
   928  018D                     	;# 
   929  0191                     	;# 
   930  0191                     	;# 
   931  0192                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0193                     	;# 
   935  0194                     	;# 
   936  0195                     	;# 
   937  0196                     	;# 
   938  0199                     	;# 
   939  019A                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019B                     	;# 
   944  019C                     	;# 
   945  019C                     	;# 
   946  019D                     	;# 
   947  019E                     	;# 
   948  019F                     	;# 
   949  020C                     	;# 
   950  020D                     	;# 
   951  0211                     	;# 
   952  0211                     	;# 
   953  0212                     	;# 
   954  0212                     	;# 
   955  0213                     	;# 
   956  0213                     	;# 
   957  0214                     	;# 
   958  0214                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0215                     	;# 
   962  0216                     	;# 
   963  0216                     	;# 
   964  0217                     	;# 
   965  0217                     	;# 
   966  0219                     	;# 
   967  021A                     	;# 
   968  021B                     	;# 
   969  021C                     	;# 
   970  021D                     	;# 
   971  021E                     	;# 
   972  021F                     	;# 
   973  0291                     	;# 
   974  0291                     	;# 
   975  0292                     	;# 
   976  0293                     	;# 
   977  0294                     	;# 
   978  0295                     	;# 
   979  0295                     	;# 
   980  0296                     	;# 
   981  0298                     	;# 
   982  0298                     	;# 
   983  0299                     	;# 
   984  029A                     	;# 
   985  029B                     	;# 
   986  029C                     	;# 
   987  029C                     	;# 
   988  029D                     	;# 
   989  029E                     	;# 
   990  029E                     	;# 
   991  0311                     	;# 
   992  0311                     	;# 
   993  0312                     	;# 
   994  0313                     	;# 
   995  0318                     	;# 
   996  0318                     	;# 
   997  0319                     	;# 
   998  031A                     	;# 
   999  0394                     	;# 
  1000  0395                     	;# 
  1001  0396                     	;# 
  1002  039A                     	;# 
  1003  039C                     	;# 
  1004  039D                     	;# 
  1005  039E                     	;# 
  1006  039F                     	;# 
  1007  0415                     	;# 
  1008  0416                     	;# 
  1009  0417                     	;# 
  1010  041C                     	;# 
  1011  041D                     	;# 
  1012  041E                     	;# 
  1013  0FE4                     	;# 
  1014  0FE5                     	;# 
  1015  0FE6                     	;# 
  1016  0FE7                     	;# 
  1017  0FE8                     	;# 
  1018  0FE9                     	;# 
  1019  0FEA                     	;# 
  1020  0FEB                     	;# 
  1021  0FED                     	;# 
  1022  0FEE                     	;# 
  1023  0FEF                     	;# 
  1024  0000                     	;# 
  1025  0001                     	;# 
  1026  0002                     	;# 
  1027  0003                     	;# 
  1028  0004                     	;# 
  1029  0005                     	;# 
  1030  0006                     	;# 
  1031  0007                     	;# 
  1032  0008                     	;# 
  1033  0009                     	;# 
  1034  000A                     	;# 
  1035  000B                     	;# 
  1036  000C                     	;# 
  1037  000D                     	;# 
  1038  0011                     	;# 
  1039  0012                     	;# 
  1040  0013                     	;# 
  1041  0014                     	;# 
  1042  0015                     	;# 
  1043  0016                     	;# 
  1044  0016                     	;# 
  1045  0017                     	;# 
  1046  0018                     	;# 
  1047  0019                     	;# 
  1048  001A                     	;# 
  1049  001B                     	;# 
  1050  001C                     	;# 
  1051  001E                     	;# 
  1052  001F                     	;# 
  1053  008C                     	;# 
  1054  008D                     	;# 
  1055  0091                     	;# 
  1056  0092                     	;# 
  1057  0093                     	;# 
  1058  0094                     	;# 
  1059  0095                     	;# 
  1060  0096                     	;# 
  1061  0097                     	;# 
  1062  0098                     	;# 
  1063  0099                     	;# 
  1064  009A                     	;# 
  1065  009B                     	;# 
  1066  009B                     	;# 
  1067  009C                     	;# 
  1068  009D                     	;# 
  1069  009E                     	;# 
  1070  010C                     	;# 
  1071  010D                     	;# 
  1072  0111                     	;# 
  1073  0112                     	;# 
  1074  0113                     	;# 
  1075  0114                     	;# 
  1076  0115                     	;# 
  1077  0116                     	;# 
  1078  0117                     	;# 
  1079  0118                     	;# 
  1080  0119                     	;# 
  1081  011A                     	;# 
  1082  011B                     	;# 
  1083  011D                     	;# 
  1084  011E                     	;# 
  1085  018C                     	;# 
  1086  018D                     	;# 
  1087  0191                     	;# 
  1088  0191                     	;# 
  1089  0192                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0193                     	;# 
  1093  0194                     	;# 
  1094  0195                     	;# 
  1095  0196                     	;# 
  1096  0199                     	;# 
  1097  019A                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019B                     	;# 
  1102  019C                     	;# 
  1103  019C                     	;# 
  1104  019D                     	;# 
  1105  019E                     	;# 
  1106  019F                     	;# 
  1107  020C                     	;# 
  1108  020D                     	;# 
  1109  0211                     	;# 
  1110  0211                     	;# 
  1111  0212                     	;# 
  1112  0212                     	;# 
  1113  0213                     	;# 
  1114  0213                     	;# 
  1115  0214                     	;# 
  1116  0214                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0215                     	;# 
  1120  0216                     	;# 
  1121  0216                     	;# 
  1122  0217                     	;# 
  1123  0217                     	;# 
  1124  0219                     	;# 
  1125  021A                     	;# 
  1126  021B                     	;# 
  1127  021C                     	;# 
  1128  021D                     	;# 
  1129  021E                     	;# 
  1130  021F                     	;# 
  1131  0291                     	;# 
  1132  0291                     	;# 
  1133  0292                     	;# 
  1134  0293                     	;# 
  1135  0294                     	;# 
  1136  0295                     	;# 
  1137  0295                     	;# 
  1138  0296                     	;# 
  1139  0298                     	;# 
  1140  0298                     	;# 
  1141  0299                     	;# 
  1142  029A                     	;# 
  1143  029B                     	;# 
  1144  029C                     	;# 
  1145  029C                     	;# 
  1146  029D                     	;# 
  1147  029E                     	;# 
  1148  029E                     	;# 
  1149  0311                     	;# 
  1150  0311                     	;# 
  1151  0312                     	;# 
  1152  0313                     	;# 
  1153  0318                     	;# 
  1154  0318                     	;# 
  1155  0319                     	;# 
  1156  031A                     	;# 
  1157  0394                     	;# 
  1158  0395                     	;# 
  1159  0396                     	;# 
  1160  039A                     	;# 
  1161  039C                     	;# 
  1162  039D                     	;# 
  1163  039E                     	;# 
  1164  039F                     	;# 
  1165  0415                     	;# 
  1166  0416                     	;# 
  1167  0417                     	;# 
  1168  041C                     	;# 
  1169  041D                     	;# 
  1170  041E                     	;# 
  1171  0FE4                     	;# 
  1172  0FE5                     	;# 
  1173  0FE6                     	;# 
  1174  0FE7                     	;# 
  1175  0FE8                     	;# 
  1176  0FE9                     	;# 
  1177  0FEA                     	;# 
  1178  0FEB                     	;# 
  1179  0FED                     	;# 
  1180  0FEE                     	;# 
  1181  0FEF                     	;# 
  1182  0000                     	;# 
  1183  0001                     	;# 
  1184  0002                     	;# 
  1185  0003                     	;# 
  1186  0004                     	;# 
  1187  0005                     	;# 
  1188  0006                     	;# 
  1189  0007                     	;# 
  1190  0008                     	;# 
  1191  0009                     	;# 
  1192  000A                     	;# 
  1193  000B                     	;# 
  1194  000C                     	;# 
  1195  000D                     	;# 
  1196  0011                     	;# 
  1197  0012                     	;# 
  1198  0013                     	;# 
  1199  0014                     	;# 
  1200  0015                     	;# 
  1201  0016                     	;# 
  1202  0016                     	;# 
  1203  0017                     	;# 
  1204  0018                     	;# 
  1205  0019                     	;# 
  1206  001A                     	;# 
  1207  001B                     	;# 
  1208  001C                     	;# 
  1209  001E                     	;# 
  1210  001F                     	;# 
  1211  008C                     	;# 
  1212  008D                     	;# 
  1213  0091                     	;# 
  1214  0092                     	;# 
  1215  0093                     	;# 
  1216  0094                     	;# 
  1217  0095                     	;# 
  1218  0096                     	;# 
  1219  0097                     	;# 
  1220  0098                     	;# 
  1221  0099                     	;# 
  1222  009A                     	;# 
  1223  009B                     	;# 
  1224  009B                     	;# 
  1225  009C                     	;# 
  1226  009D                     	;# 
  1227  009E                     	;# 
  1228  010C                     	;# 
  1229  010D                     	;# 
  1230  0111                     	;# 
  1231  0112                     	;# 
  1232  0113                     	;# 
  1233  0114                     	;# 
  1234  0115                     	;# 
  1235  0116                     	;# 
  1236  0117                     	;# 
  1237  0118                     	;# 
  1238  0119                     	;# 
  1239  011A                     	;# 
  1240  011B                     	;# 
  1241  011D                     	;# 
  1242  011E                     	;# 
  1243  018C                     	;# 
  1244  018D                     	;# 
  1245  0191                     	;# 
  1246  0191                     	;# 
  1247  0192                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0193                     	;# 
  1251  0194                     	;# 
  1252  0195                     	;# 
  1253  0196                     	;# 
  1254  0199                     	;# 
  1255  019A                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019B                     	;# 
  1260  019C                     	;# 
  1261  019C                     	;# 
  1262  019D                     	;# 
  1263  019E                     	;# 
  1264  019F                     	;# 
  1265  020C                     	;# 
  1266  020D                     	;# 
  1267  0211                     	;# 
  1268  0211                     	;# 
  1269  0212                     	;# 
  1270  0212                     	;# 
  1271  0213                     	;# 
  1272  0213                     	;# 
  1273  0214                     	;# 
  1274  0214                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0215                     	;# 
  1278  0216                     	;# 
  1279  0216                     	;# 
  1280  0217                     	;# 
  1281  0217                     	;# 
  1282  0219                     	;# 
  1283  021A                     	;# 
  1284  021B                     	;# 
  1285  021C                     	;# 
  1286  021D                     	;# 
  1287  021E                     	;# 
  1288  021F                     	;# 
  1289  0291                     	;# 
  1290  0291                     	;# 
  1291  0292                     	;# 
  1292  0293                     	;# 
  1293  0294                     	;# 
  1294  0295                     	;# 
  1295  0295                     	;# 
  1296  0296                     	;# 
  1297  0298                     	;# 
  1298  0298                     	;# 
  1299  0299                     	;# 
  1300  029A                     	;# 
  1301  029B                     	;# 
  1302  029C                     	;# 
  1303  029C                     	;# 
  1304  029D                     	;# 
  1305  029E                     	;# 
  1306  029E                     	;# 
  1307  0311                     	;# 
  1308  0311                     	;# 
  1309  0312                     	;# 
  1310  0313                     	;# 
  1311  0318                     	;# 
  1312  0318                     	;# 
  1313  0319                     	;# 
  1314  031A                     	;# 
  1315  0394                     	;# 
  1316  0395                     	;# 
  1317  0396                     	;# 
  1318  039A                     	;# 
  1319  039C                     	;# 
  1320  039D                     	;# 
  1321  039E                     	;# 
  1322  039F                     	;# 
  1323  0415                     	;# 
  1324  0416                     	;# 
  1325  0417                     	;# 
  1326  041C                     	;# 
  1327  041D                     	;# 
  1328  041E                     	;# 
  1329  0FE4                     	;# 
  1330  0FE5                     	;# 
  1331  0FE6                     	;# 
  1332  0FE7                     	;# 
  1333  0FE8                     	;# 
  1334  0FE9                     	;# 
  1335  0FEA                     	;# 
  1336  0FEB                     	;# 
  1337  0FED                     	;# 
  1338  0FEE                     	;# 
  1339  0FEF                     	;# 
  1340  000D                     _PORTB	set	13
  1341  000C                     _PORTA	set	12
  1342  001C                     _T2CONbits	set	28
  1343  001B                     _PR2	set	27
  1344  0011                     _PIR1bits	set	17
  1345  000B                     _INTCONbits	set	11
  1346  009B                     _ADRESL	set	155
  1347  009C                     _ADRESH	set	156
  1348  009D                     _ADCON0bits	set	157
  1349  008D                     _TRISB	set	141
  1350  008C                     _TRISA	set	140
  1351  009E                     _ADCON1	set	158
  1352  009D                     _ADCON0	set	157
  1353  0095                     _OPTION_REG	set	149
  1354  0095                     _OPTION_REGbits	set	149
  1355  0091                     _PIE1bits	set	145
  1356  0099                     _OSCCONbits	set	153
  1357  010D                     _LATB	set	269
  1358  010C                     _LATA	set	268
  1359  011D                     _APFCON0bits	set	285
  1360  018D                     _ANSELB	set	397
  1361  018C                     _ANSELA	set	396
  1362  0293                     _CCP1CONbits	set	659
  1363  0296                     _PSTR1CONbits	set	662
  1364  0291                     _CCPR1L	set	657
  1365  0293                     _CCP1CON	set	659
  1366                           
  1367                           	psect	stringtext1
  1368  06B5                     __pstringtext1:
  1369  06B5                     STR_1:
  1370  06B5  3428               	retlw	40	;'('
  1371  06B6  3428               	retlw	40	;'('
  1372  06B7  3449               	retlw	73	;'I'
  1373  06B8  344E               	retlw	78	;'N'
  1374  06B9  3454               	retlw	84	;'T'
  1375  06BA  3443               	retlw	67	;'C'
  1376  06BB  344F               	retlw	79	;'O'
  1377  06BC  344E               	retlw	78	;'N'
  1378  06BD  3429               	retlw	41	;')'
  1379  06BE  3426               	retlw	38	;'&'
  1380  06BF  3430               	retlw	48	;'0'
  1381  06C0  3437               	retlw	55	;'7'
  1382  06C1  3446               	retlw	70	;'F'
  1383  06C2  3468               	retlw	104	;'h'
  1384  06C3  3429               	retlw	41	;')'
  1385  06C4  342C               	retlw	44	;','
  1386  06C5  3432               	retlw	50	;'2'
  1387  06C6  3400               	retlw	0
  1388                           
  1389                           	psect	stringtext2
  1390  06C7                     __pstringtext2:
  1391  06C7                     STR_3:
  1392  06C7  3428               	retlw	40	;'('
  1393  06C8  3428               	retlw	40	;'('
  1394  06C9  3450               	retlw	80	;'P'
  1395  06CA  3449               	retlw	73	;'I'
  1396  06CB  3452               	retlw	82	;'R'
  1397  06CC  3431               	retlw	49	;'1'
  1398  06CD  3429               	retlw	41	;')'
  1399  06CE  3426               	retlw	38	;'&'
  1400  06CF  3430               	retlw	48	;'0'
  1401  06D0  3437               	retlw	55	;'7'
  1402  06D1  3446               	retlw	70	;'F'
  1403  06D2  3468               	retlw	104	;'h'
  1404  06D3  3429               	retlw	41	;')'
  1405  06D4  342C               	retlw	44	;','
  1406  06D5  3432               	retlw	50	;'2'
  1407  06D6  3400               	retlw	0
  1408                           
  1409                           	psect	stringtext3
  1410  0000                     __pstringtext3:
  1411  06C7                     
  1412                           	psect	cinit
  1413  0078                     start_initialization:	
  1414                           ; #config settings
  1415                           
  1416  0078                     __initialization:
  1417                           
  1418                           ; Clear objects allocated to BANK0
  1419  0078  303D               	movlw	low __pbssBANK0
  1420  0079  0084               	movwf	4
  1421  007A  3000               	movlw	high __pbssBANK0
  1422  007B  0085               	movwf	5
  1423  007C  301A               	movlw	26
  1424  007D  3186  26F4  3180   	fcall	clear_ram0
  1425                           
  1426                           ; Clear objects allocated to BANK1
  1427  0080  30A0               	movlw	low __pbssBANK1
  1428  0081  0084               	movwf	4
  1429  0082  3000               	movlw	high __pbssBANK1
  1430  0083  0085               	movwf	5
  1431  0084  3040               	movlw	64
  1432  0085  3186  26F4  3180   	fcall	clear_ram0
  1433                           
  1434                           ; Clear objects allocated to BANK2
  1435  0088  3020               	movlw	low __pbssBANK2
  1436  0089  0084               	movwf	4
  1437  008A  3001               	movlw	high __pbssBANK2
  1438  008B  0085               	movwf	5
  1439  008C  3040               	movlw	64
  1440  008D  3186  26F4  3180   	fcall	clear_ram0
  1441  0090                     end_of_initialization:	
  1442                           ;End of C runtime variable initialization code
  1443                           
  1444  0090                     __end_of__initialization:
  1445  0090  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1446  0091  0020               	movlb	0
  1447  0092  3186  2E99         	ljmp	_main	;jump to C main() function
  1448                           
  1449                           	psect	bssBANK0
  1450  003D                     __pbssBANK0:
  1451  003D                     _clockFrequency:
  1452  003D                     	ds	4
  1453  0041                     _filteredDutyPot:
  1454  0041                     	ds	2
  1455  0043                     _filteredFreqPot:
  1456  0043                     	ds	2
  1457  0045                     _filteredIL:
  1458  0045                     	ds	2
  1459  0047                     _filteredIDS:
  1460  0047                     	ds	2
  1461  0049                     _latestIL:
  1462  0049                     	ds	2
  1463  004B                     _prevDuty:
  1464  004B                     	ds	2
  1465  004D                     _setDuty:
  1466  004D                     	ds	2
  1467  004F                     _emergencyStop:
  1468  004F                     	ds	1
  1469  0050                     _timerSlotQuarter:
  1470  0050                     	ds	1
  1471  0051                     _timerSlotHalf:
  1472  0051                     	ds	1
  1473  0052                     _potSetCount:
  1474  0052                     	ds	1
  1475  0053                     _tripIL:
  1476  0053                     	ds	1
  1477  0054                     _tripIDS:
  1478  0054                     	ds	1
  1479  0055                     _prevPeriod:
  1480  0055                     	ds	1
  1481  0056                     _setPeriod:
  1482  0056                     	ds	1
  1483                           
  1484                           	psect	bssBANK1
  1485  00A0                     __pbssBANK1:
  1486  00A0                     _currentILFIFO:
  1487  00A0                     	ds	32
  1488  00C0                     _currentIDSFIFO:
  1489  00C0                     	ds	32
  1490                           
  1491                           	psect	bssBANK2
  1492  0120                     __pbssBANK2:
  1493  0120                     _dutyPotFIFO:
  1494  0120                     	ds	32
  1495  0140                     _freqPotFIFO:
  1496  0140                     	ds	32
  1497                           
  1498                           	psect	clrtext
  1499  06F4                     clear_ram0:	
  1500                           ;	Called with FSR0 containing the base address, and
  1501                           ;	WREG with the size to clear
  1502                           
  1503  06F4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1504  06F5                     clrloop0:
  1505  06F5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1506  06F6  3101               	addfsr 0,1
  1507  06F7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1508  06F8  2EF5               	goto	clrloop0	;have we reached the end yet?
  1509  06F9  3400               	retlw	0	;all done for this memory range, return
  1510                           
  1511                           	psect	cstackCOMMON
  1512  0070                     __pcstackCOMMON:
  1513  0070                     ?_currentTripRead:
  1514  0070                     ?_setPWMDutyandPeriod:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_runPotScaling:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_setupInternalOscillator:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_setupPWM:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_setupTimer0Interrupt:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_initialiseADCModule:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_initialiseCurrentSensors:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_initialisePotentiometers:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_Tick980Hz:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_initialiseADCPin:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_readGPIO:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ??_readGPIO:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?i1_writeGPIO:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_readILCurrentADCRaw:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ?_readADCRaw:	
  1557                           ; 2 bytes @ 0x0
  1558                           
  1559  0070                     ?___wmul:	
  1560                           ; 2 bytes @ 0x0
  1561                           
  1562  0070                     ?___lmul:	
  1563                           ; 2 bytes @ 0x0
  1564                           
  1565  0070                     i1writeGPIO@writeValue:	
  1566                           ; 4 bytes @ 0x0
  1567                           
  1568  0070                     setPWMDutyandPeriod@dutyCycle:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ___wmul@multiplier:	
  1572                           ; 2 bytes @ 0x0
  1573                           
  1574  0070                     ___lmul@multiplier:	
  1575                           ; 2 bytes @ 0x0
  1576                           
  1577                           
  1578                           ; 4 bytes @ 0x0
  1579  0070                     	ds	1
  1580  0071                     ??i1_writeGPIO:
  1581                           
  1582                           ; 1 bytes @ 0x1
  1583  0071                     	ds	1
  1584  0072                     ??_readILCurrentADCRaw:
  1585  0072                     ??_readADCRaw:	
  1586                           ; 1 bytes @ 0x2
  1587                           
  1588  0072                     setPWMDutyandPeriod@period:	
  1589                           ; 1 bytes @ 0x2
  1590                           
  1591  0072                     readGPIO@readA:	
  1592                           ; 1 bytes @ 0x2
  1593                           
  1594  0072                     ___wmul@multiplicand:	
  1595                           ; 1 bytes @ 0x2
  1596                           
  1597                           
  1598                           ; 2 bytes @ 0x2
  1599  0072                     	ds	1
  1600  0073                     ??_setPWMDutyandPeriod:
  1601  0073                     readGPIO@returnValueA:	
  1602                           ; 1 bytes @ 0x3
  1603                           
  1604  0073                     i1writeGPIO@portType:	
  1605                           ; 1 bytes @ 0x3
  1606                           
  1607                           
  1608                           ; 1 bytes @ 0x3
  1609  0073                     	ds	1
  1610  0074                     ??___wmul:
  1611  0074                     readGPIO@readB:	
  1612                           ; 1 bytes @ 0x4
  1613                           
  1614  0074                     i1writeGPIO@gpioNumber:	
  1615                           ; 1 bytes @ 0x4
  1616                           
  1617  0074                     readADCRaw@returnValue:	
  1618                           ; 1 bytes @ 0x4
  1619                           
  1620  0074                     ___wmul@product:	
  1621                           ; 2 bytes @ 0x4
  1622                           
  1623  0074                     ___lmul@multiplicand:	
  1624                           ; 2 bytes @ 0x4
  1625                           
  1626                           
  1627                           ; 4 bytes @ 0x4
  1628  0074                     	ds	1
  1629  0075                     readGPIO@returnValueB:
  1630  0075                     i1writeGPIO@portNumber:	
  1631                           ; 1 bytes @ 0x5
  1632                           
  1633                           
  1634                           ; 1 bytes @ 0x5
  1635  0075                     	ds	1
  1636  0076                     ?___lldiv:
  1637  0076                     readADCRaw@channel:	
  1638                           ; 4 bytes @ 0x6
  1639                           
  1640  0076                     readGPIO@portNumber:	
  1641                           ; 1 bytes @ 0x6
  1642                           
  1643  0076                     ___lldiv@divisor:	
  1644                           ; 1 bytes @ 0x6
  1645                           
  1646                           
  1647                           ; 4 bytes @ 0x6
  1648  0076                     	ds	1
  1649  0077                     readADCRaw@gpioValid:
  1650  0077                     readGPIO@portType:	
  1651                           ; 1 bytes @ 0x7
  1652                           
  1653                           
  1654                           ; 1 bytes @ 0x7
  1655  0077                     	ds	1
  1656  0078                     ??___lmul:
  1657  0078                     readADCRaw@i:	
  1658                           ; 1 bytes @ 0x8
  1659                           
  1660  0078                     readGPIO@gpioNumber:	
  1661                           ; 1 bytes @ 0x8
  1662                           
  1663  0078                     ___lmul@product:	
  1664                           ; 1 bytes @ 0x8
  1665                           
  1666                           
  1667                           ; 4 bytes @ 0x8
  1668  0078                     	ds	1
  1669  0079                     ??_currentTripRead:
  1670  0079                     readADCRaw@i_616:	
  1671                           ; 1 bytes @ 0x9
  1672                           
  1673                           
  1674                           ; 1 bytes @ 0x9
  1675  0079                     	ds	1
  1676  007A                     readADCRaw@gpioNumber:
  1677  007A                     _currentTripRead$747:	
  1678                           ; 1 bytes @ 0xA
  1679                           
  1680  007A                     ___lldiv@dividend:	
  1681                           ; 1 bytes @ 0xA
  1682                           
  1683                           
  1684                           ; 4 bytes @ 0xA
  1685  007A                     	ds	1
  1686  007B                     ?_readFilteredDutyPot:
  1687  007B                     ?_readFilteredFreqPot:	
  1688                           ; 2 bytes @ 0xB
  1689                           
  1690                           
  1691                           ; 2 bytes @ 0xB
  1692  007B                     	ds	3
  1693                           
  1694                           	psect	cstackBANK0
  1695  0020                     __pcstackBANK0:
  1696  0020                     ??_readFilteredDutyPot:
  1697  0020                     ??_readFilteredFreqPot:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0020                     ??___lldiv:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703                           
  1704                           ; 1 bytes @ 0x0
  1705  0020                     	ds	1
  1706  0021                     ___lldiv@quotient:
  1707                           
  1708                           ; 4 bytes @ 0x1
  1709  0021                     	ds	3
  1710  0024                     readFilteredDutyPot@sumOfSamples:
  1711  0024                     readFilteredFreqPot@sumOfSamples:	
  1712                           ; 4 bytes @ 0x4
  1713                           
  1714                           
  1715                           ; 4 bytes @ 0x4
  1716  0024                     	ds	1
  1717  0025                     ___lldiv@counter:
  1718                           
  1719                           ; 1 bytes @ 0x5
  1720  0025                     	ds	1
  1721  0026                     ??_runPotScaling:
  1722                           
  1723                           ; 1 bytes @ 0x6
  1724  0026                     	ds	2
  1725  0028                     readFilteredDutyPot@i_702:
  1726  0028                     readFilteredFreqPot@i_706:	
  1727                           ; 1 bytes @ 0x8
  1728                           
  1729                           
  1730                           ; 1 bytes @ 0x8
  1731  0028                     	ds	1
  1732  0029                     readFilteredDutyPot@i:
  1733  0029                     readFilteredFreqPot@i:	
  1734                           ; 1 bytes @ 0x9
  1735                           
  1736                           
  1737                           ; 1 bytes @ 0x9
  1738  0029                     	ds	5
  1739  002E                     runPotScaling@maxDuty:
  1740                           
  1741                           ; 2 bytes @ 0xE
  1742  002E                     	ds	2
  1743  0030                     runPotScaling@minDuty:
  1744                           
  1745                           ; 2 bytes @ 0x10
  1746  0030                     	ds	2
  1747  0032                     ??_Tick980Hz:
  1748                           
  1749                           ; 1 bytes @ 0x12
  1750  0032                     	ds	1
  1751  0033                     ?_writeGPIO:
  1752  0033                     ??_setupInternalOscillator:	
  1753                           ; 1 bytes @ 0x13
  1754                           
  1755  0033                     ??_setupTimer0Interrupt:	
  1756                           ; 1 bytes @ 0x13
  1757                           
  1758  0033                     ??_initialiseADCModule:	
  1759                           ; 1 bytes @ 0x13
  1760                           
  1761  0033                     ?_initialiseGPIO:	
  1762                           ; 1 bytes @ 0x13
  1763                           
  1764  0033                     ??_initialiseADCPin:	
  1765                           ; 1 bytes @ 0x13
  1766                           
  1767  0033                     initialiseGPIO@direction:	
  1768                           ; 1 bytes @ 0x13
  1769                           
  1770  0033                     writeGPIO@writeValue:	
  1771                           ; 1 bytes @ 0x13
  1772                           
  1773                           
  1774                           ; 1 bytes @ 0x13
  1775  0033                     	ds	1
  1776  0034                     ??_writeGPIO:
  1777  0034                     ??_initialiseGPIO:	
  1778                           ; 1 bytes @ 0x14
  1779                           
  1780                           
  1781                           ; 1 bytes @ 0x14
  1782  0034                     	ds	1
  1783  0035                     setupInternalOscillator@selectedFreq:
  1784  0035                     initialiseADCPin@gpioValid:	
  1785                           ; 1 bytes @ 0x15
  1786                           
  1787                           
  1788                           ; 1 bytes @ 0x15
  1789  0035                     	ds	1
  1790  0036                     initialiseADCPin@portType:
  1791  0036                     initialiseGPIO@portType:	
  1792                           ; 1 bytes @ 0x16
  1793                           
  1794  0036                     writeGPIO@portType:	
  1795                           ; 1 bytes @ 0x16
  1796                           
  1797                           
  1798                           ; 1 bytes @ 0x16
  1799  0036                     	ds	1
  1800  0037                     initialiseADCPin@portNumber:
  1801  0037                     initialiseGPIO@gpioNumber:	
  1802                           ; 1 bytes @ 0x17
  1803                           
  1804  0037                     writeGPIO@gpioNumber:	
  1805                           ; 1 bytes @ 0x17
  1806                           
  1807                           
  1808                           ; 1 bytes @ 0x17
  1809  0037                     	ds	1
  1810  0038                     initialiseADCPin@gpioNumber:
  1811  0038                     initialiseGPIO@portNumber:	
  1812                           ; 1 bytes @ 0x18
  1813                           
  1814  0038                     writeGPIO@portNumber:	
  1815                           ; 1 bytes @ 0x18
  1816                           
  1817                           
  1818                           ; 1 bytes @ 0x18
  1819  0038                     	ds	1
  1820  0039                     ??_setupPWM:
  1821  0039                     ??_initialiseCurrentSensors:	
  1822                           ; 1 bytes @ 0x19
  1823                           
  1824  0039                     ??_initialisePotentiometers:	
  1825                           ; 1 bytes @ 0x19
  1826                           
  1827  0039                     ?_main:	
  1828                           ; 1 bytes @ 0x19
  1829                           
  1830  0039                     main@argc:	
  1831                           ; 2 bytes @ 0x19
  1832                           
  1833                           
  1834                           ; 2 bytes @ 0x19
  1835  0039                     	ds	2
  1836  003B                     main@argv:
  1837                           
  1838                           ; 2 bytes @ 0x1B
  1839  003B                     	ds	2
  1840  003D                     ??_main:
  1841                           
  1842                           	psect	maintext
  1843  0699                     __pmaintext:	
  1844                           ; 1 bytes @ 0x1D
  1845 ;;
  1846 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1847 ;;
  1848 ;; *************** function _main *****************
  1849 ;; Defined at:
  1850 ;;		line 103 in file "main.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  argc            2   25[BANK0 ] int 
  1853 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1854 ;; Auto vars:     Size  Location     Type
  1855 ;;		None
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  2   25[BANK0 ] int 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : B1F/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1865 ;;      Params:         0       4       0       0       0       0
  1866 ;;      Locals:         0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0
  1868 ;;      Totals:         0       4       0       0       0       0
  1869 ;;Total ram usage:        4 bytes
  1870 ;; Hardware stack levels required when called: 5
  1871 ;; This function calls:
  1872 ;;		_initialiseADCModule
  1873 ;;		_initialiseCurrentSensors
  1874 ;;		_initialiseGPIO
  1875 ;;		_initialisePotentiometers
  1876 ;;		_setupInternalOscillator
  1877 ;;		_setupPWM
  1878 ;;		_setupTimer0Interrupt
  1879 ;; This function is called by:
  1880 ;;		Startup code after reset
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884  0699                     _main:	
  1885                           ;psect for function _main
  1886                           
  1887  0699                     l2110:	
  1888                           ;incstack = 0
  1889                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1890                           
  1891                           
  1892                           ;main.c: 105:     setupInternalOscillator(freq32M);
  1893  0699  300A               	movlw	10
  1894  069A  3181  2177  3186   	fcall	_setupInternalOscillator
  1895  069D                     l2112:
  1896                           
  1897                           ;main.c: 107:     setupPWM();
  1898  069D  3186  267C  3186   	fcall	_setupPWM
  1899  06A0                     l2114:
  1900                           
  1901                           ;main.c: 108:     setupTimer0Interrupt();
  1902  06A0  3186  26EC  3186   	fcall	_setupTimer0Interrupt
  1903  06A3                     l2116:
  1904                           
  1905                           ;main.c: 109:     initialiseADCModule();
  1906  06A3  3186  26FA  3186   	fcall	_initialiseADCModule
  1907  06A6                     l2118:
  1908                           
  1909                           ;main.c: 110:     initialiseCurrentSensors();
  1910  06A6  3186  263A  3186   	fcall	_initialiseCurrentSensors
  1911  06A9                     l2120:
  1912                           
  1913                           ;main.c: 111:     initialisePotentiometers();
  1914  06A9  3186  26E3  3186   	fcall	_initialisePotentiometers
  1915  06AC                     l2122:
  1916                           
  1917                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  1918  06AC  0020               	movlb	0	; select bank0
  1919  06AD  01B3               	clrf	initialiseGPIO@direction
  1920  06AE  300C               	movlw	12
  1921  06AF  3182  2252  3186   	fcall	_initialiseGPIO
  1922  06B2                     l92:	
  1923                           ;main.c: 114:     while(1){
  1924                           
  1925  06B2                     l93:	
  1926                           ;main.c: 116:     }
  1927                           
  1928  06B2  2EB2               	goto	l92
  1929  06B3  3180  2876         	ljmp	start
  1930  06B5                     __end_of_main:
  1931                           
  1932                           	psect	text1
  1933  06EC                     __ptext1:	
  1934 ;; *************** function _setupTimer0Interrupt *****************
  1935 ;; Defined at:
  1936 ;;		line 17 in file "Timer0.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1950 ;;      Params:         0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used: 1
  1956 ;; Hardware stack levels required when called: 3
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_main
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964  06EC                     _setupTimer0Interrupt:	
  1965                           ;psect for function _setupTimer0Interrupt
  1966                           
  1967  06EC                     l2038:	
  1968                           ;incstack = 0
  1969                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1970                           
  1971                           
  1972                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1973  06EC  178B               	bsf	11,7	;volatile
  1974                           
  1975                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1976  06ED  168B               	bsf	11,5	;volatile
  1977                           
  1978                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1979  06EE  0021               	movlb	1	; select bank1
  1980  06EF  1295               	bcf	21,5	;volatile
  1981                           
  1982                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1983  06F0  1195               	bcf	21,3	;volatile
  1984  06F1                     l2040:
  1985                           
  1986                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1987  06F1  3004               	movlw	4
  1988  06F2  0095               	movwf	21	;volatile
  1989  06F3                     l169:
  1990  06F3  0008               	return
  1991  06F4                     __end_of_setupTimer0Interrupt:
  1992                           
  1993                           	psect	text2
  1994  067C                     __ptext2:	
  1995 ;; *************** function _setupPWM *****************
  1996 ;; Defined at:
  1997 ;;		line 16 in file "PWM.c"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;		None
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;		None
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      void 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2011 ;;      Params:         0       0       0       0       0       0
  2012 ;;      Locals:         0       0       0       0       0       0
  2013 ;;      Temps:          0       0       0       0       0       0
  2014 ;;      Totals:         0       0       0       0       0       0
  2015 ;;Total ram usage:        0 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 4
  2018 ;; This function calls:
  2019 ;;		_initialiseGPIO
  2020 ;; This function is called by:
  2021 ;;		_main
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025  067C                     _setupPWM:	
  2026                           ;psect for function _setupPWM
  2027                           
  2028  067C                     l2014:	
  2029                           ;incstack = 0
  2030                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2031                           
  2032                           
  2033                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2034  067C  300C               	movlw	12
  2035  067D  0025               	movlb	5	; select bank5
  2036  067E  0093               	movwf	19	;volatile
  2037  067F                     l2016:
  2038                           
  2039                           ;PWM.c: 20:     PR2 = 0;
  2040  067F  0020               	movlb	0	; select bank0
  2041  0680  019B               	clrf	27	;volatile
  2042  0681                     l2018:
  2043                           
  2044                           ;PWM.c: 21:     CCPR1L = 0;
  2045  0681  0025               	movlb	5	; select bank5
  2046  0682  0191               	clrf	17	;volatile
  2047  0683                     l2020:
  2048                           
  2049                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2050  0683  0022               	movlb	2	; select bank2
  2051  0684  151D               	bsf	29,2	;volatile
  2052  0685                     l2022:
  2053                           
  2054                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2055  0685  0025               	movlb	5	; select bank5
  2056  0686  1596               	bsf	22,3	;volatile
  2057  0687                     l2024:
  2058                           
  2059                           ;PWM.c: 25:     PSTR1CONbits.STR1A = 0;
  2060  0687  1016               	bcf	22,0	;volatile
  2061  0688                     l2026:
  2062                           
  2063                           ;PWM.c: 27:     T2CONbits.T2CKPS = 0b00;
  2064  0688  30FC               	movlw	-4
  2065  0689  0020               	movlb	0	; select bank0
  2066  068A  059C               	andwf	28,f	;volatile
  2067  068B                     l2028:
  2068                           
  2069                           ;PWM.c: 28:     PIE1bits.TMR2IE = 0;
  2070  068B  0021               	movlb	1	; select bank1
  2071  068C  1091               	bcf	17,1	;volatile
  2072  068D                     l2030:
  2073                           
  2074                           ;PWM.c: 29:     T2CONbits.TMR2ON = 1;
  2075  068D  0020               	movlb	0	; select bank0
  2076  068E  151C               	bsf	28,2	;volatile
  2077  068F                     l2032:
  2078                           
  2079                           ;PWM.c: 31:     INTCONbits.PEIE = 1;
  2080  068F  170B               	bsf	11,6	;volatile
  2081  0690                     l2034:
  2082                           
  2083                           ;PWM.c: 32:     PIE1bits.CCP1IE = 1;
  2084  0690  0021               	movlb	1	; select bank1
  2085  0691  1511               	bsf	17,2	;volatile
  2086  0692                     l2036:
  2087                           
  2088                           ;PWM.c: 36:     initialiseGPIO(pinRA6, 0);
  2089  0692  0020               	movlb	0	; select bank0
  2090  0693  01B3               	clrf	initialiseGPIO@direction
  2091  0694  3006               	movlw	6
  2092  0695  3182  2252  3186   	fcall	_initialiseGPIO
  2093  0698                     l144:
  2094  0698  0008               	return
  2095  0699                     __end_of_setupPWM:
  2096                           
  2097                           	psect	text3
  2098  0177                     __ptext3:	
  2099 ;; *************** function _setupInternalOscillator *****************
  2100 ;; Defined at:
  2101 ;;		line 125 in file "main.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  selectedFreq    1    wreg     const enum E2830
  2104 ;; Auto vars:     Size  Location     Type
  2105 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  1    wreg      void 
  2108 ;; Registers used:
  2109 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2115 ;;      Params:         0       0       0       0       0       0
  2116 ;;      Locals:         0       1       0       0       0       0
  2117 ;;      Temps:          0       2       0       0       0       0
  2118 ;;      Totals:         0       3       0       0       0       0
  2119 ;;Total ram usage:        3 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; Hardware stack levels required when called: 3
  2122 ;; This function calls:
  2123 ;;		Nothing
  2124 ;; This function is called by:
  2125 ;;		_main
  2126 ;; This function uses a non-reentrant model
  2127 ;;
  2128                           
  2129  0177                     _setupInternalOscillator:	
  2130                           ;psect for function _setupInternalOscillator
  2131                           
  2132                           
  2133                           ;incstack = 0
  2134                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2135                           ;setupInternalOscillator@selectedFreq stored from wreg
  2136  0177  0020               	movlb	0	; select bank0
  2137  0178  00B5               	movwf	setupInternalOscillator@selectedFreq
  2138  0179                     l1936:
  2139                           
  2140                           ;main.c: 129:     switch(selectedFreq){
  2141  0179  2A26               	goto	l2006
  2142  017A                     l1938:
  2143  017A  3087               	movlw	-121
  2144  017B  0021               	movlb	1	; select bank1
  2145  017C  0599               	andwf	25,f	;volatile
  2146  017D                     l1940:
  2147  017D  1399               	bcf	25,7	;volatile
  2148  017E                     l1942:
  2149  017E  3000               	movlw	0
  2150  017F  0020               	movlb	0	; select bank0
  2151  0180  00C0               	movwf	_clockFrequency+3
  2152  0181  3000               	movlw	0
  2153  0182  00BF               	movwf	_clockFrequency+2
  2154  0183  3079               	movlw	121
  2155  0184  00BE               	movwf	_clockFrequency+1
  2156  0185  3018               	movlw	24
  2157  0186  00BD               	movwf	_clockFrequency
  2158  0187  2A51               	goto	l111
  2159  0188                     l1944:
  2160  0188  0021               	movlb	1	; select bank1
  2161  0189  0819               	movf	25,w	;volatile
  2162  018A  3987               	andlw	-121
  2163  018B  3820               	iorlw	32
  2164  018C  0099               	movwf	25	;volatile
  2165  018D                     l1946:
  2166  018D  1399               	bcf	25,7	;volatile
  2167  018E                     l1948:
  2168  018E  3000               	movlw	0
  2169  018F  0020               	movlb	0	; select bank0
  2170  0190  00C0               	movwf	_clockFrequency+3
  2171  0191  3000               	movlw	0
  2172  0192  00BF               	movwf	_clockFrequency+2
  2173  0193  30F4               	movlw	244
  2174  0194  00BE               	movwf	_clockFrequency+1
  2175  0195  3024               	movlw	36
  2176  0196  00BD               	movwf	_clockFrequency
  2177  0197  2A51               	goto	l111
  2178  0198                     l1950:
  2179  0198  0021               	movlb	1	; select bank1
  2180  0199  0819               	movf	25,w	;volatile
  2181  019A  3987               	andlw	-121
  2182  019B  3828               	iorlw	40
  2183  019C  0099               	movwf	25	;volatile
  2184  019D                     l1952:
  2185  019D  1399               	bcf	25,7	;volatile
  2186  019E                     l1954:
  2187  019E  3000               	movlw	0
  2188  019F  0020               	movlb	0	; select bank0
  2189  01A0  00C0               	movwf	_clockFrequency+3
  2190  01A1  3001               	movlw	1
  2191  01A2  00BF               	movwf	_clockFrequency+2
  2192  01A3  30E8               	movlw	232
  2193  01A4  00BE               	movwf	_clockFrequency+1
  2194  01A5  3048               	movlw	72
  2195  01A6  00BD               	movwf	_clockFrequency
  2196  01A7  2A51               	goto	l111
  2197  01A8                     l1956:
  2198  01A8  0021               	movlb	1	; select bank1
  2199  01A9  0819               	movf	25,w	;volatile
  2200  01AA  3987               	andlw	-121
  2201  01AB  3830               	iorlw	48
  2202  01AC  0099               	movwf	25	;volatile
  2203  01AD                     l1958:
  2204  01AD  1399               	bcf	25,7	;volatile
  2205  01AE                     l1960:
  2206  01AE  3000               	movlw	0
  2207  01AF  0020               	movlb	0	; select bank0
  2208  01B0  00C0               	movwf	_clockFrequency+3
  2209  01B1  3003               	movlw	3
  2210  01B2  00BF               	movwf	_clockFrequency+2
  2211  01B3  30D0               	movlw	208
  2212  01B4  00BE               	movwf	_clockFrequency+1
  2213  01B5  3090               	movlw	144
  2214  01B6  00BD               	movwf	_clockFrequency
  2215  01B7  2A51               	goto	l111
  2216  01B8                     l1962:
  2217  01B8  0021               	movlb	1	; select bank1
  2218  01B9  0819               	movf	25,w	;volatile
  2219  01BA  3987               	andlw	-121
  2220  01BB  3838               	iorlw	56
  2221  01BC  0099               	movwf	25	;volatile
  2222  01BD                     l1964:
  2223  01BD  1399               	bcf	25,7	;volatile
  2224  01BE                     l1966:
  2225  01BE  3000               	movlw	0
  2226  01BF  0020               	movlb	0	; select bank0
  2227  01C0  00C0               	movwf	_clockFrequency+3
  2228  01C1  3007               	movlw	7
  2229  01C2  00BF               	movwf	_clockFrequency+2
  2230  01C3  30A1               	movlw	161
  2231  01C4  00BE               	movwf	_clockFrequency+1
  2232  01C5  3020               	movlw	32
  2233  01C6  00BD               	movwf	_clockFrequency
  2234  01C7  2A51               	goto	l111
  2235  01C8                     l1968:
  2236  01C8  0021               	movlb	1	; select bank1
  2237  01C9  0819               	movf	25,w	;volatile
  2238  01CA  3987               	andlw	-121
  2239  01CB  3858               	iorlw	88
  2240  01CC  0099               	movwf	25	;volatile
  2241  01CD                     l1970:
  2242  01CD  1399               	bcf	25,7	;volatile
  2243  01CE                     l1972:
  2244  01CE  3000               	movlw	0
  2245  01CF  0020               	movlb	0	; select bank0
  2246  01D0  00C0               	movwf	_clockFrequency+3
  2247  01D1  300F               	movlw	15
  2248  01D2  00BF               	movwf	_clockFrequency+2
  2249  01D3  3042               	movlw	66
  2250  01D4  00BE               	movwf	_clockFrequency+1
  2251  01D5  3040               	movlw	64
  2252  01D6  00BD               	movwf	_clockFrequency
  2253  01D7  2A51               	goto	l111
  2254  01D8                     l1974:
  2255  01D8  0021               	movlb	1	; select bank1
  2256  01D9  0819               	movf	25,w	;volatile
  2257  01DA  3987               	andlw	-121
  2258  01DB  3860               	iorlw	96
  2259  01DC  0099               	movwf	25	;volatile
  2260  01DD                     l1976:
  2261  01DD  1399               	bcf	25,7	;volatile
  2262  01DE                     l1978:
  2263  01DE  3000               	movlw	0
  2264  01DF  0020               	movlb	0	; select bank0
  2265  01E0  00C0               	movwf	_clockFrequency+3
  2266  01E1  301E               	movlw	30
  2267  01E2  00BF               	movwf	_clockFrequency+2
  2268  01E3  3084               	movlw	132
  2269  01E4  00BE               	movwf	_clockFrequency+1
  2270  01E5  3080               	movlw	128
  2271  01E6  00BD               	movwf	_clockFrequency
  2272  01E7  2A51               	goto	l111
  2273  01E8                     l1980:
  2274  01E8  0021               	movlb	1	; select bank1
  2275  01E9  0819               	movf	25,w	;volatile
  2276  01EA  3987               	andlw	-121
  2277  01EB  3868               	iorlw	104
  2278  01EC  0099               	movwf	25	;volatile
  2279  01ED                     l1982:
  2280  01ED  1399               	bcf	25,7	;volatile
  2281  01EE                     l1984:
  2282  01EE  3000               	movlw	0
  2283  01EF  0020               	movlb	0	; select bank0
  2284  01F0  00C0               	movwf	_clockFrequency+3
  2285  01F1  303D               	movlw	61
  2286  01F2  00BF               	movwf	_clockFrequency+2
  2287  01F3  3009               	movlw	9
  2288  01F4  00BE               	movwf	_clockFrequency+1
  2289  01F5  3000               	movlw	0
  2290  01F6  00BD               	movwf	_clockFrequency
  2291  01F7  2A51               	goto	l111
  2292  01F8                     l1986:
  2293  01F8  0021               	movlb	1	; select bank1
  2294  01F9  0819               	movf	25,w	;volatile
  2295  01FA  3987               	andlw	-121
  2296  01FB  3870               	iorlw	112
  2297  01FC  0099               	movwf	25	;volatile
  2298  01FD                     l1988:
  2299  01FD  1399               	bcf	25,7	;volatile
  2300  01FE                     l1990:
  2301  01FE  3000               	movlw	0
  2302  01FF  0020               	movlb	0	; select bank0
  2303  0200  00C0               	movwf	_clockFrequency+3
  2304  0201  307A               	movlw	122
  2305  0202  00BF               	movwf	_clockFrequency+2
  2306  0203  3012               	movlw	18
  2307  0204  00BE               	movwf	_clockFrequency+1
  2308  0205  3000               	movlw	0
  2309  0206  00BD               	movwf	_clockFrequency
  2310  0207  2A51               	goto	l111
  2311  0208                     l1992:
  2312  0208  3078               	movlw	120
  2313  0209  0021               	movlb	1	; select bank1
  2314  020A  0499               	iorwf	25,f	;volatile
  2315  020B                     l1994:
  2316  020B  1399               	bcf	25,7	;volatile
  2317  020C                     l1996:
  2318  020C  3000               	movlw	0
  2319  020D  0020               	movlb	0	; select bank0
  2320  020E  00C0               	movwf	_clockFrequency+3
  2321  020F  30F4               	movlw	244
  2322  0210  00BF               	movwf	_clockFrequency+2
  2323  0211  3024               	movlw	36
  2324  0212  00BE               	movwf	_clockFrequency+1
  2325  0213  3000               	movlw	0
  2326  0214  00BD               	movwf	_clockFrequency
  2327  0215  2A51               	goto	l111
  2328  0216                     l1998:
  2329  0216  0021               	movlb	1	; select bank1
  2330  0217  0819               	movf	25,w	;volatile
  2331  0218  3987               	andlw	-121
  2332  0219  3870               	iorlw	112
  2333  021A  0099               	movwf	25	;volatile
  2334  021B                     l2000:
  2335  021B  1799               	bsf	25,7	;volatile
  2336  021C                     l2002:
  2337  021C  3001               	movlw	1
  2338  021D  0020               	movlb	0	; select bank0
  2339  021E  00C0               	movwf	_clockFrequency+3
  2340  021F  30E8               	movlw	232
  2341  0220  00BF               	movwf	_clockFrequency+2
  2342  0221  3048               	movlw	72
  2343  0222  00BE               	movwf	_clockFrequency+1
  2344  0223  3000               	movlw	0
  2345  0224  00BD               	movwf	_clockFrequency
  2346  0225  2A51               	goto	l111
  2347  0226                     l2006:
  2348  0226  0835               	movf	setupInternalOscillator@selectedFreq,w
  2349  0227  00B3               	movwf	??_setupInternalOscillator
  2350  0228  01B4               	clrf	??_setupInternalOscillator+1
  2351                           
  2352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2353                           ; Switch size 1, requested type "simple"
  2354                           ; Number of cases is 1, Range of values is 0 to 0
  2355                           ; switch strategies available:
  2356                           ; Name         Instructions Cycles
  2357                           ; simple_byte            4     3 (average)
  2358                           ; direct_byte            8     6 (fixed)
  2359                           ; jumptable            260     6 (fixed)
  2360                           ;	Chosen strategy is simple_byte
  2361  0229  0834               	movf	??_setupInternalOscillator+1,w
  2362  022A  3A00               	xorlw	0	; case 0
  2363  022B  1903               	skipnz
  2364  022C  2A2E               	goto	l2210
  2365  022D  2A51               	goto	l111
  2366  022E                     l2210:
  2367                           
  2368                           ; Switch size 1, requested type "simple"
  2369                           ; Number of cases is 11, Range of values is 0 to 10
  2370                           ; switch strategies available:
  2371                           ; Name         Instructions Cycles
  2372                           ; direct_byte           28     6 (fixed)
  2373                           ; simple_byte           34    18 (average)
  2374                           ; jumptable            260     6 (fixed)
  2375                           ;	Chosen strategy is simple_byte
  2376  022E  0833               	movf	??_setupInternalOscillator,w
  2377  022F  3A00               	xorlw	0	; case 0
  2378  0230  1903               	skipnz
  2379  0231  297A               	goto	l1938
  2380  0232  3A01               	xorlw	1	; case 1
  2381  0233  1903               	skipnz
  2382  0234  2988               	goto	l1944
  2383  0235  3A03               	xorlw	3	; case 2
  2384  0236  1903               	skipnz
  2385  0237  2998               	goto	l1950
  2386  0238  3A01               	xorlw	1	; case 3
  2387  0239  1903               	skipnz
  2388  023A  29A8               	goto	l1956
  2389  023B  3A07               	xorlw	7	; case 4
  2390  023C  1903               	skipnz
  2391  023D  29B8               	goto	l1962
  2392  023E  3A01               	xorlw	1	; case 5
  2393  023F  1903               	skipnz
  2394  0240  29C8               	goto	l1968
  2395  0241  3A03               	xorlw	3	; case 6
  2396  0242  1903               	skipnz
  2397  0243  29D8               	goto	l1974
  2398  0244  3A01               	xorlw	1	; case 7
  2399  0245  1903               	skipnz
  2400  0246  29E8               	goto	l1980
  2401  0247  3A0F               	xorlw	15	; case 8
  2402  0248  1903               	skipnz
  2403  0249  29F8               	goto	l1986
  2404  024A  3A01               	xorlw	1	; case 9
  2405  024B  1903               	skipnz
  2406  024C  2A08               	goto	l1992
  2407  024D  3A03               	xorlw	3	; case 10
  2408  024E  1903               	skipnz
  2409  024F  2A16               	goto	l1998
  2410  0250  2A51               	goto	l111
  2411  0251                     l111:
  2412  0251  0008               	return
  2413  0252                     __end_of_setupInternalOscillator:
  2414                           
  2415                           	psect	text4
  2416  06E3                     __ptext4:	
  2417 ;; *************** function _initialisePotentiometers *****************
  2418 ;; Defined at:
  2419 ;;		line 15 in file "Potentiometer.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2433 ;;      Params:         0       0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used: 1
  2439 ;; Hardware stack levels required when called: 4
  2440 ;; This function calls:
  2441 ;;		_initialiseADCPin
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447  06E3                     _initialisePotentiometers:	
  2448                           ;psect for function _initialisePotentiometers
  2449                           
  2450  06E3                     l2046:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2453                           
  2454                           
  2455                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2456  06E3  3009               	movlw	9
  2457  06E4  3182  22CE  3186   	fcall	_initialiseADCPin
  2458                           
  2459                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2460  06E7  300A               	movlw	10
  2461  06E8  3182  22CE  3186   	fcall	_initialiseADCPin
  2462  06EB                     l321:
  2463  06EB  0008               	return
  2464  06EC                     __end_of_initialisePotentiometers:
  2465                           
  2466                           	psect	text5
  2467  063A                     __ptext5:	
  2468 ;; *************** function _initialiseCurrentSensors *****************
  2469 ;; Defined at:
  2470 ;;		line 17 in file "CurrentSensor.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;		None
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;		None
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg, status,2, status,0, pclath, cstack
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2484 ;;      Params:         0       0       0       0       0       0
  2485 ;;      Locals:         0       0       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0       0
  2487 ;;      Totals:         0       0       0       0       0       0
  2488 ;;Total ram usage:        0 bytes
  2489 ;; Hardware stack levels used: 1
  2490 ;; Hardware stack levels required when called: 4
  2491 ;; This function calls:
  2492 ;;		_initialiseADCPin
  2493 ;;		_initialiseGPIO
  2494 ;;		_writeGPIO
  2495 ;; This function is called by:
  2496 ;;		_main
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500  063A                     _initialiseCurrentSensors:	
  2501                           ;psect for function _initialiseCurrentSensors
  2502                           
  2503  063A                     l2044:	
  2504                           ;incstack = 0
  2505                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2506                           
  2507                           
  2508                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2509  063A  0020               	movlb	0	; select bank0
  2510  063B  01B3               	clrf	initialiseGPIO@direction
  2511  063C  0AB3               	incf	initialiseGPIO@direction,f
  2512  063D  3003               	movlw	3
  2513  063E  3182  2252  3186   	fcall	_initialiseGPIO
  2514                           
  2515                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2516  0641  0020               	movlb	0	; select bank0
  2517  0642  01B3               	clrf	initialiseGPIO@direction
  2518  0643  0AB3               	incf	initialiseGPIO@direction,f
  2519  0644  3001               	movlw	1
  2520  0645  3182  2252  3186   	fcall	_initialiseGPIO
  2521                           
  2522                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2523  0648  3000               	movlw	0
  2524  0649  3182  22CE  3186   	fcall	_initialiseADCPin
  2525                           
  2526                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  2527  064C  3002               	movlw	2
  2528  064D  3182  22CE  3186   	fcall	_initialiseADCPin
  2529                           
  2530                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2531  0650  0020               	movlb	0	; select bank0
  2532  0651  01B3               	clrf	initialiseGPIO@direction
  2533  0652  300B               	movlw	11
  2534  0653  3182  2252  3186   	fcall	_initialiseGPIO
  2535                           
  2536                           ;CurrentSensor.c: 23:     writeGPIO(9, 0);
  2537  0656  0020               	movlb	0	; select bank0
  2538  0657  01B3               	clrf	writeGPIO@writeValue
  2539  0658  3009               	movlw	9
  2540  0659  3183  239A  3186   	fcall	_writeGPIO
  2541  065C                     l378:
  2542  065C  0008               	return
  2543  065D                     __end_of_initialiseCurrentSensors:
  2544                           
  2545                           	psect	text6
  2546  039A                     __ptext6:	
  2547 ;; *************** function _writeGPIO *****************
  2548 ;; Defined at:
  2549 ;;		line 52 in file "GPIO.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;  gpioNumber      1    wreg     const enum E2798
  2552 ;;  writeValue      1   19[BANK0 ] unsigned char 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2555 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2556 ;;  portType        1   22[BANK0 ] unsigned char 
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2566 ;;      Params:         0       1       0       0       0       0
  2567 ;;      Locals:         0       3       0       0       0       0
  2568 ;;      Temps:          0       2       0       0       0       0
  2569 ;;      Totals:         0       6       0       0       0       0
  2570 ;;Total ram usage:        6 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 3
  2573 ;; This function calls:
  2574 ;;		Nothing
  2575 ;; This function is called by:
  2576 ;;		_initialiseCurrentSensors
  2577 ;;		_currentTripReset
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581  039A                     _writeGPIO:	
  2582                           ;psect for function _writeGPIO
  2583                           
  2584                           
  2585                           ;incstack = 0
  2586                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  2587                           ;writeGPIO@gpioNumber stored from wreg
  2588  039A  0020               	movlb	0	; select bank0
  2589  039B  00B7               	movwf	writeGPIO@gpioNumber
  2590  039C                     l1616:
  2591                           
  2592                           ;GPIO.c: 54:     uint8_t portType = 0;
  2593  039C  01B6               	clrf	writeGPIO@portType
  2594  039D                     l1618:
  2595                           
  2596                           ;GPIO.c: 55:     if(gpioNumber > 7){
  2597  039D  3008               	movlw	8
  2598  039E  0237               	subwf	writeGPIO@gpioNumber,w
  2599  039F  1C03               	skipc
  2600  03A0  2BA2               	goto	u1031
  2601  03A1  2BA3               	goto	u1030
  2602  03A2                     u1031:
  2603  03A2  2BAB               	goto	l1624
  2604  03A3                     u1030:
  2605  03A3                     l1620:
  2606                           
  2607                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  2608  03A3  0837               	movf	writeGPIO@gpioNumber,w
  2609  03A4  3EF8               	addlw	248
  2610  03A5  00B4               	movwf	??_writeGPIO
  2611  03A6  0834               	movf	??_writeGPIO,w
  2612  03A7  00B8               	movwf	writeGPIO@portNumber
  2613  03A8                     l1622:
  2614                           
  2615                           ;GPIO.c: 57:         portType = 1;
  2616  03A8  01B6               	clrf	writeGPIO@portType
  2617  03A9  0AB6               	incf	writeGPIO@portType,f
  2618                           
  2619                           ;GPIO.c: 58:     }
  2620  03AA  2BB0               	goto	l1628
  2621  03AB                     l1624:
  2622                           
  2623                           ;GPIO.c: 60:         portNumber = gpioNumber;
  2624  03AB  0837               	movf	writeGPIO@gpioNumber,w
  2625  03AC  00B4               	movwf	??_writeGPIO
  2626  03AD  0834               	movf	??_writeGPIO,w
  2627  03AE  00B8               	movwf	writeGPIO@portNumber
  2628  03AF                     l1626:
  2629                           
  2630                           ;GPIO.c: 61:         portType = 0;
  2631  03AF  01B6               	clrf	writeGPIO@portType
  2632  03B0                     l1628:
  2633                           
  2634                           ;GPIO.c: 64:     if(portType == 0){
  2635  03B0  0836               	movf	writeGPIO@portType,w
  2636  03B1  1D03               	btfss	3,2
  2637  03B2  2BB4               	goto	u1041
  2638  03B3  2BB5               	goto	u1040
  2639  03B4                     u1041:
  2640  03B4  2BD5               	goto	l1636
  2641  03B5                     u1040:
  2642  03B5                     l1630:
  2643                           
  2644                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  2645  03B5  0833               	movf	writeGPIO@writeValue,w
  2646  03B6  1903               	btfsc	3,2
  2647  03B7  2BB9               	goto	u1051
  2648  03B8  2BBA               	goto	u1050
  2649  03B9                     u1051:
  2650  03B9  2BC7               	goto	l1634
  2651  03BA                     u1050:
  2652  03BA                     l1632:
  2653  03BA  3001               	movlw	1
  2654  03BB  00B4               	movwf	??_writeGPIO
  2655  03BC  0A38               	incf	writeGPIO@portNumber,w
  2656  03BD  2BBF               	goto	u1064
  2657  03BE                     u1065:
  2658  03BE  35B4               	lslf	??_writeGPIO,f
  2659  03BF                     u1064:
  2660  03BF  0B89               	decfsz	9,f
  2661  03C0  2BBE               	goto	u1065
  2662  03C1  0834               	movf	??_writeGPIO,w
  2663  03C2  00B5               	movwf	??_writeGPIO+1
  2664  03C3  0835               	movf	??_writeGPIO+1,w
  2665  03C4  0022               	movlb	2	; select bank2
  2666  03C5  048C               	iorwf	12,f	;volatile
  2667  03C6  2BF9               	goto	l284
  2668  03C7                     l1634:
  2669  03C7  3001               	movlw	1
  2670  03C8  00B4               	movwf	??_writeGPIO
  2671  03C9  0A38               	incf	writeGPIO@portNumber,w
  2672  03CA  2BCC               	goto	u1074
  2673  03CB                     u1075:
  2674  03CB  35B4               	lslf	??_writeGPIO,f
  2675  03CC                     u1074:
  2676  03CC  0B89               	decfsz	9,f
  2677  03CD  2BCB               	goto	u1075
  2678  03CE  0834               	movf	??_writeGPIO,w
  2679  03CF  3AFF               	xorlw	255
  2680  03D0  00B5               	movwf	??_writeGPIO+1
  2681  03D1  0835               	movf	??_writeGPIO+1,w
  2682  03D2  0022               	movlb	2	; select bank2
  2683  03D3  058C               	andwf	12,f	;volatile
  2684  03D4  2BF9               	goto	l284
  2685  03D5                     l1636:
  2686  03D5  0336               	decf	writeGPIO@portType,w
  2687  03D6  1D03               	btfss	3,2
  2688  03D7  2BD9               	goto	u1081
  2689  03D8  2BDA               	goto	u1080
  2690  03D9                     u1081:
  2691  03D9  2BF9               	goto	l284
  2692  03DA                     u1080:
  2693  03DA                     l1638:
  2694                           
  2695                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  2696  03DA  0833               	movf	writeGPIO@writeValue,w
  2697  03DB  1903               	btfsc	3,2
  2698  03DC  2BDE               	goto	u1091
  2699  03DD  2BDF               	goto	u1090
  2700  03DE                     u1091:
  2701  03DE  2BEC               	goto	l1642
  2702  03DF                     u1090:
  2703  03DF                     l1640:
  2704  03DF  3001               	movlw	1
  2705  03E0  00B4               	movwf	??_writeGPIO
  2706  03E1  0A38               	incf	writeGPIO@portNumber,w
  2707  03E2  2BE4               	goto	u1104
  2708  03E3                     u1105:
  2709  03E3  35B4               	lslf	??_writeGPIO,f
  2710  03E4                     u1104:
  2711  03E4  0B89               	decfsz	9,f
  2712  03E5  2BE3               	goto	u1105
  2713  03E6  0834               	movf	??_writeGPIO,w
  2714  03E7  00B5               	movwf	??_writeGPIO+1
  2715  03E8  0835               	movf	??_writeGPIO+1,w
  2716  03E9  0022               	movlb	2	; select bank2
  2717  03EA  048D               	iorwf	13,f	;volatile
  2718  03EB  2BF9               	goto	l284
  2719  03EC                     l1642:
  2720  03EC  3001               	movlw	1
  2721  03ED  00B4               	movwf	??_writeGPIO
  2722  03EE  0A38               	incf	writeGPIO@portNumber,w
  2723  03EF  2BF1               	goto	u1114
  2724  03F0                     u1115:
  2725  03F0  35B4               	lslf	??_writeGPIO,f
  2726  03F1                     u1114:
  2727  03F1  0B89               	decfsz	9,f
  2728  03F2  2BF0               	goto	u1115
  2729  03F3  0834               	movf	??_writeGPIO,w
  2730  03F4  3AFF               	xorlw	255
  2731  03F5  00B5               	movwf	??_writeGPIO+1
  2732  03F6  0835               	movf	??_writeGPIO+1,w
  2733  03F7  0022               	movlb	2	; select bank2
  2734  03F8  058D               	andwf	13,f	;volatile
  2735  03F9                     l284:
  2736  03F9  0008               	return
  2737  03FA                     __end_of_writeGPIO:
  2738                           
  2739                           	psect	text7
  2740  0252                     __ptext7:	
  2741 ;; *************** function _initialiseGPIO *****************
  2742 ;; Defined at:
  2743 ;;		line 18 in file "GPIO.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  gpioNumber      1    wreg     const enum E2798
  2746 ;;  direction       1   19[BANK0 ] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2749 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2750 ;;  portType        1   22[BANK0 ] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2760 ;;      Params:         0       1       0       0       0       0
  2761 ;;      Locals:         0       3       0       0       0       0
  2762 ;;      Temps:          0       2       0       0       0       0
  2763 ;;      Totals:         0       6       0       0       0       0
  2764 ;;Total ram usage:        6 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 3
  2767 ;; This function calls:
  2768 ;;		Nothing
  2769 ;; This function is called by:
  2770 ;;		_main
  2771 ;;		_setupPWM
  2772 ;;		_initialiseCurrentSensors
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776  0252                     _initialiseGPIO:	
  2777                           ;psect for function _initialiseGPIO
  2778                           
  2779                           
  2780                           ;incstack = 0
  2781                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2782                           ;initialiseGPIO@gpioNumber stored from wreg
  2783  0252  0020               	movlb	0	; select bank0
  2784  0253  00B7               	movwf	initialiseGPIO@gpioNumber
  2785  0254                     l1644:
  2786                           
  2787                           ;GPIO.c: 20:     uint8_t portType = 0;
  2788  0254  01B6               	clrf	initialiseGPIO@portType
  2789  0255                     l1646:
  2790                           
  2791                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2792  0255  3008               	movlw	8
  2793  0256  0237               	subwf	initialiseGPIO@gpioNumber,w
  2794  0257  1C03               	skipc
  2795  0258  2A5A               	goto	u1121
  2796  0259  2A5B               	goto	u1120
  2797  025A                     u1121:
  2798  025A  2A63               	goto	l1652
  2799  025B                     u1120:
  2800  025B                     l1648:
  2801                           
  2802                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2803  025B  0837               	movf	initialiseGPIO@gpioNumber,w
  2804  025C  3EF8               	addlw	248
  2805  025D  00B4               	movwf	??_initialiseGPIO
  2806  025E  0834               	movf	??_initialiseGPIO,w
  2807  025F  00B8               	movwf	initialiseGPIO@portNumber
  2808  0260                     l1650:
  2809                           
  2810                           ;GPIO.c: 23:         portType = 1;
  2811  0260  01B6               	clrf	initialiseGPIO@portType
  2812  0261  0AB6               	incf	initialiseGPIO@portType,f
  2813                           
  2814                           ;GPIO.c: 24:     }
  2815  0262  2A68               	goto	l1656
  2816  0263                     l1652:
  2817                           
  2818                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2819  0263  0837               	movf	initialiseGPIO@gpioNumber,w
  2820  0264  00B4               	movwf	??_initialiseGPIO
  2821  0265  0834               	movf	??_initialiseGPIO,w
  2822  0266  00B8               	movwf	initialiseGPIO@portNumber
  2823  0267                     l1654:
  2824                           
  2825                           ;GPIO.c: 27:         portType = 0;
  2826  0267  01B6               	clrf	initialiseGPIO@portType
  2827  0268                     l1656:
  2828                           
  2829                           ;GPIO.c: 30:     if(portType == 0){
  2830  0268  0836               	movf	initialiseGPIO@portType,w
  2831  0269  1D03               	btfss	3,2
  2832  026A  2A6C               	goto	u1131
  2833  026B  2A6D               	goto	u1130
  2834  026C                     u1131:
  2835  026C  2A9B               	goto	l1664
  2836  026D                     u1130:
  2837  026D                     l1658:
  2838                           
  2839                           ;GPIO.c: 31:         if(direction){
  2840  026D  0833               	movf	initialiseGPIO@direction,w
  2841  026E  1903               	btfsc	3,2
  2842  026F  2A71               	goto	u1141
  2843  0270  2A72               	goto	u1140
  2844  0271                     u1141:
  2845  0271  2A8D               	goto	l1662
  2846  0272                     u1140:
  2847  0272                     l1660:
  2848                           
  2849                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2850  0272  3001               	movlw	1
  2851  0273  00B4               	movwf	??_initialiseGPIO
  2852  0274  0A38               	incf	initialiseGPIO@portNumber,w
  2853  0275  2A77               	goto	u1154
  2854  0276                     u1155:
  2855  0276  35B4               	lslf	??_initialiseGPIO,f
  2856  0277                     u1154:
  2857  0277  0B89               	decfsz	9,f
  2858  0278  2A76               	goto	u1155
  2859  0279  0834               	movf	??_initialiseGPIO,w
  2860  027A  00B5               	movwf	??_initialiseGPIO+1
  2861  027B  0835               	movf	??_initialiseGPIO+1,w
  2862  027C  0021               	movlb	1	; select bank1
  2863  027D  048C               	iorwf	12,f	;volatile
  2864                           
  2865                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2866  027E  3001               	movlw	1
  2867  027F  0020               	movlb	0	; select bank0
  2868  0280  00B4               	movwf	??_initialiseGPIO
  2869  0281  0A38               	incf	initialiseGPIO@portNumber,w
  2870  0282  2A84               	goto	u1164
  2871  0283                     u1165:
  2872  0283  35B4               	lslf	??_initialiseGPIO,f
  2873  0284                     u1164:
  2874  0284  0B89               	decfsz	9,f
  2875  0285  2A83               	goto	u1165
  2876  0286  0834               	movf	??_initialiseGPIO,w
  2877  0287  3AFF               	xorlw	255
  2878  0288  00B5               	movwf	??_initialiseGPIO+1
  2879  0289  0835               	movf	??_initialiseGPIO+1,w
  2880  028A  0023               	movlb	3	; select bank3
  2881  028B  058C               	andwf	12,f	;volatile
  2882                           
  2883                           ;GPIO.c: 34:         }
  2884  028C  2ACD               	goto	l270
  2885  028D                     l1662:
  2886  028D  3001               	movlw	1
  2887  028E  00B4               	movwf	??_initialiseGPIO
  2888  028F  0A38               	incf	initialiseGPIO@portNumber,w
  2889  0290  2A92               	goto	u1174
  2890  0291                     u1175:
  2891  0291  35B4               	lslf	??_initialiseGPIO,f
  2892  0292                     u1174:
  2893  0292  0B89               	decfsz	9,f
  2894  0293  2A91               	goto	u1175
  2895  0294  0834               	movf	??_initialiseGPIO,w
  2896  0295  3AFF               	xorlw	255
  2897  0296  00B5               	movwf	??_initialiseGPIO+1
  2898  0297  0835               	movf	??_initialiseGPIO+1,w
  2899  0298  0021               	movlb	1	; select bank1
  2900  0299  058C               	andwf	12,f	;volatile
  2901  029A  2ACD               	goto	l270
  2902  029B                     l1664:
  2903  029B  0336               	decf	initialiseGPIO@portType,w
  2904  029C  1D03               	btfss	3,2
  2905  029D  2A9F               	goto	u1181
  2906  029E  2AA0               	goto	u1180
  2907  029F                     u1181:
  2908  029F  2ACD               	goto	l270
  2909  02A0                     u1180:
  2910  02A0                     l1666:
  2911                           
  2912                           ;GPIO.c: 38:         if(direction){
  2913  02A0  0833               	movf	initialiseGPIO@direction,w
  2914  02A1  1903               	btfsc	3,2
  2915  02A2  2AA4               	goto	u1191
  2916  02A3  2AA5               	goto	u1190
  2917  02A4                     u1191:
  2918  02A4  2AC0               	goto	l1670
  2919  02A5                     u1190:
  2920  02A5                     l1668:
  2921                           
  2922                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2923  02A5  3001               	movlw	1
  2924  02A6  00B4               	movwf	??_initialiseGPIO
  2925  02A7  0A38               	incf	initialiseGPIO@portNumber,w
  2926  02A8  2AAA               	goto	u1204
  2927  02A9                     u1205:
  2928  02A9  35B4               	lslf	??_initialiseGPIO,f
  2929  02AA                     u1204:
  2930  02AA  0B89               	decfsz	9,f
  2931  02AB  2AA9               	goto	u1205
  2932  02AC  0834               	movf	??_initialiseGPIO,w
  2933  02AD  00B5               	movwf	??_initialiseGPIO+1
  2934  02AE  0835               	movf	??_initialiseGPIO+1,w
  2935  02AF  0021               	movlb	1	; select bank1
  2936  02B0  048D               	iorwf	13,f	;volatile
  2937                           
  2938                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2939  02B1  3001               	movlw	1
  2940  02B2  0020               	movlb	0	; select bank0
  2941  02B3  00B4               	movwf	??_initialiseGPIO
  2942  02B4  0A38               	incf	initialiseGPIO@portNumber,w
  2943  02B5  2AB7               	goto	u1214
  2944  02B6                     u1215:
  2945  02B6  35B4               	lslf	??_initialiseGPIO,f
  2946  02B7                     u1214:
  2947  02B7  0B89               	decfsz	9,f
  2948  02B8  2AB6               	goto	u1215
  2949  02B9  0834               	movf	??_initialiseGPIO,w
  2950  02BA  3AFF               	xorlw	255
  2951  02BB  00B5               	movwf	??_initialiseGPIO+1
  2952  02BC  0835               	movf	??_initialiseGPIO+1,w
  2953  02BD  0023               	movlb	3	; select bank3
  2954  02BE  058D               	andwf	13,f	;volatile
  2955                           
  2956                           ;GPIO.c: 41:         }
  2957  02BF  2ACD               	goto	l270
  2958  02C0                     l1670:
  2959  02C0  3001               	movlw	1
  2960  02C1  00B4               	movwf	??_initialiseGPIO
  2961  02C2  0A38               	incf	initialiseGPIO@portNumber,w
  2962  02C3  2AC5               	goto	u1224
  2963  02C4                     u1225:
  2964  02C4  35B4               	lslf	??_initialiseGPIO,f
  2965  02C5                     u1224:
  2966  02C5  0B89               	decfsz	9,f
  2967  02C6  2AC4               	goto	u1225
  2968  02C7  0834               	movf	??_initialiseGPIO,w
  2969  02C8  3AFF               	xorlw	255
  2970  02C9  00B5               	movwf	??_initialiseGPIO+1
  2971  02CA  0835               	movf	??_initialiseGPIO+1,w
  2972  02CB  0021               	movlb	1	; select bank1
  2973  02CC  058D               	andwf	13,f	;volatile
  2974  02CD                     l270:
  2975  02CD  0008               	return
  2976  02CE                     __end_of_initialiseGPIO:
  2977                           
  2978                           	psect	text8
  2979  02CE                     __ptext8:	
  2980 ;; *************** function _initialiseADCPin *****************
  2981 ;; Defined at:
  2982 ;;		line 37 in file "ADC.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  gpioNumber      1    wreg     const enum E2798
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2987 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2988 ;;  portType        1   22[BANK0 ] unsigned char 
  2989 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, status,2, status,0
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2999 ;;      Params:         0       0       0       0       0       0
  3000 ;;      Locals:         0       4       0       0       0       0
  3001 ;;      Temps:          0       2       0       0       0       0
  3002 ;;      Totals:         0       6       0       0       0       0
  3003 ;;Total ram usage:        6 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 3
  3006 ;; This function calls:
  3007 ;;		Nothing
  3008 ;; This function is called by:
  3009 ;;		_initialisePotentiometers
  3010 ;;		_initialiseCurrentSensors
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014  02CE                     _initialiseADCPin:	
  3015                           ;psect for function _initialiseADCPin
  3016                           
  3017                           
  3018                           ;incstack = 0
  3019                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3020                           ;initialiseADCPin@gpioNumber stored from wreg
  3021  02CE  0020               	movlb	0	; select bank0
  3022  02CF  00B8               	movwf	initialiseADCPin@gpioNumber
  3023  02D0                     l1672:
  3024                           
  3025                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3026  02D0  01B7               	clrf	initialiseADCPin@portNumber
  3027                           
  3028                           ;ADC.c: 40:     uint8_t portType = 0;
  3029  02D1  01B6               	clrf	initialiseADCPin@portType
  3030                           
  3031                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3032  02D2  01B5               	clrf	initialiseADCPin@gpioValid
  3033  02D3                     l1674:
  3034                           
  3035                           ;ADC.c: 43:     if(gpioNumber < 4){
  3036  02D3  3004               	movlw	4
  3037  02D4  0238               	subwf	initialiseADCPin@gpioNumber,w
  3038  02D5  1803               	skipnc
  3039  02D6  2AD8               	goto	u1231
  3040  02D7  2AD9               	goto	u1230
  3041  02D8                     u1231:
  3042  02D8  2AE0               	goto	l1682
  3043  02D9                     u1230:
  3044  02D9                     l1676:
  3045                           
  3046                           ;ADC.c: 44:         portNumber = gpioNumber;
  3047  02D9  0838               	movf	initialiseADCPin@gpioNumber,w
  3048  02DA  00B3               	movwf	??_initialiseADCPin
  3049  02DB  0833               	movf	??_initialiseADCPin,w
  3050  02DC  00B7               	movwf	initialiseADCPin@portNumber
  3051  02DD                     l1678:
  3052                           
  3053                           ;ADC.c: 45:         portType = 0;
  3054  02DD  01B6               	clrf	initialiseADCPin@portType
  3055  02DE                     l1680:
  3056                           
  3057                           ;ADC.c: 46:         gpioValid = 1;
  3058  02DE  01B5               	clrf	initialiseADCPin@gpioValid
  3059  02DF  0AB5               	incf	initialiseADCPin@gpioValid,f
  3060  02E0                     l1682:
  3061                           
  3062                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3063  02E0  3009               	movlw	9
  3064  02E1  0238               	subwf	initialiseADCPin@gpioNumber,w
  3065  02E2  1C03               	skipc
  3066  02E3  2AE5               	goto	u1241
  3067  02E4  2AE6               	goto	u1240
  3068  02E5                     u1241:
  3069  02E5  2AF5               	goto	l204
  3070  02E6                     u1240:
  3071  02E6                     l1684:
  3072  02E6  3010               	movlw	16
  3073  02E7  0238               	subwf	initialiseADCPin@gpioNumber,w
  3074  02E8  1803               	skipnc
  3075  02E9  2AEB               	goto	u1251
  3076  02EA  2AEC               	goto	u1250
  3077  02EB                     u1251:
  3078  02EB  2AF5               	goto	l204
  3079  02EC                     u1250:
  3080  02EC                     l1686:
  3081                           
  3082                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3083  02EC  0838               	movf	initialiseADCPin@gpioNumber,w
  3084  02ED  3EF8               	addlw	248
  3085  02EE  00B3               	movwf	??_initialiseADCPin
  3086  02EF  0833               	movf	??_initialiseADCPin,w
  3087  02F0  00B7               	movwf	initialiseADCPin@portNumber
  3088  02F1                     l1688:
  3089                           
  3090                           ;ADC.c: 51:         portType = 1;
  3091  02F1  01B6               	clrf	initialiseADCPin@portType
  3092  02F2  0AB6               	incf	initialiseADCPin@portType,f
  3093  02F3                     l1690:
  3094                           
  3095                           ;ADC.c: 52:         gpioValid = 1;
  3096  02F3  01B5               	clrf	initialiseADCPin@gpioValid
  3097  02F4  0AB5               	incf	initialiseADCPin@gpioValid,f
  3098  02F5                     l204:	
  3099                           ;ADC.c: 53:     }
  3100                           
  3101                           
  3102                           ;ADC.c: 55:     if(gpioValid){
  3103  02F5  0835               	movf	initialiseADCPin@gpioValid,w
  3104  02F6  1903               	btfsc	3,2
  3105  02F7  2AF9               	goto	u1261
  3106  02F8  2AFA               	goto	u1260
  3107  02F9                     u1261:
  3108  02F9  2B37               	goto	l209
  3109  02FA                     u1260:
  3110  02FA                     l1692:
  3111                           
  3112                           ;ADC.c: 56:         if(portType == 0){
  3113  02FA  0836               	movf	initialiseADCPin@portType,w
  3114  02FB  1D03               	btfss	3,2
  3115  02FC  2AFE               	goto	u1271
  3116  02FD  2AFF               	goto	u1270
  3117  02FE                     u1271:
  3118  02FE  2B19               	goto	l1696
  3119  02FF                     u1270:
  3120  02FF                     l1694:
  3121                           
  3122                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3123  02FF  3001               	movlw	1
  3124  0300  00B3               	movwf	??_initialiseADCPin
  3125  0301  0A37               	incf	initialiseADCPin@portNumber,w
  3126  0302  2B04               	goto	u1284
  3127  0303                     u1285:
  3128  0303  35B3               	lslf	??_initialiseADCPin,f
  3129  0304                     u1284:
  3130  0304  0B89               	decfsz	9,f
  3131  0305  2B03               	goto	u1285
  3132  0306  0833               	movf	??_initialiseADCPin,w
  3133  0307  00B4               	movwf	??_initialiseADCPin+1
  3134  0308  0834               	movf	??_initialiseADCPin+1,w
  3135  0309  0021               	movlb	1	; select bank1
  3136  030A  048C               	iorwf	12,f	;volatile
  3137                           
  3138                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3139  030B  3001               	movlw	1
  3140  030C  0020               	movlb	0	; select bank0
  3141  030D  00B3               	movwf	??_initialiseADCPin
  3142  030E  0A37               	incf	initialiseADCPin@portNumber,w
  3143  030F  2B11               	goto	u1294
  3144  0310                     u1295:
  3145  0310  35B3               	lslf	??_initialiseADCPin,f
  3146  0311                     u1294:
  3147  0311  0B89               	decfsz	9,f
  3148  0312  2B10               	goto	u1295
  3149  0313  0833               	movf	??_initialiseADCPin,w
  3150  0314  00B4               	movwf	??_initialiseADCPin+1
  3151  0315  0834               	movf	??_initialiseADCPin+1,w
  3152  0316  0023               	movlb	3	; select bank3
  3153  0317  048C               	iorwf	12,f	;volatile
  3154                           
  3155                           ;ADC.c: 59:         }
  3156  0318  2B37               	goto	l209
  3157  0319                     l1696:
  3158  0319  0336               	decf	initialiseADCPin@portType,w
  3159  031A  1D03               	btfss	3,2
  3160  031B  2B1D               	goto	u1301
  3161  031C  2B1E               	goto	u1300
  3162  031D                     u1301:
  3163  031D  2B37               	goto	l209
  3164  031E                     u1300:
  3165  031E                     l1698:
  3166                           
  3167                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3168  031E  3001               	movlw	1
  3169  031F  00B3               	movwf	??_initialiseADCPin
  3170  0320  0A37               	incf	initialiseADCPin@portNumber,w
  3171  0321  2B23               	goto	u1314
  3172  0322                     u1315:
  3173  0322  35B3               	lslf	??_initialiseADCPin,f
  3174  0323                     u1314:
  3175  0323  0B89               	decfsz	9,f
  3176  0324  2B22               	goto	u1315
  3177  0325  0833               	movf	??_initialiseADCPin,w
  3178  0326  00B4               	movwf	??_initialiseADCPin+1
  3179  0327  0834               	movf	??_initialiseADCPin+1,w
  3180  0328  0021               	movlb	1	; select bank1
  3181  0329  048D               	iorwf	13,f	;volatile
  3182                           
  3183                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3184  032A  3001               	movlw	1
  3185  032B  0020               	movlb	0	; select bank0
  3186  032C  00B3               	movwf	??_initialiseADCPin
  3187  032D  0A37               	incf	initialiseADCPin@portNumber,w
  3188  032E  2B30               	goto	u1324
  3189  032F                     u1325:
  3190  032F  35B3               	lslf	??_initialiseADCPin,f
  3191  0330                     u1324:
  3192  0330  0B89               	decfsz	9,f
  3193  0331  2B2F               	goto	u1325
  3194  0332  0833               	movf	??_initialiseADCPin,w
  3195  0333  00B4               	movwf	??_initialiseADCPin+1
  3196  0334  0834               	movf	??_initialiseADCPin+1,w
  3197  0335  0023               	movlb	3	; select bank3
  3198  0336  048D               	iorwf	13,f	;volatile
  3199  0337                     l209:
  3200  0337  0008               	return
  3201  0338                     __end_of_initialiseADCPin:
  3202                           
  3203                           	psect	text9
  3204  06FA                     __ptext9:	
  3205 ;; *************** function _initialiseADCModule *****************
  3206 ;; Defined at:
  3207 ;;		line 14 in file "ADC.c"
  3208 ;; Parameters:    Size  Location     Type
  3209 ;;		None
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;		None
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3221 ;;      Params:         0       0       0       0       0       0
  3222 ;;      Locals:         0       0       0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0
  3224 ;;      Totals:         0       0       0       0       0       0
  3225 ;;Total ram usage:        0 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; Hardware stack levels required when called: 3
  3228 ;; This function calls:
  3229 ;;		Nothing
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;; This function uses a non-reentrant model
  3233 ;;
  3234                           
  3235  06FA                     _initialiseADCModule:	
  3236                           ;psect for function _initialiseADCModule
  3237                           
  3238  06FA                     l2042:	
  3239                           ;incstack = 0
  3240                           ; Regs used in _initialiseADCModule: [wreg]
  3241                           
  3242                           
  3243                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3244  06FA  3001               	movlw	1
  3245  06FB  0021               	movlb	1	; select bank1
  3246  06FC  009D               	movwf	29	;volatile
  3247                           
  3248                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3249  06FD  3080               	movlw	128
  3250  06FE  009E               	movwf	30	;volatile
  3251  06FF                     l200:
  3252  06FF  0008               	return
  3253  0700                     __end_of_initialiseADCModule:
  3254                           
  3255                           	psect	intentry
  3256  0004                     __pintentry:	
  3257 ;; *************** function _Tick980Hz *****************
  3258 ;; Defined at:
  3259 ;;		line 41 in file "main.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3273 ;;      Params:         0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0
  3275 ;;      Temps:          0       1       0       0       0       0
  3276 ;;      Totals:         0       1       0       0       0       0
  3277 ;;Total ram usage:        1 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 2
  3280 ;; This function calls:
  3281 ;;		_currentTripRead
  3282 ;;		_readFilteredDutyPot
  3283 ;;		_readFilteredFreqPot
  3284 ;;		_readILCurrentADCRaw
  3285 ;;		_runPotScaling
  3286 ;;		_setPWMDutyandPeriod
  3287 ;;		i1_writeGPIO
  3288 ;; This function is called by:
  3289 ;;		Interrupt level 1
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293  0004                     _Tick980Hz:
  3294                           
  3295                           ;incstack = 0
  3296  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3297                           
  3298                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3299  0005  3180               	pagesel	$
  3300  0006                     i1l2076:
  3301                           
  3302                           ;main.c: 52:         if(currentTripRead() == 1){
  3303  0006  3185  25E2  3180   	fcall	_currentTripRead
  3304  0009  3A01               	xorlw	1
  3305  000A  1D03               	skipz
  3306  000B  280D               	goto	u188_21
  3307  000C  280E               	goto	u188_20
  3308  000D                     u188_21:
  3309  000D  281A               	goto	i1l2082
  3310  000E                     u188_20:
  3311  000E                     i1l2078:
  3312                           
  3313                           ;main.c: 53:             emergencyStop = 1;
  3314  000E  3001               	movlw	1
  3315  000F  0020               	movlb	0	; select bank0
  3316  0010  00B2               	movwf	??_Tick980Hz
  3317  0011  0832               	movf	??_Tick980Hz,w
  3318  0012  00CF               	movwf	_emergencyStop	;volatile
  3319  0013                     i1l2080:
  3320                           
  3321                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3322  0013  3000               	movlw	0
  3323  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3324  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3325  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3326  0017  3186  260F  3180   	fcall	_setPWMDutyandPeriod
  3327  001A                     i1l2082:
  3328                           
  3329                           ;main.c: 57:         if(timerSlotHalf == 0){
  3330  001A  0020               	movlb	0	; select bank0
  3331  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3332  001C  1D03               	btfss	3,2
  3333  001D  281F               	goto	u189_21
  3334  001E  2820               	goto	u189_20
  3335  001F                     u189_21:
  3336  001F  2825               	goto	i1l2086
  3337  0020                     u189_20:
  3338  0020                     i1l2084:
  3339                           
  3340                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3341  0020  01F0               	clrf	i1writeGPIO@writeValue
  3342  0021  300C               	movlw	12
  3343  0022  3183  23FA  3180   	fcall	i1_writeGPIO
  3344  0025                     i1l2086:
  3345                           
  3346                           ;main.c: 61:         if(timerSlotHalf == 1){
  3347  0025  0020               	movlb	0	; select bank0
  3348  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3349  0027  1D03               	btfss	3,2
  3350  0028  282A               	goto	u190_21
  3351  0029  282B               	goto	u190_20
  3352  002A                     u190_21:
  3353  002A  2860               	goto	i1l82
  3354  002B                     u190_20:
  3355  002B                     i1l2088:
  3356                           
  3357                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3358  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3359  002C  1D03               	btfss	3,2
  3360  002D  282F               	goto	u191_21
  3361  002E  2830               	goto	u191_20
  3362  002F                     u191_21:
  3363  002F  2855               	goto	i1l2102
  3364  0030                     u191_20:
  3365  0030                     i1l2090:
  3366                           
  3367                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3368  0030  01F0               	clrf	i1writeGPIO@writeValue
  3369  0031  0AF0               	incf	i1writeGPIO@writeValue,f
  3370  0032  300C               	movlw	12
  3371  0033  3183  23FA  3180   	fcall	i1_writeGPIO
  3372                           
  3373                           ;main.c: 68:                 writeGPIO(9, 1);
  3374  0036  01F0               	clrf	i1writeGPIO@writeValue
  3375  0037  0AF0               	incf	i1writeGPIO@writeValue,f
  3376  0038  3009               	movlw	9
  3377  0039  3183  23FA  3180   	fcall	i1_writeGPIO
  3378  003C                     i1l2092:
  3379                           
  3380                           ;main.c: 70:                 filteredDutyPot = readFilteredDutyPot();
  3381  003C  3185  250F  3180   	fcall	_readFilteredDutyPot
  3382  003F  087C               	movf	?_readFilteredDutyPot+1,w
  3383  0040  0020               	movlb	0	; select bank0
  3384  0041  00C2               	movwf	_filteredDutyPot+1
  3385  0042  087B               	movf	?_readFilteredDutyPot,w
  3386  0043  00C1               	movwf	_filteredDutyPot
  3387  0044                     i1l2094:
  3388                           
  3389                           ;main.c: 71:                 filteredFreqPot = readFilteredFreqPot();
  3390  0044  3184  24B4  3180   	fcall	_readFilteredFreqPot
  3391  0047  087C               	movf	?_readFilteredFreqPot+1,w
  3392  0048  0020               	movlb	0	; select bank0
  3393  0049  00C4               	movwf	_filteredFreqPot+1
  3394  004A  087B               	movf	?_readFilteredFreqPot,w
  3395  004B  00C3               	movwf	_filteredFreqPot
  3396  004C                     i1l2096:
  3397                           
  3398                           ;main.c: 73:                 if(~emergencyStop){
  3399  004C  034F               	decf	_emergencyStop,w	;volatile
  3400  004D  1903               	btfsc	3,2
  3401  004E  2850               	goto	u192_21
  3402  004F  2851               	goto	u192_20
  3403  0050                     u192_21:
  3404  0050  2855               	goto	i1l2100
  3405  0051                     u192_20:
  3406  0051                     i1l2098:
  3407                           
  3408                           ;main.c: 74:                     runPotScaling();
  3409  0051  3180  2094  3180   	fcall	_runPotScaling
  3410  0054  2855               	goto	i1l2102
  3411  0055                     i1l2100:
  3412  0055                     i1l2102:
  3413                           
  3414                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  3415  0055  0020               	movlb	0	; select bank0
  3416  0056  0350               	decf	_timerSlotQuarter,w	;volatile
  3417  0057  1D03               	btfss	3,2
  3418  0058  285A               	goto	u193_21
  3419  0059  285C               	goto	u193_20
  3420  005A                     u193_21:
  3421  005A  3001               	movlw	1
  3422  005B  285D               	goto	u194_20
  3423  005C                     u193_20:
  3424  005C  3000               	movlw	0
  3425  005D                     u194_20:
  3426  005D  00B2               	movwf	??_Tick980Hz
  3427  005E  0832               	movf	??_Tick980Hz,w
  3428  005F  00D0               	movwf	_timerSlotQuarter	;volatile
  3429  0060                     i1l82:	
  3430                           ;main.c: 83:         }
  3431                           
  3432                           
  3433                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  3434  0060  0351               	decf	_timerSlotHalf,w	;volatile
  3435  0061  1D03               	btfss	3,2
  3436  0062  2864               	goto	u195_21
  3437  0063  2866               	goto	u195_20
  3438  0064                     u195_21:
  3439  0064  3001               	movlw	1
  3440  0065  2867               	goto	u196_20
  3441  0066                     u195_20:
  3442  0066  3000               	movlw	0
  3443  0067                     u196_20:
  3444  0067  00B2               	movwf	??_Tick980Hz
  3445  0068  0832               	movf	??_Tick980Hz,w
  3446  0069  00D1               	movwf	_timerSlotHalf	;volatile
  3447  006A                     i1l2104:
  3448                           
  3449                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  3450  006A  110B               	bcf	11,2	;volatile
  3451  006B                     i1l2106:
  3452                           
  3453                           ;main.c: 91:         latestIL = readILCurrentADCRaw();
  3454  006B  3186  26D7  3180   	fcall	_readILCurrentADCRaw
  3455  006E  0871               	movf	?_readILCurrentADCRaw+1,w
  3456  006F  0020               	movlb	0	; select bank0
  3457  0070  00CA               	movwf	_latestIL+1	;volatile
  3458  0071  0870               	movf	?_readILCurrentADCRaw,w
  3459  0072  00C9               	movwf	_latestIL	;volatile
  3460  0073                     i1l2108:
  3461                           
  3462                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  3463  0073  1111               	bcf	17,2	;volatile
  3464  0074                     i1l87:
  3465  0074  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3466  0075  0009               	retfie
  3467  0076                     __end_of_Tick980Hz:
  3468                           
  3469                           	psect	text11
  3470  03FA                     __ptext11:	
  3471 ;; *************** function i1_writeGPIO *****************
  3472 ;; Defined at:
  3473 ;;		line 52 in file "GPIO.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  gpioNumber      1    wreg     const enum E2798
  3476 ;;  writeValue      1    0[COMMON] unsigned char 
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3479 ;;  portNumber      1    5[COMMON] unsigned char 
  3480 ;;  portType        1    3[COMMON] unsigned char 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3490 ;;      Params:         1       0       0       0       0       0
  3491 ;;      Locals:         3       0       0       0       0       0
  3492 ;;      Temps:          2       0       0       0       0       0
  3493 ;;      Totals:         6       0       0       0       0       0
  3494 ;;Total ram usage:        6 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_Tick980Hz
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503  03FA                     i1_writeGPIO:	
  3504                           ;psect for function i1_writeGPIO
  3505                           
  3506                           
  3507                           ;incstack = 0
  3508                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3509                           ;i1writeGPIO@gpioNumber stored from wreg
  3510  03FA  00F4               	movwf	i1writeGPIO@gpioNumber
  3511  03FB                     i1l2048:
  3512                           
  3513                           ;GPIO.c: 54:     uint8_t portType = 0;
  3514  03FB  01F3               	clrf	i1writeGPIO@portType
  3515  03FC                     i1l2050:
  3516                           
  3517                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3518  03FC  3008               	movlw	8
  3519  03FD  0274               	subwf	i1writeGPIO@gpioNumber,w
  3520  03FE  1C03               	skipc
  3521  03FF  2C01               	goto	u179_21
  3522  0400  2C02               	goto	u179_20
  3523  0401                     u179_21:
  3524  0401  2C0A               	goto	i1l2056
  3525  0402                     u179_20:
  3526  0402                     i1l2052:
  3527                           
  3528                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3529  0402  0874               	movf	i1writeGPIO@gpioNumber,w
  3530  0403  3EF8               	addlw	248
  3531  0404  00F1               	movwf	??i1_writeGPIO
  3532  0405  0871               	movf	??i1_writeGPIO,w
  3533  0406  00F5               	movwf	i1writeGPIO@portNumber
  3534  0407                     i1l2054:
  3535                           
  3536                           ;GPIO.c: 57:         portType = 1;
  3537  0407  01F3               	clrf	i1writeGPIO@portType
  3538  0408  0AF3               	incf	i1writeGPIO@portType,f
  3539                           
  3540                           ;GPIO.c: 58:     }
  3541  0409  2C0F               	goto	i1l2060
  3542  040A                     i1l2056:
  3543                           
  3544                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3545  040A  0874               	movf	i1writeGPIO@gpioNumber,w
  3546  040B  00F1               	movwf	??i1_writeGPIO
  3547  040C  0871               	movf	??i1_writeGPIO,w
  3548  040D  00F5               	movwf	i1writeGPIO@portNumber
  3549  040E                     i1l2058:
  3550                           
  3551                           ;GPIO.c: 61:         portType = 0;
  3552  040E  01F3               	clrf	i1writeGPIO@portType
  3553  040F                     i1l2060:
  3554                           
  3555                           ;GPIO.c: 64:     if(portType == 0){
  3556  040F  0873               	movf	i1writeGPIO@portType,w
  3557  0410  1D03               	btfss	3,2
  3558  0411  2C13               	goto	u180_21
  3559  0412  2C14               	goto	u180_20
  3560  0413                     u180_21:
  3561  0413  2C34               	goto	i1l2068
  3562  0414                     u180_20:
  3563  0414                     i1l2062:
  3564                           
  3565                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3566  0414  0870               	movf	i1writeGPIO@writeValue,w
  3567  0415  1903               	btfsc	3,2
  3568  0416  2C18               	goto	u181_21
  3569  0417  2C19               	goto	u181_20
  3570  0418                     u181_21:
  3571  0418  2C26               	goto	i1l2066
  3572  0419                     u181_20:
  3573  0419                     i1l2064:
  3574  0419  3001               	movlw	1
  3575  041A  00F1               	movwf	??i1_writeGPIO
  3576  041B  0A75               	incf	i1writeGPIO@portNumber,w
  3577  041C  2C1E               	goto	u182_24
  3578  041D                     u182_25:
  3579  041D  35F1               	lslf	??i1_writeGPIO,f
  3580  041E                     u182_24:
  3581  041E  0B89               	decfsz	9,f
  3582  041F  2C1D               	goto	u182_25
  3583  0420  0871               	movf	??i1_writeGPIO,w
  3584  0421  00F2               	movwf	??i1_writeGPIO+1
  3585  0422  0872               	movf	??i1_writeGPIO+1,w
  3586  0423  0022               	movlb	2	; select bank2
  3587  0424  048C               	iorwf	12,f	;volatile
  3588  0425  2C58               	goto	i1l284
  3589  0426                     i1l2066:
  3590  0426  3001               	movlw	1
  3591  0427  00F1               	movwf	??i1_writeGPIO
  3592  0428  0A75               	incf	i1writeGPIO@portNumber,w
  3593  0429  2C2B               	goto	u183_24
  3594  042A                     u183_25:
  3595  042A  35F1               	lslf	??i1_writeGPIO,f
  3596  042B                     u183_24:
  3597  042B  0B89               	decfsz	9,f
  3598  042C  2C2A               	goto	u183_25
  3599  042D  0871               	movf	??i1_writeGPIO,w
  3600  042E  3AFF               	xorlw	255
  3601  042F  00F2               	movwf	??i1_writeGPIO+1
  3602  0430  0872               	movf	??i1_writeGPIO+1,w
  3603  0431  0022               	movlb	2	; select bank2
  3604  0432  058C               	andwf	12,f	;volatile
  3605  0433  2C58               	goto	i1l284
  3606  0434                     i1l2068:
  3607  0434  0373               	decf	i1writeGPIO@portType,w
  3608  0435  1D03               	btfss	3,2
  3609  0436  2C38               	goto	u184_21
  3610  0437  2C39               	goto	u184_20
  3611  0438                     u184_21:
  3612  0438  2C58               	goto	i1l284
  3613  0439                     u184_20:
  3614  0439                     i1l2070:
  3615                           
  3616                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3617  0439  0870               	movf	i1writeGPIO@writeValue,w
  3618  043A  1903               	btfsc	3,2
  3619  043B  2C3D               	goto	u185_21
  3620  043C  2C3E               	goto	u185_20
  3621  043D                     u185_21:
  3622  043D  2C4B               	goto	i1l2074
  3623  043E                     u185_20:
  3624  043E                     i1l2072:
  3625  043E  3001               	movlw	1
  3626  043F  00F1               	movwf	??i1_writeGPIO
  3627  0440  0A75               	incf	i1writeGPIO@portNumber,w
  3628  0441  2C43               	goto	u186_24
  3629  0442                     u186_25:
  3630  0442  35F1               	lslf	??i1_writeGPIO,f
  3631  0443                     u186_24:
  3632  0443  0B89               	decfsz	9,f
  3633  0444  2C42               	goto	u186_25
  3634  0445  0871               	movf	??i1_writeGPIO,w
  3635  0446  00F2               	movwf	??i1_writeGPIO+1
  3636  0447  0872               	movf	??i1_writeGPIO+1,w
  3637  0448  0022               	movlb	2	; select bank2
  3638  0449  048D               	iorwf	13,f	;volatile
  3639  044A  2C58               	goto	i1l284
  3640  044B                     i1l2074:
  3641  044B  3001               	movlw	1
  3642  044C  00F1               	movwf	??i1_writeGPIO
  3643  044D  0A75               	incf	i1writeGPIO@portNumber,w
  3644  044E  2C50               	goto	u187_24
  3645  044F                     u187_25:
  3646  044F  35F1               	lslf	??i1_writeGPIO,f
  3647  0450                     u187_24:
  3648  0450  0B89               	decfsz	9,f
  3649  0451  2C4F               	goto	u187_25
  3650  0452  0871               	movf	??i1_writeGPIO,w
  3651  0453  3AFF               	xorlw	255
  3652  0454  00F2               	movwf	??i1_writeGPIO+1
  3653  0455  0872               	movf	??i1_writeGPIO+1,w
  3654  0456  0022               	movlb	2	; select bank2
  3655  0457  058D               	andwf	13,f	;volatile
  3656  0458                     i1l284:
  3657  0458  0008               	return
  3658  0459                     __end_ofi1_writeGPIO:
  3659                           
  3660                           	psect	text12
  3661  0094                     __ptext12:	
  3662 ;; *************** function _runPotScaling *****************
  3663 ;; Defined at:
  3664 ;;		line 55 in file "Potentiometer.c"
  3665 ;; Parameters:    Size  Location     Type
  3666 ;;		None
  3667 ;; Auto vars:     Size  Location     Type
  3668 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3669 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, pclath, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3679 ;;      Params:         0       0       0       0       0       0
  3680 ;;      Locals:         0       4       0       0       0       0
  3681 ;;      Temps:          0       8       0       0       0       0
  3682 ;;      Totals:         0      12       0       0       0       0
  3683 ;;Total ram usage:       12 bytes
  3684 ;; Hardware stack levels used: 1
  3685 ;; Hardware stack levels required when called: 1
  3686 ;; This function calls:
  3687 ;;		___lldiv
  3688 ;;		___lmul
  3689 ;;		___wmul
  3690 ;;		_setPWMDutyandPeriod
  3691 ;; This function is called by:
  3692 ;;		_Tick980Hz
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696  0094                     _runPotScaling:	
  3697                           ;psect for function _runPotScaling
  3698                           
  3699  0094                     i1l1914:	
  3700                           ;incstack = 0
  3701                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3702                           
  3703                           
  3704                           ;Potentiometer.c: 57:     potSetCount++;
  3705  0094  3001               	movlw	1
  3706  0095  0020               	movlb	0	; select bank0
  3707  0096  00A6               	movwf	??_runPotScaling
  3708  0097  0826               	movf	??_runPotScaling,w
  3709  0098  07D2               	addwf	_potSetCount,f
  3710                           
  3711                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3712  0099  3020               	movlw	32
  3713  009A  0652               	xorwf	_potSetCount,w
  3714  009B  1D03               	btfss	3,2
  3715  009C  289E               	goto	u173_21
  3716  009D  289F               	goto	u173_20
  3717  009E                     u173_21:
  3718  009E  2976               	goto	i1l341
  3719  009F                     u173_20:
  3720  009F                     i1l1916:
  3721                           
  3722                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3723  009F  0843               	movf	_filteredFreqPot,w
  3724  00A0  3ED3               	addlw	211
  3725  00A1  00F0               	movwf	___lmul@multiplier
  3726  00A2  30FF               	movlw	255
  3727  00A3  3D44               	addwfc	_filteredFreqPot+1,w
  3728  00A4  00F1               	movwf	___lmul@multiplier+1
  3729  00A5  01F2               	clrf	___lmul@multiplier+2
  3730  00A6  01F3               	clrf	___lmul@multiplier+3
  3731  00A7  3000               	movlw	0
  3732  00A8  00F7               	movwf	___lmul@multiplicand+3
  3733  00A9  3000               	movlw	0
  3734  00AA  00F6               	movwf	___lmul@multiplicand+2
  3735  00AB  3000               	movlw	0
  3736  00AC  00F5               	movwf	___lmul@multiplicand+1
  3737  00AD  3090               	movlw	144
  3738  00AE  00F4               	movwf	___lmul@multiplicand
  3739  00AF  3185  25AF  3180   	fcall	___lmul
  3740  00B2  0870               	movf	?___lmul,w
  3741  00B3  0020               	movlb	0	; select bank0
  3742  00B4  00A6               	movwf	??_runPotScaling
  3743  00B5  0871               	movf	?___lmul+1,w
  3744  00B6  00A7               	movwf	??_runPotScaling+1
  3745  00B7  0872               	movf	?___lmul+2,w
  3746  00B8  00A8               	movwf	??_runPotScaling+2
  3747  00B9  0873               	movf	?___lmul+3,w
  3748  00BA  00A9               	movwf	??_runPotScaling+3
  3749  00BB  300A               	movlw	10
  3750  00BC                     u174_25:
  3751  00BC  36A9               	lsrf	??_runPotScaling+3,f
  3752  00BD  0CA8               	rrf	??_runPotScaling+2,f
  3753  00BE  0CA7               	rrf	??_runPotScaling+1,f
  3754  00BF  0CA6               	rrf	??_runPotScaling,f
  3755  00C0                     u174_20:
  3756  00C0  0B89               	decfsz	9,f
  3757  00C1  28BC               	goto	u174_25
  3758  00C2  0826               	movf	??_runPotScaling,w
  3759  00C3  3E0F               	addlw	15
  3760  00C4  00AA               	movwf	??_runPotScaling+4
  3761  00C5  082A               	movf	??_runPotScaling+4,w
  3762  00C6  00D6               	movwf	_setPeriod
  3763                           
  3764                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3765  00C7  0841               	movf	_filteredDutyPot,w
  3766  00C8  3ED3               	addlw	211
  3767  00C9  00F0               	movwf	___lmul@multiplier
  3768  00CA  30FF               	movlw	255
  3769  00CB  3D42               	addwfc	_filteredDutyPot+1,w
  3770  00CC  00F1               	movwf	___lmul@multiplier+1
  3771  00CD  01F2               	clrf	___lmul@multiplier+2
  3772  00CE  01F3               	clrf	___lmul@multiplier+3
  3773  00CF  0856               	movf	_setPeriod,w
  3774  00D0  00A6               	movwf	??_runPotScaling
  3775  00D1  01A7               	clrf	??_runPotScaling+1
  3776  00D2  01A8               	clrf	??_runPotScaling+2
  3777  00D3  01A9               	clrf	??_runPotScaling+3
  3778  00D4  0829               	movf	??_runPotScaling+3,w
  3779  00D5  00F7               	movwf	___lmul@multiplicand+3
  3780  00D6  0828               	movf	??_runPotScaling+2,w
  3781  00D7  00F6               	movwf	___lmul@multiplicand+2
  3782  00D8  0827               	movf	??_runPotScaling+1,w
  3783  00D9  00F5               	movwf	___lmul@multiplicand+1
  3784  00DA  0826               	movf	??_runPotScaling,w
  3785  00DB  00F4               	movwf	___lmul@multiplicand
  3786  00DC  3185  25AF  3180   	fcall	___lmul
  3787  00DF  0870               	movf	?___lmul,w
  3788  00E0  0020               	movlb	0	; select bank0
  3789  00E1  00AA               	movwf	??_runPotScaling+4
  3790  00E2  0871               	movf	?___lmul+1,w
  3791  00E3  00AB               	movwf	??_runPotScaling+5
  3792  00E4  0872               	movf	?___lmul+2,w
  3793  00E5  00AC               	movwf	??_runPotScaling+6
  3794  00E6  0873               	movf	?___lmul+3,w
  3795  00E7  00AD               	movwf	??_runPotScaling+7
  3796  00E8  3008               	movlw	8
  3797  00E9                     u175_25:
  3798  00E9  36AD               	lsrf	??_runPotScaling+7,f
  3799  00EA  0CAC               	rrf	??_runPotScaling+6,f
  3800  00EB  0CAB               	rrf	??_runPotScaling+5,f
  3801  00EC  0CAA               	rrf	??_runPotScaling+4,f
  3802  00ED                     u175_20:
  3803  00ED  0B89               	decfsz	9,f
  3804  00EE  28E9               	goto	u175_25
  3805  00EF  082B               	movf	??_runPotScaling+5,w
  3806  00F0  00CE               	movwf	_setDuty+1
  3807  00F1  082A               	movf	??_runPotScaling+4,w
  3808  00F2  00CD               	movwf	_setDuty
  3809                           
  3810                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3811  00F3  3000               	movlw	0
  3812  00F4  00F9               	movwf	___lldiv@divisor+3
  3813  00F5  3000               	movlw	0
  3814  00F6  00F8               	movwf	___lldiv@divisor+2
  3815  00F7  3000               	movlw	0
  3816  00F8  00F7               	movwf	___lldiv@divisor+1
  3817  00F9  3019               	movlw	25
  3818  00FA  00F6               	movwf	___lldiv@divisor
  3819  00FB  305A               	movlw	90
  3820  00FC  00F2               	movwf	___wmul@multiplicand
  3821  00FD  3000               	movlw	0
  3822  00FE  00F3               	movwf	___wmul@multiplicand+1
  3823  00FF  0856               	movf	_setPeriod,w
  3824  0100  00A6               	movwf	??_runPotScaling
  3825  0101  01A7               	clrf	??_runPotScaling+1
  3826  0102  0826               	movf	??_runPotScaling,w
  3827  0103  00F0               	movwf	___wmul@multiplier
  3828  0104  0827               	movf	??_runPotScaling+1,w
  3829  0105  00F1               	movwf	___wmul@multiplier+1
  3830  0106  3186  265D  3180   	fcall	___wmul
  3831  0109  0870               	movf	?___wmul,w
  3832  010A  0020               	movlb	0	; select bank0
  3833  010B  00A8               	movwf	??_runPotScaling+2
  3834  010C  0871               	movf	?___wmul+1,w
  3835  010D  00A9               	movwf	??_runPotScaling+3
  3836  010E  01AA               	clrf	??_runPotScaling+4
  3837  010F  01AB               	clrf	??_runPotScaling+5
  3838  0110  082B               	movf	??_runPotScaling+5,w
  3839  0111  00FD               	movwf	___lldiv@dividend+3
  3840  0112  082A               	movf	??_runPotScaling+4,w
  3841  0113  00FC               	movwf	___lldiv@dividend+2
  3842  0114  0829               	movf	??_runPotScaling+3,w
  3843  0115  00FB               	movwf	___lldiv@dividend+1
  3844  0116  0828               	movf	??_runPotScaling+2,w
  3845  0117  00FA               	movwf	___lldiv@dividend
  3846  0118  3184  2459  3180   	fcall	___lldiv
  3847  011B  0877               	movf	?___lldiv+1,w
  3848  011C  0020               	movlb	0	; select bank0
  3849  011D  00AF               	movwf	runPotScaling@maxDuty+1
  3850  011E  0876               	movf	?___lldiv,w
  3851  011F  00AE               	movwf	runPotScaling@maxDuty
  3852                           
  3853                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3854  0120  3000               	movlw	0
  3855  0121  00F9               	movwf	___lldiv@divisor+3
  3856  0122  3000               	movlw	0
  3857  0123  00F8               	movwf	___lldiv@divisor+2
  3858  0124  3000               	movlw	0
  3859  0125  00F7               	movwf	___lldiv@divisor+1
  3860  0126  3019               	movlw	25
  3861  0127  00F6               	movwf	___lldiv@divisor
  3862  0128  300A               	movlw	10
  3863  0129  00F2               	movwf	___wmul@multiplicand
  3864  012A  3000               	movlw	0
  3865  012B  00F3               	movwf	___wmul@multiplicand+1
  3866  012C  0856               	movf	_setPeriod,w
  3867  012D  00A6               	movwf	??_runPotScaling
  3868  012E  01A7               	clrf	??_runPotScaling+1
  3869  012F  0826               	movf	??_runPotScaling,w
  3870  0130  00F0               	movwf	___wmul@multiplier
  3871  0131  0827               	movf	??_runPotScaling+1,w
  3872  0132  00F1               	movwf	___wmul@multiplier+1
  3873  0133  3186  265D  3180   	fcall	___wmul
  3874  0136  0870               	movf	?___wmul,w
  3875  0137  0020               	movlb	0	; select bank0
  3876  0138  00A8               	movwf	??_runPotScaling+2
  3877  0139  0871               	movf	?___wmul+1,w
  3878  013A  00A9               	movwf	??_runPotScaling+3
  3879  013B  01AA               	clrf	??_runPotScaling+4
  3880  013C  01AB               	clrf	??_runPotScaling+5
  3881  013D  082B               	movf	??_runPotScaling+5,w
  3882  013E  00FD               	movwf	___lldiv@dividend+3
  3883  013F  082A               	movf	??_runPotScaling+4,w
  3884  0140  00FC               	movwf	___lldiv@dividend+2
  3885  0141  0829               	movf	??_runPotScaling+3,w
  3886  0142  00FB               	movwf	___lldiv@dividend+1
  3887  0143  0828               	movf	??_runPotScaling+2,w
  3888  0144  00FA               	movwf	___lldiv@dividend
  3889  0145  3184  2459  3180   	fcall	___lldiv
  3890  0148  0877               	movf	?___lldiv+1,w
  3891  0149  0020               	movlb	0	; select bank0
  3892  014A  00B1               	movwf	runPotScaling@minDuty+1
  3893  014B  0876               	movf	?___lldiv,w
  3894  014C  00B0               	movwf	runPotScaling@minDuty
  3895  014D                     i1l1918:
  3896                           
  3897                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3898  014D  084E               	movf	_setDuty+1,w
  3899  014E  022F               	subwf	runPotScaling@maxDuty+1,w
  3900  014F  1D03               	skipz
  3901  0150  2953               	goto	u176_25
  3902  0151  084D               	movf	_setDuty,w
  3903  0152  022E               	subwf	runPotScaling@maxDuty,w
  3904  0153                     u176_25:
  3905  0153  1803               	skipnc
  3906  0154  2956               	goto	u176_21
  3907  0155  2957               	goto	u176_20
  3908  0156                     u176_21:
  3909  0156  295B               	goto	i1l339
  3910  0157                     u176_20:
  3911  0157                     i1l1920:
  3912  0157  082F               	movf	runPotScaling@maxDuty+1,w
  3913  0158  00CE               	movwf	_setDuty+1
  3914  0159  082E               	movf	runPotScaling@maxDuty,w
  3915  015A  00CD               	movwf	_setDuty
  3916  015B                     i1l339:
  3917                           
  3918                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3919  015B  0831               	movf	runPotScaling@minDuty+1,w
  3920  015C  024E               	subwf	_setDuty+1,w
  3921  015D  1D03               	skipz
  3922  015E  2961               	goto	u177_25
  3923  015F  0830               	movf	runPotScaling@minDuty,w
  3924  0160  024D               	subwf	_setDuty,w
  3925  0161                     u177_25:
  3926  0161  1803               	skipnc
  3927  0162  2964               	goto	u177_21
  3928  0163  2965               	goto	u177_20
  3929  0164                     u177_21:
  3930  0164  2969               	goto	i1l1924
  3931  0165                     u177_20:
  3932  0165                     i1l1922:
  3933  0165  0831               	movf	runPotScaling@minDuty+1,w
  3934  0166  00CE               	movwf	_setDuty+1
  3935  0167  0830               	movf	runPotScaling@minDuty,w
  3936  0168  00CD               	movwf	_setDuty
  3937  0169                     i1l1924:
  3938                           
  3939                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3940  0169  084E               	movf	_setDuty+1,w
  3941  016A  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3942  016B  084D               	movf	_setDuty,w
  3943  016C  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3944  016D  0856               	movf	_setPeriod,w
  3945  016E  00A6               	movwf	??_runPotScaling
  3946  016F  0826               	movf	??_runPotScaling,w
  3947  0170  00F2               	movwf	setPWMDutyandPeriod@period
  3948  0171  3186  260F  3180   	fcall	_setPWMDutyandPeriod
  3949  0174                     i1l1926:
  3950                           
  3951                           ;Potentiometer.c: 72:         potSetCount = 0;
  3952  0174  0020               	movlb	0	; select bank0
  3953  0175  01D2               	clrf	_potSetCount
  3954  0176                     i1l341:
  3955  0176  0008               	return
  3956  0177                     __end_of_runPotScaling:
  3957                           
  3958                           	psect	text13
  3959  060F                     __ptext13:	
  3960 ;; *************** function _setPWMDutyandPeriod *****************
  3961 ;; Defined at:
  3962 ;;		line 49 in file "PWM.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3965 ;;  period          1    2[COMMON] unsigned char 
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2, status,0
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3977 ;;      Params:         3       0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0
  3979 ;;      Temps:          2       0       0       0       0       0
  3980 ;;      Totals:         5       0       0       0       0       0
  3981 ;;Total ram usage:        5 bytes
  3982 ;; Hardware stack levels used: 1
  3983 ;; This function calls:
  3984 ;;		Nothing
  3985 ;; This function is called by:
  3986 ;;		_Tick980Hz
  3987 ;;		_runPotScaling
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991  060F                     _setPWMDutyandPeriod:	
  3992                           ;psect for function _setPWMDutyandPeriod
  3993                           
  3994  060F                     i1l1610:	
  3995                           ;incstack = 0
  3996                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3997                           
  3998                           
  3999                           ;PWM.c: 50:     PR2 = period;
  4000  060F  0872               	movf	setPWMDutyandPeriod@period,w
  4001  0610  0020               	movlb	0	; select bank0
  4002  0611  009B               	movwf	27	;volatile
  4003  0612                     i1l1612:
  4004                           
  4005                           ;PWM.c: 51:     CCPR1L = dutyCycle >> 2;
  4006  0612  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  4007  0613  00F4               	movwf	??_setPWMDutyandPeriod+1
  4008  0614  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4009  0615  00F3               	movwf	??_setPWMDutyandPeriod
  4010  0616  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4011  0617  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4012  0618  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4013  0619  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4014  061A  0873               	movf	??_setPWMDutyandPeriod,w
  4015  061B  0025               	movlb	5	; select bank5
  4016  061C  0091               	movwf	17	;volatile
  4017  061D                     i1l1614:
  4018                           
  4019                           ;PWM.c: 52:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4020  061D  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4021  061E  3901               	andlw	1
  4022  061F  00F3               	movwf	??_setPWMDutyandPeriod
  4023  0620  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4024  0621  0813               	movf	19,w	;volatile
  4025  0622  0673               	xorwf	??_setPWMDutyandPeriod,w
  4026  0623  39EF               	andlw	-17
  4027  0624  0673               	xorwf	??_setPWMDutyandPeriod,w
  4028  0625  0093               	movwf	19	;volatile
  4029                           
  4030                           ;PWM.c: 53:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4031  0626  3002               	movlw	2
  4032  0627  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4033  0628  00F3               	movwf	??_setPWMDutyandPeriod
  4034  0629  3000               	movlw	0
  4035  062A  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4036  062B  00F4               	movwf	??_setPWMDutyandPeriod+1
  4037  062C  3000               	movlw	0
  4038  062D  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4039  062E  3002               	movlw	2
  4040  062F  1903               	skipnz
  4041  0630  0273               	subwf	??_setPWMDutyandPeriod,w
  4042  0631  1803               	skipnc
  4043  0632  2E34               	goto	u101_21
  4044  0633  2E37               	goto	u101_20
  4045  0634                     u101_21:
  4046  0634  0025               	movlb	5	; select bank5
  4047  0635  1693               	bsf	19,5	;volatile
  4048  0636  2E39               	goto	u102_24
  4049  0637                     u101_20:
  4050  0637  0025               	movlb	5	; select bank5
  4051  0638  1293               	bcf	19,5	;volatile
  4052  0639                     u102_24:
  4053  0639                     i1l147:
  4054  0639  0008               	return
  4055  063A                     __end_of_setPWMDutyandPeriod:
  4056                           
  4057                           	psect	text14
  4058  065D                     __ptext14:	
  4059 ;; *************** function ___wmul *****************
  4060 ;; Defined at:
  4061 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  multiplier      2    0[COMMON] unsigned int 
  4064 ;;  multiplicand    2    2[COMMON] unsigned int 
  4065 ;; Auto vars:     Size  Location     Type
  4066 ;;  product         2    4[COMMON] unsigned int 
  4067 ;; Return value:  Size  Location     Type
  4068 ;;                  2    0[COMMON] unsigned int 
  4069 ;; Registers used:
  4070 ;;		wreg, status,2, status,0
  4071 ;; Tracked objects:
  4072 ;;		On entry : 0/0
  4073 ;;		On exit  : 0/0
  4074 ;;		Unchanged: 0/0
  4075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4076 ;;      Params:         4       0       0       0       0       0
  4077 ;;      Locals:         2       0       0       0       0       0
  4078 ;;      Temps:          0       0       0       0       0       0
  4079 ;;      Totals:         6       0       0       0       0       0
  4080 ;;Total ram usage:        6 bytes
  4081 ;; Hardware stack levels used: 1
  4082 ;; This function calls:
  4083 ;;		Nothing
  4084 ;; This function is called by:
  4085 ;;		_runPotScaling
  4086 ;; This function uses a non-reentrant model
  4087 ;;
  4088                           
  4089  065D                     ___wmul:	
  4090                           ;psect for function ___wmul
  4091                           
  4092  065D                     i1l1784:	
  4093                           ;incstack = 0
  4094                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4095                           
  4096  065D  01F4               	clrf	___wmul@product
  4097  065E  01F5               	clrf	___wmul@product+1
  4098  065F                     i1l1786:
  4099  065F  1C70               	btfss	___wmul@multiplier,0
  4100  0660  2E62               	goto	u146_21
  4101  0661  2E63               	goto	u146_20
  4102  0662                     u146_21:
  4103  0662  2E67               	goto	i1l550
  4104  0663                     u146_20:
  4105  0663                     i1l1788:
  4106  0663  0872               	movf	___wmul@multiplicand,w
  4107  0664  07F4               	addwf	___wmul@product,f
  4108  0665  0873               	movf	___wmul@multiplicand+1,w
  4109  0666  3DF5               	addwfc	___wmul@product+1,f
  4110  0667                     i1l550:
  4111  0667  3001               	movlw	1
  4112  0668                     u147_25:
  4113  0668  35F2               	lslf	___wmul@multiplicand,f
  4114  0669  0DF3               	rlf	___wmul@multiplicand+1,f
  4115  066A  0B89               	decfsz	9,f
  4116  066B  2E68               	goto	u147_25
  4117  066C                     i1l1790:
  4118  066C  3001               	movlw	1
  4119  066D                     u148_25:
  4120  066D  36F1               	lsrf	___wmul@multiplier+1,f
  4121  066E  0CF0               	rrf	___wmul@multiplier,f
  4122  066F  0B89               	decfsz	9,f
  4123  0670  2E6D               	goto	u148_25
  4124  0671                     i1l1792:
  4125  0671  0870               	movf	___wmul@multiplier,w
  4126  0672  0471               	iorwf	___wmul@multiplier+1,w
  4127  0673  1D03               	btfss	3,2
  4128  0674  2E76               	goto	u149_21
  4129  0675  2E77               	goto	u149_20
  4130  0676                     u149_21:
  4131  0676  2E5F               	goto	i1l1786
  4132  0677                     u149_20:
  4133  0677                     i1l1794:
  4134  0677  0875               	movf	___wmul@product+1,w
  4135  0678  00F1               	movwf	?___wmul+1
  4136  0679  0874               	movf	___wmul@product,w
  4137  067A  00F0               	movwf	?___wmul
  4138  067B                     i1l552:
  4139  067B  0008               	return
  4140  067C                     __end_of___wmul:
  4141                           
  4142                           	psect	text15
  4143  05AF                     __ptext15:	
  4144 ;; *************** function ___lmul *****************
  4145 ;; Defined at:
  4146 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;  multiplier      4    0[COMMON] unsigned long 
  4149 ;;  multiplicand    4    4[COMMON] unsigned long 
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;  product         4    8[COMMON] unsigned long 
  4152 ;; Return value:  Size  Location     Type
  4153 ;;                  4    0[COMMON] unsigned long 
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4161 ;;      Params:         8       0       0       0       0       0
  4162 ;;      Locals:         4       0       0       0       0       0
  4163 ;;      Temps:          0       0       0       0       0       0
  4164 ;;      Totals:        12       0       0       0       0       0
  4165 ;;Total ram usage:       12 bytes
  4166 ;; Hardware stack levels used: 1
  4167 ;; This function calls:
  4168 ;;		Nothing
  4169 ;; This function is called by:
  4170 ;;		_runPotScaling
  4171 ;; This function uses a non-reentrant model
  4172 ;;
  4173                           
  4174  05AF                     ___lmul:	
  4175                           ;psect for function ___lmul
  4176                           
  4177  05AF                     i1l1798:	
  4178                           ;incstack = 0
  4179                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4180                           
  4181  05AF  3000               	movlw	0
  4182  05B0  00FB               	movwf	___lmul@product+3
  4183  05B1  3000               	movlw	0
  4184  05B2  00FA               	movwf	___lmul@product+2
  4185  05B3  3000               	movlw	0
  4186  05B4  00F9               	movwf	___lmul@product+1
  4187  05B5  3000               	movlw	0
  4188  05B6  00F8               	movwf	___lmul@product
  4189  05B7                     i1l1800:
  4190  05B7  1C70               	btfss	___lmul@multiplier,0
  4191  05B8  2DBA               	goto	u150_21
  4192  05B9  2DBB               	goto	u150_20
  4193  05BA                     u150_21:
  4194  05BA  2DC3               	goto	i1l1804
  4195  05BB                     u150_20:
  4196  05BB                     i1l1802:
  4197  05BB  0874               	movf	___lmul@multiplicand,w
  4198  05BC  07F8               	addwf	___lmul@product,f
  4199  05BD  0875               	movf	___lmul@multiplicand+1,w
  4200  05BE  3DF9               	addwfc	___lmul@product+1,f
  4201  05BF  0876               	movf	___lmul@multiplicand+2,w
  4202  05C0  3DFA               	addwfc	___lmul@product+2,f
  4203  05C1  0877               	movf	___lmul@multiplicand+3,w
  4204  05C2  3DFB               	addwfc	___lmul@product+3,f
  4205  05C3                     i1l1804:
  4206  05C3  3001               	movlw	1
  4207  05C4                     u151_25:
  4208  05C4  35F4               	lslf	___lmul@multiplicand,f
  4209  05C5  0DF5               	rlf	___lmul@multiplicand+1,f
  4210  05C6  0DF6               	rlf	___lmul@multiplicand+2,f
  4211  05C7  0DF7               	rlf	___lmul@multiplicand+3,f
  4212  05C8  0B89               	decfsz	9,f
  4213  05C9  2DC4               	goto	u151_25
  4214  05CA                     i1l1806:
  4215  05CA  3001               	movlw	1
  4216  05CB                     u152_25:
  4217  05CB  36F3               	lsrf	___lmul@multiplier+3,f
  4218  05CC  0CF2               	rrf	___lmul@multiplier+2,f
  4219  05CD  0CF1               	rrf	___lmul@multiplier+1,f
  4220  05CE  0CF0               	rrf	___lmul@multiplier,f
  4221  05CF  0B89               	decfsz	9,f
  4222  05D0  2DCB               	goto	u152_25
  4223  05D1  0873               	movf	___lmul@multiplier+3,w
  4224  05D2  0472               	iorwf	___lmul@multiplier+2,w
  4225  05D3  0471               	iorwf	___lmul@multiplier+1,w
  4226  05D4  0470               	iorwf	___lmul@multiplier,w
  4227  05D5  1D03               	skipz
  4228  05D6  2DD8               	goto	u153_21
  4229  05D7  2DD9               	goto	u153_20
  4230  05D8                     u153_21:
  4231  05D8  2DB7               	goto	i1l1800
  4232  05D9                     u153_20:
  4233  05D9                     i1l1808:
  4234  05D9  087B               	movf	___lmul@product+3,w
  4235  05DA  00F3               	movwf	?___lmul+3
  4236  05DB  087A               	movf	___lmul@product+2,w
  4237  05DC  00F2               	movwf	?___lmul+2
  4238  05DD  0879               	movf	___lmul@product+1,w
  4239  05DE  00F1               	movwf	?___lmul+1
  4240  05DF  0878               	movf	___lmul@product,w
  4241  05E0  00F0               	movwf	?___lmul
  4242  05E1                     i1l564:
  4243  05E1  0008               	return
  4244  05E2                     __end_of___lmul:
  4245                           
  4246                           	psect	text16
  4247  0459                     __ptext16:	
  4248 ;; *************** function ___lldiv *****************
  4249 ;; Defined at:
  4250 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  divisor         4    6[COMMON] unsigned long 
  4253 ;;  dividend        4   10[COMMON] unsigned long 
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;  quotient        4    1[BANK0 ] unsigned long 
  4256 ;;  counter         1    5[BANK0 ] unsigned char 
  4257 ;; Return value:  Size  Location     Type
  4258 ;;                  4    6[COMMON] unsigned long 
  4259 ;; Registers used:
  4260 ;;		wreg, status,2, status,0
  4261 ;; Tracked objects:
  4262 ;;		On entry : 0/0
  4263 ;;		On exit  : 0/0
  4264 ;;		Unchanged: 0/0
  4265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4266 ;;      Params:         8       0       0       0       0       0
  4267 ;;      Locals:         0       5       0       0       0       0
  4268 ;;      Temps:          0       1       0       0       0       0
  4269 ;;      Totals:         8       6       0       0       0       0
  4270 ;;Total ram usage:       14 bytes
  4271 ;; Hardware stack levels used: 1
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_runPotScaling
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279  0459                     ___lldiv:	
  4280                           ;psect for function ___lldiv
  4281                           
  4282  0459                     i1l1812:	
  4283                           ;incstack = 0
  4284                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4285                           
  4286  0459  3000               	movlw	0
  4287  045A  0020               	movlb	0	; select bank0
  4288  045B  00A4               	movwf	___lldiv@quotient+3
  4289  045C  3000               	movlw	0
  4290  045D  00A3               	movwf	___lldiv@quotient+2
  4291  045E  3000               	movlw	0
  4292  045F  00A2               	movwf	___lldiv@quotient+1
  4293  0460  3000               	movlw	0
  4294  0461  00A1               	movwf	___lldiv@quotient
  4295  0462  0879               	movf	___lldiv@divisor+3,w
  4296  0463  0478               	iorwf	___lldiv@divisor+2,w
  4297  0464  0477               	iorwf	___lldiv@divisor+1,w
  4298  0465  0476               	iorwf	___lldiv@divisor,w
  4299  0466  1903               	skipnz
  4300  0467  2C69               	goto	u154_21
  4301  0468  2C6A               	goto	u154_20
  4302  0469                     u154_21:
  4303  0469  2CAB               	goto	i1l1832
  4304  046A                     u154_20:
  4305  046A                     i1l1814:
  4306  046A  01A5               	clrf	___lldiv@counter
  4307  046B  0AA5               	incf	___lldiv@counter,f
  4308  046C  2C78               	goto	i1l1818
  4309  046D                     i1l1816:
  4310  046D  3001               	movlw	1
  4311  046E                     u155_25:
  4312  046E  35F6               	lslf	___lldiv@divisor,f
  4313  046F  0DF7               	rlf	___lldiv@divisor+1,f
  4314  0470  0DF8               	rlf	___lldiv@divisor+2,f
  4315  0471  0DF9               	rlf	___lldiv@divisor+3,f
  4316  0472  0B89               	decfsz	9,f
  4317  0473  2C6E               	goto	u155_25
  4318  0474  3001               	movlw	1
  4319  0475  00A0               	movwf	??___lldiv
  4320  0476  0820               	movf	??___lldiv,w
  4321  0477  07A5               	addwf	___lldiv@counter,f
  4322  0478                     i1l1818:
  4323  0478  1FF9               	btfss	___lldiv@divisor+3,7
  4324  0479  2C7B               	goto	u156_21
  4325  047A  2C7C               	goto	u156_20
  4326  047B                     u156_21:
  4327  047B  2C6D               	goto	i1l1816
  4328  047C                     u156_20:
  4329  047C                     i1l1820:
  4330  047C  3001               	movlw	1
  4331  047D                     u157_25:
  4332  047D  35A1               	lslf	___lldiv@quotient,f
  4333  047E  0DA2               	rlf	___lldiv@quotient+1,f
  4334  047F  0DA3               	rlf	___lldiv@quotient+2,f
  4335  0480  0DA4               	rlf	___lldiv@quotient+3,f
  4336  0481  0B89               	decfsz	9,f
  4337  0482  2C7D               	goto	u157_25
  4338  0483                     i1l1822:
  4339  0483  0879               	movf	___lldiv@divisor+3,w
  4340  0484  027D               	subwf	___lldiv@dividend+3,w
  4341  0485  1D03               	skipz
  4342  0486  2C91               	goto	u158_25
  4343  0487  0878               	movf	___lldiv@divisor+2,w
  4344  0488  027C               	subwf	___lldiv@dividend+2,w
  4345  0489  1D03               	skipz
  4346  048A  2C91               	goto	u158_25
  4347  048B  0877               	movf	___lldiv@divisor+1,w
  4348  048C  027B               	subwf	___lldiv@dividend+1,w
  4349  048D  1D03               	skipz
  4350  048E  2C91               	goto	u158_25
  4351  048F  0876               	movf	___lldiv@divisor,w
  4352  0490  027A               	subwf	___lldiv@dividend,w
  4353  0491                     u158_25:
  4354  0491  1C03               	skipc
  4355  0492  2C94               	goto	u158_21
  4356  0493  2C95               	goto	u158_20
  4357  0494                     u158_21:
  4358  0494  2C9E               	goto	i1l1828
  4359  0495                     u158_20:
  4360  0495                     i1l1824:
  4361  0495  0876               	movf	___lldiv@divisor,w
  4362  0496  02FA               	subwf	___lldiv@dividend,f
  4363  0497  0877               	movf	___lldiv@divisor+1,w
  4364  0498  3BFB               	subwfb	___lldiv@dividend+1,f
  4365  0499  0878               	movf	___lldiv@divisor+2,w
  4366  049A  3BFC               	subwfb	___lldiv@dividend+2,f
  4367  049B  0879               	movf	___lldiv@divisor+3,w
  4368  049C  3BFD               	subwfb	___lldiv@dividend+3,f
  4369  049D                     i1l1826:
  4370  049D  1421               	bsf	___lldiv@quotient,0
  4371  049E                     i1l1828:
  4372  049E  3001               	movlw	1
  4373  049F                     u159_25:
  4374  049F  36F9               	lsrf	___lldiv@divisor+3,f
  4375  04A0  0CF8               	rrf	___lldiv@divisor+2,f
  4376  04A1  0CF7               	rrf	___lldiv@divisor+1,f
  4377  04A2  0CF6               	rrf	___lldiv@divisor,f
  4378  04A3  0B89               	decfsz	9,f
  4379  04A4  2C9F               	goto	u159_25
  4380  04A5                     i1l1830:
  4381  04A5  3001               	movlw	1
  4382  04A6  02A5               	subwf	___lldiv@counter,f
  4383  04A7  1D03               	btfss	3,2
  4384  04A8  2CAA               	goto	u160_21
  4385  04A9  2CAB               	goto	u160_20
  4386  04AA                     u160_21:
  4387  04AA  2C7C               	goto	i1l1820
  4388  04AB                     u160_20:
  4389  04AB                     i1l1832:
  4390  04AB  0824               	movf	___lldiv@quotient+3,w
  4391  04AC  00F9               	movwf	?___lldiv+3
  4392  04AD  0823               	movf	___lldiv@quotient+2,w
  4393  04AE  00F8               	movwf	?___lldiv+2
  4394  04AF  0822               	movf	___lldiv@quotient+1,w
  4395  04B0  00F7               	movwf	?___lldiv+1
  4396  04B1  0821               	movf	___lldiv@quotient,w
  4397  04B2  00F6               	movwf	?___lldiv
  4398  04B3                     i1l586:
  4399  04B3  0008               	return
  4400  04B4                     __end_of___lldiv:
  4401                           
  4402                           	psect	text17
  4403  06D7                     __ptext17:	
  4404 ;; *************** function _readILCurrentADCRaw *****************
  4405 ;; Defined at:
  4406 ;;		line 108 in file "ADC.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;		None
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;		None
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  2    0[COMMON] unsigned short 
  4413 ;; Registers used:
  4414 ;;		wreg
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4420 ;;      Params:         2       0       0       0       0       0
  4421 ;;      Locals:         0       0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0
  4423 ;;      Totals:         2       0       0       0       0       0
  4424 ;;Total ram usage:        2 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; This function calls:
  4427 ;;		Nothing
  4428 ;; This function is called by:
  4429 ;;		_Tick980Hz
  4430 ;; This function uses a non-reentrant model
  4431 ;;
  4432                           
  4433  06D7                     _readILCurrentADCRaw:	
  4434                           ;psect for function _readILCurrentADCRaw
  4435                           
  4436  06D7                     i1l1928:	
  4437                           ;incstack = 0
  4438                           ; Regs used in _readILCurrentADCRaw: [wreg]
  4439                           
  4440                           
  4441                           ;ADC.c: 110:     if(~ADCON0bits.GO_nDONE){
  4442  06D7  0021               	movlb	1	; select bank1
  4443  06D8  081D               	movf	29,w	;volatile
  4444  06D9                     i1l1930:
  4445                           
  4446                           ;ADC.c: 111:         ADCON0bits.GO_nDONE = 1;
  4447  06D9  149D               	bsf	29,1	;volatile
  4448  06DA                     i1l227:	
  4449                           ;ADC.c: 112:         while(ADCON0bits.GO_nDONE);
  4450                           
  4451  06DA  189D               	btfsc	29,1	;volatile
  4452  06DB  2EDD               	goto	u178_21
  4453  06DC  2EDE               	goto	u178_20
  4454  06DD                     u178_21:
  4455  06DD  2EDA               	goto	i1l227
  4456  06DE                     u178_20:
  4457  06DE                     i1l1932:
  4458                           
  4459                           ;ADC.c: 113:         return ((ADRESH<<8)+ADRESL);
  4460  06DE  081C               	movf	28,w	;volatile
  4461  06DF  00F1               	movwf	?_readILCurrentADCRaw+1
  4462  06E0  081B               	movf	27,w	;volatile
  4463  06E1  00F0               	movwf	?_readILCurrentADCRaw
  4464  06E2                     i1l230:
  4465  06E2  0008               	return
  4466  06E3                     __end_of_readILCurrentADCRaw:
  4467                           
  4468                           	psect	text18
  4469  04B4                     __ptext18:	
  4470 ;; *************** function _readFilteredFreqPot *****************
  4471 ;; Defined at:
  4472 ;;		line 39 in file "Potentiometer.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;  i               1    8[BANK0 ] unsigned char 
  4477 ;;  i               1    9[BANK0 ] unsigned char 
  4478 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4479 ;; Return value:  Size  Location     Type
  4480 ;;                  2   11[COMMON] unsigned short 
  4481 ;; Registers used:
  4482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4483 ;; Tracked objects:
  4484 ;;		On entry : 0/0
  4485 ;;		On exit  : 0/0
  4486 ;;		Unchanged: 0/0
  4487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4488 ;;      Params:         2       0       0       0       0       0
  4489 ;;      Locals:         0       6       0       0       0       0
  4490 ;;      Temps:          0       4       0       0       0       0
  4491 ;;      Totals:         2      10       0       0       0       0
  4492 ;;Total ram usage:       12 bytes
  4493 ;; Hardware stack levels used: 1
  4494 ;; Hardware stack levels required when called: 1
  4495 ;; This function calls:
  4496 ;;		_readADCRaw
  4497 ;; This function is called by:
  4498 ;;		_Tick980Hz
  4499 ;; This function uses a non-reentrant model
  4500 ;;
  4501                           
  4502  04B4                     _readFilteredFreqPot:	
  4503                           ;psect for function _readFilteredFreqPot
  4504                           
  4505  04B4                     i1l1882:	
  4506                           ;incstack = 0
  4507                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4508                           
  4509                           
  4510                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4511  04B4  0020               	movlb	0	; select bank0
  4512  04B5  01A9               	clrf	readFilteredFreqPot@i
  4513  04B6                     i1l1888:
  4514  04B6  3529               	lslf	readFilteredFreqPot@i,w
  4515  04B7  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4516  04B8  0086               	movwf	6
  4517  04B9  3001               	movlw	1	; select bank2/3
  4518  04BA  0087               	movwf	7
  4519  04BB  3529               	lslf	readFilteredFreqPot@i,w
  4520  04BC  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4521  04BD  0084               	movwf	4
  4522  04BE  3001               	movlw	1	; select bank2/3
  4523  04BF  0085               	movwf	5
  4524  04C0  3F40               	moviw [0]fsr1
  4525  04C1  3F80               	movwi [0]fsr0
  4526  04C2  3F41               	moviw [1]fsr1
  4527  04C3  3F81               	movwi [1]fsr0
  4528  04C4                     i1l1890:
  4529  04C4  3001               	movlw	1
  4530  04C5  00A0               	movwf	??_readFilteredFreqPot
  4531  04C6  0820               	movf	??_readFilteredFreqPot,w
  4532  04C7  07A9               	addwf	readFilteredFreqPot@i,f
  4533  04C8                     i1l1892:
  4534  04C8  300F               	movlw	15
  4535  04C9  0229               	subwf	readFilteredFreqPot@i,w
  4536  04CA  1C03               	skipc
  4537  04CB  2CCD               	goto	u170_21
  4538  04CC  2CCE               	goto	u170_20
  4539  04CD                     u170_21:
  4540  04CD  2CB6               	goto	i1l1888
  4541  04CE                     u170_20:
  4542  04CE                     i1l1894:
  4543                           
  4544                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4545  04CE  300A               	movlw	10
  4546  04CF  3183  2338  3184   	fcall	_readADCRaw
  4547  04D2  0871               	movf	?_readADCRaw+1,w
  4548  04D3  0022               	movlb	2	; select bank2
  4549  04D4  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4550  04D5  0870               	movf	?_readADCRaw,w
  4551  04D6  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4552  04D7                     i1l1896:
  4553                           
  4554                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4555  04D7  3000               	movlw	0
  4556  04D8  0020               	movlb	0	; select bank0
  4557  04D9  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4558  04DA  3000               	movlw	0
  4559  04DB  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4560  04DC  3000               	movlw	0
  4561  04DD  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4562  04DE  3000               	movlw	0
  4563  04DF  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4564  04E0                     i1l1898:
  4565                           
  4566                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4567  04E0  01A8               	clrf	readFilteredFreqPot@i_706
  4568  04E1                     i1l1904:
  4569  04E1  3528               	lslf	readFilteredFreqPot@i_706,w
  4570  04E2  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4571  04E3  0086               	movwf	6
  4572  04E4  3001               	movlw	1	; select bank2/3
  4573  04E5  0087               	movwf	7
  4574  04E6  3F40               	moviw [0]fsr1
  4575  04E7  00A0               	movwf	??_readFilteredFreqPot
  4576  04E8  3F41               	moviw [1]fsr1
  4577  04E9  00A1               	movwf	??_readFilteredFreqPot+1
  4578  04EA  0820               	movf	??_readFilteredFreqPot,w
  4579  04EB  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4580  04EC  0821               	movf	??_readFilteredFreqPot+1,w
  4581  04ED  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4582  04EE  3000               	movlw	0
  4583  04EF  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4584  04F0  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4585  04F1                     i1l1906:
  4586  04F1  3001               	movlw	1
  4587  04F2  00A0               	movwf	??_readFilteredFreqPot
  4588  04F3  0820               	movf	??_readFilteredFreqPot,w
  4589  04F4  07A8               	addwf	readFilteredFreqPot@i_706,f
  4590  04F5                     i1l1908:
  4591  04F5  3010               	movlw	16
  4592  04F6  0228               	subwf	readFilteredFreqPot@i_706,w
  4593  04F7  1C03               	skipc
  4594  04F8  2CFA               	goto	u171_21
  4595  04F9  2CFB               	goto	u171_20
  4596  04FA                     u171_21:
  4597  04FA  2CE1               	goto	i1l1904
  4598  04FB                     u171_20:
  4599  04FB                     i1l1910:
  4600                           
  4601                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4602  04FB  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4603  04FC  00A0               	movwf	??_readFilteredFreqPot
  4604  04FD  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4605  04FE  00A1               	movwf	??_readFilteredFreqPot+1
  4606  04FF  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4607  0500  00A2               	movwf	??_readFilteredFreqPot+2
  4608  0501  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4609  0502  00A3               	movwf	??_readFilteredFreqPot+3
  4610  0503  3004               	movlw	4
  4611  0504                     u172_25:
  4612  0504  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4613  0505  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4614  0506  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4615  0507  0CA0               	rrf	??_readFilteredFreqPot,f
  4616  0508                     u172_20:
  4617  0508  0B89               	decfsz	9,f
  4618  0509  2D04               	goto	u172_25
  4619  050A  0821               	movf	??_readFilteredFreqPot+1,w
  4620  050B  00FC               	movwf	?_readFilteredFreqPot+1
  4621  050C  0820               	movf	??_readFilteredFreqPot,w
  4622  050D  00FB               	movwf	?_readFilteredFreqPot
  4623  050E                     i1l335:
  4624  050E  0008               	return
  4625  050F                     __end_of_readFilteredFreqPot:
  4626                           
  4627                           	psect	text19
  4628  050F                     __ptext19:	
  4629 ;; *************** function _readFilteredDutyPot *****************
  4630 ;; Defined at:
  4631 ;;		line 25 in file "Potentiometer.c"
  4632 ;; Parameters:    Size  Location     Type
  4633 ;;		None
  4634 ;; Auto vars:     Size  Location     Type
  4635 ;;  i               1    8[BANK0 ] unsigned char 
  4636 ;;  i               1    9[BANK0 ] unsigned char 
  4637 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2   11[COMMON] unsigned short 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4647 ;;      Params:         2       0       0       0       0       0
  4648 ;;      Locals:         0       6       0       0       0       0
  4649 ;;      Temps:          0       4       0       0       0       0
  4650 ;;      Totals:         2      10       0       0       0       0
  4651 ;;Total ram usage:       12 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 1
  4654 ;; This function calls:
  4655 ;;		_readADCRaw
  4656 ;; This function is called by:
  4657 ;;		_Tick980Hz
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661  050F                     _readFilteredDutyPot:	
  4662                           ;psect for function _readFilteredDutyPot
  4663                           
  4664  050F                     i1l1850:	
  4665                           ;incstack = 0
  4666                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4667                           
  4668                           
  4669                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4670  050F  0020               	movlb	0	; select bank0
  4671  0510  01A9               	clrf	readFilteredDutyPot@i
  4672  0511                     i1l1856:
  4673  0511  3529               	lslf	readFilteredDutyPot@i,w
  4674  0512  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4675  0513  0086               	movwf	6
  4676  0514  3001               	movlw	1	; select bank2/3
  4677  0515  0087               	movwf	7
  4678  0516  3529               	lslf	readFilteredDutyPot@i,w
  4679  0517  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4680  0518  0084               	movwf	4
  4681  0519  3001               	movlw	1	; select bank2/3
  4682  051A  0085               	movwf	5
  4683  051B  3F40               	moviw [0]fsr1
  4684  051C  3F80               	movwi [0]fsr0
  4685  051D  3F41               	moviw [1]fsr1
  4686  051E  3F81               	movwi [1]fsr0
  4687  051F                     i1l1858:
  4688  051F  3001               	movlw	1
  4689  0520  00A0               	movwf	??_readFilteredDutyPot
  4690  0521  0820               	movf	??_readFilteredDutyPot,w
  4691  0522  07A9               	addwf	readFilteredDutyPot@i,f
  4692  0523                     i1l1860:
  4693  0523  300F               	movlw	15
  4694  0524  0229               	subwf	readFilteredDutyPot@i,w
  4695  0525  1C03               	skipc
  4696  0526  2D28               	goto	u167_21
  4697  0527  2D29               	goto	u167_20
  4698  0528                     u167_21:
  4699  0528  2D11               	goto	i1l1856
  4700  0529                     u167_20:
  4701  0529                     i1l1862:
  4702                           
  4703                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4704  0529  3009               	movlw	9
  4705  052A  3183  2338  3185   	fcall	_readADCRaw
  4706  052D  0871               	movf	?_readADCRaw+1,w
  4707  052E  0022               	movlb	2	; select bank2
  4708  052F  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4709  0530  0870               	movf	?_readADCRaw,w
  4710  0531  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4711  0532                     i1l1864:
  4712                           
  4713                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4714  0532  3000               	movlw	0
  4715  0533  0020               	movlb	0	; select bank0
  4716  0534  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4717  0535  3000               	movlw	0
  4718  0536  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4719  0537  3000               	movlw	0
  4720  0538  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4721  0539  3000               	movlw	0
  4722  053A  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4723  053B                     i1l1866:
  4724                           
  4725                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4726  053B  01A8               	clrf	readFilteredDutyPot@i_702
  4727  053C                     i1l1872:
  4728  053C  3528               	lslf	readFilteredDutyPot@i_702,w
  4729  053D  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4730  053E  0086               	movwf	6
  4731  053F  3001               	movlw	1	; select bank2/3
  4732  0540  0087               	movwf	7
  4733  0541  3F40               	moviw [0]fsr1
  4734  0542  00A0               	movwf	??_readFilteredDutyPot
  4735  0543  3F41               	moviw [1]fsr1
  4736  0544  00A1               	movwf	??_readFilteredDutyPot+1
  4737  0545  0820               	movf	??_readFilteredDutyPot,w
  4738  0546  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4739  0547  0821               	movf	??_readFilteredDutyPot+1,w
  4740  0548  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4741  0549  3000               	movlw	0
  4742  054A  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4743  054B  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4744  054C                     i1l1874:
  4745  054C  3001               	movlw	1
  4746  054D  00A0               	movwf	??_readFilteredDutyPot
  4747  054E  0820               	movf	??_readFilteredDutyPot,w
  4748  054F  07A8               	addwf	readFilteredDutyPot@i_702,f
  4749  0550                     i1l1876:
  4750  0550  3010               	movlw	16
  4751  0551  0228               	subwf	readFilteredDutyPot@i_702,w
  4752  0552  1C03               	skipc
  4753  0553  2D55               	goto	u168_21
  4754  0554  2D56               	goto	u168_20
  4755  0555                     u168_21:
  4756  0555  2D3C               	goto	i1l1872
  4757  0556                     u168_20:
  4758  0556                     i1l1878:
  4759                           
  4760                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4761  0556  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4762  0557  00A0               	movwf	??_readFilteredDutyPot
  4763  0558  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4764  0559  00A1               	movwf	??_readFilteredDutyPot+1
  4765  055A  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4766  055B  00A2               	movwf	??_readFilteredDutyPot+2
  4767  055C  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4768  055D  00A3               	movwf	??_readFilteredDutyPot+3
  4769  055E  3004               	movlw	4
  4770  055F                     u169_25:
  4771  055F  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4772  0560  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4773  0561  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4774  0562  0CA0               	rrf	??_readFilteredDutyPot,f
  4775  0563                     u169_20:
  4776  0563  0B89               	decfsz	9,f
  4777  0564  2D5F               	goto	u169_25
  4778  0565  0821               	movf	??_readFilteredDutyPot+1,w
  4779  0566  00FC               	movwf	?_readFilteredDutyPot+1
  4780  0567  0820               	movf	??_readFilteredDutyPot,w
  4781  0568  00FB               	movwf	?_readFilteredDutyPot
  4782  0569                     i1l328:
  4783  0569  0008               	return
  4784  056A                     __end_of_readFilteredDutyPot:
  4785                           
  4786                           	psect	text20
  4787  0338                     __ptext20:	
  4788 ;; *************** function _readADCRaw *****************
  4789 ;; Defined at:
  4790 ;;		line 71 in file "ADC.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  gpioNumber      1    wreg     const enum E2798
  4793 ;; Auto vars:     Size  Location     Type
  4794 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4795 ;;  i               1    9[COMMON] unsigned char 
  4796 ;;  i               1    8[COMMON] unsigned char 
  4797 ;;  returnValue     2    4[COMMON] unsigned int 
  4798 ;;  gpioValid       1    7[COMMON] unsigned char 
  4799 ;;  channel         1    6[COMMON] unsigned char 
  4800 ;; Return value:  Size  Location     Type
  4801 ;;                  2    0[COMMON] unsigned short 
  4802 ;; Registers used:
  4803 ;;		wreg, status,2, status,0
  4804 ;; Tracked objects:
  4805 ;;		On entry : 0/0
  4806 ;;		On exit  : 0/0
  4807 ;;		Unchanged: 0/0
  4808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4809 ;;      Params:         2       0       0       0       0       0
  4810 ;;      Locals:         7       0       0       0       0       0
  4811 ;;      Temps:          2       0       0       0       0       0
  4812 ;;      Totals:        11       0       0       0       0       0
  4813 ;;Total ram usage:       11 bytes
  4814 ;; Hardware stack levels used: 1
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_readFilteredDutyPot
  4819 ;;		_readFilteredFreqPot
  4820 ;;		_readFilteredIDS
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           
  4824  0338                     _readADCRaw:	
  4825                           ;psect for function _readADCRaw
  4826                           
  4827                           
  4828                           ;incstack = 0
  4829                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4830                           ;readADCRaw@gpioNumber stored from wreg
  4831  0338  00FA               	movwf	readADCRaw@gpioNumber
  4832  0339                     i1l1700:
  4833                           
  4834                           ;ADC.c: 72:     uint8_t channel = 0;
  4835  0339  01F6               	clrf	readADCRaw@channel
  4836                           
  4837                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4838  033A  01F7               	clrf	readADCRaw@gpioValid
  4839  033B                     i1l1702:
  4840                           
  4841                           ;ADC.c: 75:     if(gpioNumber < 4){
  4842  033B  3004               	movlw	4
  4843  033C  027A               	subwf	readADCRaw@gpioNumber,w
  4844  033D  1803               	skipnc
  4845  033E  2B40               	goto	u133_21
  4846  033F  2B41               	goto	u133_20
  4847  0340                     u133_21:
  4848  0340  2B47               	goto	i1l212
  4849  0341                     u133_20:
  4850  0341                     i1l1704:
  4851                           
  4852                           ;ADC.c: 76:         channel = gpioNumber;
  4853  0341  087A               	movf	readADCRaw@gpioNumber,w
  4854  0342  00F2               	movwf	??_readADCRaw
  4855  0343  0872               	movf	??_readADCRaw,w
  4856  0344  00F6               	movwf	readADCRaw@channel
  4857  0345                     i1l1706:
  4858                           
  4859                           ;ADC.c: 77:         gpioValid = 1;
  4860  0345  01F7               	clrf	readADCRaw@gpioValid
  4861  0346  0AF7               	incf	readADCRaw@gpioValid,f
  4862  0347                     i1l212:	
  4863                           ;ADC.c: 78:     }
  4864                           
  4865                           
  4866                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4867  0347  3009               	movlw	9
  4868  0348  027A               	subwf	readADCRaw@gpioNumber,w
  4869  0349  1C03               	skipc
  4870  034A  2B4C               	goto	u134_21
  4871  034B  2B4D               	goto	u134_20
  4872  034C                     u134_21:
  4873  034C  2B5A               	goto	i1l213
  4874  034D                     u134_20:
  4875  034D                     i1l1708:
  4876  034D  3010               	movlw	16
  4877  034E  027A               	subwf	readADCRaw@gpioNumber,w
  4878  034F  1803               	skipnc
  4879  0350  2B52               	goto	u135_21
  4880  0351  2B53               	goto	u135_20
  4881  0352                     u135_21:
  4882  0352  2B5A               	goto	i1l213
  4883  0353                     u135_20:
  4884  0353                     i1l1710:
  4885                           
  4886                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4887  0353  087A               	movf	readADCRaw@gpioNumber,w
  4888  0354  3C14               	sublw	20
  4889  0355  00F2               	movwf	??_readADCRaw
  4890  0356  0872               	movf	??_readADCRaw,w
  4891  0357  00F6               	movwf	readADCRaw@channel
  4892  0358                     i1l1712:
  4893                           
  4894                           ;ADC.c: 81:         gpioValid = 1;
  4895  0358  01F7               	clrf	readADCRaw@gpioValid
  4896  0359  0AF7               	incf	readADCRaw@gpioValid,f
  4897  035A                     i1l213:	
  4898                           ;ADC.c: 82:     }
  4899                           
  4900                           
  4901                           ;ADC.c: 83:     if(gpioValid){
  4902  035A  0877               	movf	readADCRaw@gpioValid,w
  4903  035B  1903               	btfsc	3,2
  4904  035C  2B5E               	goto	u136_21
  4905  035D  2B5F               	goto	u136_20
  4906  035E                     u136_21:
  4907  035E  2B99               	goto	i1l223
  4908  035F                     u136_20:
  4909  035F                     i1l1714:
  4910                           
  4911                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4912  035F  0021               	movlb	1	; select bank1
  4913  0360  081D               	movf	29,w	;volatile
  4914  0361                     i1l1716:
  4915                           
  4916                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4917  0361  3083               	movlw	131
  4918  0362  00F2               	movwf	??_readADCRaw
  4919  0363  0872               	movf	??_readADCRaw,w
  4920  0364  059D               	andwf	29,f	;volatile
  4921  0365                     i1l1718:
  4922                           
  4923                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4924  0365  0876               	movf	readADCRaw@channel,w	;volatile
  4925  0366  00F2               	movwf	??_readADCRaw
  4926  0367  3001               	movlw	1
  4927  0368                     u137_25:
  4928  0368  35F2               	lslf	??_readADCRaw,f
  4929  0369  3EFF               	addlw	-1
  4930  036A  1D03               	skipz
  4931  036B  2B68               	goto	u137_25
  4932  036C  3572               	lslf	??_readADCRaw,w
  4933  036D  00F3               	movwf	??_readADCRaw+1
  4934  036E  0873               	movf	??_readADCRaw+1,w
  4935  036F  049D               	iorwf	29,f	;volatile
  4936  0370                     i1l1720:
  4937                           
  4938                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4939  0370  01F8               	clrf	readADCRaw@i
  4940  0371                     i1l1726:
  4941  0371  3001               	movlw	1
  4942  0372  00F2               	movwf	??_readADCRaw
  4943  0373  0872               	movf	??_readADCRaw,w
  4944  0374  07F8               	addwf	readADCRaw@i,f
  4945  0375                     i1l1728:
  4946  0375  3008               	movlw	8
  4947  0376  0278               	subwf	readADCRaw@i,w
  4948  0377  1C03               	skipc
  4949  0378  2B7A               	goto	u138_21
  4950  0379  2B7B               	goto	u138_20
  4951  037A                     u138_21:
  4952  037A  2B71               	goto	i1l1726
  4953  037B                     u138_20:
  4954  037B                     i1l217:
  4955                           
  4956                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4957  037B  0021               	movlb	1	; select bank1
  4958  037C  149D               	bsf	29,1	;volatile
  4959  037D                     i1l218:	
  4960                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4961                           
  4962  037D  189D               	btfsc	29,1	;volatile
  4963  037E  2B80               	goto	u139_21
  4964  037F  2B81               	goto	u139_20
  4965  0380                     u139_21:
  4966  0380  2B7D               	goto	i1l218
  4967  0381                     u139_20:
  4968  0381                     i1l1730:
  4969                           
  4970                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4971  0381  081C               	movf	28,w	;volatile
  4972  0382  00F5               	movwf	readADCRaw@returnValue+1
  4973  0383  081B               	movf	27,w	;volatile
  4974  0384  00F4               	movwf	readADCRaw@returnValue
  4975  0385                     i1l1732:
  4976                           
  4977                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4978  0385  3083               	movlw	131
  4979  0386  00F2               	movwf	??_readADCRaw
  4980  0387  0872               	movf	??_readADCRaw,w
  4981  0388  059D               	andwf	29,f	;volatile
  4982  0389                     i1l1734:
  4983                           
  4984                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4985  0389  159D               	bsf	29,3	;volatile
  4986  038A                     i1l1736:
  4987                           
  4988                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4989  038A  01F9               	clrf	readADCRaw@i_616
  4990  038B                     i1l1742:
  4991  038B  3001               	movlw	1
  4992  038C  00F2               	movwf	??_readADCRaw
  4993  038D  0872               	movf	??_readADCRaw,w
  4994  038E  07F9               	addwf	readADCRaw@i_616,f
  4995  038F                     i1l1744:
  4996  038F  3008               	movlw	8
  4997  0390  0279               	subwf	readADCRaw@i_616,w
  4998  0391  1C03               	skipc
  4999  0392  2B94               	goto	u140_21
  5000  0393  2B95               	goto	u140_20
  5001  0394                     u140_21:
  5002  0394  2B8B               	goto	i1l1742
  5003  0395                     u140_20:
  5004  0395                     i1l1746:
  5005                           
  5006                           ;ADC.c: 97:             return returnValue;
  5007  0395  0875               	movf	readADCRaw@returnValue+1,w
  5008  0396  00F1               	movwf	?_readADCRaw+1
  5009  0397  0874               	movf	readADCRaw@returnValue,w
  5010  0398  00F0               	movwf	?_readADCRaw
  5011  0399                     i1l223:
  5012  0399  0008               	return
  5013  039A                     __end_of_readADCRaw:
  5014                           
  5015                           	psect	text21
  5016  05E2                     __ptext21:	
  5017 ;; *************** function _currentTripRead *****************
  5018 ;; Defined at:
  5019 ;;		line 30 in file "CurrentSensor.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;		None
  5022 ;; Auto vars:     Size  Location     Type
  5023 ;;		None
  5024 ;; Return value:  Size  Location     Type
  5025 ;;                  1    wreg      _Bool 
  5026 ;; Registers used:
  5027 ;;		wreg, status,2, status,0, pclath, cstack
  5028 ;; Tracked objects:
  5029 ;;		On entry : 0/0
  5030 ;;		On exit  : 0/0
  5031 ;;		Unchanged: 0/0
  5032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5033 ;;      Params:         0       0       0       0       0       0
  5034 ;;      Locals:         1       0       0       0       0       0
  5035 ;;      Temps:          1       0       0       0       0       0
  5036 ;;      Totals:         2       0       0       0       0       0
  5037 ;;Total ram usage:        2 bytes
  5038 ;; Hardware stack levels used: 1
  5039 ;; Hardware stack levels required when called: 1
  5040 ;; This function calls:
  5041 ;;		_readGPIO
  5042 ;; This function is called by:
  5043 ;;		_Tick980Hz
  5044 ;; This function uses a non-reentrant model
  5045 ;;
  5046                           
  5047  05E2                     _currentTripRead:	
  5048                           ;psect for function _currentTripRead
  5049                           
  5050  05E2                     i1l1836:	
  5051                           ;incstack = 0
  5052                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  5053                           
  5054                           
  5055                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  5056  05E2  3001               	movlw	1
  5057  05E3  3185  256A  3185   	fcall	_readGPIO
  5058  05E6  3A01               	xorlw	1
  5059  05E7  1D03               	skipz
  5060  05E8  2DEA               	goto	u161_21
  5061  05E9  2DEC               	goto	u161_20
  5062  05EA                     u161_21:
  5063  05EA  3001               	movlw	1
  5064  05EB  2DED               	goto	u162_20
  5065  05EC                     u161_20:
  5066  05EC  3000               	movlw	0
  5067  05ED                     u162_20:
  5068  05ED  00F9               	movwf	??_currentTripRead
  5069  05EE  0879               	movf	??_currentTripRead,w
  5070  05EF  0020               	movlb	0	; select bank0
  5071  05F0  00D4               	movwf	_tripIDS
  5072                           
  5073                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  5074  05F1  3003               	movlw	3
  5075  05F2  3185  256A  3185   	fcall	_readGPIO
  5076  05F5  3A01               	xorlw	1
  5077  05F6  1D03               	skipz
  5078  05F7  2DF9               	goto	u163_21
  5079  05F8  2DFB               	goto	u163_20
  5080  05F9                     u163_21:
  5081  05F9  3001               	movlw	1
  5082  05FA  2DFC               	goto	u164_20
  5083  05FB                     u163_20:
  5084  05FB  3000               	movlw	0
  5085  05FC                     u164_20:
  5086  05FC  00F9               	movwf	??_currentTripRead
  5087  05FD  0879               	movf	??_currentTripRead,w
  5088  05FE  0020               	movlb	0	; select bank0
  5089  05FF  00D3               	movwf	_tripIL
  5090  0600                     i1l1838:
  5091                           
  5092                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  5093  0600  01FA               	clrf	_currentTripRead$747
  5094  0601  0AFA               	incf	_currentTripRead$747,f
  5095  0602                     i1l1840:
  5096  0602  0853               	movf	_tripIL,w
  5097  0603  1D03               	btfss	3,2
  5098  0604  2E06               	goto	u165_21
  5099  0605  2E07               	goto	u165_20
  5100  0606                     u165_21:
  5101  0606  2E0D               	goto	i1l1846
  5102  0607                     u165_20:
  5103  0607                     i1l1842:
  5104  0607  0854               	movf	_tripIDS,w
  5105  0608  1D03               	btfss	3,2
  5106  0609  2E0B               	goto	u166_21
  5107  060A  2E0C               	goto	u166_20
  5108  060B                     u166_21:
  5109  060B  2E0D               	goto	i1l1846
  5110  060C                     u166_20:
  5111  060C                     i1l1844:
  5112  060C  01FA               	clrf	_currentTripRead$747
  5113  060D                     i1l1846:
  5114  060D  087A               	movf	_currentTripRead$747,w
  5115  060E                     i1l383:
  5116  060E  0008               	return
  5117  060F                     __end_of_currentTripRead:
  5118                           
  5119                           	psect	text22
  5120  056A                     __ptext22:	
  5121 ;; *************** function _readGPIO *****************
  5122 ;; Defined at:
  5123 ;;		line 79 in file "GPIO.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;  gpioNumber      1    wreg     const enum E2798
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;  gpioNumber      1    8[COMMON] const enum E2798
  5128 ;;  returnValueB    1    5[COMMON] unsigned char 
  5129 ;;  readB           1    4[COMMON] unsigned char 
  5130 ;;  returnValueA    1    3[COMMON] unsigned char 
  5131 ;;  readA           1    2[COMMON] unsigned char 
  5132 ;;  portType        1    7[COMMON] unsigned char 
  5133 ;;  portNumber      1    6[COMMON] unsigned char 
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      _Bool 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5143 ;;      Params:         0       0       0       0       0       0
  5144 ;;      Locals:         7       0       0       0       0       0
  5145 ;;      Temps:          2       0       0       0       0       0
  5146 ;;      Totals:         9       0       0       0       0       0
  5147 ;;Total ram usage:        9 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_currentTripRead
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156  056A                     _readGPIO:	
  5157                           ;psect for function _readGPIO
  5158                           
  5159                           
  5160                           ;incstack = 0
  5161                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5162                           ;readGPIO@gpioNumber stored from wreg
  5163  056A  00F8               	movwf	readGPIO@gpioNumber
  5164  056B                     i1l1750:
  5165                           
  5166                           ;GPIO.c: 81:     uint8_t portType = 0;
  5167  056B  01F7               	clrf	readGPIO@portType
  5168  056C                     i1l1752:
  5169                           
  5170                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5171  056C  3008               	movlw	8
  5172  056D  0278               	subwf	readGPIO@gpioNumber,w
  5173  056E  1C03               	skipc
  5174  056F  2D71               	goto	u141_21
  5175  0570  2D72               	goto	u141_20
  5176  0571                     u141_21:
  5177  0571  2D7A               	goto	i1l1758
  5178  0572                     u141_20:
  5179  0572                     i1l1754:
  5180                           
  5181                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5182  0572  0878               	movf	readGPIO@gpioNumber,w
  5183  0573  3EF8               	addlw	248
  5184  0574  00F0               	movwf	??_readGPIO
  5185  0575  0870               	movf	??_readGPIO,w
  5186  0576  00F6               	movwf	readGPIO@portNumber
  5187  0577                     i1l1756:
  5188                           
  5189                           ;GPIO.c: 84:         portType = 1;
  5190  0577  01F7               	clrf	readGPIO@portType
  5191  0578  0AF7               	incf	readGPIO@portType,f
  5192                           
  5193                           ;GPIO.c: 85:     }
  5194  0579  2D7F               	goto	i1l1762
  5195  057A                     i1l1758:
  5196                           
  5197                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5198  057A  0878               	movf	readGPIO@gpioNumber,w
  5199  057B  00F0               	movwf	??_readGPIO
  5200  057C  0870               	movf	??_readGPIO,w
  5201  057D  00F6               	movwf	readGPIO@portNumber
  5202  057E                     i1l1760:
  5203                           
  5204                           ;GPIO.c: 88:         portType = 0;
  5205  057E  01F7               	clrf	readGPIO@portType
  5206  057F                     i1l1762:
  5207                           
  5208                           ;GPIO.c: 91:     if(portType == 0){
  5209  057F  0877               	movf	readGPIO@portType,w
  5210  0580  1D03               	btfss	3,2
  5211  0581  2D83               	goto	u142_21
  5212  0582  2D84               	goto	u142_20
  5213  0583                     u142_21:
  5214  0583  2D97               	goto	i1l1774
  5215  0584                     u142_20:
  5216  0584                     i1l1764:
  5217                           
  5218                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  5219  0584  0020               	movlb	0	; select bank0
  5220  0585  080C               	movf	12,w	;volatile
  5221  0586  00F0               	movwf	??_readGPIO
  5222  0587  0870               	movf	??_readGPIO,w
  5223  0588  00F2               	movwf	readGPIO@readA
  5224  0589                     i1l1766:
  5225                           
  5226                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  5227  0589  0872               	movf	readGPIO@readA,w
  5228  058A  00F0               	movwf	??_readGPIO
  5229  058B  0A76               	incf	readGPIO@portNumber,w
  5230  058C  2D8E               	goto	u143_24
  5231  058D                     u143_25:
  5232  058D  36F0               	lsrf	??_readGPIO,f
  5233  058E                     u143_24:
  5234  058E  0B89               	decfsz	9,f
  5235  058F  2D8D               	goto	u143_25
  5236  0590  0870               	movf	??_readGPIO,w
  5237  0591  3901               	andlw	1
  5238  0592  00F1               	movwf	??_readGPIO+1
  5239  0593  0871               	movf	??_readGPIO+1,w
  5240  0594  00F3               	movwf	readGPIO@returnValueA
  5241  0595                     i1l1768:
  5242                           
  5243                           ;GPIO.c: 94:         return returnValueA;
  5244  0595  0873               	movf	readGPIO@returnValueA,w
  5245  0596  2DAE               	goto	i1l290
  5246  0597                     i1l1774:
  5247  0597  0377               	decf	readGPIO@portType,w
  5248  0598  1D03               	btfss	3,2
  5249  0599  2D9B               	goto	u144_21
  5250  059A  2D9C               	goto	u144_20
  5251  059B                     u144_21:
  5252  059B  2DAE               	goto	i1l290
  5253  059C                     u144_20:
  5254  059C                     i1l1776:
  5255                           
  5256                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  5257  059C  0020               	movlb	0	; select bank0
  5258  059D  080D               	movf	13,w	;volatile
  5259  059E  00F0               	movwf	??_readGPIO
  5260  059F  0870               	movf	??_readGPIO,w
  5261  05A0  00F4               	movwf	readGPIO@readB
  5262  05A1                     i1l1778:
  5263                           
  5264                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  5265  05A1  0874               	movf	readGPIO@readB,w
  5266  05A2  00F0               	movwf	??_readGPIO
  5267  05A3  0A76               	incf	readGPIO@portNumber,w
  5268  05A4  2DA6               	goto	u145_24
  5269  05A5                     u145_25:
  5270  05A5  36F0               	lsrf	??_readGPIO,f
  5271  05A6                     u145_24:
  5272  05A6  0B89               	decfsz	9,f
  5273  05A7  2DA5               	goto	u145_25
  5274  05A8  0870               	movf	??_readGPIO,w
  5275  05A9  3901               	andlw	1
  5276  05AA  00F1               	movwf	??_readGPIO+1
  5277  05AB  0871               	movf	??_readGPIO+1,w
  5278  05AC  00F5               	movwf	readGPIO@returnValueB
  5279  05AD                     i1l1780:
  5280                           
  5281                           ;GPIO.c: 99:         return returnValueB;
  5282  05AD  0875               	movf	readGPIO@returnValueB,w
  5283  05AE                     i1l290:
  5284  05AE  0008               	return
  5285  05AF                     __end_of_readGPIO:
  5286  007E                     btemp	set	126	;btemp
  5287  007E                     int$flags	set	126
  5288  007E                     wtemp0	set	126
  5289                           
  5290                           	psect	idloc
  5291                           
  5292                           ;Config register IDLOC0 @ 0x8000
  5293                           ;	unspecified, using default values
  5294  8000                     	org	32768
  5295  8000  3FFF               	dw	16383
  5296                           
  5297                           ;Config register IDLOC1 @ 0x8001
  5298                           ;	unspecified, using default values
  5299  8001                     	org	32769
  5300  8001  3FFF               	dw	16383
  5301                           
  5302                           ;Config register IDLOC2 @ 0x8002
  5303                           ;	unspecified, using default values
  5304  8002                     	org	32770
  5305  8002  3FFF               	dw	16383
  5306                           
  5307                           ;Config register IDLOC3 @ 0x8003
  5308                           ;	unspecified, using default values
  5309  8003                     	org	32771
  5310  8003  3FFF               	dw	16383
  5311                           
  5312                           	psect	config
  5313                           
  5314                           ;Config register CONFIG1 @ 0x8007
  5315                           ;	Oscillator Selection
  5316                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5317                           ;	Watchdog Timer Enable
  5318                           ;	WDTE = OFF, WDT disabled
  5319                           ;	Power-up Timer Enable
  5320                           ;	PWRTE = OFF, PWRT disabled
  5321                           ;	MCLR Pin Function Select
  5322                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5323                           ;	Flash Program Memory Code Protection
  5324                           ;	CP = OFF, Program memory code protection is disabled
  5325                           ;	Data Memory Code Protection
  5326                           ;	CPD = OFF, Data memory code protection is disabled
  5327                           ;	Brown-out Reset Enable
  5328                           ;	BOREN = ON, Brown-out Reset enabled
  5329                           ;	Clock Out Enable
  5330                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5331                           ;	Internal/External Switchover
  5332                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5333                           ;	Fail-Safe Clock Monitor Enable
  5334                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5335  8007                     	org	32775
  5336  8007  0FA4               	dw	4004
  5337                           
  5338                           ;Config register CONFIG2 @ 0x8008
  5339                           ;	Flash Memory Self-Write Protection
  5340                           ;	WRT = OFF, Write protection off
  5341                           ;	PLL Enable
  5342                           ;	PLLEN = OFF, 4x PLL disabled
  5343                           ;	Stack Overflow/Underflow Reset Enable
  5344                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5345                           ;	Brown-out Reset Voltage Selection
  5346                           ;	BORV = 0x1, unprogrammed default
  5347                           ;	Low-Voltage Programming Enable
  5348                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5349  8008                     	org	32776
  5350  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         154
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      55
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _initialiseCurrentSensors->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3134
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1495
                   _initialiseADCPin
                     _initialiseGPIO
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (2) _writeGPIO                                            6     5      1     550
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3648
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                _readILCurrentADCRaw
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (4) i1_writeGPIO                                          6     5      1     326
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readILCurrentADCRaw                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
     _writeGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _readILCurrentADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 15:08:21 2023

                                 l92 06B2                                   l93 06B2  
                ___wmul@multiplicand 0072                                  l111 0251  
                                l200 06FF                                  l204 02F5  
                                l144 0698                                  l209 0337  
                                l321 06EB                                  l270 02CD  
                                l169 06F3                                  l284 03F9  
                                l378 065C                                  _PR2 001B  
                                wreg 0009                  __end_ofi1_writeGPIO 0459  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2000 021B                                 l2002 021C  
                               l2020 0683                                 l2006 0226  
                               l2030 068D                                 l2022 0685  
                               l2014 067C                                 l2110 0699  
                               l2032 068F                                 l2024 0687  
                               l2016 067F                                 l2040 06F1  
                               l2120 06A9                                 l2112 069D  
                               l2042 06FA                                 l2210 022E  
                               l2034 0690                                 l2026 0688  
                               l2018 0681                                 l2122 06AC  
                               l2114 06A0                                 l2044 063A  
                               l2036 0692                                 l2028 068B  
                               l2116 06A3                                 l2046 06E3  
                               l2038 06EC                                 l2118 06A6  
                               l1620 03A3                                 l1630 03B5  
                               l1622 03A8                                 l1640 03DF  
                               l1632 03BA                                 l1624 03AB  
                               l1616 039C                                 l1650 0260  
                               l1642 03EC                                 l1634 03C7  
                               l1626 03AF                                 l1618 039D  
                               l1660 0272                                 l1652 0263  
                               l1644 0254                                 l1636 03D5  
                               l1628 03B0                                 l1670 02C0  
                               l1662 028D                                 l1654 0267  
                               l1646 0255                                 l1638 03DA  
                               l1680 02DE                                 l1672 02D0  
                               l1664 029B                                 l1656 0268  
                               l1648 025B                                 l1690 02F3  
                               l1682 02E0                                 l1674 02D3  
                               l1666 02A0                                 l1658 026D  
                               l1692 02FA                                 l1684 02E6  
                               l1676 02D9                                 l1668 02A5  
                               l1940 017D                                 l1694 02FF  
                               l1686 02EC                                 l1678 02DD  
                               l1950 0198                                 l1942 017E  
                               l1696 0319                                 l1688 02F1  
                               l1960 01AE                                 l1952 019D  
                               l1944 0188                                 l1936 0179  
                               l1698 031E                                 l1970 01CD  
                               l1962 01B8                                 l1954 019E  
                               l1946 018D                                 l1938 017A  
                               l1980 01E8                                 l1972 01CE  
                               l1964 01BD                                 l1956 01A8  
                               l1948 018E                                 l1990 01FE  
                               l1982 01ED                                 l1974 01D8  
                               l1966 01BE                                 l1958 01AD  
                               l1992 0208                                 l1984 01EE  
                               l1976 01DD                                 l1968 01C8  
                               l1994 020B                                 l1986 01F8  
                               l1978 01DE                                 l1996 020C  
                               l1988 01FD                                 l1998 0216  
                               STR_1 06B5                                 STR_3 06C7  
                               u1030 03A3                                 u1031 03A2  
                               u1120 025B                                 u1104 03E4  
                               u1040 03B5                                 u1121 025A  
                               u1105 03E3                                 u1041 03B4  
                               u1130 026D                                 u1114 03F1  
                               u1050 03BA                                 u1131 026C  
                               u1115 03F0                                 u1051 03B9  
                               u1300 031E                                 u1204 02AA  
                               u1140 0272                                 u1301 031D  
                               u1205 02A9                                 u1141 0271  
                               u1230 02D9                                 u1214 02B7  
                               u1231 02D8                                 u1215 02B6  
                               u1240 02E6                                 u1224 02C5  
                               u1080 03DA                                 u1064 03BF  
                               u1241 02E5                                 u1225 02C4  
                               u1081 03D9                                 u1065 03BE  
                               u1314 0323                                 u1250 02EC  
                               u1154 0277                                 u1090 03DF  
                               u1074 03CC                                 u1315 0322  
                               u1251 02EB                                 u1155 0276  
                               u1091 03DE                                 u1075 03CB  
                               u1324 0330                                 u1260 02FA  
                               u1180 02A0                                 u1164 0284  
                               u1325 032F                                 u1261 02F9  
                               u1181 029F                                 u1165 0283  
                               _LATA 010C                                 u1270 02FF  
                               u1190 02A5                                 u1174 0292  
                               _LATB 010D                                 u1271 02FE  
                               u1191 02A4                                 u1175 0291  
                               u1284 0304                                 u1285 0303  
                               u1294 0311                                 u1295 0310  
                               i1l82 0060                                 i1l87 0074  
                    _filteredFreqPot 0043                      _filteredDutyPot 0041  
                               _main 0699                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 fsr1l 0006  
                               btemp 007E                       ?_runPotScaling 0070  
                               start 0076            ??_setupInternalOscillator 0033  
                              ?_main 0039                      __end_of___lldiv 04B4  
                              i1l212 0347                                i1l213 035A  
                              i1l230 06E2                                i1l223 0399  
                              i1l217 037B                                i1l218 037D  
                              i1l227 06DA                                i1l147 0639  
                              i1l341 0176                                i1l335 050E  
                              i1l328 0569                                i1l290 05AE  
                              i1l339 015B                                i1l284 0458  
                              i1l550 0667                                i1l383 060E  
                              i1l552 067B                                i1l564 05E1  
                              i1l586 04B3                                _PORTA 000C  
                              _PORTB 000D                                _TRISA 008C  
                              _TRISB 008D                  ___lmul@multiplicand 0074  
                        readADCRaw@i 0078                 readFilteredFreqPot@i 0029  
           readFilteredDutyPot@i_702 0028                                status 0003  
                              wtemp0 007E               initialiseGPIO@portType 0036  
                _initialiseADCModule 06FA                 readFilteredDutyPot@i 0029  
         initialiseADCPin@gpioNumber 0038                      __initialization 0078  
                       __end_of_main 06B5                    ?_initialiseADCPin 0070  
                        i1_writeGPIO 03FA                               ??_main 003D  
                 ??_initialiseADCPin 0033                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0039      __end_of_setupInternalOscillator 0252  
setupInternalOscillator@selectedFreq 0035                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             u101_20 0637                               u101_21 0634  
                             u102_24 0639                               i1l2100 0055  
                             i1l2102 0055                               i1l2104 006A  
                             i1l2050 03FC                               i1l2106 006B  
                             i1l2060 040F                               i1l2052 0402  
                             i1l2108 0073                               i1l2070 0439  
                             i1l2062 0414                               i1l2054 0407  
                             i1l2072 043E                               i1l2064 0419  
                             i1l2056 040A                               i1l2048 03FB  
                             i1l2080 0013                               i1l1610 060F  
                             i1l2074 044B                               i1l2066 0426  
                             i1l2058 040E                               i1l2090 0030  
                             i1l2082 001A                               i1l1700 0339  
                             i1l1612 0612                               i1l2068 0434  
                             i1l2092 003C                               i1l2084 0020  
                             i1l2076 0006                               i1l1710 0353  
                             i1l1702 033B                               i1l1614 061D  
                             i1l2094 0044                               i1l2086 0025  
                             i1l2078 000E                               i1l1720 0370  
                             i1l1712 0358                               i1l1704 0341  
                             i1l1800 05B7                               i1l2096 004C  
                             i1l2088 002B                               i1l1730 0381  
                             i1l1714 035F                               i1l1706 0345  
                             i1l1802 05BB                               i1l2098 0051  
                             i1l1732 0385                               i1l1716 0361  
                             i1l1708 034D                               i1l1820 047C  
                             i1l1812 0459                               i1l1804 05C3  
                             i1l1750 056B                               i1l1742 038B  
                             i1l1734 0389                               i1l1726 0371  
                             i1l1718 0365                               i1l1910 04FB  
                             i1l1830 04A5                               i1l1822 0483  
                             i1l1814 046A                               i1l1806 05CA  
                             i1l1760 057E                               i1l1752 056C  
                             i1l1840 0602                               i1l1744 038F  
                             i1l1736 038A                               i1l1728 0375  
                             i1l1904 04E1                               i1l1824 0495  
                             i1l1816 046D                               i1l1832 04AB  
                             i1l1808 05D9                               i1l1920 0157  
                             i1l1762 057F                               i1l1754 0572  
                             i1l1842 0607                               i1l1746 0395  
                             i1l1850 050F                               i1l1906 04F1  
                             i1l1930 06D9                               i1l1826 049D  
                             i1l1818 0478                               i1l1922 0165  
                             i1l1914 0094                               i1l1780 05AD  
                             i1l1764 0584                               i1l1756 0577  
                             i1l1844 060C                               i1l1836 05E2  
                             i1l1860 0523                               i1l1908 04F5  
                             i1l1932 06DE                               i1l1828 049E  
                             i1l1924 0169                               i1l1916 009F  
                             i1l1766 0589                               i1l1774 0597  
                             i1l1758 057A                               i1l1846 060D  
                             i1l1838 0600                               i1l1862 0529  
                             i1l1790 066C                               i1l1926 0174  
                             i1l1918 014D                               i1l1776 059C  
                             i1l1768 0595                               i1l1872 053C  
                             i1l1864 0532                               i1l1856 0511  
                             i1l1928 06D7                               i1l1792 0671  
                             i1l1784 065D                               i1l1778 05A1  
                             i1l1874 054C                               i1l1866 053B  
                             i1l1858 051F                               i1l1890 04C4  
                             i1l1882 04B4                               i1l1794 0677  
                             i1l1786 065F                               i1l1876 0550  
                             i1l1892 04C8                               i1l1788 0663  
                             i1l1878 0556                               i1l1894 04CE  
                             i1l1798 05AF                               u140_20 0395  
                             i1l1896 04D7                               i1l1888 04B6  
                             u140_21 0394                               i1l1898 04E0  
                             u141_20 0572                               u133_20 0341  
                             u141_21 0571                               u133_21 0340  
                             u142_20 0584                               u134_20 034D  
                             u150_20 05BB                               u142_21 0583  
                             u134_21 034C                               u150_21 05BA  
                             u135_20 0353                               u135_21 0352  
                             u143_24 058E                               u143_25 058D  
                             u151_25 05C4                               u144_20 059C  
                             u136_20 035F                               u160_20 04AB  
                             u144_21 059B                               u136_21 035E  
                             u160_21 04AA                               u152_25 05CB  
                             u161_20 05EC                               u153_20 05D9  
                             u161_21 05EA                               u153_21 05D8  
                             u145_24 05A6                               u145_25 05A5  
                             u137_25 0368                               u162_20 05ED  
                             u138_20 037B                               u170_20 04CE  
                             u154_20 046A                               u146_20 0663  
                             u138_21 037A                               u170_21 04CD  
                             u154_21 0469                               u146_21 0662  
                             u163_20 05FB                               u139_20 0381  
                             u171_20 04FB                               u163_21 05F9  
                             u139_21 0380                               u171_21 04FA  
                             u155_25 046E                               u147_25 0668  
                             u164_20 05FC                               u172_20 0508  
                             u156_20 047C                               u180_20 0414  
                             u156_21 047B                               u180_21 0413  
                             u172_25 0504                               u148_25 066D  
                             u165_20 0607                               u149_20 0677  
                             u173_20 009F                               u181_20 0419  
                             u165_21 0606                               u149_21 0676  
                             u173_21 009E                               u181_21 0418  
                             u157_25 047D                               u166_20 060C  
                             u158_20 0495                               u174_20 00C0  
                             u190_20 002B                               u166_21 060B  
                             u158_21 0494                               u190_21 002A  
                             u182_24 041E                               u158_25 0491  
                             u174_25 00BC                               u182_25 041D  
                             u167_20 0529                               u175_20 00ED  
                             u191_20 0030                               u167_21 0528  
                             u191_21 002F                               u183_24 042B  
                             u159_25 049F                               u175_25 00E9  
                             u183_25 042A                               u168_20 0556  
                             u176_20 0157                               u184_20 0439  
                             u192_20 0051                               u168_21 0555  
                             u176_21 0156                               u184_21 0438  
                             u192_21 0050                               u176_25 0153  
                             u169_20 0563                               u177_20 0165  
                             u185_20 043E                               u193_20 005C  
                             u177_21 0164                               u185_21 043D  
                             u193_21 005A                               u169_25 055F  
                             u177_25 0161                               u178_20 06DE  
                             u194_20 005D                               u178_21 06DD  
                             u186_24 0443                               u186_25 0442  
                             u179_20 0402                               u195_20 0066  
                             u179_21 0401                               u195_21 0064  
                             u187_24 0450                               u187_25 044F  
                             u196_20 0067                               u188_20 000E  
                             u188_21 000D                      ??_runPotScaling 0026  
                             u189_20 0020                               u189_21 001F  
            initialiseGPIO@direction 0033                     readGPIO@portType 0077  
        __end_of_readILCurrentADCRaw 06E3                  readADCRaw@gpioValid 0077  
                             ___lmul 05AF                               ___wmul 065D  
                          ??___lldiv 0020                     __end_of_readGPIO 05AF  
                             _tripIL 0053            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 06E3  
         initialiseADCPin@portNumber 0037                     __end_of_setupPWM 0699  
                    _currentTripRead 05E2              __end_of__initialization 0090  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
              i1writeGPIO@gpioNumber 0074                        _currentILFIFO 00A0  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 0076  
                         __pbssBANK0 003D                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pmaintext 0699  
                            ?___lmul 0070                              ?___wmul 0070  
                         __pintentry 0004                              _CCP1CON 0293  
                     ___lmul@product 0078              __end_of_currentTripRead 060F  
        __end_of_setPWMDutyandPeriod 063A     __end_of_initialiseCurrentSensors 065D  
           initialiseADCPin@portType 0036                i1writeGPIO@portNumber 0075  
                         _filteredIL 0045                            ?_readGPIO 0070  
                         _readADCRaw 0338                  _readFilteredFreqPot 04B4  
                _readFilteredDutyPot 050F                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 0037  
                            ___lldiv 0459                         ?i1_writeGPIO 0070  
               ?_readFilteredFreqPot 007B                              __ptext1 06EC  
                            __ptext2 067C                              __ptext3 0177  
                            __ptext4 06E3                              __ptext5 063A  
                            __ptext6 039A                              __ptext7 0252  
                            __ptext8 02CE                              __ptext9 06FA  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                            _setDuty 004D                i1writeGPIO@writeValue 0070  
                            _tripIDS 0054                              clrloop0 06F5  
               end_of_initialization 0090                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
         ??_initialisePotentiometers 0039                           _prevPeriod 0055  
                  writeGPIO@portType 0036                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 03FA             initialiseGPIO@portNumber 0038  
                        ?_readADCRaw 0070                          _CCP1CONbits 0293  
                      readGPIO@readA 0072                        readGPIO@readB 0074  
              __end_of_runPotScaling 0177            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 05E2          __end_of_initialiseADCModule 0700  
                     __end_of___wmul 067C                       _clockFrequency 003D  
                start_initialization 0078         __end_of_setupTimer0Interrupt 06F4  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                           ??___wmul 0074                            ___latbits 0001  
                      __pcstackBANK0 0020                           ?_Tick980Hz 0070  
                   _initialiseADCPin 02CE                   readGPIO@gpioNumber 0078  
                     _initialiseGPIO 0252     __end_of_initialisePotentiometers 06EC  
                           ?___lldiv 0076                      readADCRaw@i_616 0079  
    readFilteredDutyPot@sumOfSamples 0024                       ___wmul@product 0074  
             __end_of_initialiseGPIO 02CE                            clear_ram0 06F4  
                          _setPeriod 0056                             _PIE1bits 0091  
                           _PIR1bits 0011         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 06EC                  _currentTripRead$747 007A  
                        _filteredIDS 0047                           _ADCON0bits 009D  
                  ___wmul@multiplier 0070                   readGPIO@portNumber 0076  
                        _freqPotFIFO 0140                            _writeGPIO 039A  
                        ??_Tick980Hz 0032                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 06D7                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0033                    readADCRaw@channel 0076  
              ?_setupTimer0Interrupt 0070          __end_of_readFilteredFreqPot 050F  
        __end_of_readFilteredDutyPot 056A                 runPotScaling@maxDuty 002E  
               runPotScaling@minDuty 0030                 ?_readILCurrentADCRaw 0070  
                writeGPIO@gpioNumber 0037                   __end_of_readADCRaw 039A  
           readFilteredFreqPot@i_706 0028                           ?_writeGPIO 0033  
                           __ptext11 03FA                             __ptext20 0338  
                           __ptext12 0094                             __ptext21 05E2  
                           __ptext13 060F                             __ptext22 056A  
                           __ptext14 065D                             __ptext15 05AF  
                           __ptext16 0459                             __ptext17 06D7  
                           __ptext18 04B4                             __ptext19 050F  
          ?_initialisePotentiometers 0070                          _dutyPotFIFO 0120  
                i1writeGPIO@portType 0073                             _readGPIO 056A  
                           _latestIL 0049                        _timerSlotHalf 0051  
                       _PSTR1CONbits 0296                             _prevDuty 004B  
                           _setupPWM 067C                             int$flags 007E  
              ??_readILCurrentADCRaw 0072             __end_of_initialiseADCPin 0338  
                           main@argc 0039                             main@argv 003B  
    readFilteredFreqPot@sumOfSamples 0024                     _timerSlotQuarter 0050  
                         _INTCONbits 000B                  writeGPIO@portNumber 0038  
                           intlevel1 0000             _initialiseCurrentSensors 063A  
                   ___lldiv@dividend 007A               ??_setupTimer0Interrupt 0033  
                         _OSCCONbits 0099                          _potSetCount 0052  
                _setPWMDutyandPeriod 060F              _setupInternalOscillator 0177  
                      _emergencyStop 004F                        ??i1_writeGPIO 0071  
                      __pstringtext1 06B5                        __pstringtext2 06C7  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                   ___lldiv@quotient 0021                  writeGPIO@writeValue 0033  
                        ??_writeGPIO 0034                 ?_setPWMDutyandPeriod 0070  
              readADCRaw@returnValue 0074                    ??_currentTripRead 0079  
                      _runPotScaling 0094                 readGPIO@returnValueA 0073  
               readGPIO@returnValueB 0075  
