

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jan 30 16:43:57 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.40
    36                           ; Generated 17/11/2021 GMT
    37                           ; 
    38                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC16F1827 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     	;# 
    71  0001                     	;# 
    72  0002                     	;# 
    73  0003                     	;# 
    74  0004                     	;# 
    75  0005                     	;# 
    76  0006                     	;# 
    77  0007                     	;# 
    78  0008                     	;# 
    79  0009                     	;# 
    80  000A                     	;# 
    81  000B                     	;# 
    82  000C                     	;# 
    83  000D                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0095                     	;# 
   106  0096                     	;# 
   107  0097                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009B                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  010C                     	;# 
   117  010D                     	;# 
   118  0111                     	;# 
   119  0112                     	;# 
   120  0113                     	;# 
   121  0114                     	;# 
   122  0115                     	;# 
   123  0116                     	;# 
   124  0117                     	;# 
   125  0118                     	;# 
   126  0119                     	;# 
   127  011A                     	;# 
   128  011B                     	;# 
   129  011D                     	;# 
   130  011E                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0216                     	;# 
   167  0216                     	;# 
   168  0217                     	;# 
   169  0217                     	;# 
   170  0219                     	;# 
   171  021A                     	;# 
   172  021B                     	;# 
   173  021C                     	;# 
   174  021D                     	;# 
   175  021E                     	;# 
   176  021F                     	;# 
   177  0291                     	;# 
   178  0291                     	;# 
   179  0292                     	;# 
   180  0293                     	;# 
   181  0294                     	;# 
   182  0295                     	;# 
   183  0295                     	;# 
   184  0296                     	;# 
   185  0298                     	;# 
   186  0298                     	;# 
   187  0299                     	;# 
   188  029A                     	;# 
   189  029B                     	;# 
   190  029C                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  029E                     	;# 
   195  0311                     	;# 
   196  0311                     	;# 
   197  0312                     	;# 
   198  0313                     	;# 
   199  0318                     	;# 
   200  0318                     	;# 
   201  0319                     	;# 
   202  031A                     	;# 
   203  0394                     	;# 
   204  0395                     	;# 
   205  0396                     	;# 
   206  039A                     	;# 
   207  039C                     	;# 
   208  039D                     	;# 
   209  039E                     	;# 
   210  039F                     	;# 
   211  0415                     	;# 
   212  0416                     	;# 
   213  0417                     	;# 
   214  041C                     	;# 
   215  041D                     	;# 
   216  041E                     	;# 
   217  0FE4                     	;# 
   218  0FE5                     	;# 
   219  0FE6                     	;# 
   220  0FE7                     	;# 
   221  0FE8                     	;# 
   222  0FE9                     	;# 
   223  0FEA                     	;# 
   224  0FEB                     	;# 
   225  0FED                     	;# 
   226  0FEE                     	;# 
   227  0FEF                     	;# 
   228  0000                     	;# 
   229  0001                     	;# 
   230  0002                     	;# 
   231  0003                     	;# 
   232  0004                     	;# 
   233  0005                     	;# 
   234  0006                     	;# 
   235  0007                     	;# 
   236  0008                     	;# 
   237  0009                     	;# 
   238  000A                     	;# 
   239  000B                     	;# 
   240  000C                     	;# 
   241  000D                     	;# 
   242  0011                     	;# 
   243  0012                     	;# 
   244  0013                     	;# 
   245  0014                     	;# 
   246  0015                     	;# 
   247  0016                     	;# 
   248  0016                     	;# 
   249  0017                     	;# 
   250  0018                     	;# 
   251  0019                     	;# 
   252  001A                     	;# 
   253  001B                     	;# 
   254  001C                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  0091                     	;# 
   260  0092                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  010C                     	;# 
   275  010D                     	;# 
   276  0111                     	;# 
   277  0112                     	;# 
   278  0113                     	;# 
   279  0114                     	;# 
   280  0115                     	;# 
   281  0116                     	;# 
   282  0117                     	;# 
   283  0118                     	;# 
   284  0119                     	;# 
   285  011A                     	;# 
   286  011B                     	;# 
   287  011D                     	;# 
   288  011E                     	;# 
   289  018C                     	;# 
   290  018D                     	;# 
   291  0191                     	;# 
   292  0191                     	;# 
   293  0192                     	;# 
   294  0193                     	;# 
   295  0193                     	;# 
   296  0193                     	;# 
   297  0194                     	;# 
   298  0195                     	;# 
   299  0196                     	;# 
   300  0199                     	;# 
   301  019A                     	;# 
   302  019B                     	;# 
   303  019B                     	;# 
   304  019B                     	;# 
   305  019B                     	;# 
   306  019C                     	;# 
   307  019C                     	;# 
   308  019D                     	;# 
   309  019E                     	;# 
   310  019F                     	;# 
   311  020C                     	;# 
   312  020D                     	;# 
   313  0211                     	;# 
   314  0211                     	;# 
   315  0212                     	;# 
   316  0212                     	;# 
   317  0213                     	;# 
   318  0213                     	;# 
   319  0214                     	;# 
   320  0214                     	;# 
   321  0215                     	;# 
   322  0215                     	;# 
   323  0215                     	;# 
   324  0216                     	;# 
   325  0216                     	;# 
   326  0217                     	;# 
   327  0217                     	;# 
   328  0219                     	;# 
   329  021A                     	;# 
   330  021B                     	;# 
   331  021C                     	;# 
   332  021D                     	;# 
   333  021E                     	;# 
   334  021F                     	;# 
   335  0291                     	;# 
   336  0291                     	;# 
   337  0292                     	;# 
   338  0293                     	;# 
   339  0294                     	;# 
   340  0295                     	;# 
   341  0295                     	;# 
   342  0296                     	;# 
   343  0298                     	;# 
   344  0298                     	;# 
   345  0299                     	;# 
   346  029A                     	;# 
   347  029B                     	;# 
   348  029C                     	;# 
   349  029C                     	;# 
   350  029D                     	;# 
   351  029E                     	;# 
   352  029E                     	;# 
   353  0311                     	;# 
   354  0311                     	;# 
   355  0312                     	;# 
   356  0313                     	;# 
   357  0318                     	;# 
   358  0318                     	;# 
   359  0319                     	;# 
   360  031A                     	;# 
   361  0394                     	;# 
   362  0395                     	;# 
   363  0396                     	;# 
   364  039A                     	;# 
   365  039C                     	;# 
   366  039D                     	;# 
   367  039E                     	;# 
   368  039F                     	;# 
   369  0415                     	;# 
   370  0416                     	;# 
   371  0417                     	;# 
   372  041C                     	;# 
   373  041D                     	;# 
   374  041E                     	;# 
   375  0FE4                     	;# 
   376  0FE5                     	;# 
   377  0FE6                     	;# 
   378  0FE7                     	;# 
   379  0FE8                     	;# 
   380  0FE9                     	;# 
   381  0FEA                     	;# 
   382  0FEB                     	;# 
   383  0FED                     	;# 
   384  0FEE                     	;# 
   385  0FEF                     	;# 
   386  0000                     	;# 
   387  0001                     	;# 
   388  0002                     	;# 
   389  0003                     	;# 
   390  0004                     	;# 
   391  0005                     	;# 
   392  0006                     	;# 
   393  0007                     	;# 
   394  0008                     	;# 
   395  0009                     	;# 
   396  000A                     	;# 
   397  000B                     	;# 
   398  000C                     	;# 
   399  000D                     	;# 
   400  0011                     	;# 
   401  0012                     	;# 
   402  0013                     	;# 
   403  0014                     	;# 
   404  0015                     	;# 
   405  0016                     	;# 
   406  0016                     	;# 
   407  0017                     	;# 
   408  0018                     	;# 
   409  0019                     	;# 
   410  001A                     	;# 
   411  001B                     	;# 
   412  001C                     	;# 
   413  001E                     	;# 
   414  001F                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  0091                     	;# 
   418  0092                     	;# 
   419  0093                     	;# 
   420  0094                     	;# 
   421  0095                     	;# 
   422  0096                     	;# 
   423  0097                     	;# 
   424  0098                     	;# 
   425  0099                     	;# 
   426  009A                     	;# 
   427  009B                     	;# 
   428  009B                     	;# 
   429  009C                     	;# 
   430  009D                     	;# 
   431  009E                     	;# 
   432  010C                     	;# 
   433  010D                     	;# 
   434  0111                     	;# 
   435  0112                     	;# 
   436  0113                     	;# 
   437  0114                     	;# 
   438  0115                     	;# 
   439  0116                     	;# 
   440  0117                     	;# 
   441  0118                     	;# 
   442  0119                     	;# 
   443  011A                     	;# 
   444  011B                     	;# 
   445  011D                     	;# 
   446  011E                     	;# 
   447  018C                     	;# 
   448  018D                     	;# 
   449  0191                     	;# 
   450  0191                     	;# 
   451  0192                     	;# 
   452  0193                     	;# 
   453  0193                     	;# 
   454  0193                     	;# 
   455  0194                     	;# 
   456  0195                     	;# 
   457  0196                     	;# 
   458  0199                     	;# 
   459  019A                     	;# 
   460  019B                     	;# 
   461  019B                     	;# 
   462  019B                     	;# 
   463  019B                     	;# 
   464  019C                     	;# 
   465  019C                     	;# 
   466  019D                     	;# 
   467  019E                     	;# 
   468  019F                     	;# 
   469  020C                     	;# 
   470  020D                     	;# 
   471  0211                     	;# 
   472  0211                     	;# 
   473  0212                     	;# 
   474  0212                     	;# 
   475  0213                     	;# 
   476  0213                     	;# 
   477  0214                     	;# 
   478  0214                     	;# 
   479  0215                     	;# 
   480  0215                     	;# 
   481  0215                     	;# 
   482  0216                     	;# 
   483  0216                     	;# 
   484  0217                     	;# 
   485  0217                     	;# 
   486  0219                     	;# 
   487  021A                     	;# 
   488  021B                     	;# 
   489  021C                     	;# 
   490  021D                     	;# 
   491  021E                     	;# 
   492  021F                     	;# 
   493  0291                     	;# 
   494  0291                     	;# 
   495  0292                     	;# 
   496  0293                     	;# 
   497  0294                     	;# 
   498  0295                     	;# 
   499  0295                     	;# 
   500  0296                     	;# 
   501  0298                     	;# 
   502  0298                     	;# 
   503  0299                     	;# 
   504  029A                     	;# 
   505  029B                     	;# 
   506  029C                     	;# 
   507  029C                     	;# 
   508  029D                     	;# 
   509  029E                     	;# 
   510  029E                     	;# 
   511  0311                     	;# 
   512  0311                     	;# 
   513  0312                     	;# 
   514  0313                     	;# 
   515  0318                     	;# 
   516  0318                     	;# 
   517  0319                     	;# 
   518  031A                     	;# 
   519  0394                     	;# 
   520  0395                     	;# 
   521  0396                     	;# 
   522  039A                     	;# 
   523  039C                     	;# 
   524  039D                     	;# 
   525  039E                     	;# 
   526  039F                     	;# 
   527  0415                     	;# 
   528  0416                     	;# 
   529  0417                     	;# 
   530  041C                     	;# 
   531  041D                     	;# 
   532  041E                     	;# 
   533  0FE4                     	;# 
   534  0FE5                     	;# 
   535  0FE6                     	;# 
   536  0FE7                     	;# 
   537  0FE8                     	;# 
   538  0FE9                     	;# 
   539  0FEA                     	;# 
   540  0FEB                     	;# 
   541  0FED                     	;# 
   542  0FEE                     	;# 
   543  0FEF                     	;# 
   544  0000                     	;# 
   545  0001                     	;# 
   546  0002                     	;# 
   547  0003                     	;# 
   548  0004                     	;# 
   549  0005                     	;# 
   550  0006                     	;# 
   551  0007                     	;# 
   552  0008                     	;# 
   553  0009                     	;# 
   554  000A                     	;# 
   555  000B                     	;# 
   556  000C                     	;# 
   557  000D                     	;# 
   558  0011                     	;# 
   559  0012                     	;# 
   560  0013                     	;# 
   561  0014                     	;# 
   562  0015                     	;# 
   563  0016                     	;# 
   564  0016                     	;# 
   565  0017                     	;# 
   566  0018                     	;# 
   567  0019                     	;# 
   568  001A                     	;# 
   569  001B                     	;# 
   570  001C                     	;# 
   571  001E                     	;# 
   572  001F                     	;# 
   573  008C                     	;# 
   574  008D                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0094                     	;# 
   579  0095                     	;# 
   580  0096                     	;# 
   581  0097                     	;# 
   582  0098                     	;# 
   583  0099                     	;# 
   584  009A                     	;# 
   585  009B                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  010C                     	;# 
   591  010D                     	;# 
   592  0111                     	;# 
   593  0112                     	;# 
   594  0113                     	;# 
   595  0114                     	;# 
   596  0115                     	;# 
   597  0116                     	;# 
   598  0117                     	;# 
   599  0118                     	;# 
   600  0119                     	;# 
   601  011A                     	;# 
   602  011B                     	;# 
   603  011D                     	;# 
   604  011E                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0191                     	;# 
   608  0191                     	;# 
   609  0192                     	;# 
   610  0193                     	;# 
   611  0193                     	;# 
   612  0193                     	;# 
   613  0194                     	;# 
   614  0195                     	;# 
   615  0196                     	;# 
   616  0199                     	;# 
   617  019A                     	;# 
   618  019B                     	;# 
   619  019B                     	;# 
   620  019B                     	;# 
   621  019B                     	;# 
   622  019C                     	;# 
   623  019C                     	;# 
   624  019D                     	;# 
   625  019E                     	;# 
   626  019F                     	;# 
   627  020C                     	;# 
   628  020D                     	;# 
   629  0211                     	;# 
   630  0211                     	;# 
   631  0212                     	;# 
   632  0212                     	;# 
   633  0213                     	;# 
   634  0213                     	;# 
   635  0214                     	;# 
   636  0214                     	;# 
   637  0215                     	;# 
   638  0215                     	;# 
   639  0215                     	;# 
   640  0216                     	;# 
   641  0216                     	;# 
   642  0217                     	;# 
   643  0217                     	;# 
   644  0219                     	;# 
   645  021A                     	;# 
   646  021B                     	;# 
   647  021C                     	;# 
   648  021D                     	;# 
   649  021E                     	;# 
   650  021F                     	;# 
   651  0291                     	;# 
   652  0291                     	;# 
   653  0292                     	;# 
   654  0293                     	;# 
   655  0294                     	;# 
   656  0295                     	;# 
   657  0295                     	;# 
   658  0296                     	;# 
   659  0298                     	;# 
   660  0298                     	;# 
   661  0299                     	;# 
   662  029A                     	;# 
   663  029B                     	;# 
   664  029C                     	;# 
   665  029C                     	;# 
   666  029D                     	;# 
   667  029E                     	;# 
   668  029E                     	;# 
   669  0311                     	;# 
   670  0311                     	;# 
   671  0312                     	;# 
   672  0313                     	;# 
   673  0318                     	;# 
   674  0318                     	;# 
   675  0319                     	;# 
   676  031A                     	;# 
   677  0394                     	;# 
   678  0395                     	;# 
   679  0396                     	;# 
   680  039A                     	;# 
   681  039C                     	;# 
   682  039D                     	;# 
   683  039E                     	;# 
   684  039F                     	;# 
   685  0415                     	;# 
   686  0416                     	;# 
   687  0417                     	;# 
   688  041C                     	;# 
   689  041D                     	;# 
   690  041E                     	;# 
   691  0FE4                     	;# 
   692  0FE5                     	;# 
   693  0FE6                     	;# 
   694  0FE7                     	;# 
   695  0FE8                     	;# 
   696  0FE9                     	;# 
   697  0FEA                     	;# 
   698  0FEB                     	;# 
   699  0FED                     	;# 
   700  0FEE                     	;# 
   701  0FEF                     	;# 
   702  0000                     	;# 
   703  0001                     	;# 
   704  0002                     	;# 
   705  0003                     	;# 
   706  0004                     	;# 
   707  0005                     	;# 
   708  0006                     	;# 
   709  0007                     	;# 
   710  0008                     	;# 
   711  0009                     	;# 
   712  000A                     	;# 
   713  000B                     	;# 
   714  000C                     	;# 
   715  000D                     	;# 
   716  0011                     	;# 
   717  0012                     	;# 
   718  0013                     	;# 
   719  0014                     	;# 
   720  0015                     	;# 
   721  0016                     	;# 
   722  0016                     	;# 
   723  0017                     	;# 
   724  0018                     	;# 
   725  0019                     	;# 
   726  001A                     	;# 
   727  001B                     	;# 
   728  001C                     	;# 
   729  001E                     	;# 
   730  001F                     	;# 
   731  008C                     	;# 
   732  008D                     	;# 
   733  0091                     	;# 
   734  0092                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009B                     	;# 
   745  009C                     	;# 
   746  009D                     	;# 
   747  009E                     	;# 
   748  010C                     	;# 
   749  010D                     	;# 
   750  0111                     	;# 
   751  0112                     	;# 
   752  0113                     	;# 
   753  0114                     	;# 
   754  0115                     	;# 
   755  0116                     	;# 
   756  0117                     	;# 
   757  0118                     	;# 
   758  0119                     	;# 
   759  011A                     	;# 
   760  011B                     	;# 
   761  011D                     	;# 
   762  011E                     	;# 
   763  018C                     	;# 
   764  018D                     	;# 
   765  0191                     	;# 
   766  0191                     	;# 
   767  0192                     	;# 
   768  0193                     	;# 
   769  0193                     	;# 
   770  0193                     	;# 
   771  0194                     	;# 
   772  0195                     	;# 
   773  0196                     	;# 
   774  0199                     	;# 
   775  019A                     	;# 
   776  019B                     	;# 
   777  019B                     	;# 
   778  019B                     	;# 
   779  019B                     	;# 
   780  019C                     	;# 
   781  019C                     	;# 
   782  019D                     	;# 
   783  019E                     	;# 
   784  019F                     	;# 
   785  020C                     	;# 
   786  020D                     	;# 
   787  0211                     	;# 
   788  0211                     	;# 
   789  0212                     	;# 
   790  0212                     	;# 
   791  0213                     	;# 
   792  0213                     	;# 
   793  0214                     	;# 
   794  0214                     	;# 
   795  0215                     	;# 
   796  0215                     	;# 
   797  0215                     	;# 
   798  0216                     	;# 
   799  0216                     	;# 
   800  0217                     	;# 
   801  0217                     	;# 
   802  0219                     	;# 
   803  021A                     	;# 
   804  021B                     	;# 
   805  021C                     	;# 
   806  021D                     	;# 
   807  021E                     	;# 
   808  021F                     	;# 
   809  0291                     	;# 
   810  0291                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0294                     	;# 
   814  0295                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0298                     	;# 
   818  0298                     	;# 
   819  0299                     	;# 
   820  029A                     	;# 
   821  029B                     	;# 
   822  029C                     	;# 
   823  029C                     	;# 
   824  029D                     	;# 
   825  029E                     	;# 
   826  029E                     	;# 
   827  0311                     	;# 
   828  0311                     	;# 
   829  0312                     	;# 
   830  0313                     	;# 
   831  0318                     	;# 
   832  0318                     	;# 
   833  0319                     	;# 
   834  031A                     	;# 
   835  0394                     	;# 
   836  0395                     	;# 
   837  0396                     	;# 
   838  039A                     	;# 
   839  039C                     	;# 
   840  039D                     	;# 
   841  039E                     	;# 
   842  039F                     	;# 
   843  0415                     	;# 
   844  0416                     	;# 
   845  0417                     	;# 
   846  041C                     	;# 
   847  041D                     	;# 
   848  041E                     	;# 
   849  0FE4                     	;# 
   850  0FE5                     	;# 
   851  0FE6                     	;# 
   852  0FE7                     	;# 
   853  0FE8                     	;# 
   854  0FE9                     	;# 
   855  0FEA                     	;# 
   856  0FEB                     	;# 
   857  0FED                     	;# 
   858  0FEE                     	;# 
   859  0FEF                     	;# 
   860  0000                     	;# 
   861  0001                     	;# 
   862  0002                     	;# 
   863  0003                     	;# 
   864  0004                     	;# 
   865  0005                     	;# 
   866  0006                     	;# 
   867  0007                     	;# 
   868  0008                     	;# 
   869  0009                     	;# 
   870  000A                     	;# 
   871  000B                     	;# 
   872  000C                     	;# 
   873  000D                     	;# 
   874  0011                     	;# 
   875  0012                     	;# 
   876  0013                     	;# 
   877  0014                     	;# 
   878  0015                     	;# 
   879  0016                     	;# 
   880  0016                     	;# 
   881  0017                     	;# 
   882  0018                     	;# 
   883  0019                     	;# 
   884  001A                     	;# 
   885  001B                     	;# 
   886  001C                     	;# 
   887  001E                     	;# 
   888  001F                     	;# 
   889  008C                     	;# 
   890  008D                     	;# 
   891  0091                     	;# 
   892  0092                     	;# 
   893  0093                     	;# 
   894  0094                     	;# 
   895  0095                     	;# 
   896  0096                     	;# 
   897  0097                     	;# 
   898  0098                     	;# 
   899  0099                     	;# 
   900  009A                     	;# 
   901  009B                     	;# 
   902  009B                     	;# 
   903  009C                     	;# 
   904  009D                     	;# 
   905  009E                     	;# 
   906  010C                     	;# 
   907  010D                     	;# 
   908  0111                     	;# 
   909  0112                     	;# 
   910  0113                     	;# 
   911  0114                     	;# 
   912  0115                     	;# 
   913  0116                     	;# 
   914  0117                     	;# 
   915  0118                     	;# 
   916  0119                     	;# 
   917  011A                     	;# 
   918  011B                     	;# 
   919  011D                     	;# 
   920  011E                     	;# 
   921  018C                     	;# 
   922  018D                     	;# 
   923  0191                     	;# 
   924  0191                     	;# 
   925  0192                     	;# 
   926  0193                     	;# 
   927  0193                     	;# 
   928  0193                     	;# 
   929  0194                     	;# 
   930  0195                     	;# 
   931  0196                     	;# 
   932  0199                     	;# 
   933  019A                     	;# 
   934  019B                     	;# 
   935  019B                     	;# 
   936  019B                     	;# 
   937  019B                     	;# 
   938  019C                     	;# 
   939  019C                     	;# 
   940  019D                     	;# 
   941  019E                     	;# 
   942  019F                     	;# 
   943  020C                     	;# 
   944  020D                     	;# 
   945  0211                     	;# 
   946  0211                     	;# 
   947  0212                     	;# 
   948  0212                     	;# 
   949  0213                     	;# 
   950  0213                     	;# 
   951  0214                     	;# 
   952  0214                     	;# 
   953  0215                     	;# 
   954  0215                     	;# 
   955  0215                     	;# 
   956  0216                     	;# 
   957  0216                     	;# 
   958  0217                     	;# 
   959  0217                     	;# 
   960  0219                     	;# 
   961  021A                     	;# 
   962  021B                     	;# 
   963  021C                     	;# 
   964  021D                     	;# 
   965  021E                     	;# 
   966  021F                     	;# 
   967  0291                     	;# 
   968  0291                     	;# 
   969  0292                     	;# 
   970  0293                     	;# 
   971  0294                     	;# 
   972  0295                     	;# 
   973  0295                     	;# 
   974  0296                     	;# 
   975  0298                     	;# 
   976  0298                     	;# 
   977  0299                     	;# 
   978  029A                     	;# 
   979  029B                     	;# 
   980  029C                     	;# 
   981  029C                     	;# 
   982  029D                     	;# 
   983  029E                     	;# 
   984  029E                     	;# 
   985  0311                     	;# 
   986  0311                     	;# 
   987  0312                     	;# 
   988  0313                     	;# 
   989  0318                     	;# 
   990  0318                     	;# 
   991  0319                     	;# 
   992  031A                     	;# 
   993  0394                     	;# 
   994  0395                     	;# 
   995  0396                     	;# 
   996  039A                     	;# 
   997  039C                     	;# 
   998  039D                     	;# 
   999  039E                     	;# 
  1000  039F                     	;# 
  1001  0415                     	;# 
  1002  0416                     	;# 
  1003  0417                     	;# 
  1004  041C                     	;# 
  1005  041D                     	;# 
  1006  041E                     	;# 
  1007  0FE4                     	;# 
  1008  0FE5                     	;# 
  1009  0FE6                     	;# 
  1010  0FE7                     	;# 
  1011  0FE8                     	;# 
  1012  0FE9                     	;# 
  1013  0FEA                     	;# 
  1014  0FEB                     	;# 
  1015  0FED                     	;# 
  1016  0FEE                     	;# 
  1017  0FEF                     	;# 
  1018  0000                     	;# 
  1019  0001                     	;# 
  1020  0002                     	;# 
  1021  0003                     	;# 
  1022  0004                     	;# 
  1023  0005                     	;# 
  1024  0006                     	;# 
  1025  0007                     	;# 
  1026  0008                     	;# 
  1027  0009                     	;# 
  1028  000A                     	;# 
  1029  000B                     	;# 
  1030  000C                     	;# 
  1031  000D                     	;# 
  1032  0011                     	;# 
  1033  0012                     	;# 
  1034  0013                     	;# 
  1035  0014                     	;# 
  1036  0015                     	;# 
  1037  0016                     	;# 
  1038  0016                     	;# 
  1039  0017                     	;# 
  1040  0018                     	;# 
  1041  0019                     	;# 
  1042  001A                     	;# 
  1043  001B                     	;# 
  1044  001C                     	;# 
  1045  001E                     	;# 
  1046  001F                     	;# 
  1047  008C                     	;# 
  1048  008D                     	;# 
  1049  0091                     	;# 
  1050  0092                     	;# 
  1051  0093                     	;# 
  1052  0094                     	;# 
  1053  0095                     	;# 
  1054  0096                     	;# 
  1055  0097                     	;# 
  1056  0098                     	;# 
  1057  0099                     	;# 
  1058  009A                     	;# 
  1059  009B                     	;# 
  1060  009B                     	;# 
  1061  009C                     	;# 
  1062  009D                     	;# 
  1063  009E                     	;# 
  1064  010C                     	;# 
  1065  010D                     	;# 
  1066  0111                     	;# 
  1067  0112                     	;# 
  1068  0113                     	;# 
  1069  0114                     	;# 
  1070  0115                     	;# 
  1071  0116                     	;# 
  1072  0117                     	;# 
  1073  0118                     	;# 
  1074  0119                     	;# 
  1075  011A                     	;# 
  1076  011B                     	;# 
  1077  011D                     	;# 
  1078  011E                     	;# 
  1079  018C                     	;# 
  1080  018D                     	;# 
  1081  0191                     	;# 
  1082  0191                     	;# 
  1083  0192                     	;# 
  1084  0193                     	;# 
  1085  0193                     	;# 
  1086  0193                     	;# 
  1087  0194                     	;# 
  1088  0195                     	;# 
  1089  0196                     	;# 
  1090  0199                     	;# 
  1091  019A                     	;# 
  1092  019B                     	;# 
  1093  019B                     	;# 
  1094  019B                     	;# 
  1095  019B                     	;# 
  1096  019C                     	;# 
  1097  019C                     	;# 
  1098  019D                     	;# 
  1099  019E                     	;# 
  1100  019F                     	;# 
  1101  020C                     	;# 
  1102  020D                     	;# 
  1103  0211                     	;# 
  1104  0211                     	;# 
  1105  0212                     	;# 
  1106  0212                     	;# 
  1107  0213                     	;# 
  1108  0213                     	;# 
  1109  0214                     	;# 
  1110  0214                     	;# 
  1111  0215                     	;# 
  1112  0215                     	;# 
  1113  0215                     	;# 
  1114  0216                     	;# 
  1115  0216                     	;# 
  1116  0217                     	;# 
  1117  0217                     	;# 
  1118  0219                     	;# 
  1119  021A                     	;# 
  1120  021B                     	;# 
  1121  021C                     	;# 
  1122  021D                     	;# 
  1123  021E                     	;# 
  1124  021F                     	;# 
  1125  0291                     	;# 
  1126  0291                     	;# 
  1127  0292                     	;# 
  1128  0293                     	;# 
  1129  0294                     	;# 
  1130  0295                     	;# 
  1131  0295                     	;# 
  1132  0296                     	;# 
  1133  0298                     	;# 
  1134  0298                     	;# 
  1135  0299                     	;# 
  1136  029A                     	;# 
  1137  029B                     	;# 
  1138  029C                     	;# 
  1139  029C                     	;# 
  1140  029D                     	;# 
  1141  029E                     	;# 
  1142  029E                     	;# 
  1143  0311                     	;# 
  1144  0311                     	;# 
  1145  0312                     	;# 
  1146  0313                     	;# 
  1147  0318                     	;# 
  1148  0318                     	;# 
  1149  0319                     	;# 
  1150  031A                     	;# 
  1151  0394                     	;# 
  1152  0395                     	;# 
  1153  0396                     	;# 
  1154  039A                     	;# 
  1155  039C                     	;# 
  1156  039D                     	;# 
  1157  039E                     	;# 
  1158  039F                     	;# 
  1159  0415                     	;# 
  1160  0416                     	;# 
  1161  0417                     	;# 
  1162  041C                     	;# 
  1163  041D                     	;# 
  1164  041E                     	;# 
  1165  0FE4                     	;# 
  1166  0FE5                     	;# 
  1167  0FE6                     	;# 
  1168  0FE7                     	;# 
  1169  0FE8                     	;# 
  1170  0FE9                     	;# 
  1171  0FEA                     	;# 
  1172  0FEB                     	;# 
  1173  0FED                     	;# 
  1174  0FEE                     	;# 
  1175  0FEF                     	;# 
  1176  0000                     	;# 
  1177  0001                     	;# 
  1178  0002                     	;# 
  1179  0003                     	;# 
  1180  0004                     	;# 
  1181  0005                     	;# 
  1182  0006                     	;# 
  1183  0007                     	;# 
  1184  0008                     	;# 
  1185  0009                     	;# 
  1186  000A                     	;# 
  1187  000B                     	;# 
  1188  000C                     	;# 
  1189  000D                     	;# 
  1190  0011                     	;# 
  1191  0012                     	;# 
  1192  0013                     	;# 
  1193  0014                     	;# 
  1194  0015                     	;# 
  1195  0016                     	;# 
  1196  0016                     	;# 
  1197  0017                     	;# 
  1198  0018                     	;# 
  1199  0019                     	;# 
  1200  001A                     	;# 
  1201  001B                     	;# 
  1202  001C                     	;# 
  1203  001E                     	;# 
  1204  001F                     	;# 
  1205  008C                     	;# 
  1206  008D                     	;# 
  1207  0091                     	;# 
  1208  0092                     	;# 
  1209  0093                     	;# 
  1210  0094                     	;# 
  1211  0095                     	;# 
  1212  0096                     	;# 
  1213  0097                     	;# 
  1214  0098                     	;# 
  1215  0099                     	;# 
  1216  009A                     	;# 
  1217  009B                     	;# 
  1218  009B                     	;# 
  1219  009C                     	;# 
  1220  009D                     	;# 
  1221  009E                     	;# 
  1222  010C                     	;# 
  1223  010D                     	;# 
  1224  0111                     	;# 
  1225  0112                     	;# 
  1226  0113                     	;# 
  1227  0114                     	;# 
  1228  0115                     	;# 
  1229  0116                     	;# 
  1230  0117                     	;# 
  1231  0118                     	;# 
  1232  0119                     	;# 
  1233  011A                     	;# 
  1234  011B                     	;# 
  1235  011D                     	;# 
  1236  011E                     	;# 
  1237  018C                     	;# 
  1238  018D                     	;# 
  1239  0191                     	;# 
  1240  0191                     	;# 
  1241  0192                     	;# 
  1242  0193                     	;# 
  1243  0193                     	;# 
  1244  0193                     	;# 
  1245  0194                     	;# 
  1246  0195                     	;# 
  1247  0196                     	;# 
  1248  0199                     	;# 
  1249  019A                     	;# 
  1250  019B                     	;# 
  1251  019B                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019C                     	;# 
  1255  019C                     	;# 
  1256  019D                     	;# 
  1257  019E                     	;# 
  1258  019F                     	;# 
  1259  020C                     	;# 
  1260  020D                     	;# 
  1261  0211                     	;# 
  1262  0211                     	;# 
  1263  0212                     	;# 
  1264  0212                     	;# 
  1265  0213                     	;# 
  1266  0213                     	;# 
  1267  0214                     	;# 
  1268  0214                     	;# 
  1269  0215                     	;# 
  1270  0215                     	;# 
  1271  0215                     	;# 
  1272  0216                     	;# 
  1273  0216                     	;# 
  1274  0217                     	;# 
  1275  0217                     	;# 
  1276  0219                     	;# 
  1277  021A                     	;# 
  1278  021B                     	;# 
  1279  021C                     	;# 
  1280  021D                     	;# 
  1281  021E                     	;# 
  1282  021F                     	;# 
  1283  0291                     	;# 
  1284  0291                     	;# 
  1285  0292                     	;# 
  1286  0293                     	;# 
  1287  0294                     	;# 
  1288  0295                     	;# 
  1289  0295                     	;# 
  1290  0296                     	;# 
  1291  0298                     	;# 
  1292  0298                     	;# 
  1293  0299                     	;# 
  1294  029A                     	;# 
  1295  029B                     	;# 
  1296  029C                     	;# 
  1297  029C                     	;# 
  1298  029D                     	;# 
  1299  029E                     	;# 
  1300  029E                     	;# 
  1301  0311                     	;# 
  1302  0311                     	;# 
  1303  0312                     	;# 
  1304  0313                     	;# 
  1305  0318                     	;# 
  1306  0318                     	;# 
  1307  0319                     	;# 
  1308  031A                     	;# 
  1309  0394                     	;# 
  1310  0395                     	;# 
  1311  0396                     	;# 
  1312  039A                     	;# 
  1313  039C                     	;# 
  1314  039D                     	;# 
  1315  039E                     	;# 
  1316  039F                     	;# 
  1317  0415                     	;# 
  1318  0416                     	;# 
  1319  0417                     	;# 
  1320  041C                     	;# 
  1321  041D                     	;# 
  1322  041E                     	;# 
  1323  0FE4                     	;# 
  1324  0FE5                     	;# 
  1325  0FE6                     	;# 
  1326  0FE7                     	;# 
  1327  0FE8                     	;# 
  1328  0FE9                     	;# 
  1329  0FEA                     	;# 
  1330  0FEB                     	;# 
  1331  0FED                     	;# 
  1332  0FEE                     	;# 
  1333  0FEF                     	;# 
  1334  000D                     _PORTB	set	13
  1335  000C                     _PORTA	set	12
  1336  001C                     _T2CONbits	set	28
  1337  001B                     _PR2	set	27
  1338  000B                     _INTCONbits	set	11
  1339  009B                     _ADRESL	set	155
  1340  009C                     _ADRESH	set	156
  1341  009D                     _ADCON0bits	set	157
  1342  008D                     _TRISB	set	141
  1343  008C                     _TRISA	set	140
  1344  009E                     _ADCON1	set	158
  1345  009D                     _ADCON0	set	157
  1346  0095                     _OPTION_REG	set	149
  1347  0095                     _OPTION_REGbits	set	149
  1348  0091                     _PIE1bits	set	145
  1349  0099                     _OSCCONbits	set	153
  1350  010D                     _LATB	set	269
  1351  010C                     _LATA	set	268
  1352  011D                     _APFCON0bits	set	285
  1353  018D                     _ANSELB	set	397
  1354  018C                     _ANSELA	set	396
  1355  0293                     _CCP1CONbits	set	659
  1356  0296                     _PSTR1CONbits	set	662
  1357  0291                     _CCPR1L	set	657
  1358  0293                     _CCP1CON	set	659
  1359                           
  1360                           	psect	stringtext1
  1361  0515                     __pstringtext1:
  1362  0515                     STR_1:
  1363  0515  3428               	retlw	40	;'('
  1364  0516  3428               	retlw	40	;'('
  1365  0517  3449               	retlw	73	;'I'
  1366  0518  344E               	retlw	78	;'N'
  1367  0519  3454               	retlw	84	;'T'
  1368  051A  3443               	retlw	67	;'C'
  1369  051B  344F               	retlw	79	;'O'
  1370  051C  344E               	retlw	78	;'N'
  1371  051D  3429               	retlw	41	;')'
  1372  051E  3426               	retlw	38	;'&'
  1373  051F  3430               	retlw	48	;'0'
  1374  0520  3437               	retlw	55	;'7'
  1375  0521  3446               	retlw	70	;'F'
  1376  0522  3468               	retlw	104	;'h'
  1377  0523  3429               	retlw	41	;')'
  1378  0524  342C               	retlw	44	;','
  1379  0525  3432               	retlw	50	;'2'
  1380  0526  3400               	retlw	0
  1381                           
  1382                           	psect	stringtext2
  1383  0000                     __pstringtext2:
  1384  0515                     
  1385                           	psect	cinit
  1386  0069                     start_initialization:	
  1387                           ; #config settings
  1388                           
  1389  0069                     __initialization:
  1390                           
  1391                           ; Clear objects allocated to BANK0
  1392  0069  3020               	movlw	low __pbssBANK0
  1393  006A  0084               	movwf	4
  1394  006B  3000               	movlw	high __pbssBANK0
  1395  006C  0085               	movwf	5
  1396  006D  3032               	movlw	50
  1397  006E  3185  2547  3180   	fcall	clear_ram0
  1398                           
  1399                           ; Clear objects allocated to BANK1
  1400  0071  30A0               	movlw	low __pbssBANK1
  1401  0072  0084               	movwf	4
  1402  0073  3000               	movlw	high __pbssBANK1
  1403  0074  0085               	movwf	5
  1404  0075  3020               	movlw	32
  1405  0076  3185  2547  3180   	fcall	clear_ram0
  1406  0079                     end_of_initialization:	
  1407                           ;End of C runtime variable initialization code
  1408                           
  1409  0079                     __end_of__initialization:
  1410  0079  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1411  007A  0020               	movlb	0
  1412  007B  3184  2CCA         	ljmp	_main	;jump to C main() function
  1413                           
  1414                           	psect	bssBANK0
  1415  0020                     __pbssBANK0:
  1416  0020                     _freqPotFIFO:
  1417  0020                     	ds	32
  1418  0040                     _clockFrequency:
  1419  0040                     	ds	4
  1420  0044                     _filteredDutyPot:
  1421  0044                     	ds	2
  1422  0046                     _filteredFreqPot:
  1423  0046                     	ds	2
  1424  0048                     _prevDuty:
  1425  0048                     	ds	2
  1426  004A                     _setDuty:
  1427  004A                     	ds	2
  1428  004C                     _emergencyStop:
  1429  004C                     	ds	1
  1430  004D                     _timerSlotQuarter:
  1431  004D                     	ds	1
  1432  004E                     _timerSlotHalf:
  1433  004E                     	ds	1
  1434  004F                     _potSetCount:
  1435  004F                     	ds	1
  1436  0050                     _prevPeriod:
  1437  0050                     	ds	1
  1438  0051                     _setPeriod:
  1439  0051                     	ds	1
  1440                           
  1441                           	psect	bssBANK1
  1442  00A0                     __pbssBANK1:
  1443  00A0                     _dutyPotFIFO:
  1444  00A0                     	ds	32
  1445                           
  1446                           	psect	clrtext
  1447  0547                     clear_ram0:	
  1448                           ;	Called with FSR0 containing the base address, and
  1449                           ;	WREG with the size to clear
  1450                           
  1451  0547  0064               	clrwdt	;clear the watchdog before getting into this loop
  1452  0548                     clrloop0:
  1453  0548  0180               	clrf	0	;clear RAM location pointed to by FSR
  1454  0549  3101               	addfsr 0,1
  1455  054A  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1456  054B  2D48               	goto	clrloop0	;have we reached the end yet?
  1457  054C  3400               	retlw	0	;all done for this memory range, return
  1458                           
  1459                           	psect	cstackCOMMON
  1460  0070                     __pcstackCOMMON:
  1461  0070                     ?_currentTripRead:
  1462  0070                     ?_setPWMDutyandPeriod:	
  1463                           ; 1 bytes @ 0x0
  1464                           
  1465  0070                     ?_writeGPIO:	
  1466                           ; 1 bytes @ 0x0
  1467                           
  1468  0070                     ?_runPotScaling:	
  1469                           ; 1 bytes @ 0x0
  1470                           
  1471  0070                     ?_setupInternalOscillator:	
  1472                           ; 1 bytes @ 0x0
  1473                           
  1474  0070                     ?_setupPWM:	
  1475                           ; 1 bytes @ 0x0
  1476                           
  1477  0070                     ?_setupTimer0Interrupt:	
  1478                           ; 1 bytes @ 0x0
  1479                           
  1480  0070                     ?_initialiseADCModule:	
  1481                           ; 1 bytes @ 0x0
  1482                           
  1483  0070                     ?_initialiseCurrentSensors:	
  1484                           ; 1 bytes @ 0x0
  1485                           
  1486  0070                     ?_initialisePotentiometers:	
  1487                           ; 1 bytes @ 0x0
  1488                           
  1489  0070                     ?_Tick980Hz:	
  1490                           ; 1 bytes @ 0x0
  1491                           
  1492  0070                     ?_initialiseADCPin:	
  1493                           ; 1 bytes @ 0x0
  1494                           
  1495  0070                     ?_readGPIO:	
  1496                           ; 1 bytes @ 0x0
  1497                           
  1498  0070                     ??_readGPIO:	
  1499                           ; 1 bytes @ 0x0
  1500                           
  1501  0070                     ?_readADCRaw:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?___lmul:	
  1505                           ; 2 bytes @ 0x0
  1506                           
  1507  0070                     writeGPIO@writeValue:	
  1508                           ; 4 bytes @ 0x0
  1509                           
  1510  0070                     setPWMDutyandPeriod@dutyCycle:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ___lmul@multiplier:	
  1514                           ; 2 bytes @ 0x0
  1515                           
  1516                           
  1517                           ; 4 bytes @ 0x0
  1518  0070                     	ds	1
  1519  0071                     ??_writeGPIO:
  1520                           
  1521                           ; 1 bytes @ 0x1
  1522  0071                     	ds	1
  1523  0072                     ??_readADCRaw:
  1524  0072                     setPWMDutyandPeriod@period:	
  1525                           ; 1 bytes @ 0x2
  1526                           
  1527                           
  1528                           ; 1 bytes @ 0x2
  1529  0072                     	ds	1
  1530  0073                     ??_setPWMDutyandPeriod:
  1531  0073                     writeGPIO@portType:	
  1532                           ; 1 bytes @ 0x3
  1533                           
  1534  0073                     readGPIO@portType:	
  1535                           ; 1 bytes @ 0x3
  1536                           
  1537                           
  1538                           ; 1 bytes @ 0x3
  1539  0073                     	ds	1
  1540  0074                     writeGPIO@gpioNumber:
  1541  0074                     readGPIO@gpioNumber:	
  1542                           ; 1 bytes @ 0x4
  1543                           
  1544  0074                     readADCRaw@returnValue:	
  1545                           ; 1 bytes @ 0x4
  1546                           
  1547  0074                     ___lmul@multiplicand:	
  1548                           ; 2 bytes @ 0x4
  1549                           
  1550                           
  1551                           ; 4 bytes @ 0x4
  1552  0074                     	ds	1
  1553  0075                     writeGPIO@portNumber:
  1554  0075                     readGPIO@portNumber:	
  1555                           ; 1 bytes @ 0x5
  1556                           
  1557                           
  1558                           ; 1 bytes @ 0x5
  1559  0075                     	ds	1
  1560  0076                     ??_currentTripRead:
  1561  0076                     readADCRaw@channel:	
  1562                           ; 1 bytes @ 0x6
  1563                           
  1564  0076                     _currentTripRead$672:	
  1565                           ; 1 bytes @ 0x6
  1566                           
  1567                           
  1568                           ; 1 bytes @ 0x6
  1569  0076                     	ds	1
  1570  0077                     readADCRaw@gpioValid:
  1571                           
  1572                           ; 1 bytes @ 0x7
  1573  0077                     	ds	1
  1574  0078                     ??___lmul:
  1575  0078                     readADCRaw@i:	
  1576                           ; 1 bytes @ 0x8
  1577                           
  1578  0078                     ___lmul@product:	
  1579                           ; 1 bytes @ 0x8
  1580                           
  1581                           
  1582                           ; 4 bytes @ 0x8
  1583  0078                     	ds	1
  1584  0079                     readADCRaw@i_556:
  1585                           
  1586                           ; 1 bytes @ 0x9
  1587  0079                     	ds	1
  1588  007A                     readADCRaw@gpioNumber:
  1589                           
  1590                           ; 1 bytes @ 0xA
  1591  007A                     	ds	1
  1592  007B                     ?_readFilteredDutyPot:
  1593  007B                     ?_readFilteredFreqPot:	
  1594                           ; 2 bytes @ 0xB
  1595                           
  1596                           
  1597                           ; 2 bytes @ 0xB
  1598  007B                     	ds	2
  1599  007D                     ??_Tick980Hz:
  1600                           
  1601                           ; 1 bytes @ 0xD
  1602  007D                     	ds	1
  1603                           
  1604                           	psect	cstackBANK0
  1605  0052                     __pcstackBANK0:
  1606  0052                     ??_readFilteredDutyPot:
  1607  0052                     ??_readFilteredFreqPot:	
  1608                           ; 1 bytes @ 0x0
  1609                           
  1610  0052                     ??_runPotScaling:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x0
  1615  0052                     	ds	4
  1616  0056                     readFilteredDutyPot@sumOfSamples:
  1617  0056                     readFilteredFreqPot@sumOfSamples:	
  1618                           ; 4 bytes @ 0x4
  1619                           
  1620                           
  1621                           ; 4 bytes @ 0x4
  1622  0056                     	ds	1
  1623  0057                     runPotScaling@check1:
  1624                           
  1625                           ; 4 bytes @ 0x5
  1626  0057                     	ds	3
  1627  005A                     readFilteredDutyPot@i_638:
  1628  005A                     readFilteredFreqPot@i_642:	
  1629                           ; 1 bytes @ 0x8
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0x8
  1633  005A                     	ds	1
  1634  005B                     readFilteredDutyPot@i:
  1635  005B                     readFilteredFreqPot@i:	
  1636                           ; 1 bytes @ 0x9
  1637                           
  1638                           
  1639                           ; 1 bytes @ 0x9
  1640  005B                     	ds	1
  1641  005C                     ??_setupInternalOscillator:
  1642  005C                     ??_setupTimer0Interrupt:	
  1643                           ; 1 bytes @ 0xA
  1644                           
  1645  005C                     ??_initialiseADCModule:	
  1646                           ; 1 bytes @ 0xA
  1647                           
  1648  005C                     ?_initialiseGPIO:	
  1649                           ; 1 bytes @ 0xA
  1650                           
  1651  005C                     ??_initialiseADCPin:	
  1652                           ; 1 bytes @ 0xA
  1653                           
  1654  005C                     initialiseGPIO@direction:	
  1655                           ; 1 bytes @ 0xA
  1656                           
  1657                           
  1658                           ; 1 bytes @ 0xA
  1659  005C                     	ds	1
  1660  005D                     ??_initialiseGPIO:
  1661                           
  1662                           ; 1 bytes @ 0xB
  1663  005D                     	ds	1
  1664  005E                     setupInternalOscillator@selectedFreq:
  1665  005E                     initialiseADCPin@gpioValid:	
  1666                           ; 1 bytes @ 0xC
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0xC
  1670  005E                     	ds	1
  1671  005F                     initialiseADCPin@portType:
  1672  005F                     initialiseGPIO@portType:	
  1673                           ; 1 bytes @ 0xD
  1674                           
  1675                           
  1676                           ; 1 bytes @ 0xD
  1677  005F                     	ds	1
  1678  0060                     initialiseADCPin@portNumber:
  1679  0060                     initialiseGPIO@gpioNumber:	
  1680                           ; 1 bytes @ 0xE
  1681                           
  1682                           
  1683                           ; 1 bytes @ 0xE
  1684  0060                     	ds	1
  1685  0061                     initialiseADCPin@gpioNumber:
  1686  0061                     initialiseGPIO@portNumber:	
  1687                           ; 1 bytes @ 0xF
  1688                           
  1689                           
  1690                           ; 1 bytes @ 0xF
  1691  0061                     	ds	1
  1692  0062                     ??_setupPWM:
  1693  0062                     ??_initialiseCurrentSensors:	
  1694                           ; 1 bytes @ 0x10
  1695                           
  1696  0062                     ??_initialisePotentiometers:	
  1697                           ; 1 bytes @ 0x10
  1698                           
  1699  0062                     ?_main:	
  1700                           ; 1 bytes @ 0x10
  1701                           
  1702  0062                     main@argc:	
  1703                           ; 2 bytes @ 0x10
  1704                           
  1705                           
  1706                           ; 2 bytes @ 0x10
  1707  0062                     	ds	2
  1708  0064                     main@argv:
  1709                           
  1710                           ; 2 bytes @ 0x12
  1711  0064                     	ds	2
  1712  0066                     ??_main:
  1713                           
  1714                           	psect	maintext
  1715  04CA                     __pmaintext:	
  1716                           ; 1 bytes @ 0x14
  1717 ;;
  1718 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1719 ;;
  1720 ;; *************** function _main *****************
  1721 ;; Defined at:
  1722 ;;		line 92 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  argc            2   16[BANK0 ] int 
  1725 ;;  argv            2   18[BANK0 ] PTR PTR unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2   16[BANK0 ] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : B1F/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1737 ;;      Params:         0       4       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0
  1740 ;;      Totals:         0       4       0       0       0       0
  1741 ;;Total ram usage:        4 bytes
  1742 ;; Hardware stack levels required when called: 5
  1743 ;; This function calls:
  1744 ;;		_initialiseADCModule
  1745 ;;		_initialiseCurrentSensors
  1746 ;;		_initialiseGPIO
  1747 ;;		_initialisePotentiometers
  1748 ;;		_setupInternalOscillator
  1749 ;;		_setupPWM
  1750 ;;		_setupTimer0Interrupt
  1751 ;; This function is called by:
  1752 ;;		Startup code after reset
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756  04CA                     _main:	
  1757                           ;psect for function _main
  1758                           
  1759  04CA                     l1806:	
  1760                           ;incstack = 0
  1761                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1762                           
  1763                           
  1764                           ;main.c: 94:     setupInternalOscillator(freq32M);
  1765  04CA  300A               	movlw	10
  1766  04CB  3180  207D  3184   	fcall	_setupInternalOscillator
  1767  04CE                     l1808:
  1768                           
  1769                           ;main.c: 96:     setupPWM();
  1770  04CE  3184  24E6  3184   	fcall	_setupPWM
  1771  04D1                     l1810:
  1772                           
  1773                           ;main.c: 97:     setupTimer0Interrupt();
  1774  04D1  3185  253F  3184   	fcall	_setupTimer0Interrupt
  1775  04D4                     l1812:
  1776                           
  1777                           ;main.c: 98:     initialiseADCModule();
  1778  04D4  3185  254D  3184   	fcall	_initialiseADCModule
  1779  04D7                     l1814:
  1780                           
  1781                           ;main.c: 99:     initialiseCurrentSensors();
  1782  04D7  3185  2527  3184   	fcall	_initialiseCurrentSensors
  1783  04DA                     l1816:
  1784                           
  1785                           ;main.c: 100:     initialisePotentiometers();
  1786  04DA  3185  2536  3184   	fcall	_initialisePotentiometers
  1787  04DD                     l1818:
  1788                           
  1789                           ;main.c: 101:     initialiseGPIO(pinRB4, 0);
  1790  04DD  0020               	movlb	0	; select bank0
  1791  04DE  01DC               	clrf	initialiseGPIO@direction
  1792  04DF  300C               	movlw	12
  1793  04E0  3181  2158  3184   	fcall	_initialiseGPIO
  1794  04E3                     l73:	
  1795                           ;main.c: 103:     while(1){
  1796                           
  1797  04E3                     l74:	
  1798                           ;main.c: 105:     }
  1799                           
  1800  04E3  2CE3               	goto	l73
  1801  04E4  3180  2867         	ljmp	start
  1802  04E6                     __end_of_main:
  1803                           
  1804                           	psect	text1
  1805  053F                     __ptext1:	
  1806 ;; *************** function _setupTimer0Interrupt *****************
  1807 ;; Defined at:
  1808 ;;		line 17 in file "Timer0.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;		None
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      void 
  1815 ;; Registers used:
  1816 ;;		wreg
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1822 ;;      Params:         0       0       0       0       0       0
  1823 ;;      Locals:         0       0       0       0       0       0
  1824 ;;      Temps:          0       0       0       0       0       0
  1825 ;;      Totals:         0       0       0       0       0       0
  1826 ;;Total ram usage:        0 bytes
  1827 ;; Hardware stack levels used: 1
  1828 ;; Hardware stack levels required when called: 3
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_main
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836  053F                     _setupTimer0Interrupt:	
  1837                           ;psect for function _setupTimer0Interrupt
  1838                           
  1839  053F                     l1766:	
  1840                           ;incstack = 0
  1841                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1842                           
  1843                           
  1844                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1845  053F  178B               	bsf	11,7	;volatile
  1846                           
  1847                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1848  0540  168B               	bsf	11,5	;volatile
  1849                           
  1850                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1851  0541  0021               	movlb	1	; select bank1
  1852  0542  1295               	bcf	21,5	;volatile
  1853                           
  1854                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1855  0543  1195               	bcf	21,3	;volatile
  1856  0544                     l1768:
  1857                           
  1858                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1859  0544  3004               	movlw	4
  1860  0545  0095               	movwf	21	;volatile
  1861  0546                     l148:
  1862  0546  0008               	return
  1863  0547                     __end_of_setupTimer0Interrupt:
  1864                           
  1865                           	psect	text2
  1866  04E6                     __ptext2:	
  1867 ;; *************** function _setupPWM *****************
  1868 ;; Defined at:
  1869 ;;		line 16 in file "PWM.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2, status,0, pclath, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1883 ;;      Params:         0       0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0
  1885 ;;      Temps:          0       0       0       0       0       0
  1886 ;;      Totals:         0       0       0       0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used: 1
  1889 ;; Hardware stack levels required when called: 4
  1890 ;; This function calls:
  1891 ;;		_initialiseGPIO
  1892 ;; This function is called by:
  1893 ;;		_main
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897  04E6                     _setupPWM:	
  1898                           ;psect for function _setupPWM
  1899                           
  1900  04E6                     l1748:	
  1901                           ;incstack = 0
  1902                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  1903                           
  1904                           
  1905                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  1906  04E6  300C               	movlw	12
  1907  04E7  0025               	movlb	5	; select bank5
  1908  04E8  0093               	movwf	19	;volatile
  1909  04E9                     l1750:
  1910                           
  1911                           ;PWM.c: 20:     PR2 = 0;
  1912  04E9  0020               	movlb	0	; select bank0
  1913  04EA  019B               	clrf	27	;volatile
  1914  04EB                     l1752:
  1915                           
  1916                           ;PWM.c: 21:     CCPR1L = 0;
  1917  04EB  0025               	movlb	5	; select bank5
  1918  04EC  0191               	clrf	17	;volatile
  1919  04ED                     l1754:
  1920                           
  1921                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  1922  04ED  0022               	movlb	2	; select bank2
  1923  04EE  151D               	bsf	29,2	;volatile
  1924  04EF                     l1756:
  1925                           
  1926                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  1927  04EF  0025               	movlb	5	; select bank5
  1928  04F0  1596               	bsf	22,3	;volatile
  1929  04F1                     l1758:
  1930                           
  1931                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  1932  04F1  30FC               	movlw	-4
  1933  04F2  0020               	movlb	0	; select bank0
  1934  04F3  059C               	andwf	28,f	;volatile
  1935  04F4                     l1760:
  1936                           
  1937                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  1938  04F4  0021               	movlb	1	; select bank1
  1939  04F5  1091               	bcf	17,1	;volatile
  1940  04F6                     l1762:
  1941                           
  1942                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  1943  04F6  0020               	movlb	0	; select bank0
  1944  04F7  151C               	bsf	28,2	;volatile
  1945  04F8                     l1764:
  1946                           
  1947                           ;PWM.c: 34:     initialiseGPIO(pinRA6, 0);
  1948  04F8  01DC               	clrf	initialiseGPIO@direction
  1949  04F9  3006               	movlw	6
  1950  04FA  3181  2158  3184   	fcall	_initialiseGPIO
  1951  04FD                     l123:
  1952  04FD  0008               	return
  1953  04FE                     __end_of_setupPWM:
  1954                           
  1955                           	psect	text3
  1956  007D                     __ptext3:	
  1957 ;; *************** function _setupInternalOscillator *****************
  1958 ;; Defined at:
  1959 ;;		line 109 in file "main.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  selectedFreq    1    wreg     const enum E2830
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  selectedFreq    1   12[BANK0 ] const enum E2830
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1973 ;;      Params:         0       0       0       0       0       0
  1974 ;;      Locals:         0       1       0       0       0       0
  1975 ;;      Temps:          0       2       0       0       0       0
  1976 ;;      Totals:         0       3       0       0       0       0
  1977 ;;Total ram usage:        3 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 3
  1980 ;; This function calls:
  1981 ;;		Nothing
  1982 ;; This function is called by:
  1983 ;;		_main
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987  007D                     _setupInternalOscillator:	
  1988                           ;psect for function _setupInternalOscillator
  1989                           
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  1993                           ;setupInternalOscillator@selectedFreq stored from wreg
  1994  007D  0020               	movlb	0	; select bank0
  1995  007E  00DE               	movwf	setupInternalOscillator@selectedFreq
  1996  007F                     l1670:
  1997                           
  1998                           ;main.c: 113:     switch(selectedFreq){
  1999  007F  292C               	goto	l1740
  2000  0080                     l1672:
  2001  0080  3087               	movlw	-121
  2002  0081  0021               	movlb	1	; select bank1
  2003  0082  0599               	andwf	25,f	;volatile
  2004  0083                     l1674:
  2005  0083  1399               	bcf	25,7	;volatile
  2006  0084                     l1676:
  2007  0084  3000               	movlw	0
  2008  0085  0020               	movlb	0	; select bank0
  2009  0086  00C3               	movwf	_clockFrequency+3
  2010  0087  3000               	movlw	0
  2011  0088  00C2               	movwf	_clockFrequency+2
  2012  0089  3079               	movlw	121
  2013  008A  00C1               	movwf	_clockFrequency+1
  2014  008B  3018               	movlw	24
  2015  008C  00C0               	movwf	_clockFrequency
  2016  008D  2957               	goto	l92
  2017  008E                     l1678:
  2018  008E  0021               	movlb	1	; select bank1
  2019  008F  0819               	movf	25,w	;volatile
  2020  0090  3987               	andlw	-121
  2021  0091  3820               	iorlw	32
  2022  0092  0099               	movwf	25	;volatile
  2023  0093                     l1680:
  2024  0093  1399               	bcf	25,7	;volatile
  2025  0094                     l1682:
  2026  0094  3000               	movlw	0
  2027  0095  0020               	movlb	0	; select bank0
  2028  0096  00C3               	movwf	_clockFrequency+3
  2029  0097  3000               	movlw	0
  2030  0098  00C2               	movwf	_clockFrequency+2
  2031  0099  30F4               	movlw	244
  2032  009A  00C1               	movwf	_clockFrequency+1
  2033  009B  3024               	movlw	36
  2034  009C  00C0               	movwf	_clockFrequency
  2035  009D  2957               	goto	l92
  2036  009E                     l1684:
  2037  009E  0021               	movlb	1	; select bank1
  2038  009F  0819               	movf	25,w	;volatile
  2039  00A0  3987               	andlw	-121
  2040  00A1  3828               	iorlw	40
  2041  00A2  0099               	movwf	25	;volatile
  2042  00A3                     l1686:
  2043  00A3  1399               	bcf	25,7	;volatile
  2044  00A4                     l1688:
  2045  00A4  3000               	movlw	0
  2046  00A5  0020               	movlb	0	; select bank0
  2047  00A6  00C3               	movwf	_clockFrequency+3
  2048  00A7  3001               	movlw	1
  2049  00A8  00C2               	movwf	_clockFrequency+2
  2050  00A9  30E8               	movlw	232
  2051  00AA  00C1               	movwf	_clockFrequency+1
  2052  00AB  3048               	movlw	72
  2053  00AC  00C0               	movwf	_clockFrequency
  2054  00AD  2957               	goto	l92
  2055  00AE                     l1690:
  2056  00AE  0021               	movlb	1	; select bank1
  2057  00AF  0819               	movf	25,w	;volatile
  2058  00B0  3987               	andlw	-121
  2059  00B1  3830               	iorlw	48
  2060  00B2  0099               	movwf	25	;volatile
  2061  00B3                     l1692:
  2062  00B3  1399               	bcf	25,7	;volatile
  2063  00B4                     l1694:
  2064  00B4  3000               	movlw	0
  2065  00B5  0020               	movlb	0	; select bank0
  2066  00B6  00C3               	movwf	_clockFrequency+3
  2067  00B7  3003               	movlw	3
  2068  00B8  00C2               	movwf	_clockFrequency+2
  2069  00B9  30D0               	movlw	208
  2070  00BA  00C1               	movwf	_clockFrequency+1
  2071  00BB  3090               	movlw	144
  2072  00BC  00C0               	movwf	_clockFrequency
  2073  00BD  2957               	goto	l92
  2074  00BE                     l1696:
  2075  00BE  0021               	movlb	1	; select bank1
  2076  00BF  0819               	movf	25,w	;volatile
  2077  00C0  3987               	andlw	-121
  2078  00C1  3838               	iorlw	56
  2079  00C2  0099               	movwf	25	;volatile
  2080  00C3                     l1698:
  2081  00C3  1399               	bcf	25,7	;volatile
  2082  00C4                     l1700:
  2083  00C4  3000               	movlw	0
  2084  00C5  0020               	movlb	0	; select bank0
  2085  00C6  00C3               	movwf	_clockFrequency+3
  2086  00C7  3007               	movlw	7
  2087  00C8  00C2               	movwf	_clockFrequency+2
  2088  00C9  30A1               	movlw	161
  2089  00CA  00C1               	movwf	_clockFrequency+1
  2090  00CB  3020               	movlw	32
  2091  00CC  00C0               	movwf	_clockFrequency
  2092  00CD  2957               	goto	l92
  2093  00CE                     l1702:
  2094  00CE  0021               	movlb	1	; select bank1
  2095  00CF  0819               	movf	25,w	;volatile
  2096  00D0  3987               	andlw	-121
  2097  00D1  3858               	iorlw	88
  2098  00D2  0099               	movwf	25	;volatile
  2099  00D3                     l1704:
  2100  00D3  1399               	bcf	25,7	;volatile
  2101  00D4                     l1706:
  2102  00D4  3000               	movlw	0
  2103  00D5  0020               	movlb	0	; select bank0
  2104  00D6  00C3               	movwf	_clockFrequency+3
  2105  00D7  300F               	movlw	15
  2106  00D8  00C2               	movwf	_clockFrequency+2
  2107  00D9  3042               	movlw	66
  2108  00DA  00C1               	movwf	_clockFrequency+1
  2109  00DB  3040               	movlw	64
  2110  00DC  00C0               	movwf	_clockFrequency
  2111  00DD  2957               	goto	l92
  2112  00DE                     l1708:
  2113  00DE  0021               	movlb	1	; select bank1
  2114  00DF  0819               	movf	25,w	;volatile
  2115  00E0  3987               	andlw	-121
  2116  00E1  3860               	iorlw	96
  2117  00E2  0099               	movwf	25	;volatile
  2118  00E3                     l1710:
  2119  00E3  1399               	bcf	25,7	;volatile
  2120  00E4                     l1712:
  2121  00E4  3000               	movlw	0
  2122  00E5  0020               	movlb	0	; select bank0
  2123  00E6  00C3               	movwf	_clockFrequency+3
  2124  00E7  301E               	movlw	30
  2125  00E8  00C2               	movwf	_clockFrequency+2
  2126  00E9  3084               	movlw	132
  2127  00EA  00C1               	movwf	_clockFrequency+1
  2128  00EB  3080               	movlw	128
  2129  00EC  00C0               	movwf	_clockFrequency
  2130  00ED  2957               	goto	l92
  2131  00EE                     l1714:
  2132  00EE  0021               	movlb	1	; select bank1
  2133  00EF  0819               	movf	25,w	;volatile
  2134  00F0  3987               	andlw	-121
  2135  00F1  3868               	iorlw	104
  2136  00F2  0099               	movwf	25	;volatile
  2137  00F3                     l1716:
  2138  00F3  1399               	bcf	25,7	;volatile
  2139  00F4                     l1718:
  2140  00F4  3000               	movlw	0
  2141  00F5  0020               	movlb	0	; select bank0
  2142  00F6  00C3               	movwf	_clockFrequency+3
  2143  00F7  303D               	movlw	61
  2144  00F8  00C2               	movwf	_clockFrequency+2
  2145  00F9  3009               	movlw	9
  2146  00FA  00C1               	movwf	_clockFrequency+1
  2147  00FB  3000               	movlw	0
  2148  00FC  00C0               	movwf	_clockFrequency
  2149  00FD  2957               	goto	l92
  2150  00FE                     l1720:
  2151  00FE  0021               	movlb	1	; select bank1
  2152  00FF  0819               	movf	25,w	;volatile
  2153  0100  3987               	andlw	-121
  2154  0101  3870               	iorlw	112
  2155  0102  0099               	movwf	25	;volatile
  2156  0103                     l1722:
  2157  0103  1399               	bcf	25,7	;volatile
  2158  0104                     l1724:
  2159  0104  3000               	movlw	0
  2160  0105  0020               	movlb	0	; select bank0
  2161  0106  00C3               	movwf	_clockFrequency+3
  2162  0107  307A               	movlw	122
  2163  0108  00C2               	movwf	_clockFrequency+2
  2164  0109  3012               	movlw	18
  2165  010A  00C1               	movwf	_clockFrequency+1
  2166  010B  3000               	movlw	0
  2167  010C  00C0               	movwf	_clockFrequency
  2168  010D  2957               	goto	l92
  2169  010E                     l1726:
  2170  010E  3078               	movlw	120
  2171  010F  0021               	movlb	1	; select bank1
  2172  0110  0499               	iorwf	25,f	;volatile
  2173  0111                     l1728:
  2174  0111  1399               	bcf	25,7	;volatile
  2175  0112                     l1730:
  2176  0112  3000               	movlw	0
  2177  0113  0020               	movlb	0	; select bank0
  2178  0114  00C3               	movwf	_clockFrequency+3
  2179  0115  30F4               	movlw	244
  2180  0116  00C2               	movwf	_clockFrequency+2
  2181  0117  3024               	movlw	36
  2182  0118  00C1               	movwf	_clockFrequency+1
  2183  0119  3000               	movlw	0
  2184  011A  00C0               	movwf	_clockFrequency
  2185  011B  2957               	goto	l92
  2186  011C                     l1732:
  2187  011C  0021               	movlb	1	; select bank1
  2188  011D  0819               	movf	25,w	;volatile
  2189  011E  3987               	andlw	-121
  2190  011F  3870               	iorlw	112
  2191  0120  0099               	movwf	25	;volatile
  2192  0121                     l1734:
  2193  0121  1799               	bsf	25,7	;volatile
  2194  0122                     l1736:
  2195  0122  3001               	movlw	1
  2196  0123  0020               	movlb	0	; select bank0
  2197  0124  00C3               	movwf	_clockFrequency+3
  2198  0125  30E8               	movlw	232
  2199  0126  00C2               	movwf	_clockFrequency+2
  2200  0127  3048               	movlw	72
  2201  0128  00C1               	movwf	_clockFrequency+1
  2202  0129  3000               	movlw	0
  2203  012A  00C0               	movwf	_clockFrequency
  2204  012B  2957               	goto	l92
  2205  012C                     l1740:
  2206  012C  085E               	movf	setupInternalOscillator@selectedFreq,w
  2207  012D  00DC               	movwf	??_setupInternalOscillator
  2208  012E  01DD               	clrf	??_setupInternalOscillator+1
  2209                           
  2210                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2211                           ; Switch size 1, requested type "simple"
  2212                           ; Number of cases is 1, Range of values is 0 to 0
  2213                           ; switch strategies available:
  2214                           ; Name         Instructions Cycles
  2215                           ; simple_byte            4     3 (average)
  2216                           ; direct_byte            8     6 (fixed)
  2217                           ; jumptable            260     6 (fixed)
  2218                           ;	Chosen strategy is simple_byte
  2219  012F  085D               	movf	??_setupInternalOscillator+1,w
  2220  0130  3A00               	xorlw	0	; case 0
  2221  0131  1903               	skipnz
  2222  0132  2934               	goto	l1850
  2223  0133  2957               	goto	l92
  2224  0134                     l1850:
  2225                           
  2226                           ; Switch size 1, requested type "simple"
  2227                           ; Number of cases is 11, Range of values is 0 to 10
  2228                           ; switch strategies available:
  2229                           ; Name         Instructions Cycles
  2230                           ; direct_byte           28     6 (fixed)
  2231                           ; simple_byte           34    18 (average)
  2232                           ; jumptable            260     6 (fixed)
  2233                           ;	Chosen strategy is simple_byte
  2234  0134  085C               	movf	??_setupInternalOscillator,w
  2235  0135  3A00               	xorlw	0	; case 0
  2236  0136  1903               	skipnz
  2237  0137  2880               	goto	l1672
  2238  0138  3A01               	xorlw	1	; case 1
  2239  0139  1903               	skipnz
  2240  013A  288E               	goto	l1678
  2241  013B  3A03               	xorlw	3	; case 2
  2242  013C  1903               	skipnz
  2243  013D  289E               	goto	l1684
  2244  013E  3A01               	xorlw	1	; case 3
  2245  013F  1903               	skipnz
  2246  0140  28AE               	goto	l1690
  2247  0141  3A07               	xorlw	7	; case 4
  2248  0142  1903               	skipnz
  2249  0143  28BE               	goto	l1696
  2250  0144  3A01               	xorlw	1	; case 5
  2251  0145  1903               	skipnz
  2252  0146  28CE               	goto	l1702
  2253  0147  3A03               	xorlw	3	; case 6
  2254  0148  1903               	skipnz
  2255  0149  28DE               	goto	l1708
  2256  014A  3A01               	xorlw	1	; case 7
  2257  014B  1903               	skipnz
  2258  014C  28EE               	goto	l1714
  2259  014D  3A0F               	xorlw	15	; case 8
  2260  014E  1903               	skipnz
  2261  014F  28FE               	goto	l1720
  2262  0150  3A01               	xorlw	1	; case 9
  2263  0151  1903               	skipnz
  2264  0152  290E               	goto	l1726
  2265  0153  3A03               	xorlw	3	; case 10
  2266  0154  1903               	skipnz
  2267  0155  291C               	goto	l1732
  2268  0156  2957               	goto	l92
  2269  0157                     l92:
  2270  0157  0008               	return
  2271  0158                     __end_of_setupInternalOscillator:
  2272                           
  2273                           	psect	text4
  2274  0536                     __ptext4:	
  2275 ;; *************** function _initialisePotentiometers *****************
  2276 ;; Defined at:
  2277 ;;		line 11 in file "Potentiometer.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2291 ;;      Params:         0       0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; Hardware stack levels required when called: 4
  2298 ;; This function calls:
  2299 ;;		_initialiseADCPin
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305  0536                     _initialisePotentiometers:	
  2306                           ;psect for function _initialisePotentiometers
  2307                           
  2308  0536                     l1774:	
  2309                           ;incstack = 0
  2310                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2311                           
  2312                           
  2313                           ;Potentiometer.c: 12:     initialiseADCPin(pinRB1);
  2314  0536  3009               	movlw	9
  2315  0537  3182  2249  3185   	fcall	_initialiseADCPin
  2316                           
  2317                           ;Potentiometer.c: 13:     initialiseADCPin(pinRB2);
  2318  053A  300A               	movlw	10
  2319  053B  3182  2249  3185   	fcall	_initialiseADCPin
  2320  053E                     l300:
  2321  053E  0008               	return
  2322  053F                     __end_of_initialisePotentiometers:
  2323                           
  2324                           	psect	text5
  2325  0249                     __ptext5:	
  2326 ;; *************** function _initialiseADCPin *****************
  2327 ;; Defined at:
  2328 ;;		line 29 in file "ADC.c"
  2329 ;; Parameters:    Size  Location     Type
  2330 ;;  gpioNumber      1    wreg     const enum E2798
  2331 ;; Auto vars:     Size  Location     Type
  2332 ;;  gpioNumber      1   15[BANK0 ] const enum E2798
  2333 ;;  portNumber      1   14[BANK0 ] unsigned char 
  2334 ;;  portType        1   13[BANK0 ] unsigned char 
  2335 ;;  gpioValid       1   12[BANK0 ] unsigned char 
  2336 ;; Return value:  Size  Location     Type
  2337 ;;                  1    wreg      void 
  2338 ;; Registers used:
  2339 ;;		wreg, status,2, status,0
  2340 ;; Tracked objects:
  2341 ;;		On entry : 0/0
  2342 ;;		On exit  : 0/0
  2343 ;;		Unchanged: 0/0
  2344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2345 ;;      Params:         0       0       0       0       0       0
  2346 ;;      Locals:         0       4       0       0       0       0
  2347 ;;      Temps:          0       2       0       0       0       0
  2348 ;;      Totals:         0       6       0       0       0       0
  2349 ;;Total ram usage:        6 bytes
  2350 ;; Hardware stack levels used: 1
  2351 ;; Hardware stack levels required when called: 3
  2352 ;; This function calls:
  2353 ;;		Nothing
  2354 ;; This function is called by:
  2355 ;;		_initialisePotentiometers
  2356 ;; This function uses a non-reentrant model
  2357 ;;
  2358                           
  2359  0249                     _initialiseADCPin:	
  2360                           ;psect for function _initialiseADCPin
  2361                           
  2362                           
  2363                           ;incstack = 0
  2364                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  2365                           ;initialiseADCPin@gpioNumber stored from wreg
  2366  0249  0020               	movlb	0	; select bank0
  2367  024A  00E1               	movwf	initialiseADCPin@gpioNumber
  2368  024B                     l1438:
  2369                           
  2370                           ;ADC.c: 31:     uint8_t portNumber = 0;
  2371  024B  01E0               	clrf	initialiseADCPin@portNumber
  2372                           
  2373                           ;ADC.c: 32:     uint8_t portType = 0;
  2374  024C  01DF               	clrf	initialiseADCPin@portType
  2375                           
  2376                           ;ADC.c: 33:     uint8_t gpioValid = 0;
  2377  024D  01DE               	clrf	initialiseADCPin@gpioValid
  2378  024E                     l1440:
  2379                           
  2380                           ;ADC.c: 35:     if(gpioNumber < 4){
  2381  024E  3004               	movlw	4
  2382  024F  0261               	subwf	initialiseADCPin@gpioNumber,w
  2383  0250  1803               	skipnc
  2384  0251  2A53               	goto	u861
  2385  0252  2A54               	goto	u860
  2386  0253                     u861:
  2387  0253  2A5B               	goto	l1448
  2388  0254                     u860:
  2389  0254                     l1442:
  2390                           
  2391                           ;ADC.c: 36:         portNumber = gpioNumber;
  2392  0254  0861               	movf	initialiseADCPin@gpioNumber,w
  2393  0255  00DC               	movwf	??_initialiseADCPin
  2394  0256  085C               	movf	??_initialiseADCPin,w
  2395  0257  00E0               	movwf	initialiseADCPin@portNumber
  2396  0258                     l1444:
  2397                           
  2398                           ;ADC.c: 37:         portType = 0;
  2399  0258  01DF               	clrf	initialiseADCPin@portType
  2400  0259                     l1446:
  2401                           
  2402                           ;ADC.c: 38:         gpioValid = 1;
  2403  0259  01DE               	clrf	initialiseADCPin@gpioValid
  2404  025A  0ADE               	incf	initialiseADCPin@gpioValid,f
  2405  025B                     l1448:
  2406                           
  2407                           ;ADC.c: 41:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  2408  025B  3009               	movlw	9
  2409  025C  0261               	subwf	initialiseADCPin@gpioNumber,w
  2410  025D  1C03               	skipc
  2411  025E  2A60               	goto	u871
  2412  025F  2A61               	goto	u870
  2413  0260                     u871:
  2414  0260  2A70               	goto	l183
  2415  0261                     u870:
  2416  0261                     l1450:
  2417  0261  3010               	movlw	16
  2418  0262  0261               	subwf	initialiseADCPin@gpioNumber,w
  2419  0263  1803               	skipnc
  2420  0264  2A66               	goto	u881
  2421  0265  2A67               	goto	u880
  2422  0266                     u881:
  2423  0266  2A70               	goto	l183
  2424  0267                     u880:
  2425  0267                     l1452:
  2426                           
  2427                           ;ADC.c: 42:         portNumber = gpioNumber - 8;
  2428  0267  0861               	movf	initialiseADCPin@gpioNumber,w
  2429  0268  3EF8               	addlw	248
  2430  0269  00DC               	movwf	??_initialiseADCPin
  2431  026A  085C               	movf	??_initialiseADCPin,w
  2432  026B  00E0               	movwf	initialiseADCPin@portNumber
  2433  026C                     l1454:
  2434                           
  2435                           ;ADC.c: 43:         portType = 1;
  2436  026C  01DF               	clrf	initialiseADCPin@portType
  2437  026D  0ADF               	incf	initialiseADCPin@portType,f
  2438  026E                     l1456:
  2439                           
  2440                           ;ADC.c: 44:         gpioValid = 1;
  2441  026E  01DE               	clrf	initialiseADCPin@gpioValid
  2442  026F  0ADE               	incf	initialiseADCPin@gpioValid,f
  2443  0270                     l183:	
  2444                           ;ADC.c: 45:     }
  2445                           
  2446                           
  2447                           ;ADC.c: 47:     if(gpioValid){
  2448  0270  085E               	movf	initialiseADCPin@gpioValid,w
  2449  0271  1903               	btfsc	3,2
  2450  0272  2A74               	goto	u891
  2451  0273  2A75               	goto	u890
  2452  0274                     u891:
  2453  0274  2AB2               	goto	l188
  2454  0275                     u890:
  2455  0275                     l1458:
  2456                           
  2457                           ;ADC.c: 48:         if(portType == 0){
  2458  0275  085F               	movf	initialiseADCPin@portType,w
  2459  0276  1D03               	btfss	3,2
  2460  0277  2A79               	goto	u901
  2461  0278  2A7A               	goto	u900
  2462  0279                     u901:
  2463  0279  2A94               	goto	l1462
  2464  027A                     u900:
  2465  027A                     l1460:
  2466                           
  2467                           ;ADC.c: 49:             TRISA |= (1 << (uint8_t)portNumber);
  2468  027A  3001               	movlw	1
  2469  027B  00DC               	movwf	??_initialiseADCPin
  2470  027C  0A60               	incf	initialiseADCPin@portNumber,w
  2471  027D  2A7F               	goto	u914
  2472  027E                     u915:
  2473  027E  35DC               	lslf	??_initialiseADCPin,f
  2474  027F                     u914:
  2475  027F  0B89               	decfsz	9,f
  2476  0280  2A7E               	goto	u915
  2477  0281  085C               	movf	??_initialiseADCPin,w
  2478  0282  00DD               	movwf	??_initialiseADCPin+1
  2479  0283  085D               	movf	??_initialiseADCPin+1,w
  2480  0284  0021               	movlb	1	; select bank1
  2481  0285  048C               	iorwf	12,f	;volatile
  2482                           
  2483                           ;ADC.c: 50:             ANSELA |= (1 << (uint8_t)portNumber);
  2484  0286  3001               	movlw	1
  2485  0287  0020               	movlb	0	; select bank0
  2486  0288  00DC               	movwf	??_initialiseADCPin
  2487  0289  0A60               	incf	initialiseADCPin@portNumber,w
  2488  028A  2A8C               	goto	u924
  2489  028B                     u925:
  2490  028B  35DC               	lslf	??_initialiseADCPin,f
  2491  028C                     u924:
  2492  028C  0B89               	decfsz	9,f
  2493  028D  2A8B               	goto	u925
  2494  028E  085C               	movf	??_initialiseADCPin,w
  2495  028F  00DD               	movwf	??_initialiseADCPin+1
  2496  0290  085D               	movf	??_initialiseADCPin+1,w
  2497  0291  0023               	movlb	3	; select bank3
  2498  0292  048C               	iorwf	12,f	;volatile
  2499                           
  2500                           ;ADC.c: 51:         }
  2501  0293  2AB2               	goto	l188
  2502  0294                     l1462:
  2503  0294  035F               	decf	initialiseADCPin@portType,w
  2504  0295  1D03               	btfss	3,2
  2505  0296  2A98               	goto	u931
  2506  0297  2A99               	goto	u930
  2507  0298                     u931:
  2508  0298  2AB2               	goto	l188
  2509  0299                     u930:
  2510  0299                     l1464:
  2511                           
  2512                           ;ADC.c: 53:             TRISB |= (1 << (uint8_t)portNumber);
  2513  0299  3001               	movlw	1
  2514  029A  00DC               	movwf	??_initialiseADCPin
  2515  029B  0A60               	incf	initialiseADCPin@portNumber,w
  2516  029C  2A9E               	goto	u944
  2517  029D                     u945:
  2518  029D  35DC               	lslf	??_initialiseADCPin,f
  2519  029E                     u944:
  2520  029E  0B89               	decfsz	9,f
  2521  029F  2A9D               	goto	u945
  2522  02A0  085C               	movf	??_initialiseADCPin,w
  2523  02A1  00DD               	movwf	??_initialiseADCPin+1
  2524  02A2  085D               	movf	??_initialiseADCPin+1,w
  2525  02A3  0021               	movlb	1	; select bank1
  2526  02A4  048D               	iorwf	13,f	;volatile
  2527                           
  2528                           ;ADC.c: 54:             ANSELB |= (1 << (uint8_t)portNumber);
  2529  02A5  3001               	movlw	1
  2530  02A6  0020               	movlb	0	; select bank0
  2531  02A7  00DC               	movwf	??_initialiseADCPin
  2532  02A8  0A60               	incf	initialiseADCPin@portNumber,w
  2533  02A9  2AAB               	goto	u954
  2534  02AA                     u955:
  2535  02AA  35DC               	lslf	??_initialiseADCPin,f
  2536  02AB                     u954:
  2537  02AB  0B89               	decfsz	9,f
  2538  02AC  2AAA               	goto	u955
  2539  02AD  085C               	movf	??_initialiseADCPin,w
  2540  02AE  00DD               	movwf	??_initialiseADCPin+1
  2541  02AF  085D               	movf	??_initialiseADCPin+1,w
  2542  02B0  0023               	movlb	3	; select bank3
  2543  02B1  048D               	iorwf	13,f	;volatile
  2544  02B2                     l188:
  2545  02B2  0008               	return
  2546  02B3                     __end_of_initialiseADCPin:
  2547                           
  2548                           	psect	text6
  2549  0527                     __ptext6:	
  2550 ;; *************** function _initialiseCurrentSensors *****************
  2551 ;; Defined at:
  2552 ;;		line 13 in file "CurrentSensor.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, status,2, status,0, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2566 ;;      Params:         0       0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used: 1
  2572 ;; Hardware stack levels required when called: 4
  2573 ;; This function calls:
  2574 ;;		_initialiseGPIO
  2575 ;; This function is called by:
  2576 ;;		_main
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580  0527                     _initialiseCurrentSensors:	
  2581                           ;psect for function _initialiseCurrentSensors
  2582                           
  2583  0527                     l1772:	
  2584                           ;incstack = 0
  2585                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2586                           
  2587                           
  2588                           ;CurrentSensor.c: 14:     initialiseGPIO(pinRA3, 1);
  2589  0527  0020               	movlb	0	; select bank0
  2590  0528  01DC               	clrf	initialiseGPIO@direction
  2591  0529  0ADC               	incf	initialiseGPIO@direction,f
  2592  052A  3003               	movlw	3
  2593  052B  3181  2158  3185   	fcall	_initialiseGPIO
  2594                           
  2595                           ;CurrentSensor.c: 15:     initialiseGPIO(pinRA1, 1);
  2596  052E  0020               	movlb	0	; select bank0
  2597  052F  01DC               	clrf	initialiseGPIO@direction
  2598  0530  0ADC               	incf	initialiseGPIO@direction,f
  2599  0531  3001               	movlw	1
  2600  0532  3181  2158  3185   	fcall	_initialiseGPIO
  2601  0535                     l335:
  2602  0535  0008               	return
  2603  0536                     __end_of_initialiseCurrentSensors:
  2604                           
  2605                           	psect	text7
  2606  0158                     __ptext7:	
  2607 ;; *************** function _initialiseGPIO *****************
  2608 ;; Defined at:
  2609 ;;		line 18 in file "GPIO.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  gpioNumber      1    wreg     const enum E2798
  2612 ;;  direction       1   10[BANK0 ] unsigned char 
  2613 ;; Auto vars:     Size  Location     Type
  2614 ;;  gpioNumber      1   14[BANK0 ] const enum E2798
  2615 ;;  portNumber      1   15[BANK0 ] unsigned char 
  2616 ;;  portType        1   13[BANK0 ] unsigned char 
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		wreg, status,2, status,0
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2626 ;;      Params:         0       1       0       0       0       0
  2627 ;;      Locals:         0       3       0       0       0       0
  2628 ;;      Temps:          0       2       0       0       0       0
  2629 ;;      Totals:         0       6       0       0       0       0
  2630 ;;Total ram usage:        6 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; Hardware stack levels required when called: 3
  2633 ;; This function calls:
  2634 ;;		Nothing
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;;		_setupPWM
  2638 ;;		_initialiseCurrentSensors
  2639 ;; This function uses a non-reentrant model
  2640 ;;
  2641                           
  2642  0158                     _initialiseGPIO:	
  2643                           ;psect for function _initialiseGPIO
  2644                           
  2645                           
  2646                           ;incstack = 0
  2647                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2648                           ;initialiseGPIO@gpioNumber stored from wreg
  2649  0158  0020               	movlb	0	; select bank0
  2650  0159  00E0               	movwf	initialiseGPIO@gpioNumber
  2651  015A                     l1410:
  2652                           
  2653                           ;GPIO.c: 20:     uint8_t portType = 0;
  2654  015A  01DF               	clrf	initialiseGPIO@portType
  2655  015B                     l1412:
  2656                           
  2657                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2658  015B  3008               	movlw	8
  2659  015C  0260               	subwf	initialiseGPIO@gpioNumber,w
  2660  015D  1C03               	skipc
  2661  015E  2960               	goto	u751
  2662  015F  2961               	goto	u750
  2663  0160                     u751:
  2664  0160  2969               	goto	l1418
  2665  0161                     u750:
  2666  0161                     l1414:
  2667                           
  2668                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2669  0161  0860               	movf	initialiseGPIO@gpioNumber,w
  2670  0162  3EF8               	addlw	248
  2671  0163  00DD               	movwf	??_initialiseGPIO
  2672  0164  085D               	movf	??_initialiseGPIO,w
  2673  0165  00E1               	movwf	initialiseGPIO@portNumber
  2674  0166                     l1416:
  2675                           
  2676                           ;GPIO.c: 23:         portType = 1;
  2677  0166  01DF               	clrf	initialiseGPIO@portType
  2678  0167  0ADF               	incf	initialiseGPIO@portType,f
  2679                           
  2680                           ;GPIO.c: 24:     }
  2681  0168  296E               	goto	l1422
  2682  0169                     l1418:
  2683                           
  2684                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2685  0169  0860               	movf	initialiseGPIO@gpioNumber,w
  2686  016A  00DD               	movwf	??_initialiseGPIO
  2687  016B  085D               	movf	??_initialiseGPIO,w
  2688  016C  00E1               	movwf	initialiseGPIO@portNumber
  2689  016D                     l1420:
  2690                           
  2691                           ;GPIO.c: 27:         portType = 0;
  2692  016D  01DF               	clrf	initialiseGPIO@portType
  2693  016E                     l1422:
  2694                           
  2695                           ;GPIO.c: 30:     if(portType == 0){
  2696  016E  085F               	movf	initialiseGPIO@portType,w
  2697  016F  1D03               	btfss	3,2
  2698  0170  2972               	goto	u761
  2699  0171  2973               	goto	u760
  2700  0172                     u761:
  2701  0172  29A1               	goto	l1430
  2702  0173                     u760:
  2703  0173                     l1424:
  2704                           
  2705                           ;GPIO.c: 31:         if(direction){
  2706  0173  085C               	movf	initialiseGPIO@direction,w
  2707  0174  1903               	btfsc	3,2
  2708  0175  2977               	goto	u771
  2709  0176  2978               	goto	u770
  2710  0177                     u771:
  2711  0177  2993               	goto	l1428
  2712  0178                     u770:
  2713  0178                     l1426:
  2714                           
  2715                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2716  0178  3001               	movlw	1
  2717  0179  00DD               	movwf	??_initialiseGPIO
  2718  017A  0A61               	incf	initialiseGPIO@portNumber,w
  2719  017B  297D               	goto	u784
  2720  017C                     u785:
  2721  017C  35DD               	lslf	??_initialiseGPIO,f
  2722  017D                     u784:
  2723  017D  0B89               	decfsz	9,f
  2724  017E  297C               	goto	u785
  2725  017F  085D               	movf	??_initialiseGPIO,w
  2726  0180  00DE               	movwf	??_initialiseGPIO+1
  2727  0181  085E               	movf	??_initialiseGPIO+1,w
  2728  0182  0021               	movlb	1	; select bank1
  2729  0183  048C               	iorwf	12,f	;volatile
  2730                           
  2731                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2732  0184  3001               	movlw	1
  2733  0185  0020               	movlb	0	; select bank0
  2734  0186  00DD               	movwf	??_initialiseGPIO
  2735  0187  0A61               	incf	initialiseGPIO@portNumber,w
  2736  0188  298A               	goto	u794
  2737  0189                     u795:
  2738  0189  35DD               	lslf	??_initialiseGPIO,f
  2739  018A                     u794:
  2740  018A  0B89               	decfsz	9,f
  2741  018B  2989               	goto	u795
  2742  018C  085D               	movf	??_initialiseGPIO,w
  2743  018D  3AFF               	xorlw	255
  2744  018E  00DE               	movwf	??_initialiseGPIO+1
  2745  018F  085E               	movf	??_initialiseGPIO+1,w
  2746  0190  0023               	movlb	3	; select bank3
  2747  0191  058C               	andwf	12,f	;volatile
  2748                           
  2749                           ;GPIO.c: 34:         }
  2750  0192  29D3               	goto	l249
  2751  0193                     l1428:
  2752  0193  3001               	movlw	1
  2753  0194  00DD               	movwf	??_initialiseGPIO
  2754  0195  0A61               	incf	initialiseGPIO@portNumber,w
  2755  0196  2998               	goto	u804
  2756  0197                     u805:
  2757  0197  35DD               	lslf	??_initialiseGPIO,f
  2758  0198                     u804:
  2759  0198  0B89               	decfsz	9,f
  2760  0199  2997               	goto	u805
  2761  019A  085D               	movf	??_initialiseGPIO,w
  2762  019B  3AFF               	xorlw	255
  2763  019C  00DE               	movwf	??_initialiseGPIO+1
  2764  019D  085E               	movf	??_initialiseGPIO+1,w
  2765  019E  0021               	movlb	1	; select bank1
  2766  019F  058C               	andwf	12,f	;volatile
  2767  01A0  29D3               	goto	l249
  2768  01A1                     l1430:
  2769  01A1  035F               	decf	initialiseGPIO@portType,w
  2770  01A2  1D03               	btfss	3,2
  2771  01A3  29A5               	goto	u811
  2772  01A4  29A6               	goto	u810
  2773  01A5                     u811:
  2774  01A5  29D3               	goto	l249
  2775  01A6                     u810:
  2776  01A6                     l1432:
  2777                           
  2778                           ;GPIO.c: 38:         if(direction){
  2779  01A6  085C               	movf	initialiseGPIO@direction,w
  2780  01A7  1903               	btfsc	3,2
  2781  01A8  29AA               	goto	u821
  2782  01A9  29AB               	goto	u820
  2783  01AA                     u821:
  2784  01AA  29C6               	goto	l1436
  2785  01AB                     u820:
  2786  01AB                     l1434:
  2787                           
  2788                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2789  01AB  3001               	movlw	1
  2790  01AC  00DD               	movwf	??_initialiseGPIO
  2791  01AD  0A61               	incf	initialiseGPIO@portNumber,w
  2792  01AE  29B0               	goto	u834
  2793  01AF                     u835:
  2794  01AF  35DD               	lslf	??_initialiseGPIO,f
  2795  01B0                     u834:
  2796  01B0  0B89               	decfsz	9,f
  2797  01B1  29AF               	goto	u835
  2798  01B2  085D               	movf	??_initialiseGPIO,w
  2799  01B3  00DE               	movwf	??_initialiseGPIO+1
  2800  01B4  085E               	movf	??_initialiseGPIO+1,w
  2801  01B5  0021               	movlb	1	; select bank1
  2802  01B6  048D               	iorwf	13,f	;volatile
  2803                           
  2804                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2805  01B7  3001               	movlw	1
  2806  01B8  0020               	movlb	0	; select bank0
  2807  01B9  00DD               	movwf	??_initialiseGPIO
  2808  01BA  0A61               	incf	initialiseGPIO@portNumber,w
  2809  01BB  29BD               	goto	u844
  2810  01BC                     u845:
  2811  01BC  35DD               	lslf	??_initialiseGPIO,f
  2812  01BD                     u844:
  2813  01BD  0B89               	decfsz	9,f
  2814  01BE  29BC               	goto	u845
  2815  01BF  085D               	movf	??_initialiseGPIO,w
  2816  01C0  3AFF               	xorlw	255
  2817  01C1  00DE               	movwf	??_initialiseGPIO+1
  2818  01C2  085E               	movf	??_initialiseGPIO+1,w
  2819  01C3  0023               	movlb	3	; select bank3
  2820  01C4  058D               	andwf	13,f	;volatile
  2821                           
  2822                           ;GPIO.c: 41:         }
  2823  01C5  29D3               	goto	l249
  2824  01C6                     l1436:
  2825  01C6  3001               	movlw	1
  2826  01C7  00DD               	movwf	??_initialiseGPIO
  2827  01C8  0A61               	incf	initialiseGPIO@portNumber,w
  2828  01C9  29CB               	goto	u854
  2829  01CA                     u855:
  2830  01CA  35DD               	lslf	??_initialiseGPIO,f
  2831  01CB                     u854:
  2832  01CB  0B89               	decfsz	9,f
  2833  01CC  29CA               	goto	u855
  2834  01CD  085D               	movf	??_initialiseGPIO,w
  2835  01CE  3AFF               	xorlw	255
  2836  01CF  00DE               	movwf	??_initialiseGPIO+1
  2837  01D0  085E               	movf	??_initialiseGPIO+1,w
  2838  01D1  0021               	movlb	1	; select bank1
  2839  01D2  058D               	andwf	13,f	;volatile
  2840  01D3                     l249:
  2841  01D3  0008               	return
  2842  01D4                     __end_of_initialiseGPIO:
  2843                           
  2844                           	psect	text8
  2845  054D                     __ptext8:	
  2846 ;; *************** function _initialiseADCModule *****************
  2847 ;; Defined at:
  2848 ;;		line 10 in file "ADC.c"
  2849 ;; Parameters:    Size  Location     Type
  2850 ;;		None
  2851 ;; Auto vars:     Size  Location     Type
  2852 ;;		None
  2853 ;; Return value:  Size  Location     Type
  2854 ;;                  1    wreg      void 
  2855 ;; Registers used:
  2856 ;;		wreg
  2857 ;; Tracked objects:
  2858 ;;		On entry : 0/0
  2859 ;;		On exit  : 0/0
  2860 ;;		Unchanged: 0/0
  2861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2862 ;;      Params:         0       0       0       0       0       0
  2863 ;;      Locals:         0       0       0       0       0       0
  2864 ;;      Temps:          0       0       0       0       0       0
  2865 ;;      Totals:         0       0       0       0       0       0
  2866 ;;Total ram usage:        0 bytes
  2867 ;; Hardware stack levels used: 1
  2868 ;; Hardware stack levels required when called: 3
  2869 ;; This function calls:
  2870 ;;		Nothing
  2871 ;; This function is called by:
  2872 ;;		_main
  2873 ;; This function uses a non-reentrant model
  2874 ;;
  2875                           
  2876  054D                     _initialiseADCModule:	
  2877                           ;psect for function _initialiseADCModule
  2878                           
  2879  054D                     l1770:	
  2880                           ;incstack = 0
  2881                           ; Regs used in _initialiseADCModule: [wreg]
  2882                           
  2883                           
  2884                           ;ADC.c: 12:     ADCON0 = 0b00000001;
  2885  054D  3001               	movlw	1
  2886  054E  0021               	movlb	1	; select bank1
  2887  054F  009D               	movwf	29	;volatile
  2888                           
  2889                           ;ADC.c: 18:     ADCON1 = 0b10000000;
  2890  0550  3080               	movlw	128
  2891  0551  009E               	movwf	30	;volatile
  2892  0552                     l179:
  2893  0552  0008               	return
  2894  0553                     __end_of_initialiseADCModule:
  2895                           
  2896                           	psect	intentry
  2897  0004                     __pintentry:	
  2898 ;; *************** function _Tick980Hz *****************
  2899 ;; Defined at:
  2900 ;;		line 41 in file "main.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2914 ;;      Params:         0       0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0
  2916 ;;      Temps:          1       0       0       0       0       0
  2917 ;;      Totals:         1       0       0       0       0       0
  2918 ;;Total ram usage:        1 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 2
  2921 ;; This function calls:
  2922 ;;		_currentTripRead
  2923 ;;		_readFilteredDutyPot
  2924 ;;		_readFilteredFreqPot
  2925 ;;		_runPotScaling
  2926 ;;		_setPWMDutyandPeriod
  2927 ;;		_writeGPIO
  2928 ;; This function is called by:
  2929 ;;		Interrupt level 1
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933  0004                     _Tick980Hz:
  2934                           
  2935                           ;incstack = 0
  2936  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  2937                           
  2938                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2939  0005  3180               	pagesel	$
  2940  0006                     i1l1776:
  2941                           
  2942                           ;main.c: 52:         if(currentTripRead() < 1){
  2943  0006  3184  24FE  3180   	fcall	_currentTripRead
  2944  0009  3A00               	xorlw	0
  2945  000A  1D03               	skipz
  2946  000B  280D               	goto	u135_21
  2947  000C  280E               	goto	u135_20
  2948  000D                     u135_21:
  2949  000D  281A               	goto	i1l1782
  2950  000E                     u135_20:
  2951  000E                     i1l1778:
  2952                           
  2953                           ;main.c: 53:             emergencyStop = 1;
  2954  000E  3001               	movlw	1
  2955  000F  00FD               	movwf	??_Tick980Hz
  2956  0010  087D               	movf	??_Tick980Hz,w
  2957  0011  0020               	movlb	0	; select bank0
  2958  0012  00CC               	movwf	_emergencyStop	;volatile
  2959  0013                     i1l1780:
  2960                           
  2961                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  2962  0013  3000               	movlw	0
  2963  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  2964  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  2965  0016  01F2               	clrf	setPWMDutyandPeriod@period
  2966  0017  3184  249F  3180   	fcall	_setPWMDutyandPeriod
  2967  001A                     i1l1782:
  2968                           
  2969                           ;main.c: 57:         if(timerSlotHalf == 0){
  2970  001A  0020               	movlb	0	; select bank0
  2971  001B  084E               	movf	_timerSlotHalf,w	;volatile
  2972  001C  1D03               	btfss	3,2
  2973  001D  281F               	goto	u136_21
  2974  001E  2820               	goto	u136_20
  2975  001F                     u136_21:
  2976  001F  2825               	goto	i1l1786
  2977  0020                     u136_20:
  2978  0020                     i1l1784:
  2979                           
  2980                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  2981  0020  01F0               	clrf	writeGPIO@writeValue
  2982  0021  300C               	movlw	12
  2983  0022  3183  2315  3180   	fcall	_writeGPIO
  2984  0025                     i1l1786:
  2985                           
  2986                           ;main.c: 61:         if(timerSlotHalf == 1){
  2987  0025  0020               	movlb	0	; select bank0
  2988  0026  034E               	decf	_timerSlotHalf,w	;volatile
  2989  0027  1D03               	btfss	3,2
  2990  0028  282A               	goto	u137_21
  2991  0029  282B               	goto	u137_20
  2992  002A                     u137_21:
  2993  002A  285A               	goto	i1l64
  2994  002B                     u137_20:
  2995  002B                     i1l1788:
  2996                           
  2997                           ;main.c: 65:             if(timerSlotQuarter == 0){
  2998  002B  084D               	movf	_timerSlotQuarter,w	;volatile
  2999  002C  1D03               	btfss	3,2
  3000  002D  282F               	goto	u138_21
  3001  002E  2830               	goto	u138_20
  3002  002F                     u138_21:
  3003  002F  284F               	goto	i1l1802
  3004  0030                     u138_20:
  3005  0030                     i1l1790:
  3006                           
  3007                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3008  0030  01F0               	clrf	writeGPIO@writeValue
  3009  0031  0AF0               	incf	writeGPIO@writeValue,f
  3010  0032  300C               	movlw	12
  3011  0033  3183  2315  3180   	fcall	_writeGPIO
  3012  0036                     i1l1792:
  3013                           
  3014                           ;main.c: 69:                 filteredDutyPot = readFilteredDutyPot();
  3015  0036  3183  2374  3180   	fcall	_readFilteredDutyPot
  3016  0039  087C               	movf	?_readFilteredDutyPot+1,w
  3017  003A  0020               	movlb	0	; select bank0
  3018  003B  00C5               	movwf	_filteredDutyPot+1
  3019  003C  087B               	movf	?_readFilteredDutyPot,w
  3020  003D  00C4               	movwf	_filteredDutyPot
  3021  003E                     i1l1794:
  3022                           
  3023                           ;main.c: 70:                 filteredFreqPot = readFilteredFreqPot();
  3024  003E  3183  23CC  3180   	fcall	_readFilteredFreqPot
  3025  0041  087C               	movf	?_readFilteredFreqPot+1,w
  3026  0042  0020               	movlb	0	; select bank0
  3027  0043  00C7               	movwf	_filteredFreqPot+1
  3028  0044  087B               	movf	?_readFilteredFreqPot,w
  3029  0045  00C6               	movwf	_filteredFreqPot
  3030  0046                     i1l1796:
  3031                           
  3032                           ;main.c: 72:                 if(~emergencyStop){
  3033  0046  034C               	decf	_emergencyStop,w	;volatile
  3034  0047  1903               	btfsc	3,2
  3035  0048  284A               	goto	u139_21
  3036  0049  284B               	goto	u139_20
  3037  004A                     u139_21:
  3038  004A  284F               	goto	i1l1800
  3039  004B                     u139_20:
  3040  004B                     i1l1798:
  3041                           
  3042                           ;main.c: 73:                     runPotScaling();
  3043  004B  3181  21D4  3180   	fcall	_runPotScaling
  3044  004E  284F               	goto	i1l1802
  3045  004F                     i1l1800:
  3046  004F                     i1l1802:
  3047                           
  3048                           ;main.c: 81:             timerSlotQuarter = ~timerSlotQuarter;
  3049  004F  0020               	movlb	0	; select bank0
  3050  0050  034D               	decf	_timerSlotQuarter,w	;volatile
  3051  0051  1D03               	btfss	3,2
  3052  0052  2854               	goto	u140_21
  3053  0053  2856               	goto	u140_20
  3054  0054                     u140_21:
  3055  0054  3001               	movlw	1
  3056  0055  2857               	goto	u141_20
  3057  0056                     u140_20:
  3058  0056  3000               	movlw	0
  3059  0057                     u141_20:
  3060  0057  00FD               	movwf	??_Tick980Hz
  3061  0058  087D               	movf	??_Tick980Hz,w
  3062  0059  00CD               	movwf	_timerSlotQuarter	;volatile
  3063  005A                     i1l64:	
  3064                           ;main.c: 82:         }
  3065                           
  3066                           
  3067                           ;main.c: 84:         timerSlotHalf = ~timerSlotHalf;
  3068  005A  034E               	decf	_timerSlotHalf,w	;volatile
  3069  005B  1D03               	btfss	3,2
  3070  005C  285E               	goto	u142_21
  3071  005D  2860               	goto	u142_20
  3072  005E                     u142_21:
  3073  005E  3001               	movlw	1
  3074  005F  2861               	goto	u143_20
  3075  0060                     u142_20:
  3076  0060  3000               	movlw	0
  3077  0061                     u143_20:
  3078  0061  00FD               	movwf	??_Tick980Hz
  3079  0062  087D               	movf	??_Tick980Hz,w
  3080  0063  00CE               	movwf	_timerSlotHalf	;volatile
  3081  0064                     i1l1804:
  3082                           
  3083                           ;main.c: 85:         INTCONbits.TMR0IF = 0;
  3084  0064  110B               	bcf	11,2	;volatile
  3085  0065                     i1l68:
  3086  0065  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3087  0066  0009               	retfie
  3088  0067                     __end_of_Tick980Hz:
  3089                           
  3090                           	psect	text10
  3091  0315                     __ptext10:	
  3092 ;; *************** function _writeGPIO *****************
  3093 ;; Defined at:
  3094 ;;		line 52 in file "GPIO.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  gpioNumber      1    wreg     const enum E2798
  3097 ;;  writeValue      1    0[COMMON] unsigned char 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3100 ;;  portNumber      1    5[COMMON] unsigned char 
  3101 ;;  portType        1    3[COMMON] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      void 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2, status,0
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3111 ;;      Params:         1       0       0       0       0       0
  3112 ;;      Locals:         3       0       0       0       0       0
  3113 ;;      Temps:          2       0       0       0       0       0
  3114 ;;      Totals:         6       0       0       0       0       0
  3115 ;;Total ram usage:        6 bytes
  3116 ;; Hardware stack levels used: 1
  3117 ;; This function calls:
  3118 ;;		Nothing
  3119 ;; This function is called by:
  3120 ;;		_Tick980Hz
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124  0315                     _writeGPIO:	
  3125                           ;psect for function _writeGPIO
  3126                           
  3127                           
  3128                           ;incstack = 0
  3129                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3130                           ;writeGPIO@gpioNumber stored from wreg
  3131  0315  00F4               	movwf	writeGPIO@gpioNumber
  3132  0316                     i1l1568:
  3133                           
  3134                           ;GPIO.c: 54:     uint8_t portType = 0;
  3135  0316  01F3               	clrf	writeGPIO@portType
  3136  0317                     i1l1570:
  3137                           
  3138                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3139  0317  3008               	movlw	8
  3140  0318  0274               	subwf	writeGPIO@gpioNumber,w
  3141  0319  1C03               	skipc
  3142  031A  2B1C               	goto	u117_21
  3143  031B  2B1D               	goto	u117_20
  3144  031C                     u117_21:
  3145  031C  2B25               	goto	i1l1576
  3146  031D                     u117_20:
  3147  031D                     i1l1572:
  3148                           
  3149                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3150  031D  0874               	movf	writeGPIO@gpioNumber,w
  3151  031E  3EF8               	addlw	248
  3152  031F  00F1               	movwf	??_writeGPIO
  3153  0320  0871               	movf	??_writeGPIO,w
  3154  0321  00F5               	movwf	writeGPIO@portNumber
  3155  0322                     i1l1574:
  3156                           
  3157                           ;GPIO.c: 57:         portType = 1;
  3158  0322  01F3               	clrf	writeGPIO@portType
  3159  0323  0AF3               	incf	writeGPIO@portType,f
  3160                           
  3161                           ;GPIO.c: 58:     }
  3162  0324  2B2A               	goto	i1l1580
  3163  0325                     i1l1576:
  3164                           
  3165                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3166  0325  0874               	movf	writeGPIO@gpioNumber,w
  3167  0326  00F1               	movwf	??_writeGPIO
  3168  0327  0871               	movf	??_writeGPIO,w
  3169  0328  00F5               	movwf	writeGPIO@portNumber
  3170  0329                     i1l1578:
  3171                           
  3172                           ;GPIO.c: 61:         portType = 0;
  3173  0329  01F3               	clrf	writeGPIO@portType
  3174  032A                     i1l1580:
  3175                           
  3176                           ;GPIO.c: 64:     if(portType == 0){
  3177  032A  0873               	movf	writeGPIO@portType,w
  3178  032B  1D03               	btfss	3,2
  3179  032C  2B2E               	goto	u118_21
  3180  032D  2B2F               	goto	u118_20
  3181  032E                     u118_21:
  3182  032E  2B4F               	goto	i1l1588
  3183  032F                     u118_20:
  3184  032F                     i1l1582:
  3185                           
  3186                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3187  032F  0870               	movf	writeGPIO@writeValue,w
  3188  0330  1903               	btfsc	3,2
  3189  0331  2B33               	goto	u119_21
  3190  0332  2B34               	goto	u119_20
  3191  0333                     u119_21:
  3192  0333  2B41               	goto	i1l1586
  3193  0334                     u119_20:
  3194  0334                     i1l1584:
  3195  0334  3001               	movlw	1
  3196  0335  00F1               	movwf	??_writeGPIO
  3197  0336  0A75               	incf	writeGPIO@portNumber,w
  3198  0337  2B39               	goto	u120_24
  3199  0338                     u120_25:
  3200  0338  35F1               	lslf	??_writeGPIO,f
  3201  0339                     u120_24:
  3202  0339  0B89               	decfsz	9,f
  3203  033A  2B38               	goto	u120_25
  3204  033B  0871               	movf	??_writeGPIO,w
  3205  033C  00F2               	movwf	??_writeGPIO+1
  3206  033D  0872               	movf	??_writeGPIO+1,w
  3207  033E  0022               	movlb	2	; select bank2
  3208  033F  048C               	iorwf	12,f	;volatile
  3209  0340  2B73               	goto	i1l263
  3210  0341                     i1l1586:
  3211  0341  3001               	movlw	1
  3212  0342  00F1               	movwf	??_writeGPIO
  3213  0343  0A75               	incf	writeGPIO@portNumber,w
  3214  0344  2B46               	goto	u121_24
  3215  0345                     u121_25:
  3216  0345  35F1               	lslf	??_writeGPIO,f
  3217  0346                     u121_24:
  3218  0346  0B89               	decfsz	9,f
  3219  0347  2B45               	goto	u121_25
  3220  0348  0871               	movf	??_writeGPIO,w
  3221  0349  3AFF               	xorlw	255
  3222  034A  00F2               	movwf	??_writeGPIO+1
  3223  034B  0872               	movf	??_writeGPIO+1,w
  3224  034C  0022               	movlb	2	; select bank2
  3225  034D  058C               	andwf	12,f	;volatile
  3226  034E  2B73               	goto	i1l263
  3227  034F                     i1l1588:
  3228  034F  0373               	decf	writeGPIO@portType,w
  3229  0350  1D03               	btfss	3,2
  3230  0351  2B53               	goto	u122_21
  3231  0352  2B54               	goto	u122_20
  3232  0353                     u122_21:
  3233  0353  2B73               	goto	i1l263
  3234  0354                     u122_20:
  3235  0354                     i1l1590:
  3236                           
  3237                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3238  0354  0870               	movf	writeGPIO@writeValue,w
  3239  0355  1903               	btfsc	3,2
  3240  0356  2B58               	goto	u123_21
  3241  0357  2B59               	goto	u123_20
  3242  0358                     u123_21:
  3243  0358  2B66               	goto	i1l1594
  3244  0359                     u123_20:
  3245  0359                     i1l1592:
  3246  0359  3001               	movlw	1
  3247  035A  00F1               	movwf	??_writeGPIO
  3248  035B  0A75               	incf	writeGPIO@portNumber,w
  3249  035C  2B5E               	goto	u124_24
  3250  035D                     u124_25:
  3251  035D  35F1               	lslf	??_writeGPIO,f
  3252  035E                     u124_24:
  3253  035E  0B89               	decfsz	9,f
  3254  035F  2B5D               	goto	u124_25
  3255  0360  0871               	movf	??_writeGPIO,w
  3256  0361  00F2               	movwf	??_writeGPIO+1
  3257  0362  0872               	movf	??_writeGPIO+1,w
  3258  0363  0022               	movlb	2	; select bank2
  3259  0364  048D               	iorwf	13,f	;volatile
  3260  0365  2B73               	goto	i1l263
  3261  0366                     i1l1594:
  3262  0366  3001               	movlw	1
  3263  0367  00F1               	movwf	??_writeGPIO
  3264  0368  0A75               	incf	writeGPIO@portNumber,w
  3265  0369  2B6B               	goto	u125_24
  3266  036A                     u125_25:
  3267  036A  35F1               	lslf	??_writeGPIO,f
  3268  036B                     u125_24:
  3269  036B  0B89               	decfsz	9,f
  3270  036C  2B6A               	goto	u125_25
  3271  036D  0871               	movf	??_writeGPIO,w
  3272  036E  3AFF               	xorlw	255
  3273  036F  00F2               	movwf	??_writeGPIO+1
  3274  0370  0872               	movf	??_writeGPIO+1,w
  3275  0371  0022               	movlb	2	; select bank2
  3276  0372  058D               	andwf	13,f	;volatile
  3277  0373                     i1l263:
  3278  0373  0008               	return
  3279  0374                     __end_of_writeGPIO:
  3280                           
  3281                           	psect	text11
  3282  01D4                     __ptext11:	
  3283 ;; *************** function _runPotScaling *****************
  3284 ;; Defined at:
  3285 ;;		line 34 in file "Potentiometer.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  check1          4    5[BANK0 ] unsigned long 
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, status,2, status,0, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3299 ;;      Params:         0       0       0       0       0       0
  3300 ;;      Locals:         0       4       0       0       0       0
  3301 ;;      Temps:          0       5       0       0       0       0
  3302 ;;      Totals:         0       9       0       0       0       0
  3303 ;;Total ram usage:        9 bytes
  3304 ;; Hardware stack levels used: 1
  3305 ;; Hardware stack levels required when called: 1
  3306 ;; This function calls:
  3307 ;;		___lmul
  3308 ;;		_setPWMDutyandPeriod
  3309 ;; This function is called by:
  3310 ;;		_Tick980Hz
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314  01D4                     _runPotScaling:	
  3315                           ;psect for function _runPotScaling
  3316                           
  3317  01D4                     i1l1660:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3320                           
  3321                           
  3322                           ;Potentiometer.c: 36:     potSetCount++;
  3323  01D4  3001               	movlw	1
  3324  01D5  0020               	movlb	0	; select bank0
  3325  01D6  00D2               	movwf	??_runPotScaling
  3326  01D7  0852               	movf	??_runPotScaling,w
  3327  01D8  07CF               	addwf	_potSetCount,f
  3328                           
  3329                           ;Potentiometer.c: 38:     if(potSetCount == 32){
  3330  01D9  3020               	movlw	32
  3331  01DA  064F               	xorwf	_potSetCount,w
  3332  01DB  1D03               	btfss	3,2
  3333  01DC  29DE               	goto	u132_21
  3334  01DD  29DF               	goto	u132_20
  3335  01DE                     u132_21:
  3336  01DE  2A48               	goto	i1l318
  3337  01DF                     u132_20:
  3338  01DF                     i1l1662:
  3339                           
  3340                           ;Potentiometer.c: 40:         setPeriod = ((uint32_t)((filteredFreqPot - 51) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3341  01DF  0846               	movf	_filteredFreqPot,w
  3342  01E0  3ECD               	addlw	205
  3343  01E1  00F0               	movwf	___lmul@multiplier
  3344  01E2  30FF               	movlw	255
  3345  01E3  3D47               	addwfc	_filteredFreqPot+1,w
  3346  01E4  00F1               	movwf	___lmul@multiplier+1
  3347  01E5  01F2               	clrf	___lmul@multiplier+2
  3348  01E6  01F3               	clrf	___lmul@multiplier+3
  3349  01E7  3000               	movlw	0
  3350  01E8  00F7               	movwf	___lmul@multiplicand+3
  3351  01E9  3000               	movlw	0
  3352  01EA  00F6               	movwf	___lmul@multiplicand+2
  3353  01EB  3000               	movlw	0
  3354  01EC  00F5               	movwf	___lmul@multiplicand+1
  3355  01ED  3090               	movlw	144
  3356  01EE  00F4               	movwf	___lmul@multiplicand
  3357  01EF  3184  246C  3181   	fcall	___lmul
  3358  01F2  0870               	movf	?___lmul,w
  3359  01F3  0020               	movlb	0	; select bank0
  3360  01F4  00D2               	movwf	??_runPotScaling
  3361  01F5  0871               	movf	?___lmul+1,w
  3362  01F6  00D3               	movwf	??_runPotScaling+1
  3363  01F7  0872               	movf	?___lmul+2,w
  3364  01F8  00D4               	movwf	??_runPotScaling+2
  3365  01F9  0873               	movf	?___lmul+3,w
  3366  01FA  00D5               	movwf	??_runPotScaling+3
  3367  01FB  300A               	movlw	10
  3368  01FC                     u133_25:
  3369  01FC  36D5               	lsrf	??_runPotScaling+3,f
  3370  01FD  0CD4               	rrf	??_runPotScaling+2,f
  3371  01FE  0CD3               	rrf	??_runPotScaling+1,f
  3372  01FF  0CD2               	rrf	??_runPotScaling,f
  3373  0200                     u133_20:
  3374  0200  0B89               	decfsz	9,f
  3375  0201  29FC               	goto	u133_25
  3376  0202  0852               	movf	??_runPotScaling,w
  3377  0203  3E0F               	addlw	15
  3378  0204  00D6               	movwf	??_runPotScaling+4
  3379  0205  0856               	movf	??_runPotScaling+4,w
  3380  0206  00D1               	movwf	_setPeriod
  3381                           
  3382                           ;Potentiometer.c: 42:         uint32_t check1 = (uint32_t)((uint32_t)((filteredDutyPot-5
      +                          1) * (uint32_t)setPeriod ));
  3383  0207  0844               	movf	_filteredDutyPot,w
  3384  0208  3ECD               	addlw	205
  3385  0209  00F0               	movwf	___lmul@multiplier
  3386  020A  30FF               	movlw	255
  3387  020B  3D45               	addwfc	_filteredDutyPot+1,w
  3388  020C  00F1               	movwf	___lmul@multiplier+1
  3389  020D  01F2               	clrf	___lmul@multiplier+2
  3390  020E  01F3               	clrf	___lmul@multiplier+3
  3391  020F  0851               	movf	_setPeriod,w
  3392  0210  00D2               	movwf	??_runPotScaling
  3393  0211  01D3               	clrf	??_runPotScaling+1
  3394  0212  01D4               	clrf	??_runPotScaling+2
  3395  0213  01D5               	clrf	??_runPotScaling+3
  3396  0214  0855               	movf	??_runPotScaling+3,w
  3397  0215  00F7               	movwf	___lmul@multiplicand+3
  3398  0216  0854               	movf	??_runPotScaling+2,w
  3399  0217  00F6               	movwf	___lmul@multiplicand+2
  3400  0218  0853               	movf	??_runPotScaling+1,w
  3401  0219  00F5               	movwf	___lmul@multiplicand+1
  3402  021A  0852               	movf	??_runPotScaling,w
  3403  021B  00F4               	movwf	___lmul@multiplicand
  3404  021C  3184  246C  3181   	fcall	___lmul
  3405  021F  0873               	movf	?___lmul+3,w
  3406  0220  0020               	movlb	0	; select bank0
  3407  0221  00DA               	movwf	runPotScaling@check1+3
  3408  0222  0872               	movf	?___lmul+2,w
  3409  0223  00D9               	movwf	runPotScaling@check1+2
  3410  0224  0871               	movf	?___lmul+1,w
  3411  0225  00D8               	movwf	runPotScaling@check1+1
  3412  0226  0870               	movf	?___lmul,w
  3413  0227  00D7               	movwf	runPotScaling@check1
  3414  0228                     i1l1664:
  3415                           
  3416                           ;Potentiometer.c: 43:         setDuty = check1 >> 8;
  3417  0228  0857               	movf	runPotScaling@check1,w
  3418  0229  00D2               	movwf	??_runPotScaling
  3419  022A  0858               	movf	runPotScaling@check1+1,w
  3420  022B  00D3               	movwf	??_runPotScaling+1
  3421  022C  0859               	movf	runPotScaling@check1+2,w
  3422  022D  00D4               	movwf	??_runPotScaling+2
  3423  022E  085A               	movf	runPotScaling@check1+3,w
  3424  022F  00D5               	movwf	??_runPotScaling+3
  3425  0230  3008               	movlw	8
  3426  0231                     u134_25:
  3427  0231  36D5               	lsrf	??_runPotScaling+3,f
  3428  0232  0CD4               	rrf	??_runPotScaling+2,f
  3429  0233  0CD3               	rrf	??_runPotScaling+1,f
  3430  0234  0CD2               	rrf	??_runPotScaling,f
  3431  0235                     u134_20:
  3432  0235  0B89               	decfsz	9,f
  3433  0236  2A31               	goto	u134_25
  3434  0237  0853               	movf	??_runPotScaling+1,w
  3435  0238  00CB               	movwf	_setDuty+1
  3436  0239  0852               	movf	??_runPotScaling,w
  3437  023A  00CA               	movwf	_setDuty
  3438  023B                     i1l1666:
  3439                           
  3440                           ;Potentiometer.c: 44:         setPWMDutyandPeriod(setDuty, setPeriod);
  3441  023B  084B               	movf	_setDuty+1,w
  3442  023C  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3443  023D  084A               	movf	_setDuty,w
  3444  023E  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3445  023F  0851               	movf	_setPeriod,w
  3446  0240  00D2               	movwf	??_runPotScaling
  3447  0241  0852               	movf	??_runPotScaling,w
  3448  0242  00F2               	movwf	setPWMDutyandPeriod@period
  3449  0243  3184  249F  3181   	fcall	_setPWMDutyandPeriod
  3450  0246                     i1l1668:
  3451                           
  3452                           ;Potentiometer.c: 45:         potSetCount = 0;
  3453  0246  0020               	movlb	0	; select bank0
  3454  0247  01CF               	clrf	_potSetCount
  3455  0248                     i1l318:
  3456  0248  0008               	return
  3457  0249                     __end_of_runPotScaling:
  3458                           
  3459                           	psect	text12
  3460  049F                     __ptext12:	
  3461 ;; *************** function _setPWMDutyandPeriod *****************
  3462 ;; Defined at:
  3463 ;;		line 47 in file "PWM.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3466 ;;  period          1    2[COMMON] unsigned char 
  3467 ;; Auto vars:     Size  Location     Type
  3468 ;;		None
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3478 ;;      Params:         3       0       0       0       0       0
  3479 ;;      Locals:         0       0       0       0       0       0
  3480 ;;      Temps:          2       0       0       0       0       0
  3481 ;;      Totals:         5       0       0       0       0       0
  3482 ;;Total ram usage:        5 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_Tick980Hz
  3488 ;;		_runPotScaling
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492  049F                     _setPWMDutyandPeriod:	
  3493                           ;psect for function _setPWMDutyandPeriod
  3494                           
  3495  049F                     i1l1404:	
  3496                           ;incstack = 0
  3497                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3498                           
  3499                           
  3500                           ;PWM.c: 48:     PR2 = period;
  3501  049F  0872               	movf	setPWMDutyandPeriod@period,w
  3502  04A0  0020               	movlb	0	; select bank0
  3503  04A1  009B               	movwf	27	;volatile
  3504  04A2                     i1l1406:
  3505                           
  3506                           ;PWM.c: 49:     CCPR1L = dutyCycle >> 2;
  3507  04A2  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3508  04A3  00F4               	movwf	??_setPWMDutyandPeriod+1
  3509  04A4  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3510  04A5  00F3               	movwf	??_setPWMDutyandPeriod
  3511  04A6  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3512  04A7  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3513  04A8  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3514  04A9  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3515  04AA  0873               	movf	??_setPWMDutyandPeriod,w
  3516  04AB  0025               	movlb	5	; select bank5
  3517  04AC  0091               	movwf	17	;volatile
  3518  04AD                     i1l1408:
  3519                           
  3520                           ;PWM.c: 50:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  3521  04AD  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3522  04AE  3901               	andlw	1
  3523  04AF  00F3               	movwf	??_setPWMDutyandPeriod
  3524  04B0  0EF3               	swapf	??_setPWMDutyandPeriod,f
  3525  04B1  0813               	movf	19,w	;volatile
  3526  04B2  0673               	xorwf	??_setPWMDutyandPeriod,w
  3527  04B3  39EF               	andlw	-17
  3528  04B4  0673               	xorwf	??_setPWMDutyandPeriod,w
  3529  04B5  0093               	movwf	19	;volatile
  3530                           
  3531                           ;PWM.c: 51:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  3532  04B6  3002               	movlw	2
  3533  04B7  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  3534  04B8  00F3               	movwf	??_setPWMDutyandPeriod
  3535  04B9  3000               	movlw	0
  3536  04BA  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  3537  04BB  00F4               	movwf	??_setPWMDutyandPeriod+1
  3538  04BC  3000               	movlw	0
  3539  04BD  0274               	subwf	??_setPWMDutyandPeriod+1,w
  3540  04BE  3002               	movlw	2
  3541  04BF  1903               	skipnz
  3542  04C0  0273               	subwf	??_setPWMDutyandPeriod,w
  3543  04C1  1803               	skipnc
  3544  04C2  2CC4               	goto	u73_21
  3545  04C3  2CC7               	goto	u73_20
  3546  04C4                     u73_21:
  3547  04C4  0025               	movlb	5	; select bank5
  3548  04C5  1693               	bsf	19,5	;volatile
  3549  04C6  2CC9               	goto	u74_24
  3550  04C7                     u73_20:
  3551  04C7  0025               	movlb	5	; select bank5
  3552  04C8  1293               	bcf	19,5	;volatile
  3553  04C9                     u74_24:
  3554  04C9                     i1l126:
  3555  04C9  0008               	return
  3556  04CA                     __end_of_setPWMDutyandPeriod:
  3557                           
  3558                           	psect	text13
  3559  046C                     __ptext13:	
  3560 ;; *************** function ___lmul *****************
  3561 ;; Defined at:
  3562 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  3563 ;; Parameters:    Size  Location     Type
  3564 ;;  multiplier      4    0[COMMON] unsigned long 
  3565 ;;  multiplicand    4    4[COMMON] unsigned long 
  3566 ;; Auto vars:     Size  Location     Type
  3567 ;;  product         4    8[COMMON] unsigned long 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  4    0[COMMON] unsigned long 
  3570 ;; Registers used:
  3571 ;;		wreg, status,2, status,0
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3577 ;;      Params:         8       0       0       0       0       0
  3578 ;;      Locals:         4       0       0       0       0       0
  3579 ;;      Temps:          0       0       0       0       0       0
  3580 ;;      Totals:        12       0       0       0       0       0
  3581 ;;Total ram usage:       12 bytes
  3582 ;; Hardware stack levels used: 1
  3583 ;; This function calls:
  3584 ;;		Nothing
  3585 ;; This function is called by:
  3586 ;;		_runPotScaling
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590  046C                     ___lmul:	
  3591                           ;psect for function ___lmul
  3592                           
  3593  046C                     i1l1542:	
  3594                           ;incstack = 0
  3595                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3596                           
  3597  046C  3000               	movlw	0
  3598  046D  00FB               	movwf	___lmul@product+3
  3599  046E  3000               	movlw	0
  3600  046F  00FA               	movwf	___lmul@product+2
  3601  0470  3000               	movlw	0
  3602  0471  00F9               	movwf	___lmul@product+1
  3603  0472  3000               	movlw	0
  3604  0473  00F8               	movwf	___lmul@product
  3605  0474                     i1l1544:
  3606  0474  1C70               	btfss	___lmul@multiplier,0
  3607  0475  2C77               	goto	u111_21
  3608  0476  2C78               	goto	u111_20
  3609  0477                     u111_21:
  3610  0477  2C80               	goto	i1l1548
  3611  0478                     u111_20:
  3612  0478                     i1l1546:
  3613  0478  0874               	movf	___lmul@multiplicand,w
  3614  0479  07F8               	addwf	___lmul@product,f
  3615  047A  0875               	movf	___lmul@multiplicand+1,w
  3616  047B  3DF9               	addwfc	___lmul@product+1,f
  3617  047C  0876               	movf	___lmul@multiplicand+2,w
  3618  047D  3DFA               	addwfc	___lmul@product+2,f
  3619  047E  0877               	movf	___lmul@multiplicand+3,w
  3620  047F  3DFB               	addwfc	___lmul@product+3,f
  3621  0480                     i1l1548:
  3622  0480  3001               	movlw	1
  3623  0481                     u112_25:
  3624  0481  35F4               	lslf	___lmul@multiplicand,f
  3625  0482  0DF5               	rlf	___lmul@multiplicand+1,f
  3626  0483  0DF6               	rlf	___lmul@multiplicand+2,f
  3627  0484  0DF7               	rlf	___lmul@multiplicand+3,f
  3628  0485  0B89               	decfsz	9,f
  3629  0486  2C81               	goto	u112_25
  3630  0487                     i1l1550:
  3631  0487  3001               	movlw	1
  3632  0488                     u113_25:
  3633  0488  36F3               	lsrf	___lmul@multiplier+3,f
  3634  0489  0CF2               	rrf	___lmul@multiplier+2,f
  3635  048A  0CF1               	rrf	___lmul@multiplier+1,f
  3636  048B  0CF0               	rrf	___lmul@multiplier,f
  3637  048C  0B89               	decfsz	9,f
  3638  048D  2C88               	goto	u113_25
  3639  048E  0873               	movf	___lmul@multiplier+3,w
  3640  048F  0472               	iorwf	___lmul@multiplier+2,w
  3641  0490  0471               	iorwf	___lmul@multiplier+1,w
  3642  0491  0470               	iorwf	___lmul@multiplier,w
  3643  0492  1D03               	skipz
  3644  0493  2C95               	goto	u114_21
  3645  0494  2C96               	goto	u114_20
  3646  0495                     u114_21:
  3647  0495  2C74               	goto	i1l1544
  3648  0496                     u114_20:
  3649  0496                     i1l1552:
  3650  0496  087B               	movf	___lmul@product+3,w
  3651  0497  00F3               	movwf	?___lmul+3
  3652  0498  087A               	movf	___lmul@product+2,w
  3653  0499  00F2               	movwf	?___lmul+2
  3654  049A  0879               	movf	___lmul@product+1,w
  3655  049B  00F1               	movwf	?___lmul+1
  3656  049C  0878               	movf	___lmul@product,w
  3657  049D  00F0               	movwf	?___lmul
  3658  049E                     i1l504:
  3659  049E  0008               	return
  3660  049F                     __end_of___lmul:
  3661                           
  3662                           	psect	text14
  3663  03CC                     __ptext14:	
  3664 ;; *************** function _readFilteredFreqPot *****************
  3665 ;; Defined at:
  3666 ;;		line 25 in file "Potentiometer.c"
  3667 ;; Parameters:    Size  Location     Type
  3668 ;;		None
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  i               1    8[BANK0 ] unsigned char 
  3671 ;;  i               1    9[BANK0 ] unsigned char 
  3672 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  2   11[COMMON] unsigned short 
  3675 ;; Registers used:
  3676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3682 ;;      Params:         2       0       0       0       0       0
  3683 ;;      Locals:         0       6       0       0       0       0
  3684 ;;      Temps:          0       4       0       0       0       0
  3685 ;;      Totals:         2      10       0       0       0       0
  3686 ;;Total ram usage:       12 bytes
  3687 ;; Hardware stack levels used: 1
  3688 ;; Hardware stack levels required when called: 1
  3689 ;; This function calls:
  3690 ;;		_readADCRaw
  3691 ;; This function is called by:
  3692 ;;		_Tick980Hz
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696  03CC                     _readFilteredFreqPot:	
  3697                           ;psect for function _readFilteredFreqPot
  3698                           
  3699  03CC                     i1l1628:	
  3700                           ;incstack = 0
  3701                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3702                           
  3703                           
  3704                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  3705  03CC  0020               	movlb	0	; select bank0
  3706  03CD  01DB               	clrf	readFilteredFreqPot@i
  3707  03CE                     i1l1634:
  3708  03CE  355B               	lslf	readFilteredFreqPot@i,w
  3709  03CF  3E22               	addlw	(low ((_freqPotFIFO| 0+2)))& (0+255)
  3710  03D0  0086               	movwf	6
  3711  03D1  0187               	clrf	7
  3712  03D2  355B               	lslf	readFilteredFreqPot@i,w
  3713  03D3  3E20               	addlw	(low (_freqPotFIFO| 0))& (0+255)
  3714  03D4  0084               	movwf	4
  3715  03D5  0185               	clrf	5
  3716  03D6  3F40               	moviw [0]fsr1
  3717  03D7  3F80               	movwi [0]fsr0
  3718  03D8  3F41               	moviw [1]fsr1
  3719  03D9  3F81               	movwi [1]fsr0
  3720  03DA                     i1l1636:
  3721  03DA  3001               	movlw	1
  3722  03DB  00D2               	movwf	??_readFilteredFreqPot
  3723  03DC  0852               	movf	??_readFilteredFreqPot,w
  3724  03DD  07DB               	addwf	readFilteredFreqPot@i,f
  3725  03DE                     i1l1638:
  3726  03DE  300F               	movlw	15
  3727  03DF  025B               	subwf	readFilteredFreqPot@i,w
  3728  03E0  1C03               	skipc
  3729  03E1  2BE3               	goto	u129_21
  3730  03E2  2BE4               	goto	u129_20
  3731  03E3                     u129_21:
  3732  03E3  2BCE               	goto	i1l1634
  3733  03E4                     u129_20:
  3734  03E4                     i1l1640:
  3735                           
  3736                           ;Potentiometer.c: 27:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  3737  03E4  300A               	movlw	10
  3738  03E5  3182  22B3  3183   	fcall	_readADCRaw
  3739  03E8  0871               	movf	?_readADCRaw+1,w
  3740  03E9  0020               	movlb	0	; select bank0
  3741  03EA  00BF               	movwf	_freqPotFIFO+31
  3742  03EB  0870               	movf	?_readADCRaw,w
  3743  03EC  00BE               	movwf	_freqPotFIFO+30
  3744  03ED                     i1l1642:
  3745                           
  3746                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  3747  03ED  3000               	movlw	0
  3748  03EE  00D9               	movwf	readFilteredFreqPot@sumOfSamples+3
  3749  03EF  3000               	movlw	0
  3750  03F0  00D8               	movwf	readFilteredFreqPot@sumOfSamples+2
  3751  03F1  3000               	movlw	0
  3752  03F2  00D7               	movwf	readFilteredFreqPot@sumOfSamples+1
  3753  03F3  3000               	movlw	0
  3754  03F4  00D6               	movwf	readFilteredFreqPot@sumOfSamples
  3755  03F5                     i1l1644:
  3756                           
  3757                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  3758  03F5  01DA               	clrf	readFilteredFreqPot@i_642
  3759  03F6                     i1l1650:
  3760  03F6  355A               	lslf	readFilteredFreqPot@i_642,w
  3761  03F7  3E20               	addlw	(low (_freqPotFIFO| 0))& (0+255)
  3762  03F8  0086               	movwf	6
  3763  03F9  0187               	clrf	7
  3764  03FA  3F40               	moviw [0]fsr1
  3765  03FB  00D2               	movwf	??_readFilteredFreqPot
  3766  03FC  3F41               	moviw [1]fsr1
  3767  03FD  00D3               	movwf	??_readFilteredFreqPot+1
  3768  03FE  0852               	movf	??_readFilteredFreqPot,w
  3769  03FF  07D6               	addwf	readFilteredFreqPot@sumOfSamples,f
  3770  0400  0853               	movf	??_readFilteredFreqPot+1,w
  3771  0401  3DD7               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  3772  0402  3000               	movlw	0
  3773  0403  3DD8               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  3774  0404  3DD9               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  3775  0405                     i1l1652:
  3776  0405  3001               	movlw	1
  3777  0406  00D2               	movwf	??_readFilteredFreqPot
  3778  0407  0852               	movf	??_readFilteredFreqPot,w
  3779  0408  07DA               	addwf	readFilteredFreqPot@i_642,f
  3780  0409                     i1l1654:
  3781  0409  3010               	movlw	16
  3782  040A  025A               	subwf	readFilteredFreqPot@i_642,w
  3783  040B  1C03               	skipc
  3784  040C  2C0E               	goto	u130_21
  3785  040D  2C0F               	goto	u130_20
  3786  040E                     u130_21:
  3787  040E  2BF6               	goto	i1l1650
  3788  040F                     u130_20:
  3789  040F                     i1l1656:
  3790                           
  3791                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  3792  040F  0856               	movf	readFilteredFreqPot@sumOfSamples,w
  3793  0410  00D2               	movwf	??_readFilteredFreqPot
  3794  0411  0857               	movf	readFilteredFreqPot@sumOfSamples+1,w
  3795  0412  00D3               	movwf	??_readFilteredFreqPot+1
  3796  0413  0858               	movf	readFilteredFreqPot@sumOfSamples+2,w
  3797  0414  00D4               	movwf	??_readFilteredFreqPot+2
  3798  0415  0859               	movf	readFilteredFreqPot@sumOfSamples+3,w
  3799  0416  00D5               	movwf	??_readFilteredFreqPot+3
  3800  0417  3004               	movlw	4
  3801  0418                     u131_25:
  3802  0418  36D5               	lsrf	??_readFilteredFreqPot+3,f
  3803  0419  0CD4               	rrf	??_readFilteredFreqPot+2,f
  3804  041A  0CD3               	rrf	??_readFilteredFreqPot+1,f
  3805  041B  0CD2               	rrf	??_readFilteredFreqPot,f
  3806  041C                     u131_20:
  3807  041C  0B89               	decfsz	9,f
  3808  041D  2C18               	goto	u131_25
  3809  041E  0853               	movf	??_readFilteredFreqPot+1,w
  3810  041F  00FC               	movwf	?_readFilteredFreqPot+1
  3811  0420  0852               	movf	??_readFilteredFreqPot,w
  3812  0421  00FB               	movwf	?_readFilteredFreqPot
  3813  0422                     i1l314:
  3814  0422  0008               	return
  3815  0423                     __end_of_readFilteredFreqPot:
  3816                           
  3817                           	psect	text15
  3818  0374                     __ptext15:	
  3819 ;; *************** function _readFilteredDutyPot *****************
  3820 ;; Defined at:
  3821 ;;		line 16 in file "Potentiometer.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;		None
  3824 ;; Auto vars:     Size  Location     Type
  3825 ;;  i               1    8[BANK0 ] unsigned char 
  3826 ;;  i               1    9[BANK0 ] unsigned char 
  3827 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  2   11[COMMON] unsigned short 
  3830 ;; Registers used:
  3831 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3837 ;;      Params:         2       0       0       0       0       0
  3838 ;;      Locals:         0       6       0       0       0       0
  3839 ;;      Temps:          0       4       0       0       0       0
  3840 ;;      Totals:         2      10       0       0       0       0
  3841 ;;Total ram usage:       12 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 1
  3844 ;; This function calls:
  3845 ;;		_readADCRaw
  3846 ;; This function is called by:
  3847 ;;		_Tick980Hz
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851  0374                     _readFilteredDutyPot:	
  3852                           ;psect for function _readFilteredDutyPot
  3853                           
  3854  0374                     i1l1596:	
  3855                           ;incstack = 0
  3856                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3857                           
  3858                           
  3859                           ;Potentiometer.c: 17:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  3860  0374  0020               	movlb	0	; select bank0
  3861  0375  01DB               	clrf	readFilteredDutyPot@i
  3862  0376                     i1l1602:
  3863  0376  355B               	lslf	readFilteredDutyPot@i,w
  3864  0377  3EA2               	addlw	(low ((_dutyPotFIFO| 0+2)))& (0+255)
  3865  0378  0086               	movwf	6
  3866  0379  0187               	clrf	7
  3867  037A  355B               	lslf	readFilteredDutyPot@i,w
  3868  037B  3EA0               	addlw	(low (_dutyPotFIFO| 0))& (0+255)
  3869  037C  0084               	movwf	4
  3870  037D  0185               	clrf	5
  3871  037E  3F40               	moviw [0]fsr1
  3872  037F  3F80               	movwi [0]fsr0
  3873  0380  3F41               	moviw [1]fsr1
  3874  0381  3F81               	movwi [1]fsr0
  3875  0382                     i1l1604:
  3876  0382  3001               	movlw	1
  3877  0383  00D2               	movwf	??_readFilteredDutyPot
  3878  0384  0852               	movf	??_readFilteredDutyPot,w
  3879  0385  07DB               	addwf	readFilteredDutyPot@i,f
  3880  0386                     i1l1606:
  3881  0386  300F               	movlw	15
  3882  0387  025B               	subwf	readFilteredDutyPot@i,w
  3883  0388  1C03               	skipc
  3884  0389  2B8B               	goto	u126_21
  3885  038A  2B8C               	goto	u126_20
  3886  038B                     u126_21:
  3887  038B  2B76               	goto	i1l1602
  3888  038C                     u126_20:
  3889  038C                     i1l1608:
  3890                           
  3891                           ;Potentiometer.c: 18:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  3892  038C  3009               	movlw	9
  3893  038D  3182  22B3  3183   	fcall	_readADCRaw
  3894  0390  0871               	movf	?_readADCRaw+1,w
  3895  0391  0021               	movlb	1	; select bank1
  3896  0392  00BF               	movwf	((_dutyPotFIFO+1)^(0+128)+30)
  3897  0393  0870               	movf	?_readADCRaw,w
  3898  0394  00BE               	movwf	(_dutyPotFIFO^(0+128)+30)
  3899  0395                     i1l1610:
  3900                           
  3901                           ;Potentiometer.c: 19:     uint32_t sumOfSamples = 0;
  3902  0395  3000               	movlw	0
  3903  0396  0020               	movlb	0	; select bank0
  3904  0397  00D9               	movwf	readFilteredDutyPot@sumOfSamples+3
  3905  0398  3000               	movlw	0
  3906  0399  00D8               	movwf	readFilteredDutyPot@sumOfSamples+2
  3907  039A  3000               	movlw	0
  3908  039B  00D7               	movwf	readFilteredDutyPot@sumOfSamples+1
  3909  039C  3000               	movlw	0
  3910  039D  00D6               	movwf	readFilteredDutyPot@sumOfSamples
  3911  039E                     i1l1612:
  3912                           
  3913                           ;Potentiometer.c: 20:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  3914  039E  01DA               	clrf	readFilteredDutyPot@i_638
  3915  039F                     i1l1618:
  3916  039F  355A               	lslf	readFilteredDutyPot@i_638,w
  3917  03A0  3EA0               	addlw	(low (_dutyPotFIFO| 0))& (0+255)
  3918  03A1  0086               	movwf	6
  3919  03A2  0187               	clrf	7
  3920  03A3  3F40               	moviw [0]fsr1
  3921  03A4  00D2               	movwf	??_readFilteredDutyPot
  3922  03A5  3F41               	moviw [1]fsr1
  3923  03A6  00D3               	movwf	??_readFilteredDutyPot+1
  3924  03A7  0852               	movf	??_readFilteredDutyPot,w
  3925  03A8  07D6               	addwf	readFilteredDutyPot@sumOfSamples,f
  3926  03A9  0853               	movf	??_readFilteredDutyPot+1,w
  3927  03AA  3DD7               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  3928  03AB  3000               	movlw	0
  3929  03AC  3DD8               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  3930  03AD  3DD9               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  3931  03AE                     i1l1620:
  3932  03AE  3001               	movlw	1
  3933  03AF  00D2               	movwf	??_readFilteredDutyPot
  3934  03B0  0852               	movf	??_readFilteredDutyPot,w
  3935  03B1  07DA               	addwf	readFilteredDutyPot@i_638,f
  3936  03B2                     i1l1622:
  3937  03B2  3010               	movlw	16
  3938  03B3  025A               	subwf	readFilteredDutyPot@i_638,w
  3939  03B4  1C03               	skipc
  3940  03B5  2BB7               	goto	u127_21
  3941  03B6  2BB8               	goto	u127_20
  3942  03B7                     u127_21:
  3943  03B7  2B9F               	goto	i1l1618
  3944  03B8                     u127_20:
  3945  03B8                     i1l1624:
  3946                           
  3947                           ;Potentiometer.c: 22:     return (sumOfSamples >> 4);
  3948  03B8  0856               	movf	readFilteredDutyPot@sumOfSamples,w
  3949  03B9  00D2               	movwf	??_readFilteredDutyPot
  3950  03BA  0857               	movf	readFilteredDutyPot@sumOfSamples+1,w
  3951  03BB  00D3               	movwf	??_readFilteredDutyPot+1
  3952  03BC  0858               	movf	readFilteredDutyPot@sumOfSamples+2,w
  3953  03BD  00D4               	movwf	??_readFilteredDutyPot+2
  3954  03BE  0859               	movf	readFilteredDutyPot@sumOfSamples+3,w
  3955  03BF  00D5               	movwf	??_readFilteredDutyPot+3
  3956  03C0  3004               	movlw	4
  3957  03C1                     u128_25:
  3958  03C1  36D5               	lsrf	??_readFilteredDutyPot+3,f
  3959  03C2  0CD4               	rrf	??_readFilteredDutyPot+2,f
  3960  03C3  0CD3               	rrf	??_readFilteredDutyPot+1,f
  3961  03C4  0CD2               	rrf	??_readFilteredDutyPot,f
  3962  03C5                     u128_20:
  3963  03C5  0B89               	decfsz	9,f
  3964  03C6  2BC1               	goto	u128_25
  3965  03C7  0853               	movf	??_readFilteredDutyPot+1,w
  3966  03C8  00FC               	movwf	?_readFilteredDutyPot+1
  3967  03C9  0852               	movf	??_readFilteredDutyPot,w
  3968  03CA  00FB               	movwf	?_readFilteredDutyPot
  3969  03CB                     i1l307:
  3970  03CB  0008               	return
  3971  03CC                     __end_of_readFilteredDutyPot:
  3972                           
  3973                           	psect	text16
  3974  02B3                     __ptext16:	
  3975 ;; *************** function _readADCRaw *****************
  3976 ;; Defined at:
  3977 ;;		line 59 in file "ADC.c"
  3978 ;; Parameters:    Size  Location     Type
  3979 ;;  gpioNumber      1    wreg     const enum E2798
  3980 ;; Auto vars:     Size  Location     Type
  3981 ;;  gpioNumber      1   10[COMMON] const enum E2798
  3982 ;;  i               1    9[COMMON] unsigned char 
  3983 ;;  i               1    8[COMMON] unsigned char 
  3984 ;;  returnValue     2    4[COMMON] unsigned int 
  3985 ;;  gpioValid       1    7[COMMON] unsigned char 
  3986 ;;  channel         1    6[COMMON] unsigned char 
  3987 ;; Return value:  Size  Location     Type
  3988 ;;                  2    0[COMMON] unsigned short 
  3989 ;; Registers used:
  3990 ;;		wreg, status,2, status,0
  3991 ;; Tracked objects:
  3992 ;;		On entry : 0/0
  3993 ;;		On exit  : 0/0
  3994 ;;		Unchanged: 0/0
  3995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3996 ;;      Params:         2       0       0       0       0       0
  3997 ;;      Locals:         7       0       0       0       0       0
  3998 ;;      Temps:          2       0       0       0       0       0
  3999 ;;      Totals:        11       0       0       0       0       0
  4000 ;;Total ram usage:       11 bytes
  4001 ;; Hardware stack levels used: 1
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_readFilteredDutyPot
  4006 ;;		_readFilteredFreqPot
  4007 ;; This function uses a non-reentrant model
  4008 ;;
  4009                           
  4010  02B3                     _readADCRaw:	
  4011                           ;psect for function _readADCRaw
  4012                           
  4013                           
  4014                           ;incstack = 0
  4015                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4016                           ;readADCRaw@gpioNumber stored from wreg
  4017  02B3  00FA               	movwf	readADCRaw@gpioNumber
  4018  02B4                     i1l1466:
  4019                           
  4020                           ;ADC.c: 60:     uint8_t channel = 0;
  4021  02B4  01F6               	clrf	readADCRaw@channel
  4022                           
  4023                           ;ADC.c: 61:     uint8_t gpioValid = 0;
  4024  02B5  01F7               	clrf	readADCRaw@gpioValid
  4025  02B6                     i1l1468:
  4026                           
  4027                           ;ADC.c: 63:     if(gpioNumber < 4){
  4028  02B6  3004               	movlw	4
  4029  02B7  027A               	subwf	readADCRaw@gpioNumber,w
  4030  02B8  1803               	skipnc
  4031  02B9  2ABB               	goto	u96_21
  4032  02BA  2ABC               	goto	u96_20
  4033  02BB                     u96_21:
  4034  02BB  2AC2               	goto	i1l191
  4035  02BC                     u96_20:
  4036  02BC                     i1l1470:
  4037                           
  4038                           ;ADC.c: 64:         channel = gpioNumber;
  4039  02BC  087A               	movf	readADCRaw@gpioNumber,w
  4040  02BD  00F2               	movwf	??_readADCRaw
  4041  02BE  0872               	movf	??_readADCRaw,w
  4042  02BF  00F6               	movwf	readADCRaw@channel
  4043  02C0                     i1l1472:
  4044                           
  4045                           ;ADC.c: 65:         gpioValid = 1;
  4046  02C0  01F7               	clrf	readADCRaw@gpioValid
  4047  02C1  0AF7               	incf	readADCRaw@gpioValid,f
  4048  02C2                     i1l191:	
  4049                           ;ADC.c: 66:     }
  4050                           
  4051                           
  4052                           ;ADC.c: 67:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4053  02C2  3009               	movlw	9
  4054  02C3  027A               	subwf	readADCRaw@gpioNumber,w
  4055  02C4  1C03               	skipc
  4056  02C5  2AC7               	goto	u97_21
  4057  02C6  2AC8               	goto	u97_20
  4058  02C7                     u97_21:
  4059  02C7  2AD5               	goto	i1l192
  4060  02C8                     u97_20:
  4061  02C8                     i1l1474:
  4062  02C8  3010               	movlw	16
  4063  02C9  027A               	subwf	readADCRaw@gpioNumber,w
  4064  02CA  1803               	skipnc
  4065  02CB  2ACD               	goto	u98_21
  4066  02CC  2ACE               	goto	u98_20
  4067  02CD                     u98_21:
  4068  02CD  2AD5               	goto	i1l192
  4069  02CE                     u98_20:
  4070  02CE                     i1l1476:
  4071                           
  4072                           ;ADC.c: 68:         channel = 12u - (gpioNumber - 8);
  4073  02CE  087A               	movf	readADCRaw@gpioNumber,w
  4074  02CF  3C14               	sublw	20
  4075  02D0  00F2               	movwf	??_readADCRaw
  4076  02D1  0872               	movf	??_readADCRaw,w
  4077  02D2  00F6               	movwf	readADCRaw@channel
  4078  02D3                     i1l1478:
  4079                           
  4080                           ;ADC.c: 69:         gpioValid = 1;
  4081  02D3  01F7               	clrf	readADCRaw@gpioValid
  4082  02D4  0AF7               	incf	readADCRaw@gpioValid,f
  4083  02D5                     i1l192:	
  4084                           ;ADC.c: 70:     }
  4085                           
  4086                           
  4087                           ;ADC.c: 71:     if(gpioValid){
  4088  02D5  0877               	movf	readADCRaw@gpioValid,w
  4089  02D6  1903               	btfsc	3,2
  4090  02D7  2AD9               	goto	u99_21
  4091  02D8  2ADA               	goto	u99_20
  4092  02D9                     u99_21:
  4093  02D9  2B14               	goto	i1l202
  4094  02DA                     u99_20:
  4095  02DA                     i1l1480:
  4096                           
  4097                           ;ADC.c: 73:         if(~ADCON0bits.GO_nDONE){
  4098  02DA  0021               	movlb	1	; select bank1
  4099  02DB  081D               	movf	29,w	;volatile
  4100  02DC                     i1l1482:
  4101                           
  4102                           ;ADC.c: 74:             ADCON0 &= ~(0b01111100);
  4103  02DC  3083               	movlw	131
  4104  02DD  00F2               	movwf	??_readADCRaw
  4105  02DE  0872               	movf	??_readADCRaw,w
  4106  02DF  059D               	andwf	29,f	;volatile
  4107  02E0                     i1l1484:
  4108                           
  4109                           ;ADC.c: 75:             ADCON0 |= (channel << 2);
  4110  02E0  0876               	movf	readADCRaw@channel,w	;volatile
  4111  02E1  00F2               	movwf	??_readADCRaw
  4112  02E2  3001               	movlw	1
  4113  02E3                     u100_25:
  4114  02E3  35F2               	lslf	??_readADCRaw,f
  4115  02E4  3EFF               	addlw	-1
  4116  02E5  1D03               	skipz
  4117  02E6  2AE3               	goto	u100_25
  4118  02E7  3572               	lslf	??_readADCRaw,w
  4119  02E8  00F3               	movwf	??_readADCRaw+1
  4120  02E9  0873               	movf	??_readADCRaw+1,w
  4121  02EA  049D               	iorwf	29,f	;volatile
  4122  02EB                     i1l1486:
  4123                           
  4124                           ;ADC.c: 76:             for(uint8_t i = 0; i < 8; i++);
  4125  02EB  01F8               	clrf	readADCRaw@i
  4126  02EC                     i1l1492:
  4127  02EC  3001               	movlw	1
  4128  02ED  00F2               	movwf	??_readADCRaw
  4129  02EE  0872               	movf	??_readADCRaw,w
  4130  02EF  07F8               	addwf	readADCRaw@i,f
  4131  02F0                     i1l1494:
  4132  02F0  3008               	movlw	8
  4133  02F1  0278               	subwf	readADCRaw@i,w
  4134  02F2  1C03               	skipc
  4135  02F3  2AF5               	goto	u101_21
  4136  02F4  2AF6               	goto	u101_20
  4137  02F5                     u101_21:
  4138  02F5  2AEC               	goto	i1l1492
  4139  02F6                     u101_20:
  4140  02F6                     i1l196:
  4141                           
  4142                           ;ADC.c: 78:             ADCON0bits.GO_nDONE = 1;
  4143  02F6  0021               	movlb	1	; select bank1
  4144  02F7  149D               	bsf	29,1	;volatile
  4145  02F8                     i1l197:	
  4146                           ;ADC.c: 79:             while(ADCON0bits.GO_nDONE);
  4147                           
  4148  02F8  189D               	btfsc	29,1	;volatile
  4149  02F9  2AFB               	goto	u102_21
  4150  02FA  2AFC               	goto	u102_20
  4151  02FB                     u102_21:
  4152  02FB  2AF8               	goto	i1l197
  4153  02FC                     u102_20:
  4154  02FC                     i1l1496:
  4155                           
  4156                           ;ADC.c: 80:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4157  02FC  081C               	movf	28,w	;volatile
  4158  02FD  00F5               	movwf	readADCRaw@returnValue+1
  4159  02FE  081B               	movf	27,w	;volatile
  4160  02FF  00F4               	movwf	readADCRaw@returnValue
  4161  0300                     i1l1498:
  4162                           
  4163                           ;ADC.c: 81:             ADCON0 &= ~(0b01111100);
  4164  0300  3083               	movlw	131
  4165  0301  00F2               	movwf	??_readADCRaw
  4166  0302  0872               	movf	??_readADCRaw,w
  4167  0303  059D               	andwf	29,f	;volatile
  4168  0304                     i1l1500:
  4169                           
  4170                           ;ADC.c: 82:             ADCON0 |= (0b010 << 2);
  4171  0304  159D               	bsf	29,3	;volatile
  4172  0305                     i1l1502:
  4173                           
  4174                           ;ADC.c: 83:             for(uint8_t i = 0; i < 8; i++);
  4175  0305  01F9               	clrf	readADCRaw@i_556
  4176  0306                     i1l1508:
  4177  0306  3001               	movlw	1
  4178  0307  00F2               	movwf	??_readADCRaw
  4179  0308  0872               	movf	??_readADCRaw,w
  4180  0309  07F9               	addwf	readADCRaw@i_556,f
  4181  030A                     i1l1510:
  4182  030A  3008               	movlw	8
  4183  030B  0279               	subwf	readADCRaw@i_556,w
  4184  030C  1C03               	skipc
  4185  030D  2B0F               	goto	u103_21
  4186  030E  2B10               	goto	u103_20
  4187  030F                     u103_21:
  4188  030F  2B06               	goto	i1l1508
  4189  0310                     u103_20:
  4190  0310                     i1l1512:
  4191                           
  4192                           ;ADC.c: 85:             return returnValue;
  4193  0310  0875               	movf	readADCRaw@returnValue+1,w
  4194  0311  00F1               	movwf	?_readADCRaw+1
  4195  0312  0874               	movf	readADCRaw@returnValue,w
  4196  0313  00F0               	movwf	?_readADCRaw
  4197  0314                     i1l202:
  4198  0314  0008               	return
  4199  0315                     __end_of_readADCRaw:
  4200                           
  4201                           	psect	text17
  4202  04FE                     __ptext17:	
  4203 ;; *************** function _currentTripRead *****************
  4204 ;; Defined at:
  4205 ;;		line 18 in file "CurrentSensor.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;		None
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;		None
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  1    wreg      unsigned char 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, pclath, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4219 ;;      Params:         0       0       0       0       0       0
  4220 ;;      Locals:         1       0       0       0       0       0
  4221 ;;      Temps:          0       0       0       0       0       0
  4222 ;;      Totals:         1       0       0       0       0       0
  4223 ;;Total ram usage:        1 bytes
  4224 ;; Hardware stack levels used: 1
  4225 ;; Hardware stack levels required when called: 1
  4226 ;; This function calls:
  4227 ;;		_readGPIO
  4228 ;; This function is called by:
  4229 ;;		_Tick980Hz
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233  04FE                     _currentTripRead:	
  4234                           ;psect for function _currentTripRead
  4235                           
  4236  04FE                     i1l1556:	
  4237                           ;incstack = 0
  4238                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4239                           
  4240                           
  4241                           ;CurrentSensor.c: 19:     return readGPIO(pinRA3) || readGPIO(pinRA1);
  4242  04FE  01F6               	clrf	_currentTripRead$672
  4243  04FF  0AF6               	incf	_currentTripRead$672,f
  4244  0500                     i1l1558:
  4245  0500  3003               	movlw	3
  4246  0501  3184  2423  3184   	fcall	_readGPIO
  4247  0504  3A00               	xorlw	0
  4248  0505  1D03               	skipz
  4249  0506  2D08               	goto	u115_21
  4250  0507  2D09               	goto	u115_20
  4251  0508                     u115_21:
  4252  0508  2D13               	goto	i1l1564
  4253  0509                     u115_20:
  4254  0509                     i1l1560:
  4255  0509  3001               	movlw	1
  4256  050A  3184  2423  3184   	fcall	_readGPIO
  4257  050D  3A00               	xorlw	0
  4258  050E  1D03               	skipz
  4259  050F  2D11               	goto	u116_21
  4260  0510  2D12               	goto	u116_20
  4261  0511                     u116_21:
  4262  0511  2D13               	goto	i1l1564
  4263  0512                     u116_20:
  4264  0512                     i1l1562:
  4265  0512  01F6               	clrf	_currentTripRead$672
  4266  0513                     i1l1564:
  4267  0513  0876               	movf	_currentTripRead$672,w
  4268  0514                     i1l340:
  4269  0514  0008               	return
  4270  0515                     __end_of_currentTripRead:
  4271                           
  4272                           	psect	text18
  4273  0423                     __ptext18:	
  4274 ;; *************** function _readGPIO *****************
  4275 ;; Defined at:
  4276 ;;		line 79 in file "GPIO.c"
  4277 ;; Parameters:    Size  Location     Type
  4278 ;;  gpioNumber      1    wreg     const enum E2798
  4279 ;; Auto vars:     Size  Location     Type
  4280 ;;  gpioNumber      1    4[COMMON] const enum E2798
  4281 ;;  portNumber      1    5[COMMON] unsigned char 
  4282 ;;  portType        1    3[COMMON] unsigned char 
  4283 ;; Return value:  Size  Location     Type
  4284 ;;                  1    wreg      _Bool 
  4285 ;; Registers used:
  4286 ;;		wreg, status,2, status,0
  4287 ;; Tracked objects:
  4288 ;;		On entry : 0/0
  4289 ;;		On exit  : 0/0
  4290 ;;		Unchanged: 0/0
  4291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4292 ;;      Params:         0       0       0       0       0       0
  4293 ;;      Locals:         3       0       0       0       0       0
  4294 ;;      Temps:          3       0       0       0       0       0
  4295 ;;      Totals:         6       0       0       0       0       0
  4296 ;;Total ram usage:        6 bytes
  4297 ;; Hardware stack levels used: 1
  4298 ;; This function calls:
  4299 ;;		Nothing
  4300 ;; This function is called by:
  4301 ;;		_currentTripRead
  4302 ;; This function uses a non-reentrant model
  4303 ;;
  4304                           
  4305  0423                     _readGPIO:	
  4306                           ;psect for function _readGPIO
  4307                           
  4308                           
  4309                           ;incstack = 0
  4310                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  4311                           ;readGPIO@gpioNumber stored from wreg
  4312  0423  00F4               	movwf	readGPIO@gpioNumber
  4313  0424                     i1l1516:
  4314                           
  4315                           ;GPIO.c: 81:     uint8_t portType = 0;
  4316  0424  01F3               	clrf	readGPIO@portType
  4317  0425                     i1l1518:
  4318                           
  4319                           ;GPIO.c: 82:     if(gpioNumber > 7){
  4320  0425  3008               	movlw	8
  4321  0426  0274               	subwf	readGPIO@gpioNumber,w
  4322  0427  1C03               	skipc
  4323  0428  2C2A               	goto	u104_21
  4324  0429  2C2B               	goto	u104_20
  4325  042A                     u104_21:
  4326  042A  2C33               	goto	i1l1524
  4327  042B                     u104_20:
  4328  042B                     i1l1520:
  4329                           
  4330                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  4331  042B  0874               	movf	readGPIO@gpioNumber,w
  4332  042C  3EF8               	addlw	248
  4333  042D  00F0               	movwf	??_readGPIO
  4334  042E  0870               	movf	??_readGPIO,w
  4335  042F  00F5               	movwf	readGPIO@portNumber
  4336  0430                     i1l1522:
  4337                           
  4338                           ;GPIO.c: 84:         portType = 1;
  4339  0430  01F3               	clrf	readGPIO@portType
  4340  0431  0AF3               	incf	readGPIO@portType,f
  4341                           
  4342                           ;GPIO.c: 85:     }
  4343  0432  2C38               	goto	i1l1528
  4344  0433                     i1l1524:
  4345                           
  4346                           ;GPIO.c: 87:         portNumber = gpioNumber;
  4347  0433  0874               	movf	readGPIO@gpioNumber,w
  4348  0434  00F0               	movwf	??_readGPIO
  4349  0435  0870               	movf	??_readGPIO,w
  4350  0436  00F5               	movwf	readGPIO@portNumber
  4351  0437                     i1l1526:
  4352                           
  4353                           ;GPIO.c: 88:         portType = 0;
  4354  0437  01F3               	clrf	readGPIO@portType
  4355  0438                     i1l1528:
  4356                           
  4357                           ;GPIO.c: 91:     if(portType == 0){
  4358  0438  0873               	movf	readGPIO@portType,w
  4359  0439  1D03               	btfss	3,2
  4360  043A  2C3C               	goto	u105_21
  4361  043B  2C3D               	goto	u105_20
  4362  043C                     u105_21:
  4363  043C  2C52               	goto	i1l1536
  4364  043D                     u105_20:
  4365  043D                     i1l1530:
  4366                           
  4367                           ;GPIO.c: 92:         return ((PORTA &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4368  043D  3001               	movlw	1
  4369  043E  00F0               	movwf	??_readGPIO
  4370  043F  0A75               	incf	readGPIO@portNumber,w
  4371  0440  2C42               	goto	u106_24
  4372  0441                     u106_25:
  4373  0441  35F0               	lslf	??_readGPIO,f
  4374  0442                     u106_24:
  4375  0442  0B89               	decfsz	9,f
  4376  0443  2C41               	goto	u106_25
  4377  0444  0870               	movf	??_readGPIO,w
  4378  0445  00F1               	movwf	??_readGPIO+1
  4379  0446  0871               	movf	??_readGPIO+1,w
  4380  0447  0020               	movlb	0	; select bank0
  4381  0448  058C               	andwf	12,f	;volatile
  4382  0449  080C               	movf	12,w	;volatile
  4383  044A  00F2               	movwf	??_readGPIO+2
  4384  044B  0A75               	incf	readGPIO@portNumber,w
  4385  044C  2C4E               	goto	u107_24
  4386  044D                     u107_25:
  4387  044D  36F2               	lsrf	??_readGPIO+2,f
  4388  044E                     u107_24:
  4389  044E  0B89               	decfsz	9,f
  4390  044F  2C4D               	goto	u107_25
  4391  0450  0872               	movf	??_readGPIO+2,w
  4392  0451  2C6B               	goto	i1l269
  4393  0452                     i1l1536:
  4394  0452  0373               	decf	readGPIO@portType,w
  4395  0453  1D03               	btfss	3,2
  4396  0454  2C56               	goto	u108_21
  4397  0455  2C57               	goto	u108_20
  4398  0456                     u108_21:
  4399  0456  2C6B               	goto	i1l269
  4400  0457                     u108_20:
  4401  0457                     i1l1538:
  4402                           
  4403                           ;GPIO.c: 95:         return ((PORTB &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4404  0457  3001               	movlw	1
  4405  0458  00F0               	movwf	??_readGPIO
  4406  0459  0A75               	incf	readGPIO@portNumber,w
  4407  045A  2C5C               	goto	u109_24
  4408  045B                     u109_25:
  4409  045B  35F0               	lslf	??_readGPIO,f
  4410  045C                     u109_24:
  4411  045C  0B89               	decfsz	9,f
  4412  045D  2C5B               	goto	u109_25
  4413  045E  0870               	movf	??_readGPIO,w
  4414  045F  00F1               	movwf	??_readGPIO+1
  4415  0460  0871               	movf	??_readGPIO+1,w
  4416  0461  0020               	movlb	0	; select bank0
  4417  0462  058D               	andwf	13,f	;volatile
  4418  0463  080D               	movf	13,w	;volatile
  4419  0464  00F2               	movwf	??_readGPIO+2
  4420  0465  0A75               	incf	readGPIO@portNumber,w
  4421  0466  2C68               	goto	u110_24
  4422  0467                     u110_25:
  4423  0467  36F2               	lsrf	??_readGPIO+2,f
  4424  0468                     u110_24:
  4425  0468  0B89               	decfsz	9,f
  4426  0469  2C67               	goto	u110_25
  4427  046A  0872               	movf	??_readGPIO+2,w
  4428  046B                     i1l269:
  4429  046B  0008               	return
  4430  046C                     __end_of_readGPIO:
  4431  007E                     btemp	set	126	;btemp
  4432  007E                     int$flags	set	126
  4433  007E                     wtemp0	set	126
  4434                           
  4435                           	psect	idloc
  4436                           
  4437                           ;Config register IDLOC0 @ 0x8000
  4438                           ;	unspecified, using default values
  4439  8000                     	org	32768
  4440  8000  3FFF               	dw	16383
  4441                           
  4442                           ;Config register IDLOC1 @ 0x8001
  4443                           ;	unspecified, using default values
  4444  8001                     	org	32769
  4445  8001  3FFF               	dw	16383
  4446                           
  4447                           ;Config register IDLOC2 @ 0x8002
  4448                           ;	unspecified, using default values
  4449  8002                     	org	32770
  4450  8002  3FFF               	dw	16383
  4451                           
  4452                           ;Config register IDLOC3 @ 0x8003
  4453                           ;	unspecified, using default values
  4454  8003                     	org	32771
  4455  8003  3FFF               	dw	16383
  4456                           
  4457                           	psect	config
  4458                           
  4459                           ;Config register CONFIG1 @ 0x8007
  4460                           ;	Oscillator Selection
  4461                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4462                           ;	Watchdog Timer Enable
  4463                           ;	WDTE = OFF, WDT disabled
  4464                           ;	Power-up Timer Enable
  4465                           ;	PWRTE = OFF, PWRT disabled
  4466                           ;	MCLR Pin Function Select
  4467                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4468                           ;	Flash Program Memory Code Protection
  4469                           ;	CP = OFF, Program memory code protection is disabled
  4470                           ;	Data Memory Code Protection
  4471                           ;	CPD = OFF, Data memory code protection is disabled
  4472                           ;	Brown-out Reset Enable
  4473                           ;	BOREN = ON, Brown-out Reset enabled
  4474                           ;	Clock Out Enable
  4475                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4476                           ;	Internal/External Switchover
  4477                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4478                           ;	Fail-Safe Clock Monitor Enable
  4479                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4480  8007                     	org	32775
  4481  8007  0FA4               	dw	4004
  4482                           
  4483                           ;Config register CONFIG2 @ 0x8008
  4484                           ;	Flash Memory Self-Write Protection
  4485                           ;	WRT = OFF, Write protection off
  4486                           ;	PLL Enable
  4487                           ;	PLLEN = OFF, 4x PLL disabled
  4488                           ;	Stack Overflow/Underflow Reset Enable
  4489                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4490                           ;	Brown-out Reset Voltage Selection
  4491                           ;	BORV = 0x1, unprogrammed default
  4492                           ;	Low-Voltage Programming Enable
  4493                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4494  8008                     	org	32776
  4495  8008  1CFF               	dw	7423

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         82
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     20      70
    BANK1            80      0      32
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _Tick980Hz->_readFilteredDutyPot
    _Tick980Hz->_readFilteredFreqPot
    _runPotScaling->___lmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_readFilteredDutyPot
    _Tick980Hz->_readFilteredFreqPot

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2083
                                             16 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     596
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             10 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0     596
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     596
                                             10 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    2745
                                             13 COMMON     1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (4) _writeGPIO                                            6     5      1     400
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                        9     9      0     811
                                              0 BANK0      9     9      0
                             ___lmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      1     1      0     228
                                              6 COMMON     1     1      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             6     6      0     204
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   _writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      74       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     14      46       6       87.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      20       8       40.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      74      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jan 30 16:43:57 2023

                                 l73 04E3                                   l74 04E3  
                                 l92 0157                                  l123 04FD  
                                l300 053E                                  l148 0546  
                                l335 0535                                  l183 0270  
                                l249 01D3                                  l179 0552  
                                l188 02B2                                  _PR2 001B  
                                u810 01A6                                  u811 01A5  
                                u820 01AB                                  u804 0198  
                                u900 027A                                  u821 01AA  
                                u805 0197                                  u901 0279  
                                u750 0161                                  u751 0160  
                                u760 0173                                  u761 0172  
                                u834 01B0                                  u770 0178  
                                u930 0299                                  u914 027F  
                                u835 01AF                                  u771 0177  
                                u931 0298                                  u915 027E  
                                u844 01BD                                  u924 028C  
                                u860 0254                                  u845 01BC  
                                u925 028B                                  u861 0253  
                                u854 01CB                                  u870 0261  
                                u855 01CA                                  u871 0260  
                                u784 017D                                  u944 029E  
                                u880 0267                                  u785 017C  
                                u945 029D                                  u881 0266  
                                u794 018A                                  u954 02AB  
                                u890 0275                                  u795 0189  
                                u955 02AA                                  u891 0274  
                                wreg 0009                ??_setPWMDutyandPeriod 0073  
                   ??_initialiseGPIO 005D                                 l1410 015A  
                               l1420 016D                                 l1412 015B  
                               l1430 01A1                                 l1422 016E  
                               l1414 0161                                 l1432 01A6  
                               l1424 0173                                 l1416 0166  
                               l1440 024E                                 l1434 01AB  
                               l1426 0178                                 l1418 0169  
                               l1450 0261                                 l1442 0254  
                               l1436 01C6                                 l1428 0193  
                               l1460 027A                                 l1452 0267  
                               l1444 0258                                 l1700 00C4  
                               l1462 0294                                 l1454 026C  
                               l1446 0259                                 l1438 024B  
                               l1710 00E3                                 l1702 00CE  
                               l1464 0299                                 l1456 026E  
                               l1448 025B                                 l1720 00FE  
                               l1712 00E4                                 l1704 00D3  
                               l1458 0275                                 l1730 0112  
                               l1722 0103                                 l1714 00EE  
                               l1706 00D4                                 l1810 04D1  
                               l1732 011C                                 l1724 0104  
                               l1716 00F3                                 l1708 00DE  
                               l1740 012C                                 l1812 04D4  
                               l1734 0121                                 l1726 010E  
                               l1718 00F4                                 l1670 007F  
                               l1750 04E9                                 l1814 04D7  
                               l1806 04CA                                 l1736 0122  
                               l1728 0111                                 l1680 0093  
                               l1672 0080                                 l1760 04F4  
                               l1752 04EB                                 l1816 04DA  
                               l1808 04CE                                 l1770 054D  
                               l1850 0134                                 l1690 00AE  
                               l1682 0094                                 l1674 0083  
                               l1762 04F6                                 l1754 04ED  
                               l1818 04DD                                 l1772 0527  
                               l1692 00B3                                 l1684 009E  
                               l1676 0084                                 l1764 04F8  
                               l1756 04EF                                 l1748 04E6  
                               l1774 0536                                 l1694 00B4  
                               l1686 00A3                                 l1678 008E  
                               l1758 04F1                                 l1766 053F  
                               l1696 00BE                                 l1688 00A4  
                               l1768 0544                                 l1698 00C3  
                               STR_1 0515                                 _LATA 010C  
                               _LATB 010D                                 i1l64 005A  
                               i1l68 0065                      _filteredFreqPot 0046  
                    _filteredDutyPot 0044                                 _main 04CA  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 0067  
          ??_setupInternalOscillator 005C                                ?_main 0062  
                              i1l202 0314                                i1l126 04C9  
                              i1l314 0422                                i1l307 03CB  
                              i1l340 0514                                i1l318 0248  
                              i1l191 02C2                                i1l263 0373  
                              i1l192 02D5                                i1l504 049E  
                              i1l196 02F6                                i1l269 046B  
                              i1l197 02F8                                _PORTA 000C  
                              _PORTB 000D                                u73_20 04C7  
                              u73_21 04C4                                _TRISA 008C  
                              _TRISB 008D                                u74_24 04C9  
                              u96_20 02BC                                u96_21 02BB  
                              u97_20 02C8                                u97_21 02C7  
                              u98_20 02CE                                u98_21 02CD  
                              u99_20 02DA                                u99_21 02D9  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
               readFilteredFreqPot@i 005B             readFilteredDutyPot@i_638 005A  
                              status 0003                                wtemp0 007E  
             initialiseGPIO@portType 005F                  _initialiseADCModule 054D  
               readFilteredDutyPot@i 005B           initialiseADCPin@gpioNumber 0061  
                    __initialization 0069                         __end_of_main 04E6  
                  ?_initialiseADCPin 0070                               ??_main 0066  
                 ??_initialiseADCPin 005C                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0062      __end_of_setupInternalOscillator 0158  
setupInternalOscillator@selectedFreq 005E                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             u100_25 02E3                               u101_20 02F6  
                             u101_21 02F5                               u102_20 02FC  
                             u102_21 02FB                               u110_24 0468  
                             u110_25 0467                               u103_20 0310  
                             u111_20 0478                               u103_21 030F  
                             u111_21 0477                               i1l1500 0304  
                             i1l1404 049F                               i1l1510 030A  
                             i1l1502 0305                               i1l1406 04A2  
                             i1l1520 042B                               u104_20 042B  
                             i1l1512 0310                               i1l1408 04AD  
                             u104_21 042A                               i1l1530 043D  
                             i1l1522 0430                               i1l1610 0395  
                             i1l1602 0376                               i1l1524 0433  
                             i1l1516 0424                               i1l1508 0306  
                             i1l1620 03AE                               i1l1612 039E  
                             i1l1604 0382                               u120_24 0339  
                             u112_25 0481                               u120_25 0338  
                             i1l1526 0437                               i1l1518 0425  
                             i1l1470 02BC                               i1l1622 03B2  
                             i1l1606 0386                               i1l1550 0487  
                             i1l1542 046C                               i1l1536 0452  
                             u105_20 043D                               i1l1528 0438  
                             i1l1560 0509                               i1l1480 02DA  
                             i1l1472 02C0                               i1l1624 03B8  
                             i1l1608 038C                               i1l1640 03E4  
                             i1l1552 0496                               i1l1544 0474  
                             i1l1800 004F                               u105_21 043C  
                             i1l1538 0457                               i1l1562 0512  
                             i1l1482 02DC                               i1l1474 02C8  
                             i1l1466 02B4                               i1l1618 039F  
                             i1l1650 03F6                               i1l1642 03ED  
                             i1l1634 03CE                               i1l1546 0478  
                             i1l1570 0317                               i1l1802 004F  
                             i1l1564 0513                               i1l1556 04FE  
                             i1l1492 02EC                               i1l1484 02E0  
                             i1l1476 02CE                               i1l1468 02B6  
                             i1l1652 0405                               i1l1644 03F5  
                             i1l1636 03DA                               i1l1628 03CC  
                             i1l1548 0480                               i1l1660 01D4  
                             u121_24 0346                               i1l1580 032A  
                             i1l1572 031D                               i1l1804 0064  
                             u113_25 0488                               u121_25 0345  
                             i1l1558 0500                               i1l1494 02F0  
                             i1l1486 02EB                               i1l1478 02D3  
                             i1l1654 0409                               i1l1638 03DE  
                             i1l1662 01DF                               i1l1590 0354  
                             i1l1582 032F                               i1l1574 0322  
                             i1l1496 02FC                               i1l1656 040F  
                             u130_20 040F                               u114_20 0496  
                             i1l1664 0228                               i1l1592 0359  
                             u122_20 0354                               i1l1584 0334  
                             i1l1576 0325                               i1l1568 0316  
                             u130_21 040E                               u114_21 0495  
                             u122_21 0353                               i1l1498 0300  
                             i1l1666 023B                               i1l1594 0366  
                             i1l1586 0341                               i1l1578 0329  
                             u106_24 0442                               i1l1596 0374  
                             i1l1668 0246                               i1l1588 034F  
                             i1l1780 0013                               u106_25 0441  
                             i1l1790 0030                               i1l1782 001A  
                             u115_20 0509                               u131_20 041C  
                             u123_20 0359                               i1l1792 0036  
                             i1l1784 0020                               i1l1776 0006  
                             u115_21 0508                               u123_21 0358  
                             i1l1794 003E                               i1l1786 0025  
                             i1l1778 000E                               u107_24 044E  
                             i1l1796 0046                               i1l1788 002B  
                             u107_25 044D                               u131_25 0418  
                             i1l1798 004B                               u108_20 0457  
                             u116_20 0512                               u132_20 01DF  
                             u140_20 0056                               u108_21 0456  
                             u116_21 0511                               u132_21 01DE  
                             u140_21 0054                               u124_24 035E  
                             u124_25 035D                               u133_20 0200  
                             u117_20 031D                               u141_20 0057  
                             u117_21 031C                               u109_24 045C  
                             u125_24 036B                               u109_25 045B  
                             u133_25 01FC                               u125_25 036A  
                             u126_20 038C                               u134_20 0235  
                             u118_20 032F                               u142_20 0060  
                             u126_21 038B                               u118_21 032E  
                             u142_21 005E                               u134_25 0231  
                             u127_20 03B8                               u119_20 0334  
                             u143_20 0061                               u135_20 000E  
                             u127_21 03B7                               u119_21 0333  
                             u135_21 000D                               u128_20 03C5  
                             u136_20 0020                               u136_21 001F  
                             u128_25 03C1                               u129_20 03E4  
                             u137_20 002B                               u129_21 03E3  
                             u137_21 002A                               u138_20 0030  
                             u138_21 002F                               u139_20 004B  
                             u139_21 004A                      ??_runPotScaling 0052  
            initialiseGPIO@direction 005C                     readGPIO@portType 0073  
                readADCRaw@gpioValid 0077                               ___lmul 046C  
                   __end_of_readGPIO 046C            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 005C             _initialisePotentiometers 0536  
         initialiseADCPin@portNumber 0060                     __end_of_setupPWM 04FE  
                    _currentTripRead 04FE              __end_of__initialization 0079  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 005E  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 0067  
                         __pbssBANK0 0020                           __pbssBANK1 00A0  
                         __pmaintext 04CA                              ?___lmul 0070  
                         __pintentry 0004                              _CCP1CON 0293  
                     ___lmul@product 0078              __end_of_currentTripRead 0515  
        __end_of_setPWMDutyandPeriod 04CA     __end_of_initialiseCurrentSensors 0536  
           initialiseADCPin@portType 005F                            ?_readGPIO 0070  
                         _readADCRaw 02B3                  _readFilteredFreqPot 03CC  
                _readFilteredDutyPot 0374                  runPotScaling@check1 0057  
                          ?_setupPWM 0070                 readADCRaw@gpioNumber 007A  
           initialiseGPIO@gpioNumber 0060                 ?_readFilteredFreqPot 007B  
                            __ptext1 053F                              __ptext2 04E6  
                            __ptext3 007D                              __ptext4 0536  
                            __ptext5 0249                              __ptext6 0527  
                            __ptext7 0158                              __ptext8 054D  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                            _setDuty 004A                              clrloop0 0548  
               end_of_initialization 0079                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                           ??_setupPWM 0062  
         ??_initialisePotentiometers 0062                           _prevPeriod 0050  
                  writeGPIO@portType 0073                ??_readFilteredFreqPot 0052  
              ??_readFilteredDutyPot 0052                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 0374             initialiseGPIO@portNumber 0061  
                        ?_readADCRaw 0070                          _CCP1CONbits 0293  
              __end_of_runPotScaling 0249            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 049F          __end_of_initialiseADCModule 0553  
                     _clockFrequency 0040                  start_initialization 0069  
       __end_of_setupTimer0Interrupt 0547                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                          ___latbits 0001                        __pcstackBANK0 0052  
                         ?_Tick980Hz 0070                     _initialiseADCPin 0249  
                 readGPIO@gpioNumber 0074                       _initialiseGPIO 0158  
   __end_of_initialisePotentiometers 053F                      readADCRaw@i_556 0079  
    readFilteredDutyPot@sumOfSamples 0056               __end_of_initialiseGPIO 01D4  
                          clear_ram0 0547                            _setPeriod 0051  
                           _PIE1bits 0091         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 053F                  _currentTripRead$672 0076  
                         _ADCON0bits 009D                   readGPIO@portNumber 0075  
                        _freqPotFIFO 0020                            _writeGPIO 0315  
                        ??_Tick980Hz 007D                    ___lmul@multiplier 0070  
                       ??_readADCRaw 0072                      ?_initialiseGPIO 005C  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 0423          __end_of_readFilteredDutyPot 03CC  
                writeGPIO@gpioNumber 0074                   __end_of_readADCRaw 0315  
           readFilteredFreqPot@i_642 005A                           ?_writeGPIO 0070  
                           __ptext10 0315                             __ptext11 01D4  
                           __ptext12 049F                             __ptext13 046C  
                           __ptext14 03CC                             __ptext15 0374  
                           __ptext16 02B3                             __ptext17 04FE  
                           __ptext18 0423            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 00A0                             _readGPIO 0423  
                      _timerSlotHalf 004E                         _PSTR1CONbits 0296  
                           _prevDuty 0048                             _setupPWM 04E6  
                           int$flags 007E             __end_of_initialiseADCPin 02B3  
                           main@argc 0062                             main@argv 0064  
    readFilteredFreqPot@sumOfSamples 0056                     _timerSlotQuarter 004D  
                         _INTCONbits 000B                  writeGPIO@portNumber 0075  
                           intlevel1 0000             _initialiseCurrentSensors 0527  
             ??_setupTimer0Interrupt 005C                           _OSCCONbits 0099  
                        _potSetCount 004F                  _setPWMDutyandPeriod 049F  
            _setupInternalOscillator 007D                        _emergencyStop 004C  
                      __pstringtext1 0515                        __pstringtext2 0000  
                         _OPTION_REG 0095                  writeGPIO@writeValue 0070  
                        ??_writeGPIO 0071                 ?_setPWMDutyandPeriod 0070  
              readADCRaw@returnValue 0074                    ??_currentTripRead 0076  
                      _runPotScaling 01D4  
