

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 14:36:01 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1827 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021C                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  029E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0219                     	;# 
   334  021A                     	;# 
   335  021B                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021E                     	;# 
   339  021F                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  039A                     	;# 
   370  039C                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0219                     	;# 
   492  021A                     	;# 
   493  021B                     	;# 
   494  021C                     	;# 
   495  021D                     	;# 
   496  021E                     	;# 
   497  021F                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0294                     	;# 
   503  0295                     	;# 
   504  0295                     	;# 
   505  0296                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  029B                     	;# 
   511  029C                     	;# 
   512  029C                     	;# 
   513  029D                     	;# 
   514  029E                     	;# 
   515  029E                     	;# 
   516  0311                     	;# 
   517  0311                     	;# 
   518  0312                     	;# 
   519  0313                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  039A                     	;# 
   528  039C                     	;# 
   529  039D                     	;# 
   530  039E                     	;# 
   531  039F                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  041C                     	;# 
   536  041D                     	;# 
   537  041E                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011A                     	;# 
   607  011B                     	;# 
   608  011D                     	;# 
   609  011E                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0216                     	;# 
   646  0216                     	;# 
   647  0217                     	;# 
   648  0217                     	;# 
   649  0219                     	;# 
   650  021A                     	;# 
   651  021B                     	;# 
   652  021C                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029B                     	;# 
   669  029C                     	;# 
   670  029C                     	;# 
   671  029D                     	;# 
   672  029E                     	;# 
   673  029E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0318                     	;# 
   679  0318                     	;# 
   680  0319                     	;# 
   681  031A                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0013                     	;# 
   724  0014                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  029E                     	;# 
   831  029E                     	;# 
   832  0311                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0318                     	;# 
   837  0318                     	;# 
   838  0319                     	;# 
   839  031A                     	;# 
   840  0394                     	;# 
   841  0395                     	;# 
   842  0396                     	;# 
   843  039A                     	;# 
   844  039C                     	;# 
   845  039D                     	;# 
   846  039E                     	;# 
   847  039F                     	;# 
   848  0415                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  0FE4                     	;# 
   855  0FE5                     	;# 
   856  0FE6                     	;# 
   857  0FE7                     	;# 
   858  0FE8                     	;# 
   859  0FE9                     	;# 
   860  0FEA                     	;# 
   861  0FEB                     	;# 
   862  0FED                     	;# 
   863  0FEE                     	;# 
   864  0FEF                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0014                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0016                     	;# 
   886  0017                     	;# 
   887  0018                     	;# 
   888  0019                     	;# 
   889  001A                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001E                     	;# 
   893  001F                     	;# 
   894  008C                     	;# 
   895  008D                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0097                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0194                     	;# 
   935  0195                     	;# 
   936  0196                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019C                     	;# 
   944  019C                     	;# 
   945  019D                     	;# 
   946  019E                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0219                     	;# 
   966  021A                     	;# 
   967  021B                     	;# 
   968  021C                     	;# 
   969  021D                     	;# 
   970  021E                     	;# 
   971  021F                     	;# 
   972  0291                     	;# 
   973  0291                     	;# 
   974  0292                     	;# 
   975  0293                     	;# 
   976  0294                     	;# 
   977  0295                     	;# 
   978  0295                     	;# 
   979  0296                     	;# 
   980  0298                     	;# 
   981  0298                     	;# 
   982  0299                     	;# 
   983  029A                     	;# 
   984  029B                     	;# 
   985  029C                     	;# 
   986  029C                     	;# 
   987  029D                     	;# 
   988  029E                     	;# 
   989  029E                     	;# 
   990  0311                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0318                     	;# 
   995  0318                     	;# 
   996  0319                     	;# 
   997  031A                     	;# 
   998  0394                     	;# 
   999  0395                     	;# 
  1000  0396                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0415                     	;# 
  1007  0416                     	;# 
  1008  0417                     	;# 
  1009  041C                     	;# 
  1010  041D                     	;# 
  1011  041E                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0014                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  001E                     	;# 
  1051  001F                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0098                     	;# 
  1062  0099                     	;# 
  1063  009A                     	;# 
  1064  009B                     	;# 
  1065  009B                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011B                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0194                     	;# 
  1093  0195                     	;# 
  1094  0196                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0219                     	;# 
  1124  021A                     	;# 
  1125  021B                     	;# 
  1126  021C                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0295                     	;# 
  1136  0295                     	;# 
  1137  0296                     	;# 
  1138  0298                     	;# 
  1139  0298                     	;# 
  1140  0299                     	;# 
  1141  029A                     	;# 
  1142  029B                     	;# 
  1143  029C                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  0394                     	;# 
  1157  0395                     	;# 
  1158  0396                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0095                     	;# 
  1217  0096                     	;# 
  1218  0097                     	;# 
  1219  0098                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011D                     	;# 
  1241  011E                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0194                     	;# 
  1251  0195                     	;# 
  1252  0196                     	;# 
  1253  0199                     	;# 
  1254  019A                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  020C                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  0291                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0294                     	;# 
  1293  0295                     	;# 
  1294  0295                     	;# 
  1295  0296                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  029E                     	;# 
  1305  029E                     	;# 
  1306  0311                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0318                     	;# 
  1311  0318                     	;# 
  1312  0319                     	;# 
  1313  031A                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039C                     	;# 
  1319  039D                     	;# 
  1320  039E                     	;# 
  1321  039F                     	;# 
  1322  0415                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  0FE4                     	;# 
  1329  0FE5                     	;# 
  1330  0FE6                     	;# 
  1331  0FE7                     	;# 
  1332  0FE8                     	;# 
  1333  0FE9                     	;# 
  1334  0FEA                     	;# 
  1335  0FEB                     	;# 
  1336  0FED                     	;# 
  1337  0FEE                     	;# 
  1338  0FEF                     	;# 
  1339                           
  1340 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1341  000D                     _PORTB	set	13
  1342  000C                     _PORTA	set	12
  1343  001C                     _T2CONbits	set	28
  1344  001B                     _PR2	set	27
  1345  0011                     _PIR1bits	set	17
  1346  000B                     _INTCONbits	set	11
  1347  009B                     _ADRESL	set	155
  1348  009C                     _ADRESH	set	156
  1349  009D                     _ADCON0bits	set	157
  1350  008D                     _TRISB	set	141
  1351  008C                     _TRISA	set	140
  1352  009E                     _ADCON1	set	158
  1353  009D                     _ADCON0	set	157
  1354  0095                     _OPTION_REG	set	149
  1355  0095                     _OPTION_REGbits	set	149
  1356  0091                     _PIE1bits	set	145
  1357  0099                     _OSCCONbits	set	153
  1358  010D                     _LATB	set	269
  1359  010C                     _LATA	set	268
  1360  011D                     _APFCON0bits	set	285
  1361  018D                     _ANSELB	set	397
  1362  018C                     _ANSELA	set	396
  1363  0293                     _CCP1CONbits	set	659
  1364  0296                     _PSTR1CONbits	set	662
  1365  0291                     _CCPR1L	set	657
  1366  0293                     _CCP1CON	set	659
  1367                           
  1368                           	psect	stringtext1
  1369  06C7                     __pstringtext1:
  1370  06C7                     STR_1:
  1371  06C7  3428               	retlw	40	;'('
  1372  06C8  3428               	retlw	40	;'('
  1373  06C9  3449               	retlw	73	;'I'
  1374  06CA  344E               	retlw	78	;'N'
  1375  06CB  3454               	retlw	84	;'T'
  1376  06CC  3443               	retlw	67	;'C'
  1377  06CD  344F               	retlw	79	;'O'
  1378  06CE  344E               	retlw	78	;'N'
  1379  06CF  3429               	retlw	41	;')'
  1380  06D0  3426               	retlw	38	;'&'
  1381  06D1  3430               	retlw	48	;'0'
  1382  06D2  3437               	retlw	55	;'7'
  1383  06D3  3446               	retlw	70	;'F'
  1384  06D4  3468               	retlw	104	;'h'
  1385  06D5  3429               	retlw	41	;')'
  1386  06D6  342C               	retlw	44	;','
  1387  06D7  3432               	retlw	50	;'2'
  1388  06D8  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext2
  1391  06D9                     __pstringtext2:
  1392  06D9                     STR_3:
  1393  06D9  3428               	retlw	40	;'('
  1394  06DA  3428               	retlw	40	;'('
  1395  06DB  3450               	retlw	80	;'P'
  1396  06DC  3449               	retlw	73	;'I'
  1397  06DD  3452               	retlw	82	;'R'
  1398  06DE  3431               	retlw	49	;'1'
  1399  06DF  3429               	retlw	41	;')'
  1400  06E0  3426               	retlw	38	;'&'
  1401  06E1  3430               	retlw	48	;'0'
  1402  06E2  3437               	retlw	55	;'7'
  1403  06E3  3446               	retlw	70	;'F'
  1404  06E4  3468               	retlw	104	;'h'
  1405  06E5  3429               	retlw	41	;')'
  1406  06E6  342C               	retlw	44	;','
  1407  06E7  3432               	retlw	50	;'2'
  1408  06E8  3400               	retlw	0
  1409                           
  1410                           	psect	stringtext3
  1411  0000                     __pstringtext3:
  1412  06D9                     
  1413                           	psect	cinit
  1414  0074                     start_initialization:	
  1415                           ; #config settings
  1416                           
  1417  0074                     __initialization:
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  0074  303D               	movlw	low __pbssBANK0
  1421  0075  0084               	movwf	4
  1422  0076  3000               	movlw	high __pbssBANK0
  1423  0077  0085               	movwf	5
  1424  0078  301A               	movlw	26
  1425  0079  3186  26FA  3180   	fcall	clear_ram0
  1426                           
  1427                           ; Clear objects allocated to BANK1
  1428  007C  30A0               	movlw	low __pbssBANK1
  1429  007D  0084               	movwf	4
  1430  007E  3000               	movlw	high __pbssBANK1
  1431  007F  0085               	movwf	5
  1432  0080  3040               	movlw	64
  1433  0081  3186  26FA  3180   	fcall	clear_ram0
  1434                           
  1435                           ; Clear objects allocated to BANK2
  1436  0084  3020               	movlw	low __pbssBANK2
  1437  0085  0084               	movwf	4
  1438  0086  3001               	movlw	high __pbssBANK2
  1439  0087  0085               	movwf	5
  1440  0088  3040               	movlw	64
  1441  0089  3186  26FA  3180   	fcall	clear_ram0
  1442  008C                     end_of_initialization:	
  1443                           ;End of C runtime variable initialization code
  1444                           
  1445  008C                     __end_of__initialization:
  1446  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1447  008D  0020               	movlb	0
  1448  008E  3186  2E8F         	ljmp	_main	;jump to C main() function
  1449                           
  1450                           	psect	bssBANK0
  1451  003D                     __pbssBANK0:
  1452  003D                     _clockFrequency:
  1453  003D                     	ds	4
  1454  0041                     _filteredDutyPot:
  1455  0041                     	ds	2
  1456  0043                     _filteredFreqPot:
  1457  0043                     	ds	2
  1458  0045                     _filteredIL:
  1459  0045                     	ds	2
  1460  0047                     _filteredIDS:
  1461  0047                     	ds	2
  1462  0049                     _latestIL1:
  1463  0049                     	ds	2
  1464  004B                     _prevDuty:
  1465  004B                     	ds	2
  1466  004D                     _setDuty:
  1467  004D                     	ds	2
  1468  004F                     _emergencyStop:
  1469  004F                     	ds	1
  1470  0050                     _timerSlotQuarter:
  1471  0050                     	ds	1
  1472  0051                     _timerSlotHalf:
  1473  0051                     	ds	1
  1474  0052                     _potSetCount:
  1475  0052                     	ds	1
  1476  0053                     _tripIL:
  1477  0053                     	ds	1
  1478  0054                     _tripIDS:
  1479  0054                     	ds	1
  1480  0055                     _prevPeriod:
  1481  0055                     	ds	1
  1482  0056                     _setPeriod:
  1483  0056                     	ds	1
  1484                           
  1485                           	psect	bssBANK1
  1486  00A0                     __pbssBANK1:
  1487  00A0                     _currentILFIFO:
  1488  00A0                     	ds	32
  1489  00C0                     _currentIDSFIFO:
  1490  00C0                     	ds	32
  1491                           
  1492                           	psect	bssBANK2
  1493  0120                     __pbssBANK2:
  1494  0120                     _dutyPotFIFO:
  1495  0120                     	ds	32
  1496  0140                     _freqPotFIFO:
  1497  0140                     	ds	32
  1498                           
  1499                           	psect	clrtext
  1500  06FA                     clear_ram0:	
  1501                           ;	Called with FSR0 containing the base address, and
  1502                           ;	WREG with the size to clear
  1503                           
  1504  06FA  0064               	clrwdt	;clear the watchdog before getting into this loop
  1505  06FB                     clrloop0:
  1506  06FB  0180               	clrf	0	;clear RAM location pointed to by FSR
  1507  06FC  3101               	addfsr 0,1
  1508  06FD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1509  06FE  2EFB               	goto	clrloop0	;have we reached the end yet?
  1510  06FF  3400               	retlw	0	;all done for this memory range, return
  1511                           
  1512                           	psect	cstackCOMMON
  1513  0070                     __pcstackCOMMON:
  1514  0070                     ?_currentTripRead:
  1515  0070                     ?_setPWMDutyandPeriod:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_runPotScaling:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_setupInternalOscillator:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_setupPWM:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_setupTimer0Interrupt:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_initialiseADCModule:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_initialiseCurrentSensors:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_initialisePotentiometers:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_Tick980Hz:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_initialiseADCPin:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_readGPIO:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_readGPIO:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?i1_writeGPIO:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_readADCRaw:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?___wmul:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560  0070                     ?___lmul:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0070                     i1writeGPIO@writeValue:	
  1564                           ; 4 bytes @ 0x0
  1565                           
  1566  0070                     setPWMDutyandPeriod@dutyCycle:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ___wmul@multiplier:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0070                     ___lmul@multiplier:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0x0
  1577  0070                     	ds	1
  1578  0071                     ??i1_writeGPIO:
  1579                           
  1580                           ; 1 bytes @ 0x1
  1581  0071                     	ds	1
  1582  0072                     ??_readADCRaw:
  1583  0072                     setPWMDutyandPeriod@period:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586  0072                     readGPIO@read:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589  0072                     ___wmul@multiplicand:	
  1590                           ; 1 bytes @ 0x2
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  0072                     	ds	1
  1595  0073                     ??_setPWMDutyandPeriod:
  1596  0073                     readGPIO@check1:	
  1597                           ; 1 bytes @ 0x3
  1598                           
  1599  0073                     i1writeGPIO@portType:	
  1600                           ; 1 bytes @ 0x3
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x3
  1604  0073                     	ds	1
  1605  0074                     ??___wmul:
  1606  0074                     readGPIO@returnValue:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609  0074                     i1writeGPIO@gpioNumber:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612  0074                     readADCRaw@returnValue:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615  0074                     ___wmul@product:	
  1616                           ; 2 bytes @ 0x4
  1617                           
  1618  0074                     ___lmul@multiplicand:	
  1619                           ; 2 bytes @ 0x4
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0x4
  1623  0074                     	ds	1
  1624  0075                     readGPIO@maskB:
  1625  0075                     i1writeGPIO@portNumber:	
  1626                           ; 1 bytes @ 0x5
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0x5
  1630  0075                     	ds	1
  1631  0076                     ?___lldiv:
  1632  0076                     readADCRaw@channel:	
  1633                           ; 4 bytes @ 0x6
  1634                           
  1635  0076                     readGPIO@returnValueB:	
  1636                           ; 1 bytes @ 0x6
  1637                           
  1638  0076                     ___lldiv@divisor:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641                           
  1642                           ; 4 bytes @ 0x6
  1643  0076                     	ds	1
  1644  0077                     readADCRaw@gpioValid:
  1645  0077                     _readGPIO$667:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x7
  1650  0077                     	ds	1
  1651  0078                     ??___lmul:
  1652  0078                     readADCRaw@i:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0078                     readGPIO@portType:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658  0078                     ___lmul@product:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0x8
  1663  0078                     	ds	1
  1664  0079                     readADCRaw@i_616:
  1665  0079                     readGPIO@gpioNumber:	
  1666                           ; 1 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x9
  1670  0079                     	ds	1
  1671  007A                     readADCRaw@gpioNumber:
  1672  007A                     readGPIO@portNumber:	
  1673                           ; 1 bytes @ 0xA
  1674                           
  1675  007A                     ___lldiv@dividend:	
  1676                           ; 1 bytes @ 0xA
  1677                           
  1678                           
  1679                           ; 4 bytes @ 0xA
  1680  007A                     	ds	1
  1681  007B                     ??_currentTripRead:
  1682  007B                     ?_readFilteredDutyPot:	
  1683                           ; 1 bytes @ 0xB
  1684                           
  1685  007B                     ?_readFilteredFreqPot:	
  1686                           ; 2 bytes @ 0xB
  1687                           
  1688                           
  1689                           ; 2 bytes @ 0xB
  1690  007B                     	ds	1
  1691  007C                     _currentTripRead$749:
  1692                           
  1693                           ; 1 bytes @ 0xC
  1694  007C                     	ds	2
  1695                           
  1696                           	psect	cstackBANK0
  1697  0020                     __pcstackBANK0:
  1698  0020                     ??_readFilteredDutyPot:
  1699  0020                     ??_readFilteredFreqPot:	
  1700                           ; 1 bytes @ 0x0
  1701                           
  1702  0020                     ??___lldiv:	
  1703                           ; 1 bytes @ 0x0
  1704                           
  1705                           
  1706                           ; 1 bytes @ 0x0
  1707  0020                     	ds	1
  1708  0021                     ___lldiv@quotient:
  1709                           
  1710                           ; 4 bytes @ 0x1
  1711  0021                     	ds	3
  1712  0024                     readFilteredDutyPot@sumOfSamples:
  1713  0024                     readFilteredFreqPot@sumOfSamples:	
  1714                           ; 4 bytes @ 0x4
  1715                           
  1716                           
  1717                           ; 4 bytes @ 0x4
  1718  0024                     	ds	1
  1719  0025                     ___lldiv@counter:
  1720                           
  1721                           ; 1 bytes @ 0x5
  1722  0025                     	ds	1
  1723  0026                     ??_runPotScaling:
  1724                           
  1725                           ; 1 bytes @ 0x6
  1726  0026                     	ds	2
  1727  0028                     readFilteredDutyPot@i_704:
  1728  0028                     readFilteredFreqPot@i_708:	
  1729                           ; 1 bytes @ 0x8
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x8
  1733  0028                     	ds	1
  1734  0029                     readFilteredDutyPot@i:
  1735  0029                     readFilteredFreqPot@i:	
  1736                           ; 1 bytes @ 0x9
  1737                           
  1738                           
  1739                           ; 1 bytes @ 0x9
  1740  0029                     	ds	5
  1741  002E                     runPotScaling@maxDuty:
  1742                           
  1743                           ; 2 bytes @ 0xE
  1744  002E                     	ds	2
  1745  0030                     runPotScaling@minDuty:
  1746                           
  1747                           ; 2 bytes @ 0x10
  1748  0030                     	ds	2
  1749  0032                     ??_Tick980Hz:
  1750                           
  1751                           ; 1 bytes @ 0x12
  1752  0032                     	ds	1
  1753  0033                     ?_writeGPIO:
  1754  0033                     ??_setupInternalOscillator:	
  1755                           ; 1 bytes @ 0x13
  1756                           
  1757  0033                     ??_setupTimer0Interrupt:	
  1758                           ; 1 bytes @ 0x13
  1759                           
  1760  0033                     ??_initialiseADCModule:	
  1761                           ; 1 bytes @ 0x13
  1762                           
  1763  0033                     ?_initialiseGPIO:	
  1764                           ; 1 bytes @ 0x13
  1765                           
  1766  0033                     ??_initialiseADCPin:	
  1767                           ; 1 bytes @ 0x13
  1768                           
  1769  0033                     initialiseGPIO@direction:	
  1770                           ; 1 bytes @ 0x13
  1771                           
  1772  0033                     writeGPIO@writeValue:	
  1773                           ; 1 bytes @ 0x13
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x13
  1777  0033                     	ds	1
  1778  0034                     ??_writeGPIO:
  1779  0034                     ??_initialiseGPIO:	
  1780                           ; 1 bytes @ 0x14
  1781                           
  1782                           
  1783                           ; 1 bytes @ 0x14
  1784  0034                     	ds	1
  1785  0035                     setupInternalOscillator@selectedFreq:
  1786  0035                     initialiseADCPin@gpioValid:	
  1787                           ; 1 bytes @ 0x15
  1788                           
  1789                           
  1790                           ; 1 bytes @ 0x15
  1791  0035                     	ds	1
  1792  0036                     initialiseADCPin@portType:
  1793  0036                     initialiseGPIO@portType:	
  1794                           ; 1 bytes @ 0x16
  1795                           
  1796  0036                     writeGPIO@portType:	
  1797                           ; 1 bytes @ 0x16
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0x16
  1801  0036                     	ds	1
  1802  0037                     initialiseADCPin@portNumber:
  1803  0037                     initialiseGPIO@gpioNumber:	
  1804                           ; 1 bytes @ 0x17
  1805                           
  1806  0037                     writeGPIO@gpioNumber:	
  1807                           ; 1 bytes @ 0x17
  1808                           
  1809                           
  1810                           ; 1 bytes @ 0x17
  1811  0037                     	ds	1
  1812  0038                     initialiseADCPin@gpioNumber:
  1813  0038                     initialiseGPIO@portNumber:	
  1814                           ; 1 bytes @ 0x18
  1815                           
  1816  0038                     writeGPIO@portNumber:	
  1817                           ; 1 bytes @ 0x18
  1818                           
  1819                           
  1820                           ; 1 bytes @ 0x18
  1821  0038                     	ds	1
  1822  0039                     ??_setupPWM:
  1823  0039                     ??_initialiseCurrentSensors:	
  1824                           ; 1 bytes @ 0x19
  1825                           
  1826  0039                     ??_initialisePotentiometers:	
  1827                           ; 1 bytes @ 0x19
  1828                           
  1829  0039                     ?_main:	
  1830                           ; 1 bytes @ 0x19
  1831                           
  1832  0039                     main@argc:	
  1833                           ; 2 bytes @ 0x19
  1834                           
  1835                           
  1836                           ; 2 bytes @ 0x19
  1837  0039                     	ds	2
  1838  003B                     main@argv:
  1839                           
  1840                           ; 2 bytes @ 0x1B
  1841  003B                     	ds	2
  1842  003D                     ??_main:
  1843                           
  1844                           	psect	maintext
  1845  068F                     __pmaintext:	
  1846                           ; 1 bytes @ 0x1D
  1847 ;;
  1848 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1849 ;;
  1850 ;; *************** function _main *****************
  1851 ;; Defined at:
  1852 ;;		line 103 in file "main.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  argc            2   25[BANK0 ] int 
  1855 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  2   25[BANK0 ] int 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : B1F/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1867 ;;      Params:         0       4       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0
  1869 ;;      Temps:          0       0       0       0       0       0
  1870 ;;      Totals:         0       4       0       0       0       0
  1871 ;;Total ram usage:        4 bytes
  1872 ;; Hardware stack levels required when called: 5
  1873 ;; This function calls:
  1874 ;;		_initialiseADCModule
  1875 ;;		_initialiseCurrentSensors
  1876 ;;		_initialiseGPIO
  1877 ;;		_initialisePotentiometers
  1878 ;;		_setupInternalOscillator
  1879 ;;		_setupPWM
  1880 ;;		_setupTimer0Interrupt
  1881 ;; This function is called by:
  1882 ;;		Startup code after reset
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886  068F                     _main:	
  1887                           ;psect for function _main
  1888                           
  1889  068F                     l2120:	
  1890                           ;incstack = 0
  1891                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1892                           
  1893                           
  1894                           ;main.c: 105:     setupInternalOscillator(freq32M);
  1895  068F  300A               	movlw	10
  1896  0690  3181  2173  3186   	fcall	_setupInternalOscillator
  1897  0693                     l2122:
  1898                           
  1899                           ;main.c: 107:     setupPWM();
  1900  0693  3186  26AB  3186   	fcall	_setupPWM
  1901  0696                     l2124:
  1902                           
  1903                           ;main.c: 108:     setupTimer0Interrupt();
  1904  0696  3186  26F2  3186   	fcall	_setupTimer0Interrupt
  1905  0699                     l2126:
  1906                           
  1907                           ;main.c: 109:     initialiseADCModule();
  1908  0699  3187  2700  3186   	fcall	_initialiseADCModule
  1909  069C                     l2128:
  1910                           
  1911                           ;main.c: 110:     initialiseCurrentSensors();
  1912  069C  3186  264D  3186   	fcall	_initialiseCurrentSensors
  1913  069F                     l2130:
  1914                           
  1915                           ;main.c: 111:     initialisePotentiometers();
  1916  069F  3186  26E9  3186   	fcall	_initialisePotentiometers
  1917  06A2                     l2132:
  1918                           
  1919                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  1920  06A2  0020               	movlb	0	; select bank0
  1921  06A3  01B3               	clrf	initialiseGPIO@direction
  1922  06A4  300C               	movlw	12
  1923  06A5  3182  224E  3186   	fcall	_initialiseGPIO
  1924  06A8                     l92:	
  1925                           ;main.c: 114:     while(1){
  1926                           
  1927  06A8                     l93:	
  1928                           ;main.c: 116:     }
  1929                           
  1930  06A8  2EA8               	goto	l92
  1931  06A9  3180  2872         	ljmp	start
  1932  06AB                     __end_of_main:
  1933                           
  1934                           	psect	text1
  1935  06F2                     __ptext1:	
  1936 ;; *************** function _setupTimer0Interrupt *****************
  1937 ;; Defined at:
  1938 ;;		line 17 in file "Timer0.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1952 ;;      Params:         0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used: 1
  1958 ;; Hardware stack levels required when called: 3
  1959 ;; This function calls:
  1960 ;;		Nothing
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966  06F2                     _setupTimer0Interrupt:	
  1967                           ;psect for function _setupTimer0Interrupt
  1968                           
  1969  06F2                     l2048:	
  1970                           ;incstack = 0
  1971                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1972                           
  1973                           
  1974                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1975  06F2  178B               	bsf	11,7	;volatile
  1976                           
  1977                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1978  06F3  168B               	bsf	11,5	;volatile
  1979                           
  1980                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1981  06F4  0021               	movlb	1	; select bank1
  1982  06F5  1295               	bcf	21,5	;volatile
  1983                           
  1984                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1985  06F6  1195               	bcf	21,3	;volatile
  1986  06F7                     l2050:
  1987                           
  1988                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1989  06F7  3004               	movlw	4
  1990  06F8  0095               	movwf	21	;volatile
  1991  06F9                     l169:
  1992  06F9  0008               	return
  1993  06FA                     __end_of_setupTimer0Interrupt:
  1994                           
  1995                           	psect	text2
  1996  06AB                     __ptext2:	
  1997 ;; *************** function _setupPWM *****************
  1998 ;; Defined at:
  1999 ;;		line 16 in file "PWM.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		wreg, status,2, status,0, pclath, cstack
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2013 ;;      Params:         0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used: 1
  2019 ;; Hardware stack levels required when called: 4
  2020 ;; This function calls:
  2021 ;;		_initialiseGPIO
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027  06AB                     _setupPWM:	
  2028                           ;psect for function _setupPWM
  2029                           
  2030  06AB                     l2026:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2033                           
  2034                           
  2035                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2036  06AB  300C               	movlw	12
  2037  06AC  0025               	movlb	5	; select bank5
  2038  06AD  0093               	movwf	19	;volatile
  2039  06AE                     l2028:
  2040                           
  2041                           ;PWM.c: 20:     PR2 = 0;
  2042  06AE  0020               	movlb	0	; select bank0
  2043  06AF  019B               	clrf	27	;volatile
  2044  06B0                     l2030:
  2045                           
  2046                           ;PWM.c: 21:     CCPR1L = 0;
  2047  06B0  0025               	movlb	5	; select bank5
  2048  06B1  0191               	clrf	17	;volatile
  2049  06B2                     l2032:
  2050                           
  2051                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2052  06B2  0022               	movlb	2	; select bank2
  2053  06B3  151D               	bsf	29,2	;volatile
  2054  06B4                     l2034:
  2055                           
  2056                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2057  06B4  0025               	movlb	5	; select bank5
  2058  06B5  1596               	bsf	22,3	;volatile
  2059  06B6                     l2036:
  2060                           
  2061                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  2062  06B6  30FC               	movlw	-4
  2063  06B7  0020               	movlb	0	; select bank0
  2064  06B8  059C               	andwf	28,f	;volatile
  2065  06B9                     l2038:
  2066                           
  2067                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  2068  06B9  0021               	movlb	1	; select bank1
  2069  06BA  1091               	bcf	17,1	;volatile
  2070  06BB                     l2040:
  2071                           
  2072                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  2073  06BB  0020               	movlb	0	; select bank0
  2074  06BC  151C               	bsf	28,2	;volatile
  2075  06BD                     l2042:
  2076                           
  2077                           ;PWM.c: 30:     INTCONbits.PEIE = 1;
  2078  06BD  170B               	bsf	11,6	;volatile
  2079  06BE                     l2044:
  2080                           
  2081                           ;PWM.c: 31:     PIE1bits.CCP1IE = 1;
  2082  06BE  0021               	movlb	1	; select bank1
  2083  06BF  1511               	bsf	17,2	;volatile
  2084  06C0                     l2046:
  2085                           
  2086                           ;PWM.c: 35:     initialiseGPIO(pinRA6, 0);
  2087  06C0  0020               	movlb	0	; select bank0
  2088  06C1  01B3               	clrf	initialiseGPIO@direction
  2089  06C2  3006               	movlw	6
  2090  06C3  3182  224E  3186   	fcall	_initialiseGPIO
  2091  06C6                     l144:
  2092  06C6  0008               	return
  2093  06C7                     __end_of_setupPWM:
  2094                           
  2095                           	psect	text3
  2096  0173                     __ptext3:	
  2097 ;; *************** function _setupInternalOscillator *****************
  2098 ;; Defined at:
  2099 ;;		line 125 in file "main.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  selectedFreq    1    wreg     const enum E2830
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2113 ;;      Params:         0       0       0       0       0       0
  2114 ;;      Locals:         0       1       0       0       0       0
  2115 ;;      Temps:          0       2       0       0       0       0
  2116 ;;      Totals:         0       3       0       0       0       0
  2117 ;;Total ram usage:        3 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 3
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127  0173                     _setupInternalOscillator:	
  2128                           ;psect for function _setupInternalOscillator
  2129                           
  2130                           
  2131                           ;incstack = 0
  2132                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2133                           ;setupInternalOscillator@selectedFreq stored from wreg
  2134  0173  0020               	movlb	0	; select bank0
  2135  0174  00B5               	movwf	setupInternalOscillator@selectedFreq
  2136  0175                     l1948:
  2137                           
  2138                           ;main.c: 129:     switch(selectedFreq){
  2139  0175  2A22               	goto	l2018
  2140  0176                     l1950:
  2141  0176  3087               	movlw	-121
  2142  0177  0021               	movlb	1	; select bank1
  2143  0178  0599               	andwf	25,f	;volatile
  2144  0179                     l1952:
  2145  0179  1399               	bcf	25,7	;volatile
  2146  017A                     l1954:
  2147  017A  3000               	movlw	0
  2148  017B  0020               	movlb	0	; select bank0
  2149  017C  00C0               	movwf	_clockFrequency+3
  2150  017D  3000               	movlw	0
  2151  017E  00BF               	movwf	_clockFrequency+2
  2152  017F  3079               	movlw	121
  2153  0180  00BE               	movwf	_clockFrequency+1
  2154  0181  3018               	movlw	24
  2155  0182  00BD               	movwf	_clockFrequency
  2156  0183  2A4D               	goto	l111
  2157  0184                     l1956:
  2158  0184  0021               	movlb	1	; select bank1
  2159  0185  0819               	movf	25,w	;volatile
  2160  0186  3987               	andlw	-121
  2161  0187  3820               	iorlw	32
  2162  0188  0099               	movwf	25	;volatile
  2163  0189                     l1958:
  2164  0189  1399               	bcf	25,7	;volatile
  2165  018A                     l1960:
  2166  018A  3000               	movlw	0
  2167  018B  0020               	movlb	0	; select bank0
  2168  018C  00C0               	movwf	_clockFrequency+3
  2169  018D  3000               	movlw	0
  2170  018E  00BF               	movwf	_clockFrequency+2
  2171  018F  30F4               	movlw	244
  2172  0190  00BE               	movwf	_clockFrequency+1
  2173  0191  3024               	movlw	36
  2174  0192  00BD               	movwf	_clockFrequency
  2175  0193  2A4D               	goto	l111
  2176  0194                     l1962:
  2177  0194  0021               	movlb	1	; select bank1
  2178  0195  0819               	movf	25,w	;volatile
  2179  0196  3987               	andlw	-121
  2180  0197  3828               	iorlw	40
  2181  0198  0099               	movwf	25	;volatile
  2182  0199                     l1964:
  2183  0199  1399               	bcf	25,7	;volatile
  2184  019A                     l1966:
  2185  019A  3000               	movlw	0
  2186  019B  0020               	movlb	0	; select bank0
  2187  019C  00C0               	movwf	_clockFrequency+3
  2188  019D  3001               	movlw	1
  2189  019E  00BF               	movwf	_clockFrequency+2
  2190  019F  30E8               	movlw	232
  2191  01A0  00BE               	movwf	_clockFrequency+1
  2192  01A1  3048               	movlw	72
  2193  01A2  00BD               	movwf	_clockFrequency
  2194  01A3  2A4D               	goto	l111
  2195  01A4                     l1968:
  2196  01A4  0021               	movlb	1	; select bank1
  2197  01A5  0819               	movf	25,w	;volatile
  2198  01A6  3987               	andlw	-121
  2199  01A7  3830               	iorlw	48
  2200  01A8  0099               	movwf	25	;volatile
  2201  01A9                     l1970:
  2202  01A9  1399               	bcf	25,7	;volatile
  2203  01AA                     l1972:
  2204  01AA  3000               	movlw	0
  2205  01AB  0020               	movlb	0	; select bank0
  2206  01AC  00C0               	movwf	_clockFrequency+3
  2207  01AD  3003               	movlw	3
  2208  01AE  00BF               	movwf	_clockFrequency+2
  2209  01AF  30D0               	movlw	208
  2210  01B0  00BE               	movwf	_clockFrequency+1
  2211  01B1  3090               	movlw	144
  2212  01B2  00BD               	movwf	_clockFrequency
  2213  01B3  2A4D               	goto	l111
  2214  01B4                     l1974:
  2215  01B4  0021               	movlb	1	; select bank1
  2216  01B5  0819               	movf	25,w	;volatile
  2217  01B6  3987               	andlw	-121
  2218  01B7  3838               	iorlw	56
  2219  01B8  0099               	movwf	25	;volatile
  2220  01B9                     l1976:
  2221  01B9  1399               	bcf	25,7	;volatile
  2222  01BA                     l1978:
  2223  01BA  3000               	movlw	0
  2224  01BB  0020               	movlb	0	; select bank0
  2225  01BC  00C0               	movwf	_clockFrequency+3
  2226  01BD  3007               	movlw	7
  2227  01BE  00BF               	movwf	_clockFrequency+2
  2228  01BF  30A1               	movlw	161
  2229  01C0  00BE               	movwf	_clockFrequency+1
  2230  01C1  3020               	movlw	32
  2231  01C2  00BD               	movwf	_clockFrequency
  2232  01C3  2A4D               	goto	l111
  2233  01C4                     l1980:
  2234  01C4  0021               	movlb	1	; select bank1
  2235  01C5  0819               	movf	25,w	;volatile
  2236  01C6  3987               	andlw	-121
  2237  01C7  3858               	iorlw	88
  2238  01C8  0099               	movwf	25	;volatile
  2239  01C9                     l1982:
  2240  01C9  1399               	bcf	25,7	;volatile
  2241  01CA                     l1984:
  2242  01CA  3000               	movlw	0
  2243  01CB  0020               	movlb	0	; select bank0
  2244  01CC  00C0               	movwf	_clockFrequency+3
  2245  01CD  300F               	movlw	15
  2246  01CE  00BF               	movwf	_clockFrequency+2
  2247  01CF  3042               	movlw	66
  2248  01D0  00BE               	movwf	_clockFrequency+1
  2249  01D1  3040               	movlw	64
  2250  01D2  00BD               	movwf	_clockFrequency
  2251  01D3  2A4D               	goto	l111
  2252  01D4                     l1986:
  2253  01D4  0021               	movlb	1	; select bank1
  2254  01D5  0819               	movf	25,w	;volatile
  2255  01D6  3987               	andlw	-121
  2256  01D7  3860               	iorlw	96
  2257  01D8  0099               	movwf	25	;volatile
  2258  01D9                     l1988:
  2259  01D9  1399               	bcf	25,7	;volatile
  2260  01DA                     l1990:
  2261  01DA  3000               	movlw	0
  2262  01DB  0020               	movlb	0	; select bank0
  2263  01DC  00C0               	movwf	_clockFrequency+3
  2264  01DD  301E               	movlw	30
  2265  01DE  00BF               	movwf	_clockFrequency+2
  2266  01DF  3084               	movlw	132
  2267  01E0  00BE               	movwf	_clockFrequency+1
  2268  01E1  3080               	movlw	128
  2269  01E2  00BD               	movwf	_clockFrequency
  2270  01E3  2A4D               	goto	l111
  2271  01E4                     l1992:
  2272  01E4  0021               	movlb	1	; select bank1
  2273  01E5  0819               	movf	25,w	;volatile
  2274  01E6  3987               	andlw	-121
  2275  01E7  3868               	iorlw	104
  2276  01E8  0099               	movwf	25	;volatile
  2277  01E9                     l1994:
  2278  01E9  1399               	bcf	25,7	;volatile
  2279  01EA                     l1996:
  2280  01EA  3000               	movlw	0
  2281  01EB  0020               	movlb	0	; select bank0
  2282  01EC  00C0               	movwf	_clockFrequency+3
  2283  01ED  303D               	movlw	61
  2284  01EE  00BF               	movwf	_clockFrequency+2
  2285  01EF  3009               	movlw	9
  2286  01F0  00BE               	movwf	_clockFrequency+1
  2287  01F1  3000               	movlw	0
  2288  01F2  00BD               	movwf	_clockFrequency
  2289  01F3  2A4D               	goto	l111
  2290  01F4                     l1998:
  2291  01F4  0021               	movlb	1	; select bank1
  2292  01F5  0819               	movf	25,w	;volatile
  2293  01F6  3987               	andlw	-121
  2294  01F7  3870               	iorlw	112
  2295  01F8  0099               	movwf	25	;volatile
  2296  01F9                     l2000:
  2297  01F9  1399               	bcf	25,7	;volatile
  2298  01FA                     l2002:
  2299  01FA  3000               	movlw	0
  2300  01FB  0020               	movlb	0	; select bank0
  2301  01FC  00C0               	movwf	_clockFrequency+3
  2302  01FD  307A               	movlw	122
  2303  01FE  00BF               	movwf	_clockFrequency+2
  2304  01FF  3012               	movlw	18
  2305  0200  00BE               	movwf	_clockFrequency+1
  2306  0201  3000               	movlw	0
  2307  0202  00BD               	movwf	_clockFrequency
  2308  0203  2A4D               	goto	l111
  2309  0204                     l2004:
  2310  0204  3078               	movlw	120
  2311  0205  0021               	movlb	1	; select bank1
  2312  0206  0499               	iorwf	25,f	;volatile
  2313  0207                     l2006:
  2314  0207  1399               	bcf	25,7	;volatile
  2315  0208                     l2008:
  2316  0208  3000               	movlw	0
  2317  0209  0020               	movlb	0	; select bank0
  2318  020A  00C0               	movwf	_clockFrequency+3
  2319  020B  30F4               	movlw	244
  2320  020C  00BF               	movwf	_clockFrequency+2
  2321  020D  3024               	movlw	36
  2322  020E  00BE               	movwf	_clockFrequency+1
  2323  020F  3000               	movlw	0
  2324  0210  00BD               	movwf	_clockFrequency
  2325  0211  2A4D               	goto	l111
  2326  0212                     l2010:
  2327  0212  0021               	movlb	1	; select bank1
  2328  0213  0819               	movf	25,w	;volatile
  2329  0214  3987               	andlw	-121
  2330  0215  3870               	iorlw	112
  2331  0216  0099               	movwf	25	;volatile
  2332  0217                     l2012:
  2333  0217  1799               	bsf	25,7	;volatile
  2334  0218                     l2014:
  2335  0218  3001               	movlw	1
  2336  0219  0020               	movlb	0	; select bank0
  2337  021A  00C0               	movwf	_clockFrequency+3
  2338  021B  30E8               	movlw	232
  2339  021C  00BF               	movwf	_clockFrequency+2
  2340  021D  3048               	movlw	72
  2341  021E  00BE               	movwf	_clockFrequency+1
  2342  021F  3000               	movlw	0
  2343  0220  00BD               	movwf	_clockFrequency
  2344  0221  2A4D               	goto	l111
  2345  0222                     l2018:
  2346  0222  0835               	movf	setupInternalOscillator@selectedFreq,w
  2347  0223  00B3               	movwf	??_setupInternalOscillator
  2348  0224  01B4               	clrf	??_setupInternalOscillator+1
  2349                           
  2350                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2351                           ; Switch size 1, requested type "simple"
  2352                           ; Number of cases is 1, Range of values is 0 to 0
  2353                           ; switch strategies available:
  2354                           ; Name         Instructions Cycles
  2355                           ; simple_byte            4     3 (average)
  2356                           ; direct_byte            8     6 (fixed)
  2357                           ; jumptable            260     6 (fixed)
  2358                           ;	Chosen strategy is simple_byte
  2359  0225  0834               	movf	??_setupInternalOscillator+1,w
  2360  0226  3A00               	xorlw	0	; case 0
  2361  0227  1903               	skipnz
  2362  0228  2A2A               	goto	l2220
  2363  0229  2A4D               	goto	l111
  2364  022A                     l2220:
  2365                           
  2366                           ; Switch size 1, requested type "simple"
  2367                           ; Number of cases is 11, Range of values is 0 to 10
  2368                           ; switch strategies available:
  2369                           ; Name         Instructions Cycles
  2370                           ; direct_byte           28     6 (fixed)
  2371                           ; simple_byte           34    18 (average)
  2372                           ; jumptable            260     6 (fixed)
  2373                           ;	Chosen strategy is simple_byte
  2374  022A  0833               	movf	??_setupInternalOscillator,w
  2375  022B  3A00               	xorlw	0	; case 0
  2376  022C  1903               	skipnz
  2377  022D  2976               	goto	l1950
  2378  022E  3A01               	xorlw	1	; case 1
  2379  022F  1903               	skipnz
  2380  0230  2984               	goto	l1956
  2381  0231  3A03               	xorlw	3	; case 2
  2382  0232  1903               	skipnz
  2383  0233  2994               	goto	l1962
  2384  0234  3A01               	xorlw	1	; case 3
  2385  0235  1903               	skipnz
  2386  0236  29A4               	goto	l1968
  2387  0237  3A07               	xorlw	7	; case 4
  2388  0238  1903               	skipnz
  2389  0239  29B4               	goto	l1974
  2390  023A  3A01               	xorlw	1	; case 5
  2391  023B  1903               	skipnz
  2392  023C  29C4               	goto	l1980
  2393  023D  3A03               	xorlw	3	; case 6
  2394  023E  1903               	skipnz
  2395  023F  29D4               	goto	l1986
  2396  0240  3A01               	xorlw	1	; case 7
  2397  0241  1903               	skipnz
  2398  0242  29E4               	goto	l1992
  2399  0243  3A0F               	xorlw	15	; case 8
  2400  0244  1903               	skipnz
  2401  0245  29F4               	goto	l1998
  2402  0246  3A01               	xorlw	1	; case 9
  2403  0247  1903               	skipnz
  2404  0248  2A04               	goto	l2004
  2405  0249  3A03               	xorlw	3	; case 10
  2406  024A  1903               	skipnz
  2407  024B  2A12               	goto	l2010
  2408  024C  2A4D               	goto	l111
  2409  024D                     l111:
  2410  024D  0008               	return
  2411  024E                     __end_of_setupInternalOscillator:
  2412                           
  2413                           	psect	text4
  2414  06E9                     __ptext4:	
  2415 ;; *************** function _initialisePotentiometers *****************
  2416 ;; Defined at:
  2417 ;;		line 15 in file "Potentiometer.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;		None
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;		None
  2422 ;; Return value:  Size  Location     Type
  2423 ;;                  1    wreg      void 
  2424 ;; Registers used:
  2425 ;;		wreg, status,2, status,0, pclath, cstack
  2426 ;; Tracked objects:
  2427 ;;		On entry : 0/0
  2428 ;;		On exit  : 0/0
  2429 ;;		Unchanged: 0/0
  2430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2431 ;;      Params:         0       0       0       0       0       0
  2432 ;;      Locals:         0       0       0       0       0       0
  2433 ;;      Temps:          0       0       0       0       0       0
  2434 ;;      Totals:         0       0       0       0       0       0
  2435 ;;Total ram usage:        0 bytes
  2436 ;; Hardware stack levels used: 1
  2437 ;; Hardware stack levels required when called: 4
  2438 ;; This function calls:
  2439 ;;		_initialiseADCPin
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445  06E9                     _initialisePotentiometers:	
  2446                           ;psect for function _initialisePotentiometers
  2447                           
  2448  06E9                     l2056:	
  2449                           ;incstack = 0
  2450                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2451                           
  2452                           
  2453                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2454  06E9  3009               	movlw	9
  2455  06EA  3182  22CA  3186   	fcall	_initialiseADCPin
  2456                           
  2457                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2458  06ED  300A               	movlw	10
  2459  06EE  3182  22CA  3186   	fcall	_initialiseADCPin
  2460  06F1                     l323:
  2461  06F1  0008               	return
  2462  06F2                     __end_of_initialisePotentiometers:
  2463                           
  2464                           	psect	text5
  2465  064D                     __ptext5:	
  2466 ;; *************** function _initialiseCurrentSensors *****************
  2467 ;; Defined at:
  2468 ;;		line 17 in file "CurrentSensor.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0, pclath, cstack
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2482 ;;      Params:         0       0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 4
  2489 ;; This function calls:
  2490 ;;		_initialiseADCPin
  2491 ;;		_initialiseGPIO
  2492 ;;		_writeGPIO
  2493 ;; This function is called by:
  2494 ;;		_main
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498  064D                     _initialiseCurrentSensors:	
  2499                           ;psect for function _initialiseCurrentSensors
  2500                           
  2501  064D                     l2054:	
  2502                           ;incstack = 0
  2503                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2504                           
  2505                           
  2506                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2507  064D  0020               	movlb	0	; select bank0
  2508  064E  01B3               	clrf	initialiseGPIO@direction
  2509  064F  0AB3               	incf	initialiseGPIO@direction,f
  2510  0650  3003               	movlw	3
  2511  0651  3182  224E  3186   	fcall	_initialiseGPIO
  2512                           
  2513                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2514  0654  0020               	movlb	0	; select bank0
  2515  0655  01B3               	clrf	initialiseGPIO@direction
  2516  0656  0AB3               	incf	initialiseGPIO@direction,f
  2517  0657  3001               	movlw	1
  2518  0658  3182  224E  3186   	fcall	_initialiseGPIO
  2519                           
  2520                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2521  065B  3000               	movlw	0
  2522  065C  3182  22CA  3186   	fcall	_initialiseADCPin
  2523                           
  2524                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  2525  065F  3002               	movlw	2
  2526  0660  3182  22CA  3186   	fcall	_initialiseADCPin
  2527                           
  2528                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2529  0663  0020               	movlb	0	; select bank0
  2530  0664  01B3               	clrf	initialiseGPIO@direction
  2531  0665  300B               	movlw	11
  2532  0666  3182  224E  3186   	fcall	_initialiseGPIO
  2533                           
  2534                           ;CurrentSensor.c: 23:     writeGPIO(9, 0);
  2535  0669  0020               	movlb	0	; select bank0
  2536  066A  01B3               	clrf	writeGPIO@writeValue
  2537  066B  3009               	movlw	9
  2538  066C  3183  2396  3186   	fcall	_writeGPIO
  2539  066F                     l380:
  2540  066F  0008               	return
  2541  0670                     __end_of_initialiseCurrentSensors:
  2542                           
  2543                           	psect	text6
  2544  0396                     __ptext6:	
  2545 ;; *************** function _writeGPIO *****************
  2546 ;; Defined at:
  2547 ;;		line 52 in file "GPIO.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;  gpioNumber      1    wreg     const enum E2798
  2550 ;;  writeValue      1   19[BANK0 ] unsigned char 
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2553 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2554 ;;  portType        1   22[BANK0 ] unsigned char 
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, status,2, status,0
  2559 ;; Tracked objects:
  2560 ;;		On entry : 0/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2564 ;;      Params:         0       1       0       0       0       0
  2565 ;;      Locals:         0       3       0       0       0       0
  2566 ;;      Temps:          0       2       0       0       0       0
  2567 ;;      Totals:         0       6       0       0       0       0
  2568 ;;Total ram usage:        6 bytes
  2569 ;; Hardware stack levels used: 1
  2570 ;; Hardware stack levels required when called: 3
  2571 ;; This function calls:
  2572 ;;		Nothing
  2573 ;; This function is called by:
  2574 ;;		_initialiseCurrentSensors
  2575 ;;		_currentTripReset
  2576 ;; This function uses a non-reentrant model
  2577 ;;
  2578                           
  2579  0396                     _writeGPIO:	
  2580                           ;psect for function _writeGPIO
  2581                           
  2582                           
  2583                           ;incstack = 0
  2584                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  2585                           ;writeGPIO@gpioNumber stored from wreg
  2586  0396  0020               	movlb	0	; select bank0
  2587  0397  00B7               	movwf	writeGPIO@gpioNumber
  2588  0398                     l1626:
  2589                           
  2590                           ;GPIO.c: 54:     uint8_t portType = 0;
  2591  0398  01B6               	clrf	writeGPIO@portType
  2592  0399                     l1628:
  2593                           
  2594                           ;GPIO.c: 55:     if(gpioNumber > 7){
  2595  0399  3008               	movlw	8
  2596  039A  0237               	subwf	writeGPIO@gpioNumber,w
  2597  039B  1C03               	skipc
  2598  039C  2B9E               	goto	u1061
  2599  039D  2B9F               	goto	u1060
  2600  039E                     u1061:
  2601  039E  2BA7               	goto	l1634
  2602  039F                     u1060:
  2603  039F                     l1630:
  2604                           
  2605                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  2606  039F  0837               	movf	writeGPIO@gpioNumber,w
  2607  03A0  3EF8               	addlw	248
  2608  03A1  00B4               	movwf	??_writeGPIO
  2609  03A2  0834               	movf	??_writeGPIO,w
  2610  03A3  00B8               	movwf	writeGPIO@portNumber
  2611  03A4                     l1632:
  2612                           
  2613                           ;GPIO.c: 57:         portType = 1;
  2614  03A4  01B6               	clrf	writeGPIO@portType
  2615  03A5  0AB6               	incf	writeGPIO@portType,f
  2616                           
  2617                           ;GPIO.c: 58:     }
  2618  03A6  2BAC               	goto	l1638
  2619  03A7                     l1634:
  2620                           
  2621                           ;GPIO.c: 60:         portNumber = gpioNumber;
  2622  03A7  0837               	movf	writeGPIO@gpioNumber,w
  2623  03A8  00B4               	movwf	??_writeGPIO
  2624  03A9  0834               	movf	??_writeGPIO,w
  2625  03AA  00B8               	movwf	writeGPIO@portNumber
  2626  03AB                     l1636:
  2627                           
  2628                           ;GPIO.c: 61:         portType = 0;
  2629  03AB  01B6               	clrf	writeGPIO@portType
  2630  03AC                     l1638:
  2631                           
  2632                           ;GPIO.c: 64:     if(portType == 0){
  2633  03AC  0836               	movf	writeGPIO@portType,w
  2634  03AD  1D03               	btfss	3,2
  2635  03AE  2BB0               	goto	u1071
  2636  03AF  2BB1               	goto	u1070
  2637  03B0                     u1071:
  2638  03B0  2BD1               	goto	l1646
  2639  03B1                     u1070:
  2640  03B1                     l1640:
  2641                           
  2642                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  2643  03B1  0833               	movf	writeGPIO@writeValue,w
  2644  03B2  1903               	btfsc	3,2
  2645  03B3  2BB5               	goto	u1081
  2646  03B4  2BB6               	goto	u1080
  2647  03B5                     u1081:
  2648  03B5  2BC3               	goto	l1644
  2649  03B6                     u1080:
  2650  03B6                     l1642:
  2651  03B6  3001               	movlw	1
  2652  03B7  00B4               	movwf	??_writeGPIO
  2653  03B8  0A38               	incf	writeGPIO@portNumber,w
  2654  03B9  2BBB               	goto	u1094
  2655  03BA                     u1095:
  2656  03BA  35B4               	lslf	??_writeGPIO,f
  2657  03BB                     u1094:
  2658  03BB  0B89               	decfsz	9,f
  2659  03BC  2BBA               	goto	u1095
  2660  03BD  0834               	movf	??_writeGPIO,w
  2661  03BE  00B5               	movwf	??_writeGPIO+1
  2662  03BF  0835               	movf	??_writeGPIO+1,w
  2663  03C0  0022               	movlb	2	; select bank2
  2664  03C1  048C               	iorwf	12,f	;volatile
  2665  03C2  2BF5               	goto	l284
  2666  03C3                     l1644:
  2667  03C3  3001               	movlw	1
  2668  03C4  00B4               	movwf	??_writeGPIO
  2669  03C5  0A38               	incf	writeGPIO@portNumber,w
  2670  03C6  2BC8               	goto	u1104
  2671  03C7                     u1105:
  2672  03C7  35B4               	lslf	??_writeGPIO,f
  2673  03C8                     u1104:
  2674  03C8  0B89               	decfsz	9,f
  2675  03C9  2BC7               	goto	u1105
  2676  03CA  0834               	movf	??_writeGPIO,w
  2677  03CB  3AFF               	xorlw	255
  2678  03CC  00B5               	movwf	??_writeGPIO+1
  2679  03CD  0835               	movf	??_writeGPIO+1,w
  2680  03CE  0022               	movlb	2	; select bank2
  2681  03CF  058C               	andwf	12,f	;volatile
  2682  03D0  2BF5               	goto	l284
  2683  03D1                     l1646:
  2684  03D1  0336               	decf	writeGPIO@portType,w
  2685  03D2  1D03               	btfss	3,2
  2686  03D3  2BD5               	goto	u1111
  2687  03D4  2BD6               	goto	u1110
  2688  03D5                     u1111:
  2689  03D5  2BF5               	goto	l284
  2690  03D6                     u1110:
  2691  03D6                     l1648:
  2692                           
  2693                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  2694  03D6  0833               	movf	writeGPIO@writeValue,w
  2695  03D7  1903               	btfsc	3,2
  2696  03D8  2BDA               	goto	u1121
  2697  03D9  2BDB               	goto	u1120
  2698  03DA                     u1121:
  2699  03DA  2BE8               	goto	l1652
  2700  03DB                     u1120:
  2701  03DB                     l1650:
  2702  03DB  3001               	movlw	1
  2703  03DC  00B4               	movwf	??_writeGPIO
  2704  03DD  0A38               	incf	writeGPIO@portNumber,w
  2705  03DE  2BE0               	goto	u1134
  2706  03DF                     u1135:
  2707  03DF  35B4               	lslf	??_writeGPIO,f
  2708  03E0                     u1134:
  2709  03E0  0B89               	decfsz	9,f
  2710  03E1  2BDF               	goto	u1135
  2711  03E2  0834               	movf	??_writeGPIO,w
  2712  03E3  00B5               	movwf	??_writeGPIO+1
  2713  03E4  0835               	movf	??_writeGPIO+1,w
  2714  03E5  0022               	movlb	2	; select bank2
  2715  03E6  048D               	iorwf	13,f	;volatile
  2716  03E7  2BF5               	goto	l284
  2717  03E8                     l1652:
  2718  03E8  3001               	movlw	1
  2719  03E9  00B4               	movwf	??_writeGPIO
  2720  03EA  0A38               	incf	writeGPIO@portNumber,w
  2721  03EB  2BED               	goto	u1144
  2722  03EC                     u1145:
  2723  03EC  35B4               	lslf	??_writeGPIO,f
  2724  03ED                     u1144:
  2725  03ED  0B89               	decfsz	9,f
  2726  03EE  2BEC               	goto	u1145
  2727  03EF  0834               	movf	??_writeGPIO,w
  2728  03F0  3AFF               	xorlw	255
  2729  03F1  00B5               	movwf	??_writeGPIO+1
  2730  03F2  0835               	movf	??_writeGPIO+1,w
  2731  03F3  0022               	movlb	2	; select bank2
  2732  03F4  058D               	andwf	13,f	;volatile
  2733  03F5                     l284:
  2734  03F5  0008               	return
  2735  03F6                     __end_of_writeGPIO:
  2736                           
  2737                           	psect	text7
  2738  024E                     __ptext7:	
  2739 ;; *************** function _initialiseGPIO *****************
  2740 ;; Defined at:
  2741 ;;		line 18 in file "GPIO.c"
  2742 ;; Parameters:    Size  Location     Type
  2743 ;;  gpioNumber      1    wreg     const enum E2798
  2744 ;;  direction       1   19[BANK0 ] unsigned char 
  2745 ;; Auto vars:     Size  Location     Type
  2746 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2747 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2748 ;;  portType        1   22[BANK0 ] unsigned char 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2758 ;;      Params:         0       1       0       0       0       0
  2759 ;;      Locals:         0       3       0       0       0       0
  2760 ;;      Temps:          0       2       0       0       0       0
  2761 ;;      Totals:         0       6       0       0       0       0
  2762 ;;Total ram usage:        6 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 3
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;;		_setupPWM
  2770 ;;		_initialiseCurrentSensors
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774  024E                     _initialiseGPIO:	
  2775                           ;psect for function _initialiseGPIO
  2776                           
  2777                           
  2778                           ;incstack = 0
  2779                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2780                           ;initialiseGPIO@gpioNumber stored from wreg
  2781  024E  0020               	movlb	0	; select bank0
  2782  024F  00B7               	movwf	initialiseGPIO@gpioNumber
  2783  0250                     l1654:
  2784                           
  2785                           ;GPIO.c: 20:     uint8_t portType = 0;
  2786  0250  01B6               	clrf	initialiseGPIO@portType
  2787  0251                     l1656:
  2788                           
  2789                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2790  0251  3008               	movlw	8
  2791  0252  0237               	subwf	initialiseGPIO@gpioNumber,w
  2792  0253  1C03               	skipc
  2793  0254  2A56               	goto	u1151
  2794  0255  2A57               	goto	u1150
  2795  0256                     u1151:
  2796  0256  2A5F               	goto	l1662
  2797  0257                     u1150:
  2798  0257                     l1658:
  2799                           
  2800                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2801  0257  0837               	movf	initialiseGPIO@gpioNumber,w
  2802  0258  3EF8               	addlw	248
  2803  0259  00B4               	movwf	??_initialiseGPIO
  2804  025A  0834               	movf	??_initialiseGPIO,w
  2805  025B  00B8               	movwf	initialiseGPIO@portNumber
  2806  025C                     l1660:
  2807                           
  2808                           ;GPIO.c: 23:         portType = 1;
  2809  025C  01B6               	clrf	initialiseGPIO@portType
  2810  025D  0AB6               	incf	initialiseGPIO@portType,f
  2811                           
  2812                           ;GPIO.c: 24:     }
  2813  025E  2A64               	goto	l1666
  2814  025F                     l1662:
  2815                           
  2816                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2817  025F  0837               	movf	initialiseGPIO@gpioNumber,w
  2818  0260  00B4               	movwf	??_initialiseGPIO
  2819  0261  0834               	movf	??_initialiseGPIO,w
  2820  0262  00B8               	movwf	initialiseGPIO@portNumber
  2821  0263                     l1664:
  2822                           
  2823                           ;GPIO.c: 27:         portType = 0;
  2824  0263  01B6               	clrf	initialiseGPIO@portType
  2825  0264                     l1666:
  2826                           
  2827                           ;GPIO.c: 30:     if(portType == 0){
  2828  0264  0836               	movf	initialiseGPIO@portType,w
  2829  0265  1D03               	btfss	3,2
  2830  0266  2A68               	goto	u1161
  2831  0267  2A69               	goto	u1160
  2832  0268                     u1161:
  2833  0268  2A97               	goto	l1674
  2834  0269                     u1160:
  2835  0269                     l1668:
  2836                           
  2837                           ;GPIO.c: 31:         if(direction){
  2838  0269  0833               	movf	initialiseGPIO@direction,w
  2839  026A  1903               	btfsc	3,2
  2840  026B  2A6D               	goto	u1171
  2841  026C  2A6E               	goto	u1170
  2842  026D                     u1171:
  2843  026D  2A89               	goto	l1672
  2844  026E                     u1170:
  2845  026E                     l1670:
  2846                           
  2847                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2848  026E  3001               	movlw	1
  2849  026F  00B4               	movwf	??_initialiseGPIO
  2850  0270  0A38               	incf	initialiseGPIO@portNumber,w
  2851  0271  2A73               	goto	u1184
  2852  0272                     u1185:
  2853  0272  35B4               	lslf	??_initialiseGPIO,f
  2854  0273                     u1184:
  2855  0273  0B89               	decfsz	9,f
  2856  0274  2A72               	goto	u1185
  2857  0275  0834               	movf	??_initialiseGPIO,w
  2858  0276  00B5               	movwf	??_initialiseGPIO+1
  2859  0277  0835               	movf	??_initialiseGPIO+1,w
  2860  0278  0021               	movlb	1	; select bank1
  2861  0279  048C               	iorwf	12,f	;volatile
  2862                           
  2863                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2864  027A  3001               	movlw	1
  2865  027B  0020               	movlb	0	; select bank0
  2866  027C  00B4               	movwf	??_initialiseGPIO
  2867  027D  0A38               	incf	initialiseGPIO@portNumber,w
  2868  027E  2A80               	goto	u1194
  2869  027F                     u1195:
  2870  027F  35B4               	lslf	??_initialiseGPIO,f
  2871  0280                     u1194:
  2872  0280  0B89               	decfsz	9,f
  2873  0281  2A7F               	goto	u1195
  2874  0282  0834               	movf	??_initialiseGPIO,w
  2875  0283  3AFF               	xorlw	255
  2876  0284  00B5               	movwf	??_initialiseGPIO+1
  2877  0285  0835               	movf	??_initialiseGPIO+1,w
  2878  0286  0023               	movlb	3	; select bank3
  2879  0287  058C               	andwf	12,f	;volatile
  2880                           
  2881                           ;GPIO.c: 34:         }
  2882  0288  2AC9               	goto	l270
  2883  0289                     l1672:
  2884  0289  3001               	movlw	1
  2885  028A  00B4               	movwf	??_initialiseGPIO
  2886  028B  0A38               	incf	initialiseGPIO@portNumber,w
  2887  028C  2A8E               	goto	u1204
  2888  028D                     u1205:
  2889  028D  35B4               	lslf	??_initialiseGPIO,f
  2890  028E                     u1204:
  2891  028E  0B89               	decfsz	9,f
  2892  028F  2A8D               	goto	u1205
  2893  0290  0834               	movf	??_initialiseGPIO,w
  2894  0291  3AFF               	xorlw	255
  2895  0292  00B5               	movwf	??_initialiseGPIO+1
  2896  0293  0835               	movf	??_initialiseGPIO+1,w
  2897  0294  0021               	movlb	1	; select bank1
  2898  0295  058C               	andwf	12,f	;volatile
  2899  0296  2AC9               	goto	l270
  2900  0297                     l1674:
  2901  0297  0336               	decf	initialiseGPIO@portType,w
  2902  0298  1D03               	btfss	3,2
  2903  0299  2A9B               	goto	u1211
  2904  029A  2A9C               	goto	u1210
  2905  029B                     u1211:
  2906  029B  2AC9               	goto	l270
  2907  029C                     u1210:
  2908  029C                     l1676:
  2909                           
  2910                           ;GPIO.c: 38:         if(direction){
  2911  029C  0833               	movf	initialiseGPIO@direction,w
  2912  029D  1903               	btfsc	3,2
  2913  029E  2AA0               	goto	u1221
  2914  029F  2AA1               	goto	u1220
  2915  02A0                     u1221:
  2916  02A0  2ABC               	goto	l1680
  2917  02A1                     u1220:
  2918  02A1                     l1678:
  2919                           
  2920                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2921  02A1  3001               	movlw	1
  2922  02A2  00B4               	movwf	??_initialiseGPIO
  2923  02A3  0A38               	incf	initialiseGPIO@portNumber,w
  2924  02A4  2AA6               	goto	u1234
  2925  02A5                     u1235:
  2926  02A5  35B4               	lslf	??_initialiseGPIO,f
  2927  02A6                     u1234:
  2928  02A6  0B89               	decfsz	9,f
  2929  02A7  2AA5               	goto	u1235
  2930  02A8  0834               	movf	??_initialiseGPIO,w
  2931  02A9  00B5               	movwf	??_initialiseGPIO+1
  2932  02AA  0835               	movf	??_initialiseGPIO+1,w
  2933  02AB  0021               	movlb	1	; select bank1
  2934  02AC  048D               	iorwf	13,f	;volatile
  2935                           
  2936                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2937  02AD  3001               	movlw	1
  2938  02AE  0020               	movlb	0	; select bank0
  2939  02AF  00B4               	movwf	??_initialiseGPIO
  2940  02B0  0A38               	incf	initialiseGPIO@portNumber,w
  2941  02B1  2AB3               	goto	u1244
  2942  02B2                     u1245:
  2943  02B2  35B4               	lslf	??_initialiseGPIO,f
  2944  02B3                     u1244:
  2945  02B3  0B89               	decfsz	9,f
  2946  02B4  2AB2               	goto	u1245
  2947  02B5  0834               	movf	??_initialiseGPIO,w
  2948  02B6  3AFF               	xorlw	255
  2949  02B7  00B5               	movwf	??_initialiseGPIO+1
  2950  02B8  0835               	movf	??_initialiseGPIO+1,w
  2951  02B9  0023               	movlb	3	; select bank3
  2952  02BA  058D               	andwf	13,f	;volatile
  2953                           
  2954                           ;GPIO.c: 41:         }
  2955  02BB  2AC9               	goto	l270
  2956  02BC                     l1680:
  2957  02BC  3001               	movlw	1
  2958  02BD  00B4               	movwf	??_initialiseGPIO
  2959  02BE  0A38               	incf	initialiseGPIO@portNumber,w
  2960  02BF  2AC1               	goto	u1254
  2961  02C0                     u1255:
  2962  02C0  35B4               	lslf	??_initialiseGPIO,f
  2963  02C1                     u1254:
  2964  02C1  0B89               	decfsz	9,f
  2965  02C2  2AC0               	goto	u1255
  2966  02C3  0834               	movf	??_initialiseGPIO,w
  2967  02C4  3AFF               	xorlw	255
  2968  02C5  00B5               	movwf	??_initialiseGPIO+1
  2969  02C6  0835               	movf	??_initialiseGPIO+1,w
  2970  02C7  0021               	movlb	1	; select bank1
  2971  02C8  058D               	andwf	13,f	;volatile
  2972  02C9                     l270:
  2973  02C9  0008               	return
  2974  02CA                     __end_of_initialiseGPIO:
  2975                           
  2976                           	psect	text8
  2977  02CA                     __ptext8:	
  2978 ;; *************** function _initialiseADCPin *****************
  2979 ;; Defined at:
  2980 ;;		line 37 in file "ADC.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  gpioNumber      1    wreg     const enum E2798
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2985 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2986 ;;  portType        1   22[BANK0 ] unsigned char 
  2987 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, status,2, status,0
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2997 ;;      Params:         0       0       0       0       0       0
  2998 ;;      Locals:         0       4       0       0       0       0
  2999 ;;      Temps:          0       2       0       0       0       0
  3000 ;;      Totals:         0       6       0       0       0       0
  3001 ;;Total ram usage:        6 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 3
  3004 ;; This function calls:
  3005 ;;		Nothing
  3006 ;; This function is called by:
  3007 ;;		_initialisePotentiometers
  3008 ;;		_initialiseCurrentSensors
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012  02CA                     _initialiseADCPin:	
  3013                           ;psect for function _initialiseADCPin
  3014                           
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3018                           ;initialiseADCPin@gpioNumber stored from wreg
  3019  02CA  0020               	movlb	0	; select bank0
  3020  02CB  00B8               	movwf	initialiseADCPin@gpioNumber
  3021  02CC                     l1682:
  3022                           
  3023                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3024  02CC  01B7               	clrf	initialiseADCPin@portNumber
  3025                           
  3026                           ;ADC.c: 40:     uint8_t portType = 0;
  3027  02CD  01B6               	clrf	initialiseADCPin@portType
  3028                           
  3029                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3030  02CE  01B5               	clrf	initialiseADCPin@gpioValid
  3031  02CF                     l1684:
  3032                           
  3033                           ;ADC.c: 43:     if(gpioNumber < 4){
  3034  02CF  3004               	movlw	4
  3035  02D0  0238               	subwf	initialiseADCPin@gpioNumber,w
  3036  02D1  1803               	skipnc
  3037  02D2  2AD4               	goto	u1261
  3038  02D3  2AD5               	goto	u1260
  3039  02D4                     u1261:
  3040  02D4  2ADC               	goto	l1692
  3041  02D5                     u1260:
  3042  02D5                     l1686:
  3043                           
  3044                           ;ADC.c: 44:         portNumber = gpioNumber;
  3045  02D5  0838               	movf	initialiseADCPin@gpioNumber,w
  3046  02D6  00B3               	movwf	??_initialiseADCPin
  3047  02D7  0833               	movf	??_initialiseADCPin,w
  3048  02D8  00B7               	movwf	initialiseADCPin@portNumber
  3049  02D9                     l1688:
  3050                           
  3051                           ;ADC.c: 45:         portType = 0;
  3052  02D9  01B6               	clrf	initialiseADCPin@portType
  3053  02DA                     l1690:
  3054                           
  3055                           ;ADC.c: 46:         gpioValid = 1;
  3056  02DA  01B5               	clrf	initialiseADCPin@gpioValid
  3057  02DB  0AB5               	incf	initialiseADCPin@gpioValid,f
  3058  02DC                     l1692:
  3059                           
  3060                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3061  02DC  3009               	movlw	9
  3062  02DD  0238               	subwf	initialiseADCPin@gpioNumber,w
  3063  02DE  1C03               	skipc
  3064  02DF  2AE1               	goto	u1271
  3065  02E0  2AE2               	goto	u1270
  3066  02E1                     u1271:
  3067  02E1  2AF1               	goto	l204
  3068  02E2                     u1270:
  3069  02E2                     l1694:
  3070  02E2  3010               	movlw	16
  3071  02E3  0238               	subwf	initialiseADCPin@gpioNumber,w
  3072  02E4  1803               	skipnc
  3073  02E5  2AE7               	goto	u1281
  3074  02E6  2AE8               	goto	u1280
  3075  02E7                     u1281:
  3076  02E7  2AF1               	goto	l204
  3077  02E8                     u1280:
  3078  02E8                     l1696:
  3079                           
  3080                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3081  02E8  0838               	movf	initialiseADCPin@gpioNumber,w
  3082  02E9  3EF8               	addlw	248
  3083  02EA  00B3               	movwf	??_initialiseADCPin
  3084  02EB  0833               	movf	??_initialiseADCPin,w
  3085  02EC  00B7               	movwf	initialiseADCPin@portNumber
  3086  02ED                     l1698:
  3087                           
  3088                           ;ADC.c: 51:         portType = 1;
  3089  02ED  01B6               	clrf	initialiseADCPin@portType
  3090  02EE  0AB6               	incf	initialiseADCPin@portType,f
  3091  02EF                     l1700:
  3092                           
  3093                           ;ADC.c: 52:         gpioValid = 1;
  3094  02EF  01B5               	clrf	initialiseADCPin@gpioValid
  3095  02F0  0AB5               	incf	initialiseADCPin@gpioValid,f
  3096  02F1                     l204:	
  3097                           ;ADC.c: 53:     }
  3098                           
  3099                           
  3100                           ;ADC.c: 55:     if(gpioValid){
  3101  02F1  0835               	movf	initialiseADCPin@gpioValid,w
  3102  02F2  1903               	btfsc	3,2
  3103  02F3  2AF5               	goto	u1291
  3104  02F4  2AF6               	goto	u1290
  3105  02F5                     u1291:
  3106  02F5  2B33               	goto	l209
  3107  02F6                     u1290:
  3108  02F6                     l1702:
  3109                           
  3110                           ;ADC.c: 56:         if(portType == 0){
  3111  02F6  0836               	movf	initialiseADCPin@portType,w
  3112  02F7  1D03               	btfss	3,2
  3113  02F8  2AFA               	goto	u1301
  3114  02F9  2AFB               	goto	u1300
  3115  02FA                     u1301:
  3116  02FA  2B15               	goto	l1706
  3117  02FB                     u1300:
  3118  02FB                     l1704:
  3119                           
  3120                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3121  02FB  3001               	movlw	1
  3122  02FC  00B3               	movwf	??_initialiseADCPin
  3123  02FD  0A37               	incf	initialiseADCPin@portNumber,w
  3124  02FE  2B00               	goto	u1314
  3125  02FF                     u1315:
  3126  02FF  35B3               	lslf	??_initialiseADCPin,f
  3127  0300                     u1314:
  3128  0300  0B89               	decfsz	9,f
  3129  0301  2AFF               	goto	u1315
  3130  0302  0833               	movf	??_initialiseADCPin,w
  3131  0303  00B4               	movwf	??_initialiseADCPin+1
  3132  0304  0834               	movf	??_initialiseADCPin+1,w
  3133  0305  0021               	movlb	1	; select bank1
  3134  0306  048C               	iorwf	12,f	;volatile
  3135                           
  3136                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3137  0307  3001               	movlw	1
  3138  0308  0020               	movlb	0	; select bank0
  3139  0309  00B3               	movwf	??_initialiseADCPin
  3140  030A  0A37               	incf	initialiseADCPin@portNumber,w
  3141  030B  2B0D               	goto	u1324
  3142  030C                     u1325:
  3143  030C  35B3               	lslf	??_initialiseADCPin,f
  3144  030D                     u1324:
  3145  030D  0B89               	decfsz	9,f
  3146  030E  2B0C               	goto	u1325
  3147  030F  0833               	movf	??_initialiseADCPin,w
  3148  0310  00B4               	movwf	??_initialiseADCPin+1
  3149  0311  0834               	movf	??_initialiseADCPin+1,w
  3150  0312  0023               	movlb	3	; select bank3
  3151  0313  048C               	iorwf	12,f	;volatile
  3152                           
  3153                           ;ADC.c: 59:         }
  3154  0314  2B33               	goto	l209
  3155  0315                     l1706:
  3156  0315  0336               	decf	initialiseADCPin@portType,w
  3157  0316  1D03               	btfss	3,2
  3158  0317  2B19               	goto	u1331
  3159  0318  2B1A               	goto	u1330
  3160  0319                     u1331:
  3161  0319  2B33               	goto	l209
  3162  031A                     u1330:
  3163  031A                     l1708:
  3164                           
  3165                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3166  031A  3001               	movlw	1
  3167  031B  00B3               	movwf	??_initialiseADCPin
  3168  031C  0A37               	incf	initialiseADCPin@portNumber,w
  3169  031D  2B1F               	goto	u1344
  3170  031E                     u1345:
  3171  031E  35B3               	lslf	??_initialiseADCPin,f
  3172  031F                     u1344:
  3173  031F  0B89               	decfsz	9,f
  3174  0320  2B1E               	goto	u1345
  3175  0321  0833               	movf	??_initialiseADCPin,w
  3176  0322  00B4               	movwf	??_initialiseADCPin+1
  3177  0323  0834               	movf	??_initialiseADCPin+1,w
  3178  0324  0021               	movlb	1	; select bank1
  3179  0325  048D               	iorwf	13,f	;volatile
  3180                           
  3181                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3182  0326  3001               	movlw	1
  3183  0327  0020               	movlb	0	; select bank0
  3184  0328  00B3               	movwf	??_initialiseADCPin
  3185  0329  0A37               	incf	initialiseADCPin@portNumber,w
  3186  032A  2B2C               	goto	u1354
  3187  032B                     u1355:
  3188  032B  35B3               	lslf	??_initialiseADCPin,f
  3189  032C                     u1354:
  3190  032C  0B89               	decfsz	9,f
  3191  032D  2B2B               	goto	u1355
  3192  032E  0833               	movf	??_initialiseADCPin,w
  3193  032F  00B4               	movwf	??_initialiseADCPin+1
  3194  0330  0834               	movf	??_initialiseADCPin+1,w
  3195  0331  0023               	movlb	3	; select bank3
  3196  0332  048D               	iorwf	13,f	;volatile
  3197  0333                     l209:
  3198  0333  0008               	return
  3199  0334                     __end_of_initialiseADCPin:
  3200                           
  3201                           	psect	text9
  3202  0700                     __ptext9:	
  3203 ;; *************** function _initialiseADCModule *****************
  3204 ;; Defined at:
  3205 ;;		line 14 in file "ADC.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;		None
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;		None
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  1    wreg      void 
  3212 ;; Registers used:
  3213 ;;		wreg
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3219 ;;      Params:         0       0       0       0       0       0
  3220 ;;      Locals:         0       0       0       0       0       0
  3221 ;;      Temps:          0       0       0       0       0       0
  3222 ;;      Totals:         0       0       0       0       0       0
  3223 ;;Total ram usage:        0 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; Hardware stack levels required when called: 3
  3226 ;; This function calls:
  3227 ;;		Nothing
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233  0700                     _initialiseADCModule:	
  3234                           ;psect for function _initialiseADCModule
  3235                           
  3236  0700                     l2052:	
  3237                           ;incstack = 0
  3238                           ; Regs used in _initialiseADCModule: [wreg]
  3239                           
  3240                           
  3241                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3242  0700  3001               	movlw	1
  3243  0701  0021               	movlb	1	; select bank1
  3244  0702  009D               	movwf	29	;volatile
  3245                           
  3246                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3247  0703  3080               	movlw	128
  3248  0704  009E               	movwf	30	;volatile
  3249  0705                     l200:
  3250  0705  0008               	return
  3251  0706                     __end_of_initialiseADCModule:
  3252                           
  3253                           	psect	intentry
  3254  0004                     __pintentry:	
  3255 ;; *************** function _Tick980Hz *****************
  3256 ;; Defined at:
  3257 ;;		line 41 in file "main.c"
  3258 ;; Parameters:    Size  Location     Type
  3259 ;;		None
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3271 ;;      Params:         0       0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0
  3273 ;;      Temps:          0       1       0       0       0       0
  3274 ;;      Totals:         0       1       0       0       0       0
  3275 ;;Total ram usage:        1 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 2
  3278 ;; This function calls:
  3279 ;;		_currentTripRead
  3280 ;;		_readFilteredDutyPot
  3281 ;;		_readFilteredFreqPot
  3282 ;;		_runPotScaling
  3283 ;;		_setPWMDutyandPeriod
  3284 ;;		i1_writeGPIO
  3285 ;; This function is called by:
  3286 ;;		Interrupt level 1
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290  0004                     _Tick980Hz:
  3291                           
  3292                           ;incstack = 0
  3293  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3294                           
  3295                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3296  0005  3180               	pagesel	$
  3297  0006                     i1l2086:
  3298                           
  3299                           ;main.c: 52:         if(currentTripRead() == 1){
  3300  0006  3185  25F5  3180   	fcall	_currentTripRead
  3301  0009  3A01               	xorlw	1
  3302  000A  1D03               	skipz
  3303  000B  280D               	goto	u193_21
  3304  000C  280E               	goto	u193_20
  3305  000D                     u193_21:
  3306  000D  281A               	goto	i1l2092
  3307  000E                     u193_20:
  3308  000E                     i1l2088:
  3309                           
  3310                           ;main.c: 53:             emergencyStop = 1;
  3311  000E  3001               	movlw	1
  3312  000F  0020               	movlb	0	; select bank0
  3313  0010  00B2               	movwf	??_Tick980Hz
  3314  0011  0832               	movf	??_Tick980Hz,w
  3315  0012  00CF               	movwf	_emergencyStop	;volatile
  3316  0013                     i1l2090:
  3317                           
  3318                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3319  0013  3000               	movlw	0
  3320  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3321  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3322  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3323  0017  3186  2622  3180   	fcall	_setPWMDutyandPeriod
  3324  001A                     i1l2092:
  3325                           
  3326                           ;main.c: 57:         if(timerSlotHalf == 0){
  3327  001A  0020               	movlb	0	; select bank0
  3328  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3329  001C  1D03               	btfss	3,2
  3330  001D  281F               	goto	u194_21
  3331  001E  2820               	goto	u194_20
  3332  001F                     u194_21:
  3333  001F  2825               	goto	i1l2096
  3334  0020                     u194_20:
  3335  0020                     i1l2094:
  3336                           
  3337                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3338  0020  01F0               	clrf	i1writeGPIO@writeValue
  3339  0021  300C               	movlw	12
  3340  0022  3183  23F6  3180   	fcall	i1_writeGPIO
  3341  0025                     i1l2096:
  3342                           
  3343                           ;main.c: 61:         if(timerSlotHalf == 1){
  3344  0025  0020               	movlb	0	; select bank0
  3345  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3346  0027  1D03               	btfss	3,2
  3347  0028  282A               	goto	u195_21
  3348  0029  282B               	goto	u195_20
  3349  002A                     u195_21:
  3350  002A  2860               	goto	i1l82
  3351  002B                     u195_20:
  3352  002B                     i1l2098:
  3353                           
  3354                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3355  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3356  002C  1D03               	btfss	3,2
  3357  002D  282F               	goto	u196_21
  3358  002E  2830               	goto	u196_20
  3359  002F                     u196_21:
  3360  002F  2855               	goto	i1l2112
  3361  0030                     u196_20:
  3362  0030                     i1l2100:
  3363                           
  3364                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3365  0030  01F0               	clrf	i1writeGPIO@writeValue
  3366  0031  0AF0               	incf	i1writeGPIO@writeValue,f
  3367  0032  300C               	movlw	12
  3368  0033  3183  23F6  3180   	fcall	i1_writeGPIO
  3369                           
  3370                           ;main.c: 68:                 writeGPIO(9, 1);
  3371  0036  01F0               	clrf	i1writeGPIO@writeValue
  3372  0037  0AF0               	incf	i1writeGPIO@writeValue,f
  3373  0038  3009               	movlw	9
  3374  0039  3183  23F6  3180   	fcall	i1_writeGPIO
  3375  003C                     i1l2102:
  3376                           
  3377                           ;main.c: 70:                 filteredDutyPot = readFilteredDutyPot();
  3378  003C  3185  2567  3180   	fcall	_readFilteredDutyPot
  3379  003F  087C               	movf	?_readFilteredDutyPot+1,w
  3380  0040  0020               	movlb	0	; select bank0
  3381  0041  00C2               	movwf	_filteredDutyPot+1
  3382  0042  087B               	movf	?_readFilteredDutyPot,w
  3383  0043  00C1               	movwf	_filteredDutyPot
  3384  0044                     i1l2104:
  3385                           
  3386                           ;main.c: 71:                 filteredFreqPot = readFilteredFreqPot();
  3387  0044  3185  250C  3180   	fcall	_readFilteredFreqPot
  3388  0047  087C               	movf	?_readFilteredFreqPot+1,w
  3389  0048  0020               	movlb	0	; select bank0
  3390  0049  00C4               	movwf	_filteredFreqPot+1
  3391  004A  087B               	movf	?_readFilteredFreqPot,w
  3392  004B  00C3               	movwf	_filteredFreqPot
  3393  004C                     i1l2106:
  3394                           
  3395                           ;main.c: 73:                 if(~emergencyStop){
  3396  004C  034F               	decf	_emergencyStop,w	;volatile
  3397  004D  1903               	btfsc	3,2
  3398  004E  2850               	goto	u197_21
  3399  004F  2851               	goto	u197_20
  3400  0050                     u197_21:
  3401  0050  2855               	goto	i1l2110
  3402  0051                     u197_20:
  3403  0051                     i1l2108:
  3404                           
  3405                           ;main.c: 74:                     runPotScaling();
  3406  0051  3180  2090  3180   	fcall	_runPotScaling
  3407  0054  2855               	goto	i1l2112
  3408  0055                     i1l2110:
  3409  0055                     i1l2112:
  3410                           
  3411                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  3412  0055  0020               	movlb	0	; select bank0
  3413  0056  0350               	decf	_timerSlotQuarter,w	;volatile
  3414  0057  1D03               	btfss	3,2
  3415  0058  285A               	goto	u198_21
  3416  0059  285C               	goto	u198_20
  3417  005A                     u198_21:
  3418  005A  3001               	movlw	1
  3419  005B  285D               	goto	u199_20
  3420  005C                     u198_20:
  3421  005C  3000               	movlw	0
  3422  005D                     u199_20:
  3423  005D  00B2               	movwf	??_Tick980Hz
  3424  005E  0832               	movf	??_Tick980Hz,w
  3425  005F  00D0               	movwf	_timerSlotQuarter	;volatile
  3426  0060                     i1l82:	
  3427                           ;main.c: 83:         }
  3428                           
  3429                           
  3430                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  3431  0060  0351               	decf	_timerSlotHalf,w	;volatile
  3432  0061  1D03               	btfss	3,2
  3433  0062  2864               	goto	u200_21
  3434  0063  2866               	goto	u200_20
  3435  0064                     u200_21:
  3436  0064  3001               	movlw	1
  3437  0065  2867               	goto	u201_20
  3438  0066                     u200_20:
  3439  0066  3000               	movlw	0
  3440  0067                     u201_20:
  3441  0067  00B2               	movwf	??_Tick980Hz
  3442  0068  0832               	movf	??_Tick980Hz,w
  3443  0069  00D1               	movwf	_timerSlotHalf	;volatile
  3444  006A                     i1l2114:
  3445                           
  3446                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  3447  006A  110B               	bcf	11,2	;volatile
  3448  006B                     i1l2116:
  3449                           
  3450                           ;main.c: 91:         latestIL1 = readILCurrentADCRaw;
  3451  006B  3000               	movlw	0
  3452  006C  00C9               	movwf	_latestIL1	;volatile
  3453  006D  3000               	movlw	0
  3454  006E  00CA               	movwf	_latestIL1+1	;volatile
  3455  006F                     i1l2118:
  3456                           
  3457                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  3458  006F  1111               	bcf	17,2	;volatile
  3459  0070                     i1l87:
  3460  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3461  0071  0009               	retfie
  3462  0072                     __end_of_Tick980Hz:
  3463                           
  3464                           	psect	text11
  3465  03F6                     __ptext11:	
  3466 ;; *************** function i1_writeGPIO *****************
  3467 ;; Defined at:
  3468 ;;		line 52 in file "GPIO.c"
  3469 ;; Parameters:    Size  Location     Type
  3470 ;;  gpioNumber      1    wreg     const enum E2798
  3471 ;;  writeValue      1    0[COMMON] unsigned char 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3474 ;;  portNumber      1    5[COMMON] unsigned char 
  3475 ;;  portType        1    3[COMMON] unsigned char 
  3476 ;; Return value:  Size  Location     Type
  3477 ;;                  1    wreg      void 
  3478 ;; Registers used:
  3479 ;;		wreg, status,2, status,0
  3480 ;; Tracked objects:
  3481 ;;		On entry : 0/0
  3482 ;;		On exit  : 0/0
  3483 ;;		Unchanged: 0/0
  3484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3485 ;;      Params:         1       0       0       0       0       0
  3486 ;;      Locals:         3       0       0       0       0       0
  3487 ;;      Temps:          2       0       0       0       0       0
  3488 ;;      Totals:         6       0       0       0       0       0
  3489 ;;Total ram usage:        6 bytes
  3490 ;; Hardware stack levels used: 1
  3491 ;; This function calls:
  3492 ;;		Nothing
  3493 ;; This function is called by:
  3494 ;;		_Tick980Hz
  3495 ;; This function uses a non-reentrant model
  3496 ;;
  3497                           
  3498  03F6                     i1_writeGPIO:	
  3499                           ;psect for function i1_writeGPIO
  3500                           
  3501                           
  3502                           ;incstack = 0
  3503                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3504                           ;i1writeGPIO@gpioNumber stored from wreg
  3505  03F6  00F4               	movwf	i1writeGPIO@gpioNumber
  3506  03F7                     i1l2058:
  3507                           
  3508                           ;GPIO.c: 54:     uint8_t portType = 0;
  3509  03F7  01F3               	clrf	i1writeGPIO@portType
  3510  03F8                     i1l2060:
  3511                           
  3512                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3513  03F8  3008               	movlw	8
  3514  03F9  0274               	subwf	i1writeGPIO@gpioNumber,w
  3515  03FA  1C03               	skipc
  3516  03FB  2BFD               	goto	u184_21
  3517  03FC  2BFE               	goto	u184_20
  3518  03FD                     u184_21:
  3519  03FD  2C06               	goto	i1l2066
  3520  03FE                     u184_20:
  3521  03FE                     i1l2062:
  3522                           
  3523                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3524  03FE  0874               	movf	i1writeGPIO@gpioNumber,w
  3525  03FF  3EF8               	addlw	248
  3526  0400  00F1               	movwf	??i1_writeGPIO
  3527  0401  0871               	movf	??i1_writeGPIO,w
  3528  0402  00F5               	movwf	i1writeGPIO@portNumber
  3529  0403                     i1l2064:
  3530                           
  3531                           ;GPIO.c: 57:         portType = 1;
  3532  0403  01F3               	clrf	i1writeGPIO@portType
  3533  0404  0AF3               	incf	i1writeGPIO@portType,f
  3534                           
  3535                           ;GPIO.c: 58:     }
  3536  0405  2C0B               	goto	i1l2070
  3537  0406                     i1l2066:
  3538                           
  3539                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3540  0406  0874               	movf	i1writeGPIO@gpioNumber,w
  3541  0407  00F1               	movwf	??i1_writeGPIO
  3542  0408  0871               	movf	??i1_writeGPIO,w
  3543  0409  00F5               	movwf	i1writeGPIO@portNumber
  3544  040A                     i1l2068:
  3545                           
  3546                           ;GPIO.c: 61:         portType = 0;
  3547  040A  01F3               	clrf	i1writeGPIO@portType
  3548  040B                     i1l2070:
  3549                           
  3550                           ;GPIO.c: 64:     if(portType == 0){
  3551  040B  0873               	movf	i1writeGPIO@portType,w
  3552  040C  1D03               	btfss	3,2
  3553  040D  2C0F               	goto	u185_21
  3554  040E  2C10               	goto	u185_20
  3555  040F                     u185_21:
  3556  040F  2C30               	goto	i1l2078
  3557  0410                     u185_20:
  3558  0410                     i1l2072:
  3559                           
  3560                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3561  0410  0870               	movf	i1writeGPIO@writeValue,w
  3562  0411  1903               	btfsc	3,2
  3563  0412  2C14               	goto	u186_21
  3564  0413  2C15               	goto	u186_20
  3565  0414                     u186_21:
  3566  0414  2C22               	goto	i1l2076
  3567  0415                     u186_20:
  3568  0415                     i1l2074:
  3569  0415  3001               	movlw	1
  3570  0416  00F1               	movwf	??i1_writeGPIO
  3571  0417  0A75               	incf	i1writeGPIO@portNumber,w
  3572  0418  2C1A               	goto	u187_24
  3573  0419                     u187_25:
  3574  0419  35F1               	lslf	??i1_writeGPIO,f
  3575  041A                     u187_24:
  3576  041A  0B89               	decfsz	9,f
  3577  041B  2C19               	goto	u187_25
  3578  041C  0871               	movf	??i1_writeGPIO,w
  3579  041D  00F2               	movwf	??i1_writeGPIO+1
  3580  041E  0872               	movf	??i1_writeGPIO+1,w
  3581  041F  0022               	movlb	2	; select bank2
  3582  0420  048C               	iorwf	12,f	;volatile
  3583  0421  2C54               	goto	i1l284
  3584  0422                     i1l2076:
  3585  0422  3001               	movlw	1
  3586  0423  00F1               	movwf	??i1_writeGPIO
  3587  0424  0A75               	incf	i1writeGPIO@portNumber,w
  3588  0425  2C27               	goto	u188_24
  3589  0426                     u188_25:
  3590  0426  35F1               	lslf	??i1_writeGPIO,f
  3591  0427                     u188_24:
  3592  0427  0B89               	decfsz	9,f
  3593  0428  2C26               	goto	u188_25
  3594  0429  0871               	movf	??i1_writeGPIO,w
  3595  042A  3AFF               	xorlw	255
  3596  042B  00F2               	movwf	??i1_writeGPIO+1
  3597  042C  0872               	movf	??i1_writeGPIO+1,w
  3598  042D  0022               	movlb	2	; select bank2
  3599  042E  058C               	andwf	12,f	;volatile
  3600  042F  2C54               	goto	i1l284
  3601  0430                     i1l2078:
  3602  0430  0373               	decf	i1writeGPIO@portType,w
  3603  0431  1D03               	btfss	3,2
  3604  0432  2C34               	goto	u189_21
  3605  0433  2C35               	goto	u189_20
  3606  0434                     u189_21:
  3607  0434  2C54               	goto	i1l284
  3608  0435                     u189_20:
  3609  0435                     i1l2080:
  3610                           
  3611                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3612  0435  0870               	movf	i1writeGPIO@writeValue,w
  3613  0436  1903               	btfsc	3,2
  3614  0437  2C39               	goto	u190_21
  3615  0438  2C3A               	goto	u190_20
  3616  0439                     u190_21:
  3617  0439  2C47               	goto	i1l2084
  3618  043A                     u190_20:
  3619  043A                     i1l2082:
  3620  043A  3001               	movlw	1
  3621  043B  00F1               	movwf	??i1_writeGPIO
  3622  043C  0A75               	incf	i1writeGPIO@portNumber,w
  3623  043D  2C3F               	goto	u191_24
  3624  043E                     u191_25:
  3625  043E  35F1               	lslf	??i1_writeGPIO,f
  3626  043F                     u191_24:
  3627  043F  0B89               	decfsz	9,f
  3628  0440  2C3E               	goto	u191_25
  3629  0441  0871               	movf	??i1_writeGPIO,w
  3630  0442  00F2               	movwf	??i1_writeGPIO+1
  3631  0443  0872               	movf	??i1_writeGPIO+1,w
  3632  0444  0022               	movlb	2	; select bank2
  3633  0445  048D               	iorwf	13,f	;volatile
  3634  0446  2C54               	goto	i1l284
  3635  0447                     i1l2084:
  3636  0447  3001               	movlw	1
  3637  0448  00F1               	movwf	??i1_writeGPIO
  3638  0449  0A75               	incf	i1writeGPIO@portNumber,w
  3639  044A  2C4C               	goto	u192_24
  3640  044B                     u192_25:
  3641  044B  35F1               	lslf	??i1_writeGPIO,f
  3642  044C                     u192_24:
  3643  044C  0B89               	decfsz	9,f
  3644  044D  2C4B               	goto	u192_25
  3645  044E  0871               	movf	??i1_writeGPIO,w
  3646  044F  3AFF               	xorlw	255
  3647  0450  00F2               	movwf	??i1_writeGPIO+1
  3648  0451  0872               	movf	??i1_writeGPIO+1,w
  3649  0452  0022               	movlb	2	; select bank2
  3650  0453  058D               	andwf	13,f	;volatile
  3651  0454                     i1l284:
  3652  0454  0008               	return
  3653  0455                     __end_ofi1_writeGPIO:
  3654                           
  3655                           	psect	text12
  3656  0090                     __ptext12:	
  3657 ;; *************** function _runPotScaling *****************
  3658 ;; Defined at:
  3659 ;;		line 55 in file "Potentiometer.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3664 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3665 ;; Return value:  Size  Location     Type
  3666 ;;                  1    wreg      void 
  3667 ;; Registers used:
  3668 ;;		wreg, status,2, status,0, pclath, cstack
  3669 ;; Tracked objects:
  3670 ;;		On entry : 0/0
  3671 ;;		On exit  : 0/0
  3672 ;;		Unchanged: 0/0
  3673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3674 ;;      Params:         0       0       0       0       0       0
  3675 ;;      Locals:         0       4       0       0       0       0
  3676 ;;      Temps:          0       8       0       0       0       0
  3677 ;;      Totals:         0      12       0       0       0       0
  3678 ;;Total ram usage:       12 bytes
  3679 ;; Hardware stack levels used: 1
  3680 ;; Hardware stack levels required when called: 1
  3681 ;; This function calls:
  3682 ;;		___lldiv
  3683 ;;		___lmul
  3684 ;;		___wmul
  3685 ;;		_setPWMDutyandPeriod
  3686 ;; This function is called by:
  3687 ;;		_Tick980Hz
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691  0090                     _runPotScaling:	
  3692                           ;psect for function _runPotScaling
  3693                           
  3694  0090                     i1l1934:	
  3695                           ;incstack = 0
  3696                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3697                           
  3698                           
  3699                           ;Potentiometer.c: 57:     potSetCount++;
  3700  0090  3001               	movlw	1
  3701  0091  0020               	movlb	0	; select bank0
  3702  0092  00A6               	movwf	??_runPotScaling
  3703  0093  0826               	movf	??_runPotScaling,w
  3704  0094  07D2               	addwf	_potSetCount,f
  3705                           
  3706                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3707  0095  3020               	movlw	32
  3708  0096  0652               	xorwf	_potSetCount,w
  3709  0097  1D03               	btfss	3,2
  3710  0098  289A               	goto	u179_21
  3711  0099  289B               	goto	u179_20
  3712  009A                     u179_21:
  3713  009A  2972               	goto	i1l343
  3714  009B                     u179_20:
  3715  009B                     i1l1936:
  3716                           
  3717                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3718  009B  0843               	movf	_filteredFreqPot,w
  3719  009C  3ED3               	addlw	211
  3720  009D  00F0               	movwf	___lmul@multiplier
  3721  009E  30FF               	movlw	255
  3722  009F  3D44               	addwfc	_filteredFreqPot+1,w
  3723  00A0  00F1               	movwf	___lmul@multiplier+1
  3724  00A1  01F2               	clrf	___lmul@multiplier+2
  3725  00A2  01F3               	clrf	___lmul@multiplier+3
  3726  00A3  3000               	movlw	0
  3727  00A4  00F7               	movwf	___lmul@multiplicand+3
  3728  00A5  3000               	movlw	0
  3729  00A6  00F6               	movwf	___lmul@multiplicand+2
  3730  00A7  3000               	movlw	0
  3731  00A8  00F5               	movwf	___lmul@multiplicand+1
  3732  00A9  3090               	movlw	144
  3733  00AA  00F4               	movwf	___lmul@multiplicand
  3734  00AB  3185  25C2  3180   	fcall	___lmul
  3735  00AE  0870               	movf	?___lmul,w
  3736  00AF  0020               	movlb	0	; select bank0
  3737  00B0  00A6               	movwf	??_runPotScaling
  3738  00B1  0871               	movf	?___lmul+1,w
  3739  00B2  00A7               	movwf	??_runPotScaling+1
  3740  00B3  0872               	movf	?___lmul+2,w
  3741  00B4  00A8               	movwf	??_runPotScaling+2
  3742  00B5  0873               	movf	?___lmul+3,w
  3743  00B6  00A9               	movwf	??_runPotScaling+3
  3744  00B7  300A               	movlw	10
  3745  00B8                     u180_25:
  3746  00B8  36A9               	lsrf	??_runPotScaling+3,f
  3747  00B9  0CA8               	rrf	??_runPotScaling+2,f
  3748  00BA  0CA7               	rrf	??_runPotScaling+1,f
  3749  00BB  0CA6               	rrf	??_runPotScaling,f
  3750  00BC                     u180_20:
  3751  00BC  0B89               	decfsz	9,f
  3752  00BD  28B8               	goto	u180_25
  3753  00BE  0826               	movf	??_runPotScaling,w
  3754  00BF  3E0F               	addlw	15
  3755  00C0  00AA               	movwf	??_runPotScaling+4
  3756  00C1  082A               	movf	??_runPotScaling+4,w
  3757  00C2  00D6               	movwf	_setPeriod
  3758                           
  3759                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3760  00C3  0841               	movf	_filteredDutyPot,w
  3761  00C4  3ED3               	addlw	211
  3762  00C5  00F0               	movwf	___lmul@multiplier
  3763  00C6  30FF               	movlw	255
  3764  00C7  3D42               	addwfc	_filteredDutyPot+1,w
  3765  00C8  00F1               	movwf	___lmul@multiplier+1
  3766  00C9  01F2               	clrf	___lmul@multiplier+2
  3767  00CA  01F3               	clrf	___lmul@multiplier+3
  3768  00CB  0856               	movf	_setPeriod,w
  3769  00CC  00A6               	movwf	??_runPotScaling
  3770  00CD  01A7               	clrf	??_runPotScaling+1
  3771  00CE  01A8               	clrf	??_runPotScaling+2
  3772  00CF  01A9               	clrf	??_runPotScaling+3
  3773  00D0  0829               	movf	??_runPotScaling+3,w
  3774  00D1  00F7               	movwf	___lmul@multiplicand+3
  3775  00D2  0828               	movf	??_runPotScaling+2,w
  3776  00D3  00F6               	movwf	___lmul@multiplicand+2
  3777  00D4  0827               	movf	??_runPotScaling+1,w
  3778  00D5  00F5               	movwf	___lmul@multiplicand+1
  3779  00D6  0826               	movf	??_runPotScaling,w
  3780  00D7  00F4               	movwf	___lmul@multiplicand
  3781  00D8  3185  25C2  3180   	fcall	___lmul
  3782  00DB  0870               	movf	?___lmul,w
  3783  00DC  0020               	movlb	0	; select bank0
  3784  00DD  00AA               	movwf	??_runPotScaling+4
  3785  00DE  0871               	movf	?___lmul+1,w
  3786  00DF  00AB               	movwf	??_runPotScaling+5
  3787  00E0  0872               	movf	?___lmul+2,w
  3788  00E1  00AC               	movwf	??_runPotScaling+6
  3789  00E2  0873               	movf	?___lmul+3,w
  3790  00E3  00AD               	movwf	??_runPotScaling+7
  3791  00E4  3008               	movlw	8
  3792  00E5                     u181_25:
  3793  00E5  36AD               	lsrf	??_runPotScaling+7,f
  3794  00E6  0CAC               	rrf	??_runPotScaling+6,f
  3795  00E7  0CAB               	rrf	??_runPotScaling+5,f
  3796  00E8  0CAA               	rrf	??_runPotScaling+4,f
  3797  00E9                     u181_20:
  3798  00E9  0B89               	decfsz	9,f
  3799  00EA  28E5               	goto	u181_25
  3800  00EB  082B               	movf	??_runPotScaling+5,w
  3801  00EC  00CE               	movwf	_setDuty+1
  3802  00ED  082A               	movf	??_runPotScaling+4,w
  3803  00EE  00CD               	movwf	_setDuty
  3804                           
  3805                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3806  00EF  3000               	movlw	0
  3807  00F0  00F9               	movwf	___lldiv@divisor+3
  3808  00F1  3000               	movlw	0
  3809  00F2  00F8               	movwf	___lldiv@divisor+2
  3810  00F3  3000               	movlw	0
  3811  00F4  00F7               	movwf	___lldiv@divisor+1
  3812  00F5  3019               	movlw	25
  3813  00F6  00F6               	movwf	___lldiv@divisor
  3814  00F7  305A               	movlw	90
  3815  00F8  00F2               	movwf	___wmul@multiplicand
  3816  00F9  3000               	movlw	0
  3817  00FA  00F3               	movwf	___wmul@multiplicand+1
  3818  00FB  0856               	movf	_setPeriod,w
  3819  00FC  00A6               	movwf	??_runPotScaling
  3820  00FD  01A7               	clrf	??_runPotScaling+1
  3821  00FE  0826               	movf	??_runPotScaling,w
  3822  00FF  00F0               	movwf	___wmul@multiplier
  3823  0100  0827               	movf	??_runPotScaling+1,w
  3824  0101  00F1               	movwf	___wmul@multiplier+1
  3825  0102  3186  2670  3180   	fcall	___wmul
  3826  0105  0870               	movf	?___wmul,w
  3827  0106  0020               	movlb	0	; select bank0
  3828  0107  00A8               	movwf	??_runPotScaling+2
  3829  0108  0871               	movf	?___wmul+1,w
  3830  0109  00A9               	movwf	??_runPotScaling+3
  3831  010A  01AA               	clrf	??_runPotScaling+4
  3832  010B  01AB               	clrf	??_runPotScaling+5
  3833  010C  082B               	movf	??_runPotScaling+5,w
  3834  010D  00FD               	movwf	___lldiv@dividend+3
  3835  010E  082A               	movf	??_runPotScaling+4,w
  3836  010F  00FC               	movwf	___lldiv@dividend+2
  3837  0110  0829               	movf	??_runPotScaling+3,w
  3838  0111  00FB               	movwf	___lldiv@dividend+1
  3839  0112  0828               	movf	??_runPotScaling+2,w
  3840  0113  00FA               	movwf	___lldiv@dividend
  3841  0114  3184  24B1  3180   	fcall	___lldiv
  3842  0117  0877               	movf	?___lldiv+1,w
  3843  0118  0020               	movlb	0	; select bank0
  3844  0119  00AF               	movwf	runPotScaling@maxDuty+1
  3845  011A  0876               	movf	?___lldiv,w
  3846  011B  00AE               	movwf	runPotScaling@maxDuty
  3847                           
  3848                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3849  011C  3000               	movlw	0
  3850  011D  00F9               	movwf	___lldiv@divisor+3
  3851  011E  3000               	movlw	0
  3852  011F  00F8               	movwf	___lldiv@divisor+2
  3853  0120  3000               	movlw	0
  3854  0121  00F7               	movwf	___lldiv@divisor+1
  3855  0122  3019               	movlw	25
  3856  0123  00F6               	movwf	___lldiv@divisor
  3857  0124  300A               	movlw	10
  3858  0125  00F2               	movwf	___wmul@multiplicand
  3859  0126  3000               	movlw	0
  3860  0127  00F3               	movwf	___wmul@multiplicand+1
  3861  0128  0856               	movf	_setPeriod,w
  3862  0129  00A6               	movwf	??_runPotScaling
  3863  012A  01A7               	clrf	??_runPotScaling+1
  3864  012B  0826               	movf	??_runPotScaling,w
  3865  012C  00F0               	movwf	___wmul@multiplier
  3866  012D  0827               	movf	??_runPotScaling+1,w
  3867  012E  00F1               	movwf	___wmul@multiplier+1
  3868  012F  3186  2670  3180   	fcall	___wmul
  3869  0132  0870               	movf	?___wmul,w
  3870  0133  0020               	movlb	0	; select bank0
  3871  0134  00A8               	movwf	??_runPotScaling+2
  3872  0135  0871               	movf	?___wmul+1,w
  3873  0136  00A9               	movwf	??_runPotScaling+3
  3874  0137  01AA               	clrf	??_runPotScaling+4
  3875  0138  01AB               	clrf	??_runPotScaling+5
  3876  0139  082B               	movf	??_runPotScaling+5,w
  3877  013A  00FD               	movwf	___lldiv@dividend+3
  3878  013B  082A               	movf	??_runPotScaling+4,w
  3879  013C  00FC               	movwf	___lldiv@dividend+2
  3880  013D  0829               	movf	??_runPotScaling+3,w
  3881  013E  00FB               	movwf	___lldiv@dividend+1
  3882  013F  0828               	movf	??_runPotScaling+2,w
  3883  0140  00FA               	movwf	___lldiv@dividend
  3884  0141  3184  24B1  3180   	fcall	___lldiv
  3885  0144  0877               	movf	?___lldiv+1,w
  3886  0145  0020               	movlb	0	; select bank0
  3887  0146  00B1               	movwf	runPotScaling@minDuty+1
  3888  0147  0876               	movf	?___lldiv,w
  3889  0148  00B0               	movwf	runPotScaling@minDuty
  3890  0149                     i1l1938:
  3891                           
  3892                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3893  0149  084E               	movf	_setDuty+1,w
  3894  014A  022F               	subwf	runPotScaling@maxDuty+1,w
  3895  014B  1D03               	skipz
  3896  014C  294F               	goto	u182_25
  3897  014D  084D               	movf	_setDuty,w
  3898  014E  022E               	subwf	runPotScaling@maxDuty,w
  3899  014F                     u182_25:
  3900  014F  1803               	skipnc
  3901  0150  2952               	goto	u182_21
  3902  0151  2953               	goto	u182_20
  3903  0152                     u182_21:
  3904  0152  2957               	goto	i1l341
  3905  0153                     u182_20:
  3906  0153                     i1l1940:
  3907  0153  082F               	movf	runPotScaling@maxDuty+1,w
  3908  0154  00CE               	movwf	_setDuty+1
  3909  0155  082E               	movf	runPotScaling@maxDuty,w
  3910  0156  00CD               	movwf	_setDuty
  3911  0157                     i1l341:
  3912                           
  3913                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3914  0157  0831               	movf	runPotScaling@minDuty+1,w
  3915  0158  024E               	subwf	_setDuty+1,w
  3916  0159  1D03               	skipz
  3917  015A  295D               	goto	u183_25
  3918  015B  0830               	movf	runPotScaling@minDuty,w
  3919  015C  024D               	subwf	_setDuty,w
  3920  015D                     u183_25:
  3921  015D  1803               	skipnc
  3922  015E  2960               	goto	u183_21
  3923  015F  2961               	goto	u183_20
  3924  0160                     u183_21:
  3925  0160  2965               	goto	i1l1944
  3926  0161                     u183_20:
  3927  0161                     i1l1942:
  3928  0161  0831               	movf	runPotScaling@minDuty+1,w
  3929  0162  00CE               	movwf	_setDuty+1
  3930  0163  0830               	movf	runPotScaling@minDuty,w
  3931  0164  00CD               	movwf	_setDuty
  3932  0165                     i1l1944:
  3933                           
  3934                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3935  0165  084E               	movf	_setDuty+1,w
  3936  0166  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3937  0167  084D               	movf	_setDuty,w
  3938  0168  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3939  0169  0856               	movf	_setPeriod,w
  3940  016A  00A6               	movwf	??_runPotScaling
  3941  016B  0826               	movf	??_runPotScaling,w
  3942  016C  00F2               	movwf	setPWMDutyandPeriod@period
  3943  016D  3186  2622  3180   	fcall	_setPWMDutyandPeriod
  3944  0170                     i1l1946:
  3945                           
  3946                           ;Potentiometer.c: 72:         potSetCount = 0;
  3947  0170  0020               	movlb	0	; select bank0
  3948  0171  01D2               	clrf	_potSetCount
  3949  0172                     i1l343:
  3950  0172  0008               	return
  3951  0173                     __end_of_runPotScaling:
  3952                           
  3953                           	psect	text13
  3954  0622                     __ptext13:	
  3955 ;; *************** function _setPWMDutyandPeriod *****************
  3956 ;; Defined at:
  3957 ;;		line 48 in file "PWM.c"
  3958 ;; Parameters:    Size  Location     Type
  3959 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3960 ;;  period          1    2[COMMON] unsigned char 
  3961 ;; Auto vars:     Size  Location     Type
  3962 ;;		None
  3963 ;; Return value:  Size  Location     Type
  3964 ;;                  1    wreg      void 
  3965 ;; Registers used:
  3966 ;;		wreg, status,2, status,0
  3967 ;; Tracked objects:
  3968 ;;		On entry : 0/0
  3969 ;;		On exit  : 0/0
  3970 ;;		Unchanged: 0/0
  3971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3972 ;;      Params:         3       0       0       0       0       0
  3973 ;;      Locals:         0       0       0       0       0       0
  3974 ;;      Temps:          2       0       0       0       0       0
  3975 ;;      Totals:         5       0       0       0       0       0
  3976 ;;Total ram usage:        5 bytes
  3977 ;; Hardware stack levels used: 1
  3978 ;; This function calls:
  3979 ;;		Nothing
  3980 ;; This function is called by:
  3981 ;;		_Tick980Hz
  3982 ;;		_runPotScaling
  3983 ;; This function uses a non-reentrant model
  3984 ;;
  3985                           
  3986  0622                     _setPWMDutyandPeriod:	
  3987                           ;psect for function _setPWMDutyandPeriod
  3988                           
  3989  0622                     i1l1620:	
  3990                           ;incstack = 0
  3991                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3992                           
  3993                           
  3994                           ;PWM.c: 49:     PR2 = period;
  3995  0622  0872               	movf	setPWMDutyandPeriod@period,w
  3996  0623  0020               	movlb	0	; select bank0
  3997  0624  009B               	movwf	27	;volatile
  3998  0625                     i1l1622:
  3999                           
  4000                           ;PWM.c: 50:     CCPR1L = dutyCycle >> 2;
  4001  0625  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  4002  0626  00F4               	movwf	??_setPWMDutyandPeriod+1
  4003  0627  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4004  0628  00F3               	movwf	??_setPWMDutyandPeriod
  4005  0629  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4006  062A  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4007  062B  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4008  062C  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4009  062D  0873               	movf	??_setPWMDutyandPeriod,w
  4010  062E  0025               	movlb	5	; select bank5
  4011  062F  0091               	movwf	17	;volatile
  4012  0630                     i1l1624:
  4013                           
  4014                           ;PWM.c: 51:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4015  0630  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4016  0631  3901               	andlw	1
  4017  0632  00F3               	movwf	??_setPWMDutyandPeriod
  4018  0633  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4019  0634  0813               	movf	19,w	;volatile
  4020  0635  0673               	xorwf	??_setPWMDutyandPeriod,w
  4021  0636  39EF               	andlw	-17
  4022  0637  0673               	xorwf	??_setPWMDutyandPeriod,w
  4023  0638  0093               	movwf	19	;volatile
  4024                           
  4025                           ;PWM.c: 52:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4026  0639  3002               	movlw	2
  4027  063A  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4028  063B  00F3               	movwf	??_setPWMDutyandPeriod
  4029  063C  3000               	movlw	0
  4030  063D  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4031  063E  00F4               	movwf	??_setPWMDutyandPeriod+1
  4032  063F  3000               	movlw	0
  4033  0640  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4034  0641  3002               	movlw	2
  4035  0642  1903               	skipnz
  4036  0643  0273               	subwf	??_setPWMDutyandPeriod,w
  4037  0644  1803               	skipnc
  4038  0645  2E47               	goto	u104_21
  4039  0646  2E4A               	goto	u104_20
  4040  0647                     u104_21:
  4041  0647  0025               	movlb	5	; select bank5
  4042  0648  1693               	bsf	19,5	;volatile
  4043  0649  2E4C               	goto	u105_24
  4044  064A                     u104_20:
  4045  064A  0025               	movlb	5	; select bank5
  4046  064B  1293               	bcf	19,5	;volatile
  4047  064C                     u105_24:
  4048  064C                     i1l147:
  4049  064C  0008               	return
  4050  064D                     __end_of_setPWMDutyandPeriod:
  4051                           
  4052                           	psect	text14
  4053  0670                     __ptext14:	
  4054 ;; *************** function ___wmul *****************
  4055 ;; Defined at:
  4056 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  multiplier      2    0[COMMON] unsigned int 
  4059 ;;  multiplicand    2    2[COMMON] unsigned int 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  product         2    4[COMMON] unsigned int 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  2    0[COMMON] unsigned int 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4071 ;;      Params:         4       0       0       0       0       0
  4072 ;;      Locals:         2       0       0       0       0       0
  4073 ;;      Temps:          0       0       0       0       0       0
  4074 ;;      Totals:         6       0       0       0       0       0
  4075 ;;Total ram usage:        6 bytes
  4076 ;; Hardware stack levels used: 1
  4077 ;; This function calls:
  4078 ;;		Nothing
  4079 ;; This function is called by:
  4080 ;;		_runPotScaling
  4081 ;; This function uses a non-reentrant model
  4082 ;;
  4083                           
  4084  0670                     ___wmul:	
  4085                           ;psect for function ___wmul
  4086                           
  4087  0670                     i1l1804:	
  4088                           ;incstack = 0
  4089                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4090                           
  4091  0670  01F4               	clrf	___wmul@product
  4092  0671  01F5               	clrf	___wmul@product+1
  4093  0672                     i1l1806:
  4094  0672  1C70               	btfss	___wmul@multiplier,0
  4095  0673  2E75               	goto	u152_21
  4096  0674  2E76               	goto	u152_20
  4097  0675                     u152_21:
  4098  0675  2E7A               	goto	i1l552
  4099  0676                     u152_20:
  4100  0676                     i1l1808:
  4101  0676  0872               	movf	___wmul@multiplicand,w
  4102  0677  07F4               	addwf	___wmul@product,f
  4103  0678  0873               	movf	___wmul@multiplicand+1,w
  4104  0679  3DF5               	addwfc	___wmul@product+1,f
  4105  067A                     i1l552:
  4106  067A  3001               	movlw	1
  4107  067B                     u153_25:
  4108  067B  35F2               	lslf	___wmul@multiplicand,f
  4109  067C  0DF3               	rlf	___wmul@multiplicand+1,f
  4110  067D  0B89               	decfsz	9,f
  4111  067E  2E7B               	goto	u153_25
  4112  067F                     i1l1810:
  4113  067F  3001               	movlw	1
  4114  0680                     u154_25:
  4115  0680  36F1               	lsrf	___wmul@multiplier+1,f
  4116  0681  0CF0               	rrf	___wmul@multiplier,f
  4117  0682  0B89               	decfsz	9,f
  4118  0683  2E80               	goto	u154_25
  4119  0684                     i1l1812:
  4120  0684  0870               	movf	___wmul@multiplier,w
  4121  0685  0471               	iorwf	___wmul@multiplier+1,w
  4122  0686  1D03               	btfss	3,2
  4123  0687  2E89               	goto	u155_21
  4124  0688  2E8A               	goto	u155_20
  4125  0689                     u155_21:
  4126  0689  2E72               	goto	i1l1806
  4127  068A                     u155_20:
  4128  068A                     i1l1814:
  4129  068A  0875               	movf	___wmul@product+1,w
  4130  068B  00F1               	movwf	?___wmul+1
  4131  068C  0874               	movf	___wmul@product,w
  4132  068D  00F0               	movwf	?___wmul
  4133  068E                     i1l554:
  4134  068E  0008               	return
  4135  068F                     __end_of___wmul:
  4136                           
  4137                           	psect	text15
  4138  05C2                     __ptext15:	
  4139 ;; *************** function ___lmul *****************
  4140 ;; Defined at:
  4141 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;  multiplier      4    0[COMMON] unsigned long 
  4144 ;;  multiplicand    4    4[COMMON] unsigned long 
  4145 ;; Auto vars:     Size  Location     Type
  4146 ;;  product         4    8[COMMON] unsigned long 
  4147 ;; Return value:  Size  Location     Type
  4148 ;;                  4    0[COMMON] unsigned long 
  4149 ;; Registers used:
  4150 ;;		wreg, status,2, status,0
  4151 ;; Tracked objects:
  4152 ;;		On entry : 0/0
  4153 ;;		On exit  : 0/0
  4154 ;;		Unchanged: 0/0
  4155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4156 ;;      Params:         8       0       0       0       0       0
  4157 ;;      Locals:         4       0       0       0       0       0
  4158 ;;      Temps:          0       0       0       0       0       0
  4159 ;;      Totals:        12       0       0       0       0       0
  4160 ;;Total ram usage:       12 bytes
  4161 ;; Hardware stack levels used: 1
  4162 ;; This function calls:
  4163 ;;		Nothing
  4164 ;; This function is called by:
  4165 ;;		_runPotScaling
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169  05C2                     ___lmul:	
  4170                           ;psect for function ___lmul
  4171                           
  4172  05C2                     i1l1818:	
  4173                           ;incstack = 0
  4174                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4175                           
  4176  05C2  3000               	movlw	0
  4177  05C3  00FB               	movwf	___lmul@product+3
  4178  05C4  3000               	movlw	0
  4179  05C5  00FA               	movwf	___lmul@product+2
  4180  05C6  3000               	movlw	0
  4181  05C7  00F9               	movwf	___lmul@product+1
  4182  05C8  3000               	movlw	0
  4183  05C9  00F8               	movwf	___lmul@product
  4184  05CA                     i1l1820:
  4185  05CA  1C70               	btfss	___lmul@multiplier,0
  4186  05CB  2DCD               	goto	u156_21
  4187  05CC  2DCE               	goto	u156_20
  4188  05CD                     u156_21:
  4189  05CD  2DD6               	goto	i1l1824
  4190  05CE                     u156_20:
  4191  05CE                     i1l1822:
  4192  05CE  0874               	movf	___lmul@multiplicand,w
  4193  05CF  07F8               	addwf	___lmul@product,f
  4194  05D0  0875               	movf	___lmul@multiplicand+1,w
  4195  05D1  3DF9               	addwfc	___lmul@product+1,f
  4196  05D2  0876               	movf	___lmul@multiplicand+2,w
  4197  05D3  3DFA               	addwfc	___lmul@product+2,f
  4198  05D4  0877               	movf	___lmul@multiplicand+3,w
  4199  05D5  3DFB               	addwfc	___lmul@product+3,f
  4200  05D6                     i1l1824:
  4201  05D6  3001               	movlw	1
  4202  05D7                     u157_25:
  4203  05D7  35F4               	lslf	___lmul@multiplicand,f
  4204  05D8  0DF5               	rlf	___lmul@multiplicand+1,f
  4205  05D9  0DF6               	rlf	___lmul@multiplicand+2,f
  4206  05DA  0DF7               	rlf	___lmul@multiplicand+3,f
  4207  05DB  0B89               	decfsz	9,f
  4208  05DC  2DD7               	goto	u157_25
  4209  05DD                     i1l1826:
  4210  05DD  3001               	movlw	1
  4211  05DE                     u158_25:
  4212  05DE  36F3               	lsrf	___lmul@multiplier+3,f
  4213  05DF  0CF2               	rrf	___lmul@multiplier+2,f
  4214  05E0  0CF1               	rrf	___lmul@multiplier+1,f
  4215  05E1  0CF0               	rrf	___lmul@multiplier,f
  4216  05E2  0B89               	decfsz	9,f
  4217  05E3  2DDE               	goto	u158_25
  4218  05E4  0873               	movf	___lmul@multiplier+3,w
  4219  05E5  0472               	iorwf	___lmul@multiplier+2,w
  4220  05E6  0471               	iorwf	___lmul@multiplier+1,w
  4221  05E7  0470               	iorwf	___lmul@multiplier,w
  4222  05E8  1D03               	skipz
  4223  05E9  2DEB               	goto	u159_21
  4224  05EA  2DEC               	goto	u159_20
  4225  05EB                     u159_21:
  4226  05EB  2DCA               	goto	i1l1820
  4227  05EC                     u159_20:
  4228  05EC                     i1l1828:
  4229  05EC  087B               	movf	___lmul@product+3,w
  4230  05ED  00F3               	movwf	?___lmul+3
  4231  05EE  087A               	movf	___lmul@product+2,w
  4232  05EF  00F2               	movwf	?___lmul+2
  4233  05F0  0879               	movf	___lmul@product+1,w
  4234  05F1  00F1               	movwf	?___lmul+1
  4235  05F2  0878               	movf	___lmul@product,w
  4236  05F3  00F0               	movwf	?___lmul
  4237  05F4                     i1l566:
  4238  05F4  0008               	return
  4239  05F5                     __end_of___lmul:
  4240                           
  4241                           	psect	text16
  4242  04B1                     __ptext16:	
  4243 ;; *************** function ___lldiv *****************
  4244 ;; Defined at:
  4245 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4246 ;; Parameters:    Size  Location     Type
  4247 ;;  divisor         4    6[COMMON] unsigned long 
  4248 ;;  dividend        4   10[COMMON] unsigned long 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  quotient        4    1[BANK0 ] unsigned long 
  4251 ;;  counter         1    5[BANK0 ] unsigned char 
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  4    6[COMMON] unsigned long 
  4254 ;; Registers used:
  4255 ;;		wreg, status,2, status,0
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4261 ;;      Params:         8       0       0       0       0       0
  4262 ;;      Locals:         0       5       0       0       0       0
  4263 ;;      Temps:          0       1       0       0       0       0
  4264 ;;      Totals:         8       6       0       0       0       0
  4265 ;;Total ram usage:       14 bytes
  4266 ;; Hardware stack levels used: 1
  4267 ;; This function calls:
  4268 ;;		Nothing
  4269 ;; This function is called by:
  4270 ;;		_runPotScaling
  4271 ;; This function uses a non-reentrant model
  4272 ;;
  4273                           
  4274  04B1                     ___lldiv:	
  4275                           ;psect for function ___lldiv
  4276                           
  4277  04B1                     i1l1832:	
  4278                           ;incstack = 0
  4279                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4280                           
  4281  04B1  3000               	movlw	0
  4282  04B2  0020               	movlb	0	; select bank0
  4283  04B3  00A4               	movwf	___lldiv@quotient+3
  4284  04B4  3000               	movlw	0
  4285  04B5  00A3               	movwf	___lldiv@quotient+2
  4286  04B6  3000               	movlw	0
  4287  04B7  00A2               	movwf	___lldiv@quotient+1
  4288  04B8  3000               	movlw	0
  4289  04B9  00A1               	movwf	___lldiv@quotient
  4290  04BA  0879               	movf	___lldiv@divisor+3,w
  4291  04BB  0478               	iorwf	___lldiv@divisor+2,w
  4292  04BC  0477               	iorwf	___lldiv@divisor+1,w
  4293  04BD  0476               	iorwf	___lldiv@divisor,w
  4294  04BE  1903               	skipnz
  4295  04BF  2CC1               	goto	u160_21
  4296  04C0  2CC2               	goto	u160_20
  4297  04C1                     u160_21:
  4298  04C1  2D03               	goto	i1l1852
  4299  04C2                     u160_20:
  4300  04C2                     i1l1834:
  4301  04C2  01A5               	clrf	___lldiv@counter
  4302  04C3  0AA5               	incf	___lldiv@counter,f
  4303  04C4  2CD0               	goto	i1l1838
  4304  04C5                     i1l1836:
  4305  04C5  3001               	movlw	1
  4306  04C6                     u161_25:
  4307  04C6  35F6               	lslf	___lldiv@divisor,f
  4308  04C7  0DF7               	rlf	___lldiv@divisor+1,f
  4309  04C8  0DF8               	rlf	___lldiv@divisor+2,f
  4310  04C9  0DF9               	rlf	___lldiv@divisor+3,f
  4311  04CA  0B89               	decfsz	9,f
  4312  04CB  2CC6               	goto	u161_25
  4313  04CC  3001               	movlw	1
  4314  04CD  00A0               	movwf	??___lldiv
  4315  04CE  0820               	movf	??___lldiv,w
  4316  04CF  07A5               	addwf	___lldiv@counter,f
  4317  04D0                     i1l1838:
  4318  04D0  1FF9               	btfss	___lldiv@divisor+3,7
  4319  04D1  2CD3               	goto	u162_21
  4320  04D2  2CD4               	goto	u162_20
  4321  04D3                     u162_21:
  4322  04D3  2CC5               	goto	i1l1836
  4323  04D4                     u162_20:
  4324  04D4                     i1l1840:
  4325  04D4  3001               	movlw	1
  4326  04D5                     u163_25:
  4327  04D5  35A1               	lslf	___lldiv@quotient,f
  4328  04D6  0DA2               	rlf	___lldiv@quotient+1,f
  4329  04D7  0DA3               	rlf	___lldiv@quotient+2,f
  4330  04D8  0DA4               	rlf	___lldiv@quotient+3,f
  4331  04D9  0B89               	decfsz	9,f
  4332  04DA  2CD5               	goto	u163_25
  4333  04DB                     i1l1842:
  4334  04DB  0879               	movf	___lldiv@divisor+3,w
  4335  04DC  027D               	subwf	___lldiv@dividend+3,w
  4336  04DD  1D03               	skipz
  4337  04DE  2CE9               	goto	u164_25
  4338  04DF  0878               	movf	___lldiv@divisor+2,w
  4339  04E0  027C               	subwf	___lldiv@dividend+2,w
  4340  04E1  1D03               	skipz
  4341  04E2  2CE9               	goto	u164_25
  4342  04E3  0877               	movf	___lldiv@divisor+1,w
  4343  04E4  027B               	subwf	___lldiv@dividend+1,w
  4344  04E5  1D03               	skipz
  4345  04E6  2CE9               	goto	u164_25
  4346  04E7  0876               	movf	___lldiv@divisor,w
  4347  04E8  027A               	subwf	___lldiv@dividend,w
  4348  04E9                     u164_25:
  4349  04E9  1C03               	skipc
  4350  04EA  2CEC               	goto	u164_21
  4351  04EB  2CED               	goto	u164_20
  4352  04EC                     u164_21:
  4353  04EC  2CF6               	goto	i1l1848
  4354  04ED                     u164_20:
  4355  04ED                     i1l1844:
  4356  04ED  0876               	movf	___lldiv@divisor,w
  4357  04EE  02FA               	subwf	___lldiv@dividend,f
  4358  04EF  0877               	movf	___lldiv@divisor+1,w
  4359  04F0  3BFB               	subwfb	___lldiv@dividend+1,f
  4360  04F1  0878               	movf	___lldiv@divisor+2,w
  4361  04F2  3BFC               	subwfb	___lldiv@dividend+2,f
  4362  04F3  0879               	movf	___lldiv@divisor+3,w
  4363  04F4  3BFD               	subwfb	___lldiv@dividend+3,f
  4364  04F5                     i1l1846:
  4365  04F5  1421               	bsf	___lldiv@quotient,0
  4366  04F6                     i1l1848:
  4367  04F6  3001               	movlw	1
  4368  04F7                     u165_25:
  4369  04F7  36F9               	lsrf	___lldiv@divisor+3,f
  4370  04F8  0CF8               	rrf	___lldiv@divisor+2,f
  4371  04F9  0CF7               	rrf	___lldiv@divisor+1,f
  4372  04FA  0CF6               	rrf	___lldiv@divisor,f
  4373  04FB  0B89               	decfsz	9,f
  4374  04FC  2CF7               	goto	u165_25
  4375  04FD                     i1l1850:
  4376  04FD  3001               	movlw	1
  4377  04FE  02A5               	subwf	___lldiv@counter,f
  4378  04FF  1D03               	btfss	3,2
  4379  0500  2D02               	goto	u166_21
  4380  0501  2D03               	goto	u166_20
  4381  0502                     u166_21:
  4382  0502  2CD4               	goto	i1l1840
  4383  0503                     u166_20:
  4384  0503                     i1l1852:
  4385  0503  0824               	movf	___lldiv@quotient+3,w
  4386  0504  00F9               	movwf	?___lldiv+3
  4387  0505  0823               	movf	___lldiv@quotient+2,w
  4388  0506  00F8               	movwf	?___lldiv+2
  4389  0507  0822               	movf	___lldiv@quotient+1,w
  4390  0508  00F7               	movwf	?___lldiv+1
  4391  0509  0821               	movf	___lldiv@quotient,w
  4392  050A  00F6               	movwf	?___lldiv
  4393  050B                     i1l588:
  4394  050B  0008               	return
  4395  050C                     __end_of___lldiv:
  4396                           
  4397                           	psect	text17
  4398  050C                     __ptext17:	
  4399 ;; *************** function _readFilteredFreqPot *****************
  4400 ;; Defined at:
  4401 ;;		line 39 in file "Potentiometer.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;  i               1    8[BANK0 ] unsigned char 
  4406 ;;  i               1    9[BANK0 ] unsigned char 
  4407 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  2   11[COMMON] unsigned short 
  4410 ;; Registers used:
  4411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4417 ;;      Params:         2       0       0       0       0       0
  4418 ;;      Locals:         0       6       0       0       0       0
  4419 ;;      Temps:          0       4       0       0       0       0
  4420 ;;      Totals:         2      10       0       0       0       0
  4421 ;;Total ram usage:       12 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 1
  4424 ;; This function calls:
  4425 ;;		_readADCRaw
  4426 ;; This function is called by:
  4427 ;;		_Tick980Hz
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431  050C                     _readFilteredFreqPot:	
  4432                           ;psect for function _readFilteredFreqPot
  4433                           
  4434  050C                     i1l1902:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4437                           
  4438                           
  4439                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4440  050C  0020               	movlb	0	; select bank0
  4441  050D  01A9               	clrf	readFilteredFreqPot@i
  4442  050E                     i1l1908:
  4443  050E  3529               	lslf	readFilteredFreqPot@i,w
  4444  050F  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4445  0510  0086               	movwf	6
  4446  0511  3001               	movlw	1	; select bank2/3
  4447  0512  0087               	movwf	7
  4448  0513  3529               	lslf	readFilteredFreqPot@i,w
  4449  0514  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4450  0515  0084               	movwf	4
  4451  0516  3001               	movlw	1	; select bank2/3
  4452  0517  0085               	movwf	5
  4453  0518  3F40               	moviw [0]fsr1
  4454  0519  3F80               	movwi [0]fsr0
  4455  051A  3F41               	moviw [1]fsr1
  4456  051B  3F81               	movwi [1]fsr0
  4457  051C                     i1l1910:
  4458  051C  3001               	movlw	1
  4459  051D  00A0               	movwf	??_readFilteredFreqPot
  4460  051E  0820               	movf	??_readFilteredFreqPot,w
  4461  051F  07A9               	addwf	readFilteredFreqPot@i,f
  4462  0520                     i1l1912:
  4463  0520  300F               	movlw	15
  4464  0521  0229               	subwf	readFilteredFreqPot@i,w
  4465  0522  1C03               	skipc
  4466  0523  2D25               	goto	u176_21
  4467  0524  2D26               	goto	u176_20
  4468  0525                     u176_21:
  4469  0525  2D0E               	goto	i1l1908
  4470  0526                     u176_20:
  4471  0526                     i1l1914:
  4472                           
  4473                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4474  0526  300A               	movlw	10
  4475  0527  3183  2334  3185   	fcall	_readADCRaw
  4476  052A  0871               	movf	?_readADCRaw+1,w
  4477  052B  0022               	movlb	2	; select bank2
  4478  052C  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4479  052D  0870               	movf	?_readADCRaw,w
  4480  052E  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4481  052F                     i1l1916:
  4482                           
  4483                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4484  052F  3000               	movlw	0
  4485  0530  0020               	movlb	0	; select bank0
  4486  0531  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4487  0532  3000               	movlw	0
  4488  0533  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4489  0534  3000               	movlw	0
  4490  0535  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4491  0536  3000               	movlw	0
  4492  0537  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4493  0538                     i1l1918:
  4494                           
  4495                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4496  0538  01A8               	clrf	readFilteredFreqPot@i_708
  4497  0539                     i1l1924:
  4498  0539  3528               	lslf	readFilteredFreqPot@i_708,w
  4499  053A  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4500  053B  0086               	movwf	6
  4501  053C  3001               	movlw	1	; select bank2/3
  4502  053D  0087               	movwf	7
  4503  053E  3F40               	moviw [0]fsr1
  4504  053F  00A0               	movwf	??_readFilteredFreqPot
  4505  0540  3F41               	moviw [1]fsr1
  4506  0541  00A1               	movwf	??_readFilteredFreqPot+1
  4507  0542  0820               	movf	??_readFilteredFreqPot,w
  4508  0543  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4509  0544  0821               	movf	??_readFilteredFreqPot+1,w
  4510  0545  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4511  0546  3000               	movlw	0
  4512  0547  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4513  0548  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4514  0549                     i1l1926:
  4515  0549  3001               	movlw	1
  4516  054A  00A0               	movwf	??_readFilteredFreqPot
  4517  054B  0820               	movf	??_readFilteredFreqPot,w
  4518  054C  07A8               	addwf	readFilteredFreqPot@i_708,f
  4519  054D                     i1l1928:
  4520  054D  3010               	movlw	16
  4521  054E  0228               	subwf	readFilteredFreqPot@i_708,w
  4522  054F  1C03               	skipc
  4523  0550  2D52               	goto	u177_21
  4524  0551  2D53               	goto	u177_20
  4525  0552                     u177_21:
  4526  0552  2D39               	goto	i1l1924
  4527  0553                     u177_20:
  4528  0553                     i1l1930:
  4529                           
  4530                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4531  0553  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4532  0554  00A0               	movwf	??_readFilteredFreqPot
  4533  0555  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4534  0556  00A1               	movwf	??_readFilteredFreqPot+1
  4535  0557  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4536  0558  00A2               	movwf	??_readFilteredFreqPot+2
  4537  0559  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4538  055A  00A3               	movwf	??_readFilteredFreqPot+3
  4539  055B  3004               	movlw	4
  4540  055C                     u178_25:
  4541  055C  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4542  055D  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4543  055E  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4544  055F  0CA0               	rrf	??_readFilteredFreqPot,f
  4545  0560                     u178_20:
  4546  0560  0B89               	decfsz	9,f
  4547  0561  2D5C               	goto	u178_25
  4548  0562  0821               	movf	??_readFilteredFreqPot+1,w
  4549  0563  00FC               	movwf	?_readFilteredFreqPot+1
  4550  0564  0820               	movf	??_readFilteredFreqPot,w
  4551  0565  00FB               	movwf	?_readFilteredFreqPot
  4552  0566                     i1l337:
  4553  0566  0008               	return
  4554  0567                     __end_of_readFilteredFreqPot:
  4555                           
  4556                           	psect	text18
  4557  0567                     __ptext18:	
  4558 ;; *************** function _readFilteredDutyPot *****************
  4559 ;; Defined at:
  4560 ;;		line 25 in file "Potentiometer.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;  i               1    8[BANK0 ] unsigned char 
  4565 ;;  i               1    9[BANK0 ] unsigned char 
  4566 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2   11[COMMON] unsigned short 
  4569 ;; Registers used:
  4570 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4576 ;;      Params:         2       0       0       0       0       0
  4577 ;;      Locals:         0       6       0       0       0       0
  4578 ;;      Temps:          0       4       0       0       0       0
  4579 ;;      Totals:         2      10       0       0       0       0
  4580 ;;Total ram usage:       12 bytes
  4581 ;; Hardware stack levels used: 1
  4582 ;; Hardware stack levels required when called: 1
  4583 ;; This function calls:
  4584 ;;		_readADCRaw
  4585 ;; This function is called by:
  4586 ;;		_Tick980Hz
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590  0567                     _readFilteredDutyPot:	
  4591                           ;psect for function _readFilteredDutyPot
  4592                           
  4593  0567                     i1l1870:	
  4594                           ;incstack = 0
  4595                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4596                           
  4597                           
  4598                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4599  0567  0020               	movlb	0	; select bank0
  4600  0568  01A9               	clrf	readFilteredDutyPot@i
  4601  0569                     i1l1876:
  4602  0569  3529               	lslf	readFilteredDutyPot@i,w
  4603  056A  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4604  056B  0086               	movwf	6
  4605  056C  3001               	movlw	1	; select bank2/3
  4606  056D  0087               	movwf	7
  4607  056E  3529               	lslf	readFilteredDutyPot@i,w
  4608  056F  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4609  0570  0084               	movwf	4
  4610  0571  3001               	movlw	1	; select bank2/3
  4611  0572  0085               	movwf	5
  4612  0573  3F40               	moviw [0]fsr1
  4613  0574  3F80               	movwi [0]fsr0
  4614  0575  3F41               	moviw [1]fsr1
  4615  0576  3F81               	movwi [1]fsr0
  4616  0577                     i1l1878:
  4617  0577  3001               	movlw	1
  4618  0578  00A0               	movwf	??_readFilteredDutyPot
  4619  0579  0820               	movf	??_readFilteredDutyPot,w
  4620  057A  07A9               	addwf	readFilteredDutyPot@i,f
  4621  057B                     i1l1880:
  4622  057B  300F               	movlw	15
  4623  057C  0229               	subwf	readFilteredDutyPot@i,w
  4624  057D  1C03               	skipc
  4625  057E  2D80               	goto	u173_21
  4626  057F  2D81               	goto	u173_20
  4627  0580                     u173_21:
  4628  0580  2D69               	goto	i1l1876
  4629  0581                     u173_20:
  4630  0581                     i1l1882:
  4631                           
  4632                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4633  0581  3009               	movlw	9
  4634  0582  3183  2334  3185   	fcall	_readADCRaw
  4635  0585  0871               	movf	?_readADCRaw+1,w
  4636  0586  0022               	movlb	2	; select bank2
  4637  0587  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4638  0588  0870               	movf	?_readADCRaw,w
  4639  0589  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4640  058A                     i1l1884:
  4641                           
  4642                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4643  058A  3000               	movlw	0
  4644  058B  0020               	movlb	0	; select bank0
  4645  058C  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4646  058D  3000               	movlw	0
  4647  058E  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4648  058F  3000               	movlw	0
  4649  0590  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4650  0591  3000               	movlw	0
  4651  0592  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4652  0593                     i1l1886:
  4653                           
  4654                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4655  0593  01A8               	clrf	readFilteredDutyPot@i_704
  4656  0594                     i1l1892:
  4657  0594  3528               	lslf	readFilteredDutyPot@i_704,w
  4658  0595  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4659  0596  0086               	movwf	6
  4660  0597  3001               	movlw	1	; select bank2/3
  4661  0598  0087               	movwf	7
  4662  0599  3F40               	moviw [0]fsr1
  4663  059A  00A0               	movwf	??_readFilteredDutyPot
  4664  059B  3F41               	moviw [1]fsr1
  4665  059C  00A1               	movwf	??_readFilteredDutyPot+1
  4666  059D  0820               	movf	??_readFilteredDutyPot,w
  4667  059E  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4668  059F  0821               	movf	??_readFilteredDutyPot+1,w
  4669  05A0  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4670  05A1  3000               	movlw	0
  4671  05A2  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4672  05A3  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4673  05A4                     i1l1894:
  4674  05A4  3001               	movlw	1
  4675  05A5  00A0               	movwf	??_readFilteredDutyPot
  4676  05A6  0820               	movf	??_readFilteredDutyPot,w
  4677  05A7  07A8               	addwf	readFilteredDutyPot@i_704,f
  4678  05A8                     i1l1896:
  4679  05A8  3010               	movlw	16
  4680  05A9  0228               	subwf	readFilteredDutyPot@i_704,w
  4681  05AA  1C03               	skipc
  4682  05AB  2DAD               	goto	u174_21
  4683  05AC  2DAE               	goto	u174_20
  4684  05AD                     u174_21:
  4685  05AD  2D94               	goto	i1l1892
  4686  05AE                     u174_20:
  4687  05AE                     i1l1898:
  4688                           
  4689                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4690  05AE  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4691  05AF  00A0               	movwf	??_readFilteredDutyPot
  4692  05B0  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4693  05B1  00A1               	movwf	??_readFilteredDutyPot+1
  4694  05B2  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4695  05B3  00A2               	movwf	??_readFilteredDutyPot+2
  4696  05B4  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4697  05B5  00A3               	movwf	??_readFilteredDutyPot+3
  4698  05B6  3004               	movlw	4
  4699  05B7                     u175_25:
  4700  05B7  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4701  05B8  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4702  05B9  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4703  05BA  0CA0               	rrf	??_readFilteredDutyPot,f
  4704  05BB                     u175_20:
  4705  05BB  0B89               	decfsz	9,f
  4706  05BC  2DB7               	goto	u175_25
  4707  05BD  0821               	movf	??_readFilteredDutyPot+1,w
  4708  05BE  00FC               	movwf	?_readFilteredDutyPot+1
  4709  05BF  0820               	movf	??_readFilteredDutyPot,w
  4710  05C0  00FB               	movwf	?_readFilteredDutyPot
  4711  05C1                     i1l330:
  4712  05C1  0008               	return
  4713  05C2                     __end_of_readFilteredDutyPot:
  4714                           
  4715                           	psect	text19
  4716  0334                     __ptext19:	
  4717 ;; *************** function _readADCRaw *****************
  4718 ;; Defined at:
  4719 ;;		line 71 in file "ADC.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  gpioNumber      1    wreg     const enum E2798
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4724 ;;  i               1    9[COMMON] unsigned char 
  4725 ;;  i               1    8[COMMON] unsigned char 
  4726 ;;  returnValue     2    4[COMMON] unsigned int 
  4727 ;;  gpioValid       1    7[COMMON] unsigned char 
  4728 ;;  channel         1    6[COMMON] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  2    0[COMMON] unsigned short 
  4731 ;; Registers used:
  4732 ;;		wreg, status,2, status,0
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4738 ;;      Params:         2       0       0       0       0       0
  4739 ;;      Locals:         7       0       0       0       0       0
  4740 ;;      Temps:          2       0       0       0       0       0
  4741 ;;      Totals:        11       0       0       0       0       0
  4742 ;;Total ram usage:       11 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; This function calls:
  4745 ;;		Nothing
  4746 ;; This function is called by:
  4747 ;;		_readFilteredDutyPot
  4748 ;;		_readFilteredFreqPot
  4749 ;;		_readFilteredIDS
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753  0334                     _readADCRaw:	
  4754                           ;psect for function _readADCRaw
  4755                           
  4756                           
  4757                           ;incstack = 0
  4758                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4759                           ;readADCRaw@gpioNumber stored from wreg
  4760  0334  00FA               	movwf	readADCRaw@gpioNumber
  4761  0335                     i1l1710:
  4762                           
  4763                           ;ADC.c: 72:     uint8_t channel = 0;
  4764  0335  01F6               	clrf	readADCRaw@channel
  4765                           
  4766                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4767  0336  01F7               	clrf	readADCRaw@gpioValid
  4768  0337                     i1l1712:
  4769                           
  4770                           ;ADC.c: 75:     if(gpioNumber < 4){
  4771  0337  3004               	movlw	4
  4772  0338  027A               	subwf	readADCRaw@gpioNumber,w
  4773  0339  1803               	skipnc
  4774  033A  2B3C               	goto	u136_21
  4775  033B  2B3D               	goto	u136_20
  4776  033C                     u136_21:
  4777  033C  2B43               	goto	i1l212
  4778  033D                     u136_20:
  4779  033D                     i1l1714:
  4780                           
  4781                           ;ADC.c: 76:         channel = gpioNumber;
  4782  033D  087A               	movf	readADCRaw@gpioNumber,w
  4783  033E  00F2               	movwf	??_readADCRaw
  4784  033F  0872               	movf	??_readADCRaw,w
  4785  0340  00F6               	movwf	readADCRaw@channel
  4786  0341                     i1l1716:
  4787                           
  4788                           ;ADC.c: 77:         gpioValid = 1;
  4789  0341  01F7               	clrf	readADCRaw@gpioValid
  4790  0342  0AF7               	incf	readADCRaw@gpioValid,f
  4791  0343                     i1l212:	
  4792                           ;ADC.c: 78:     }
  4793                           
  4794                           
  4795                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4796  0343  3009               	movlw	9
  4797  0344  027A               	subwf	readADCRaw@gpioNumber,w
  4798  0345  1C03               	skipc
  4799  0346  2B48               	goto	u137_21
  4800  0347  2B49               	goto	u137_20
  4801  0348                     u137_21:
  4802  0348  2B56               	goto	i1l213
  4803  0349                     u137_20:
  4804  0349                     i1l1718:
  4805  0349  3010               	movlw	16
  4806  034A  027A               	subwf	readADCRaw@gpioNumber,w
  4807  034B  1803               	skipnc
  4808  034C  2B4E               	goto	u138_21
  4809  034D  2B4F               	goto	u138_20
  4810  034E                     u138_21:
  4811  034E  2B56               	goto	i1l213
  4812  034F                     u138_20:
  4813  034F                     i1l1720:
  4814                           
  4815                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4816  034F  087A               	movf	readADCRaw@gpioNumber,w
  4817  0350  3C14               	sublw	20
  4818  0351  00F2               	movwf	??_readADCRaw
  4819  0352  0872               	movf	??_readADCRaw,w
  4820  0353  00F6               	movwf	readADCRaw@channel
  4821  0354                     i1l1722:
  4822                           
  4823                           ;ADC.c: 81:         gpioValid = 1;
  4824  0354  01F7               	clrf	readADCRaw@gpioValid
  4825  0355  0AF7               	incf	readADCRaw@gpioValid,f
  4826  0356                     i1l213:	
  4827                           ;ADC.c: 82:     }
  4828                           
  4829                           
  4830                           ;ADC.c: 83:     if(gpioValid){
  4831  0356  0877               	movf	readADCRaw@gpioValid,w
  4832  0357  1903               	btfsc	3,2
  4833  0358  2B5A               	goto	u139_21
  4834  0359  2B5B               	goto	u139_20
  4835  035A                     u139_21:
  4836  035A  2B95               	goto	i1l223
  4837  035B                     u139_20:
  4838  035B                     i1l1724:
  4839                           
  4840                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4841  035B  0021               	movlb	1	; select bank1
  4842  035C  081D               	movf	29,w	;volatile
  4843  035D                     i1l1726:
  4844                           
  4845                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4846  035D  3083               	movlw	131
  4847  035E  00F2               	movwf	??_readADCRaw
  4848  035F  0872               	movf	??_readADCRaw,w
  4849  0360  059D               	andwf	29,f	;volatile
  4850  0361                     i1l1728:
  4851                           
  4852                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4853  0361  0876               	movf	readADCRaw@channel,w	;volatile
  4854  0362  00F2               	movwf	??_readADCRaw
  4855  0363  3001               	movlw	1
  4856  0364                     u140_25:
  4857  0364  35F2               	lslf	??_readADCRaw,f
  4858  0365  3EFF               	addlw	-1
  4859  0366  1D03               	skipz
  4860  0367  2B64               	goto	u140_25
  4861  0368  3572               	lslf	??_readADCRaw,w
  4862  0369  00F3               	movwf	??_readADCRaw+1
  4863  036A  0873               	movf	??_readADCRaw+1,w
  4864  036B  049D               	iorwf	29,f	;volatile
  4865  036C                     i1l1730:
  4866                           
  4867                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4868  036C  01F8               	clrf	readADCRaw@i
  4869  036D                     i1l1736:
  4870  036D  3001               	movlw	1
  4871  036E  00F2               	movwf	??_readADCRaw
  4872  036F  0872               	movf	??_readADCRaw,w
  4873  0370  07F8               	addwf	readADCRaw@i,f
  4874  0371                     i1l1738:
  4875  0371  3008               	movlw	8
  4876  0372  0278               	subwf	readADCRaw@i,w
  4877  0373  1C03               	skipc
  4878  0374  2B76               	goto	u141_21
  4879  0375  2B77               	goto	u141_20
  4880  0376                     u141_21:
  4881  0376  2B6D               	goto	i1l1736
  4882  0377                     u141_20:
  4883  0377                     i1l217:
  4884                           
  4885                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4886  0377  0021               	movlb	1	; select bank1
  4887  0378  149D               	bsf	29,1	;volatile
  4888  0379                     i1l218:	
  4889                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4890                           
  4891  0379  189D               	btfsc	29,1	;volatile
  4892  037A  2B7C               	goto	u142_21
  4893  037B  2B7D               	goto	u142_20
  4894  037C                     u142_21:
  4895  037C  2B79               	goto	i1l218
  4896  037D                     u142_20:
  4897  037D                     i1l1740:
  4898                           
  4899                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4900  037D  081C               	movf	28,w	;volatile
  4901  037E  00F5               	movwf	readADCRaw@returnValue+1
  4902  037F  081B               	movf	27,w	;volatile
  4903  0380  00F4               	movwf	readADCRaw@returnValue
  4904  0381                     i1l1742:
  4905                           
  4906                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4907  0381  3083               	movlw	131
  4908  0382  00F2               	movwf	??_readADCRaw
  4909  0383  0872               	movf	??_readADCRaw,w
  4910  0384  059D               	andwf	29,f	;volatile
  4911  0385                     i1l1744:
  4912                           
  4913                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4914  0385  159D               	bsf	29,3	;volatile
  4915  0386                     i1l1746:
  4916                           
  4917                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4918  0386  01F9               	clrf	readADCRaw@i_616
  4919  0387                     i1l1752:
  4920  0387  3001               	movlw	1
  4921  0388  00F2               	movwf	??_readADCRaw
  4922  0389  0872               	movf	??_readADCRaw,w
  4923  038A  07F9               	addwf	readADCRaw@i_616,f
  4924  038B                     i1l1754:
  4925  038B  3008               	movlw	8
  4926  038C  0279               	subwf	readADCRaw@i_616,w
  4927  038D  1C03               	skipc
  4928  038E  2B90               	goto	u143_21
  4929  038F  2B91               	goto	u143_20
  4930  0390                     u143_21:
  4931  0390  2B87               	goto	i1l1752
  4932  0391                     u143_20:
  4933  0391                     i1l1756:
  4934                           
  4935                           ;ADC.c: 97:             return returnValue;
  4936  0391  0875               	movf	readADCRaw@returnValue+1,w
  4937  0392  00F1               	movwf	?_readADCRaw+1
  4938  0393  0874               	movf	readADCRaw@returnValue,w
  4939  0394  00F0               	movwf	?_readADCRaw
  4940  0395                     i1l223:
  4941  0395  0008               	return
  4942  0396                     __end_of_readADCRaw:
  4943                           
  4944                           	psect	text20
  4945  05F5                     __ptext20:	
  4946 ;; *************** function _currentTripRead *****************
  4947 ;; Defined at:
  4948 ;;		line 30 in file "CurrentSensor.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;		None
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;		None
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      _Bool 
  4955 ;; Registers used:
  4956 ;;		wreg, status,2, status,0, pclath, cstack
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4962 ;;      Params:         0       0       0       0       0       0
  4963 ;;      Locals:         1       0       0       0       0       0
  4964 ;;      Temps:          1       0       0       0       0       0
  4965 ;;      Totals:         2       0       0       0       0       0
  4966 ;;Total ram usage:        2 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; Hardware stack levels required when called: 1
  4969 ;; This function calls:
  4970 ;;		_readGPIO
  4971 ;; This function is called by:
  4972 ;;		_Tick980Hz
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976  05F5                     _currentTripRead:	
  4977                           ;psect for function _currentTripRead
  4978                           
  4979  05F5                     i1l1856:	
  4980                           ;incstack = 0
  4981                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4982                           
  4983                           
  4984                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  4985  05F5  3001               	movlw	1
  4986  05F6  3184  2455  3185   	fcall	_readGPIO
  4987  05F9  3A01               	xorlw	1
  4988  05FA  1D03               	skipz
  4989  05FB  2DFD               	goto	u167_21
  4990  05FC  2DFF               	goto	u167_20
  4991  05FD                     u167_21:
  4992  05FD  3001               	movlw	1
  4993  05FE  2E00               	goto	u168_20
  4994  05FF                     u167_20:
  4995  05FF  3000               	movlw	0
  4996  0600                     u168_20:
  4997  0600  00FB               	movwf	??_currentTripRead
  4998  0601  087B               	movf	??_currentTripRead,w
  4999  0602  0020               	movlb	0	; select bank0
  5000  0603  00D4               	movwf	_tripIDS
  5001                           
  5002                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  5003  0604  3003               	movlw	3
  5004  0605  3184  2455  3185   	fcall	_readGPIO
  5005  0608  3A01               	xorlw	1
  5006  0609  1D03               	skipz
  5007  060A  2E0C               	goto	u169_21
  5008  060B  2E0E               	goto	u169_20
  5009  060C                     u169_21:
  5010  060C  3001               	movlw	1
  5011  060D  2E0F               	goto	u170_20
  5012  060E                     u169_20:
  5013  060E  3000               	movlw	0
  5014  060F                     u170_20:
  5015  060F  00FB               	movwf	??_currentTripRead
  5016  0610  087B               	movf	??_currentTripRead,w
  5017  0611  0020               	movlb	0	; select bank0
  5018  0612  00D3               	movwf	_tripIL
  5019  0613                     i1l1858:
  5020                           
  5021                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  5022  0613  01FC               	clrf	_currentTripRead$749
  5023  0614  0AFC               	incf	_currentTripRead$749,f
  5024  0615                     i1l1860:
  5025  0615  0853               	movf	_tripIL,w
  5026  0616  1D03               	btfss	3,2
  5027  0617  2E19               	goto	u171_21
  5028  0618  2E1A               	goto	u171_20
  5029  0619                     u171_21:
  5030  0619  2E20               	goto	i1l1866
  5031  061A                     u171_20:
  5032  061A                     i1l1862:
  5033  061A  0854               	movf	_tripIDS,w
  5034  061B  1D03               	btfss	3,2
  5035  061C  2E1E               	goto	u172_21
  5036  061D  2E1F               	goto	u172_20
  5037  061E                     u172_21:
  5038  061E  2E20               	goto	i1l1866
  5039  061F                     u172_20:
  5040  061F                     i1l1864:
  5041  061F  01FC               	clrf	_currentTripRead$749
  5042  0620                     i1l1866:
  5043  0620  087C               	movf	_currentTripRead$749,w
  5044  0621                     i1l385:
  5045  0621  0008               	return
  5046  0622                     __end_of_currentTripRead:
  5047                           
  5048                           	psect	text21
  5049  0455                     __ptext21:	
  5050 ;; *************** function _readGPIO *****************
  5051 ;; Defined at:
  5052 ;;		line 79 in file "GPIO.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;  gpioNumber      1    wreg     const enum E2798
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  gpioNumber      1    9[COMMON] const enum E2798
  5057 ;;  returnValueB    1    6[COMMON] unsigned char 
  5058 ;;  maskB           1    5[COMMON] unsigned char 
  5059 ;;  returnValue     1    4[COMMON] unsigned char 
  5060 ;;  check1          1    3[COMMON] unsigned char 
  5061 ;;  read            1    2[COMMON] unsigned char 
  5062 ;;  portNumber      1   10[COMMON] unsigned char 
  5063 ;;  portType        1    8[COMMON] unsigned char 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  1    wreg      _Bool 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5073 ;;      Params:         0       0       0       0       0       0
  5074 ;;      Locals:         9       0       0       0       0       0
  5075 ;;      Temps:          2       0       0       0       0       0
  5076 ;;      Totals:        11       0       0       0       0       0
  5077 ;;Total ram usage:       11 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; This function calls:
  5080 ;;		Nothing
  5081 ;; This function is called by:
  5082 ;;		_currentTripRead
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086  0455                     _readGPIO:	
  5087                           ;psect for function _readGPIO
  5088                           
  5089                           
  5090                           ;incstack = 0
  5091                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5092                           ;readGPIO@gpioNumber stored from wreg
  5093  0455  00F9               	movwf	readGPIO@gpioNumber
  5094  0456                     i1l1760:
  5095                           
  5096                           ;GPIO.c: 81:     uint8_t portType = 0;
  5097  0456  01F8               	clrf	readGPIO@portType
  5098  0457                     i1l1762:
  5099                           
  5100                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5101  0457  3008               	movlw	8
  5102  0458  0279               	subwf	readGPIO@gpioNumber,w
  5103  0459  1C03               	skipc
  5104  045A  2C5C               	goto	u144_21
  5105  045B  2C5D               	goto	u144_20
  5106  045C                     u144_21:
  5107  045C  2C65               	goto	i1l1768
  5108  045D                     u144_20:
  5109  045D                     i1l1764:
  5110                           
  5111                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5112  045D  0879               	movf	readGPIO@gpioNumber,w
  5113  045E  3EF8               	addlw	248
  5114  045F  00F0               	movwf	??_readGPIO
  5115  0460  0870               	movf	??_readGPIO,w
  5116  0461  00FA               	movwf	readGPIO@portNumber
  5117  0462                     i1l1766:
  5118                           
  5119                           ;GPIO.c: 84:         portType = 1;
  5120  0462  01F8               	clrf	readGPIO@portType
  5121  0463  0AF8               	incf	readGPIO@portType,f
  5122                           
  5123                           ;GPIO.c: 85:     }
  5124  0464  2C6A               	goto	i1l1772
  5125  0465                     i1l1768:
  5126                           
  5127                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5128  0465  0879               	movf	readGPIO@gpioNumber,w
  5129  0466  00F0               	movwf	??_readGPIO
  5130  0467  0870               	movf	??_readGPIO,w
  5131  0468  00FA               	movwf	readGPIO@portNumber
  5132  0469                     i1l1770:
  5133                           
  5134                           ;GPIO.c: 88:         portType = 0;
  5135  0469  01F8               	clrf	readGPIO@portType
  5136  046A                     i1l1772:
  5137                           
  5138                           ;GPIO.c: 91:     if(portType == 0){
  5139  046A  0878               	movf	readGPIO@portType,w
  5140  046B  1D03               	btfss	3,2
  5141  046C  2C6E               	goto	u145_21
  5142  046D  2C6F               	goto	u145_20
  5143  046E                     u145_21:
  5144  046E  2C86               	goto	i1l1786
  5145  046F                     u145_20:
  5146  046F                     i1l1774:
  5147                           
  5148                           ;GPIO.c: 92:         uint8_t read = PORTA;
  5149  046F  0020               	movlb	0	; select bank0
  5150  0470  080C               	movf	12,w	;volatile
  5151  0471  00F0               	movwf	??_readGPIO
  5152  0472  0870               	movf	??_readGPIO,w
  5153  0473  00F2               	movwf	readGPIO@read
  5154  0474                     i1l1776:
  5155                           
  5156                           ;GPIO.c: 93:         uint8_t check1 = (read >> ((uint8_t) portNumber));
  5157  0474  0872               	movf	readGPIO@read,w
  5158  0475  00F0               	movwf	??_readGPIO
  5159  0476  0A7A               	incf	readGPIO@portNumber,w
  5160  0477  2C79               	goto	u146_24
  5161  0478                     u146_25:
  5162  0478  36F0               	lsrf	??_readGPIO,f
  5163  0479                     u146_24:
  5164  0479  0B89               	decfsz	9,f
  5165  047A  2C78               	goto	u146_25
  5166  047B  0870               	movf	??_readGPIO,w
  5167  047C  00F1               	movwf	??_readGPIO+1
  5168  047D  0871               	movf	??_readGPIO+1,w
  5169  047E  00F3               	movwf	readGPIO@check1
  5170  047F                     i1l1778:
  5171                           
  5172                           ;GPIO.c: 94:         uint8_t returnValue = (check1 & 1u);
  5173  047F  0873               	movf	readGPIO@check1,w
  5174  0480  3901               	andlw	1
  5175  0481  00F0               	movwf	??_readGPIO
  5176  0482  0870               	movf	??_readGPIO,w
  5177  0483  00F4               	movwf	readGPIO@returnValue
  5178  0484                     i1l1780:
  5179                           
  5180                           ;GPIO.c: 95:         return returnValue;
  5181  0484  0874               	movf	readGPIO@returnValue,w
  5182  0485  2CB0               	goto	i1l290
  5183  0486                     i1l1786:
  5184  0486  0378               	decf	readGPIO@portType,w
  5185  0487  1D03               	btfss	3,2
  5186  0488  2C8A               	goto	u147_21
  5187  0489  2C8B               	goto	u147_20
  5188  048A                     u147_21:
  5189  048A  2CB0               	goto	i1l290
  5190  048B                     u147_20:
  5191  048B                     i1l1788:
  5192                           
  5193                           ;GPIO.c: 98:         uint8_t maskB = (uint8_t)(0b00000001 << ((uint8_t) portNumber));
  5194  048B  3001               	movlw	1
  5195  048C  00F0               	movwf	??_readGPIO
  5196  048D  0A7A               	incf	readGPIO@portNumber,w
  5197  048E  2C90               	goto	u148_24
  5198  048F                     u148_25:
  5199  048F  35F0               	lslf	??_readGPIO,f
  5200  0490                     u148_24:
  5201  0490  0B89               	decfsz	9,f
  5202  0491  2C8F               	goto	u148_25
  5203  0492  0870               	movf	??_readGPIO,w
  5204  0493  00F1               	movwf	??_readGPIO+1
  5205  0494  0871               	movf	??_readGPIO+1,w
  5206  0495  00F5               	movwf	readGPIO@maskB
  5207  0496                     i1l1790:
  5208                           
  5209                           ;GPIO.c: 99:         uint8_t returnValueB = ((PORTB && maskB) >> ((uint8_t) portNumber))
      +                          ;
  5210  0496  01F7               	clrf	_readGPIO$667
  5211  0497                     i1l1792:
  5212  0497  0020               	movlb	0	; select bank0
  5213  0498  080D               	movf	13,w	;volatile
  5214  0499  1903               	btfsc	3,2
  5215  049A  2C9C               	goto	u149_21
  5216  049B  2C9D               	goto	u149_20
  5217  049C                     u149_21:
  5218  049C  2CA4               	goto	i1l1798
  5219  049D                     u149_20:
  5220  049D                     i1l1794:
  5221  049D  0875               	movf	readGPIO@maskB,w
  5222  049E  1903               	btfsc	3,2
  5223  049F  2CA1               	goto	u150_21
  5224  04A0  2CA2               	goto	u150_20
  5225  04A1                     u150_21:
  5226  04A1  2CA4               	goto	i1l1798
  5227  04A2                     u150_20:
  5228  04A2                     i1l1796:
  5229  04A2  01F7               	clrf	_readGPIO$667
  5230  04A3  0AF7               	incf	_readGPIO$667,f
  5231  04A4                     i1l1798:
  5232  04A4  0877               	movf	_readGPIO$667,w
  5233  04A5  00F0               	movwf	??_readGPIO
  5234  04A6  0A7A               	incf	readGPIO@portNumber,w
  5235  04A7  2CA9               	goto	u151_24
  5236  04A8                     u151_25:
  5237  04A8  36F0               	lsrf	??_readGPIO,f
  5238  04A9                     u151_24:
  5239  04A9  0B89               	decfsz	9,f
  5240  04AA  2CA8               	goto	u151_25
  5241  04AB  0870               	movf	??_readGPIO,w
  5242  04AC  00F1               	movwf	??_readGPIO+1
  5243  04AD  0871               	movf	??_readGPIO+1,w
  5244  04AE  00F6               	movwf	readGPIO@returnValueB
  5245  04AF                     i1l1800:
  5246                           
  5247                           ;GPIO.c: 100:         return returnValueB;
  5248  04AF  0876               	movf	readGPIO@returnValueB,w
  5249  04B0                     i1l290:
  5250  04B0  0008               	return
  5251  04B1                     __end_of_readGPIO:
  5252  007E                     btemp	set	126	;btemp
  5253  007E                     int$flags	set	126
  5254  007E                     wtemp0	set	126
  5255                           
  5256                           	psect	idloc
  5257                           
  5258                           ;Config register IDLOC0 @ 0x8000
  5259                           ;	unspecified, using default values
  5260  8000                     	org	32768
  5261  8000  3FFF               	dw	16383
  5262                           
  5263                           ;Config register IDLOC1 @ 0x8001
  5264                           ;	unspecified, using default values
  5265  8001                     	org	32769
  5266  8001  3FFF               	dw	16383
  5267                           
  5268                           ;Config register IDLOC2 @ 0x8002
  5269                           ;	unspecified, using default values
  5270  8002                     	org	32770
  5271  8002  3FFF               	dw	16383
  5272                           
  5273                           ;Config register IDLOC3 @ 0x8003
  5274                           ;	unspecified, using default values
  5275  8003                     	org	32771
  5276  8003  3FFF               	dw	16383
  5277                           
  5278                           	psect	config
  5279                           
  5280                           ;Config register CONFIG1 @ 0x8007
  5281                           ;	Oscillator Selection
  5282                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5283                           ;	Watchdog Timer Enable
  5284                           ;	WDTE = OFF, WDT disabled
  5285                           ;	Power-up Timer Enable
  5286                           ;	PWRTE = OFF, PWRT disabled
  5287                           ;	MCLR Pin Function Select
  5288                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5289                           ;	Flash Program Memory Code Protection
  5290                           ;	CP = OFF, Program memory code protection is disabled
  5291                           ;	Data Memory Code Protection
  5292                           ;	CPD = OFF, Data memory code protection is disabled
  5293                           ;	Brown-out Reset Enable
  5294                           ;	BOREN = ON, Brown-out Reset enabled
  5295                           ;	Clock Out Enable
  5296                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5297                           ;	Internal/External Switchover
  5298                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5299                           ;	Fail-Safe Clock Monitor Enable
  5300                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5301  8007                     	org	32775
  5302  8007  0FA4               	dw	4004
  5303                           
  5304                           ;Config register CONFIG2 @ 0x8008
  5305                           ;	Flash Memory Self-Write Protection
  5306                           ;	WRT = OFF, Write protection off
  5307                           ;	PLL Enable
  5308                           ;	PLLEN = OFF, 4x PLL disabled
  5309                           ;	Stack Overflow/Underflow Reset Enable
  5310                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5311                           ;	Brown-out Reset Voltage Selection
  5312                           ;	BORV = 0x1, unprogrammed default
  5313                           ;	Low-Voltage Programming Enable
  5314                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5315  8008                     	org	32776
  5316  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         154
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      55
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _initialiseCurrentSensors->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3134
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1495
                   _initialiseADCPin
                     _initialiseGPIO
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (2) _writeGPIO                                            6     5      1     550
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3717
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (4) i1_writeGPIO                                          6     5      1     326
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      2     2      0     345
                                             11 COMMON     2     2      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                            11    11      0     321
                                              0 COMMON    11    11      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
     _writeGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               20      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 14:36:01 2023

                                 l92 06A8                                   l93 06A8  
                ___wmul@multiplicand 0072                                  l111 024D  
                                l200 0705                                  l204 02F1  
                                l144 06C6                                  l209 0333  
                                l323 06F1                                  l270 02C9  
                                l169 06F9                                  l284 03F5  
                                l380 066F                                  _PR2 001B  
                                wreg 0009                  __end_ofi1_writeGPIO 0455  
                     readGPIO@check1 0073                ??_setPWMDutyandPeriod 0073  
                   ??_initialiseGPIO 0034                                 l2000 01F9  
                               l2010 0212                                 l2002 01FA  
                               l2012 0217                                 l2004 0204  
                               l2014 0218                                 l2006 0207  
                               l2030 06B0                                 l2008 0208  
                               l2040 06BB                                 l2032 06B2  
                               l2120 068F                                 l2018 0222  
                               l2042 06BD                                 l2034 06B4  
                               l2026 06AB                                 l2050 06F7  
                               l2130 069F                                 l2122 0693  
                               l2052 0700                                 l2220 022A  
                               l2044 06BE                                 l2036 06B6  
                               l2028 06AE                                 l2132 06A2  
                               l2124 0696                                 l2054 064D  
                               l2046 06C0                                 l2038 06B9  
                               l2126 0699                                 l2056 06E9  
                               l2048 06F2                                 l2128 069C  
                               l1700 02EF                                 l1702 02F6  
                               l1630 039F                                 l1704 02FB  
                               l1640 03B1                                 l1632 03A4  
                               l1706 0315                                 l1650 03DB  
                               l1642 03B6                                 l1634 03A7  
                               l1626 0398                                 l1708 031A  
                               l1660 025C                                 l1652 03E8  
                               l1644 03C3                                 l1636 03AB  
                               l1628 0399                                 l1670 026E  
                               l1662 025F                                 l1654 0250  
                               l1646 03D1                                 l1638 03AC  
                               l1680 02BC                                 l1672 0289  
                               l1664 0263                                 l1656 0251  
                               l1648 03D6                                 l1690 02DA  
                               l1682 02CC                                 l1674 0297  
                               l1666 0264                                 l1658 0257  
                               l1692 02DC                                 l1684 02CF  
                               l1676 029C                                 l1668 0269  
                               l1694 02E2                                 l1686 02D5  
                               l1678 02A1                                 l1950 0176  
                               l1696 02E8                                 l1688 02D9  
                               l1960 018A                                 l1952 0179  
                               l1698 02ED                                 l1970 01A9  
                               l1962 0194                                 l1954 017A  
                               l1980 01C4                                 l1972 01AA  
                               l1964 0199                                 l1956 0184  
                               l1948 0175                                 l1990 01DA  
                               l1982 01C9                                 l1974 01B4  
                               l1966 019A                                 l1958 0189  
                               l1992 01E4                                 l1984 01CA  
                               l1976 01B9                                 l1968 01A4  
                               l1994 01E9                                 l1986 01D4  
                               l1978 01BA                                 l1996 01EA  
                               l1988 01D9                                 l1998 01F4  
                               STR_1 06C7                                 STR_3 06D9  
                               u1110 03D6                                 u1111 03D5  
                               u1120 03DB                                 u1104 03C8  
                               u1121 03DA                                 u1105 03C7  
                               u1210 029C                                 u1211 029B  
                               u1300 02FB                                 u1220 02A1  
                               u1204 028E                                 u1060 039F  
                               u1301 02FA                                 u1221 02A0  
                               u1205 028D                                 u1061 039E  
                               u1150 0257                                 u1134 03E0  
                               u1070 03B1                                 u1151 0256  
                               u1135 03DF                                 u1071 03B0  
                               u1160 0269                                 u1144 03ED  
                               u1080 03B6                                 u1161 0268  
                               u1145 03EC                                 u1081 03B5  
                               u1330 031A                                 u1314 0300  
                               u1234 02A6                                 u1170 026E  
                               u1331 0319                                 u1315 02FF  
                               u1235 02A5                                 u1171 026D  
                               u1324 030D                                 u1260 02D5  
                               u1244 02B3                                 u1325 030C  
                               u1261 02D4                                 u1245 02B2  
                               _LATA 010C                                 u1270 02E2  
                               u1254 02C1                                 u1094 03BB  
                               _LATB 010D                                 u1271 02E1  
                               u1255 02C0                                 u1095 03BA  
                               u1344 031F                                 u1280 02E8  
                               u1184 0273                                 u1345 031E  
                               u1281 02E7                                 u1185 0272  
                               u1354 032C                                 u1290 02F6  
                               u1194 0280                                 u1355 032B  
                               u1291 02F5                                 u1195 027F  
                               i1l82 0060                                 i1l87 0070  
                    _filteredFreqPot 0043                      _filteredDutyPot 0041  
                               _main 068F                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 fsr1l 0006  
                               btemp 007E                       ?_runPotScaling 0070  
                               start 0072            ??_setupInternalOscillator 0033  
                              ?_main 0039                      __end_of___lldiv 050C  
                              i1l212 0343                                i1l213 0356  
                              i1l223 0395                                i1l217 0377  
                              i1l218 0379                                i1l330 05C1  
                              i1l147 064C                                i1l341 0157  
                              i1l343 0172                                i1l337 0566  
                              i1l290 04B0                                i1l284 0454  
                              i1l552 067A                                i1l385 0621  
                              i1l554 068E                                i1l566 05F4  
                              i1l588 050B                                _PORTA 000C  
                              _PORTB 000D                                _TRISA 008C  
                              _TRISB 008D                  ___lmul@multiplicand 0074  
                        readADCRaw@i 0078                 readFilteredFreqPot@i 0029  
           readFilteredDutyPot@i_704 0028                                status 0003  
                              wtemp0 007E               initialiseGPIO@portType 0036  
                _initialiseADCModule 0700                 readFilteredDutyPot@i 0029  
         initialiseADCPin@gpioNumber 0038                      __initialization 0074  
                       __end_of_main 06AB                    ?_initialiseADCPin 0070  
                        i1_writeGPIO 03F6                               ??_main 003D  
                 ??_initialiseADCPin 0033                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0039      __end_of_setupInternalOscillator 024E  
setupInternalOscillator@selectedFreq 0035                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             i1l2100 0030                               i1l2110 0055  
                             i1l2102 003C                               i1l2104 0044  
                             i1l2112 0055                               i1l2114 006A  
                             i1l2106 004C                               i1l2060 03F8  
                             i1l2116 006B                               i1l2108 0051  
                             i1l2070 040B                               i1l2062 03FE  
                             i1l2118 006F                               u104_20 064A  
                             i1l2080 0435                               i1l2072 0410  
                             i1l2064 0403                               u200_20 0066  
                             u104_21 0647                               u200_21 0064  
                             i1l2082 043A                               i1l2074 0415  
                             i1l2066 0406                               i1l2058 03F7  
                             i1l2090 0013                               i1l1620 0622  
                             i1l2084 0447                               i1l2076 0422  
                             i1l2068 040A                               i1l2092 001A  
                             i1l1710 0335                               i1l1622 0625  
                             i1l2078 0430                               i1l2094 0020  
                             i1l2086 0006                               i1l1800 04AF  
                             i1l1720 034F                               i1l1712 0337  
                             i1l1624 0630                               u201_20 0067  
                             i1l2096 0025                               i1l2088 000E  
                             i1l1730 036C                               i1l1722 0354  
                             i1l1714 033D                               i1l1810 067F  
                             i1l2098 002B                               i1l1740 037D  
                             i1l1724 035B                               i1l1716 0341  
                             i1l1820 05CA                               i1l1812 0684  
                             i1l1804 0670                               u105_24 064C  
                             i1l1742 0381                               i1l1726 035D  
                             i1l1718 0349                               i1l1910 051C  
                             i1l1902 050C                               i1l1822 05CE  
                             i1l1814 068A                               i1l1806 0672  
                             i1l1760 0456                               i1l1752 0387  
                             i1l1744 0385                               i1l1736 036D  
                             i1l1728 0361                               i1l1912 0520  
                             i1l1840 04D4                               i1l1832 04B1  
                             i1l1824 05D6                               i1l1808 0676  
                             i1l1770 0469                               i1l1762 0457  
                             i1l1754 038B                               i1l1746 0386  
                             i1l1738 0371                               i1l1930 0553  
                             i1l1914 0526                               i1l1850 04FD  
                             i1l1842 04DB                               i1l1834 04C2  
                             i1l1826 05DD                               i1l1818 05C2  
                             i1l1780 0484                               i1l1772 046A  
                             i1l1764 045D                               i1l1860 0615  
                             i1l1756 0391                               i1l1924 0539  
                             i1l1916 052F                               i1l1908 050E  
                             i1l1844 04ED                               i1l1836 04C5  
                             i1l1852 0503                               i1l1828 05EC  
                             i1l1940 0153                               i1l1790 0496  
                             i1l1774 046F                               i1l1766 0462  
                             i1l1862 061A                               i1l1870 0567  
                             i1l1926 0549                               i1l1918 0538  
                             i1l1846 04F5                               i1l1838 04D0  
                             i1l1942 0161                               i1l1934 0090  
                             i1l1792 0497                               i1l1776 0474  
                             i1l1768 0465                               i1l1864 061F  
                             i1l1856 05F5                               i1l1880 057B  
                             i1l1928 054D                               i1l1848 04F6  
                             i1l1944 0165                               i1l1936 009B  
                             i1l1794 049D                               i1l1778 047F  
                             i1l1786 0486                               i1l1866 0620  
                             i1l1858 0613                               i1l1882 0581  
                             i1l1946 0170                               i1l1938 0149  
                             i1l1796 04A2                               i1l1788 048B  
                             i1l1892 0594                               i1l1884 058A  
                             i1l1876 0569                               i1l1798 04A4  
                             i1l1894 05A4                               i1l1886 0593  
                             i1l1878 0577                               i1l1896 05A8  
                             i1l1898 05AE                               u140_25 0364  
                             u141_20 0377                               u141_21 0376  
                             u150_20 04A2                               u142_20 037D  
                             u150_21 04A1                               u142_21 037C  
                             u143_20 0391                               u143_21 0390  
                             u151_24 04A9                               u151_25 04A8  
                             u144_20 045D                               u136_20 033D  
                             u160_20 04C2                               u152_20 0676  
                             u144_21 045C                               u136_21 033C  
                             u160_21 04C1                               u152_21 0675  
                             u145_20 046F                               u137_20 0349  
                             u145_21 046E                               u137_21 0348  
                             u161_25 04C6                               u153_25 067B  
                             u170_20 060F                               u138_20 034F  
                             u162_20 04D4                               u138_21 034E  
                             u162_21 04D3                               u146_24 0479  
                             u146_25 0478                               u154_25 0680  
                             u147_20 048B                               u171_20 061A  
                             u139_20 035B                               u155_20 068A  
                             u147_21 048A                               u171_21 0619  
                             u139_21 035A                               u155_21 0689  
                             u163_25 04D5                               u172_20 061F  
                             u164_20 04ED                               u156_20 05CE  
                             u180_20 00BC                               u172_21 061E  
                             u164_21 04EC                               u156_21 05CD  
                             u148_24 0490                               u148_25 048F  
                             u164_25 04E9                               u180_25 00B8  
                             u149_20 049D                               u173_20 0581  
                             u181_20 00E9                               u149_21 049C  
                             u173_21 0580                               u165_25 04F7  
                             u157_25 05D7                               u181_25 00E5  
                             u174_20 05AE                               u166_20 0503  
                             u182_20 0153                               u190_20 043A  
                             u174_21 05AD                               u166_21 0502  
                             u182_21 0152                               u190_21 0439  
                             u158_25 05DE                               u182_25 014F  
                             u167_20 05FF                               u175_20 05BB  
                             u159_20 05EC                               u183_20 0161  
                             u167_21 05FD                               u159_21 05EB  
                             u183_21 0160                               u191_24 043F  
                             u175_25 05B7                               u183_25 015D  
                             u191_25 043E                               u168_20 0600  
                             u176_20 0526                               u184_20 03FE  
                             u176_21 0525                               u184_21 03FD  
                             u192_24 044C                               u192_25 044B  
                             u169_20 060E                               u177_20 0553  
                             u185_20 0410                               u193_20 000E  
                             u169_21 060C                               u177_21 0552  
                             u185_21 040F                               u193_21 000D  
                             u178_20 0560                               u186_20 0415  
                             u194_20 0020                               u186_21 0414  
                             u194_21 001F                               u178_25 055C  
                             u179_20 009B                               u195_20 002B  
                             u179_21 009A                               u195_21 002A  
                             u187_24 041A                               u187_25 0419  
                             u196_20 0030                               u196_21 002F  
                             u188_24 0427                      ??_runPotScaling 0026  
                             u188_25 0426                               u189_20 0435  
                             u197_20 0051                               u189_21 0434  
                             u197_21 0050                               u198_20 005C  
                             u198_21 005A                               u199_20 005D  
            initialiseGPIO@direction 0033                     readGPIO@portType 0078  
                readADCRaw@gpioValid 0077                               ___lmul 05C2  
                             ___wmul 0670                            ??___lldiv 0020  
                   __end_of_readGPIO 04B1                               _tripIL 0053  
          setPWMDutyandPeriod@period 0072                ??_initialiseADCModule 0033  
           _initialisePotentiometers 06E9           initialiseADCPin@portNumber 0037  
                   __end_of_setupPWM 06C7                      _currentTripRead 05F5  
            __end_of__initialization 008C                         readGPIO@read 0072  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
              i1writeGPIO@gpioNumber 0074                        _currentILFIFO 00A0  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 0072  
                         __pbssBANK0 003D                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pmaintext 068F  
                            ?___lmul 0070                              ?___wmul 0070  
                         __pintentry 0004                              _CCP1CON 0293  
                     ___lmul@product 0078              __end_of_currentTripRead 0622  
        __end_of_setPWMDutyandPeriod 064D     __end_of_initialiseCurrentSensors 0670  
           initialiseADCPin@portType 0036                i1writeGPIO@portNumber 0075  
                         _filteredIL 0045                            ?_readGPIO 0070  
                         _readADCRaw 0334                  _readFilteredFreqPot 050C  
                _readFilteredDutyPot 0567                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 0037  
                            ___lldiv 04B1                         ?i1_writeGPIO 0070  
               ?_readFilteredFreqPot 007B                              __ptext1 06F2  
                            __ptext2 06AB                              __ptext3 0173  
                            __ptext4 06E9                              __ptext5 064D  
                            __ptext6 0396                              __ptext7 024E  
                            __ptext8 02CA                              __ptext9 0700  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                            _setDuty 004D                i1writeGPIO@writeValue 0070  
                            _tripIDS 0054                              clrloop0 06FB  
               end_of_initialization 008C                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
         ??_initialisePotentiometers 0039                           _prevPeriod 0055  
                  writeGPIO@portType 0036                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 03F6                  readGPIO@returnValue 0074  
           initialiseGPIO@portNumber 0038                          ?_readADCRaw 0070  
                        _CCP1CONbits 0293                        readGPIO@maskB 0075  
              __end_of_runPotScaling 0173            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 05F5          __end_of_initialiseADCModule 0706  
                     __end_of___wmul 068F                       _clockFrequency 003D  
                       _readGPIO$667 0077                  start_initialization 0074  
       __end_of_setupTimer0Interrupt 06FA                       _currentIDSFIFO 00C0  
                          _Tick980Hz 0004                          _APFCON0bits 011D  
                           ??___lmul 0078                             ??___wmul 0074  
                          ___latbits 0001                        __pcstackBANK0 0020  
                         ?_Tick980Hz 0070                     _initialiseADCPin 02CA  
                 readGPIO@gpioNumber 0079                       _initialiseGPIO 024E  
   __end_of_initialisePotentiometers 06F2                             ?___lldiv 0076  
                    readADCRaw@i_616 0079                            _latestIL1 0049  
    readFilteredDutyPot@sumOfSamples 0024                       ___wmul@product 0074  
             __end_of_initialiseGPIO 02CA                            clear_ram0 06FA  
                          _setPeriod 0056                             _PIE1bits 0091  
                           _PIR1bits 0011         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 06F2                  _currentTripRead$749 007C  
                        _filteredIDS 0047                           _ADCON0bits 009D  
                  ___wmul@multiplier 0070                   readGPIO@portNumber 007A  
                        _freqPotFIFO 0140                            _writeGPIO 0396  
                        ??_Tick980Hz 0032                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 0000                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0033                    readADCRaw@channel 0076  
              ?_setupTimer0Interrupt 0070          __end_of_readFilteredFreqPot 0567  
        __end_of_readFilteredDutyPot 05C2                 runPotScaling@maxDuty 002E  
               runPotScaling@minDuty 0030                  writeGPIO@gpioNumber 0037  
                 __end_of_readADCRaw 0396             readFilteredFreqPot@i_708 0028  
                         ?_writeGPIO 0033                             __ptext11 03F6  
                           __ptext20 05F5                             __ptext12 0090  
                           __ptext21 0455                             __ptext13 0622  
                           __ptext14 0670                             __ptext15 05C2  
                           __ptext16 04B1                             __ptext17 050C  
                           __ptext18 0567                             __ptext19 0334  
          ?_initialisePotentiometers 0070                          _dutyPotFIFO 0120  
                i1writeGPIO@portType 0073                             _readGPIO 0455  
                      _timerSlotHalf 0051                         _PSTR1CONbits 0296  
                           _prevDuty 004B                             _setupPWM 06AB  
                           int$flags 007E             __end_of_initialiseADCPin 0334  
                           main@argc 0039                             main@argv 003B  
    readFilteredFreqPot@sumOfSamples 0024                     _timerSlotQuarter 0050  
                         _INTCONbits 000B                  writeGPIO@portNumber 0038  
                           intlevel1 0000             _initialiseCurrentSensors 064D  
                   ___lldiv@dividend 007A               ??_setupTimer0Interrupt 0033  
                         _OSCCONbits 0099                          _potSetCount 0052  
                _setPWMDutyandPeriod 0622              _setupInternalOscillator 0173  
                      _emergencyStop 004F                        ??i1_writeGPIO 0071  
                      __pstringtext1 06C7                        __pstringtext2 06D9  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                   ___lldiv@quotient 0021                  writeGPIO@writeValue 0033  
                        ??_writeGPIO 0034                 ?_setPWMDutyandPeriod 0070  
              readADCRaw@returnValue 0074                    ??_currentTripRead 007B  
                      _runPotScaling 0090                 readGPIO@returnValueB 0076  
