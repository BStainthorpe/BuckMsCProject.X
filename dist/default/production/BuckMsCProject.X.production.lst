

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 17:15:31 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    47                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.40
    51                           ; Generated 17/11/2021 GMT
    52                           ; 
    53                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F1827 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  0011                     	;# 
   100  0012                     	;# 
   101  0013                     	;# 
   102  0014                     	;# 
   103  0015                     	;# 
   104  0016                     	;# 
   105  0016                     	;# 
   106  0017                     	;# 
   107  0018                     	;# 
   108  0019                     	;# 
   109  001A                     	;# 
   110  001B                     	;# 
   111  001C                     	;# 
   112  001E                     	;# 
   113  001F                     	;# 
   114  008C                     	;# 
   115  008D                     	;# 
   116  0091                     	;# 
   117  0092                     	;# 
   118  0093                     	;# 
   119  0094                     	;# 
   120  0095                     	;# 
   121  0096                     	;# 
   122  0097                     	;# 
   123  0098                     	;# 
   124  0099                     	;# 
   125  009A                     	;# 
   126  009B                     	;# 
   127  009B                     	;# 
   128  009C                     	;# 
   129  009D                     	;# 
   130  009E                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  0111                     	;# 
   134  0112                     	;# 
   135  0113                     	;# 
   136  0114                     	;# 
   137  0115                     	;# 
   138  0116                     	;# 
   139  0117                     	;# 
   140  0118                     	;# 
   141  0119                     	;# 
   142  011A                     	;# 
   143  011B                     	;# 
   144  011D                     	;# 
   145  011E                     	;# 
   146  018C                     	;# 
   147  018D                     	;# 
   148  0191                     	;# 
   149  0191                     	;# 
   150  0192                     	;# 
   151  0193                     	;# 
   152  0193                     	;# 
   153  0193                     	;# 
   154  0194                     	;# 
   155  0195                     	;# 
   156  0196                     	;# 
   157  0199                     	;# 
   158  019A                     	;# 
   159  019B                     	;# 
   160  019B                     	;# 
   161  019B                     	;# 
   162  019B                     	;# 
   163  019C                     	;# 
   164  019C                     	;# 
   165  019D                     	;# 
   166  019E                     	;# 
   167  019F                     	;# 
   168  020C                     	;# 
   169  020D                     	;# 
   170  0211                     	;# 
   171  0211                     	;# 
   172  0212                     	;# 
   173  0212                     	;# 
   174  0213                     	;# 
   175  0213                     	;# 
   176  0214                     	;# 
   177  0214                     	;# 
   178  0215                     	;# 
   179  0215                     	;# 
   180  0215                     	;# 
   181  0216                     	;# 
   182  0216                     	;# 
   183  0217                     	;# 
   184  0217                     	;# 
   185  0219                     	;# 
   186  021A                     	;# 
   187  021B                     	;# 
   188  021C                     	;# 
   189  021D                     	;# 
   190  021E                     	;# 
   191  021F                     	;# 
   192  0291                     	;# 
   193  0291                     	;# 
   194  0292                     	;# 
   195  0293                     	;# 
   196  0294                     	;# 
   197  0295                     	;# 
   198  0295                     	;# 
   199  0296                     	;# 
   200  0298                     	;# 
   201  0298                     	;# 
   202  0299                     	;# 
   203  029A                     	;# 
   204  029B                     	;# 
   205  029C                     	;# 
   206  029C                     	;# 
   207  029D                     	;# 
   208  029E                     	;# 
   209  029E                     	;# 
   210  0311                     	;# 
   211  0311                     	;# 
   212  0312                     	;# 
   213  0313                     	;# 
   214  0318                     	;# 
   215  0318                     	;# 
   216  0319                     	;# 
   217  031A                     	;# 
   218  0394                     	;# 
   219  0395                     	;# 
   220  0396                     	;# 
   221  039A                     	;# 
   222  039C                     	;# 
   223  039D                     	;# 
   224  039E                     	;# 
   225  039F                     	;# 
   226  0415                     	;# 
   227  0416                     	;# 
   228  0417                     	;# 
   229  041C                     	;# 
   230  041D                     	;# 
   231  041E                     	;# 
   232  0FE4                     	;# 
   233  0FE5                     	;# 
   234  0FE6                     	;# 
   235  0FE7                     	;# 
   236  0FE8                     	;# 
   237  0FE9                     	;# 
   238  0FEA                     	;# 
   239  0FEB                     	;# 
   240  0FED                     	;# 
   241  0FEE                     	;# 
   242  0FEF                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0016                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001C                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  008C                     	;# 
   273  008D                     	;# 
   274  0091                     	;# 
   275  0092                     	;# 
   276  0093                     	;# 
   277  0094                     	;# 
   278  0095                     	;# 
   279  0096                     	;# 
   280  0097                     	;# 
   281  0098                     	;# 
   282  0099                     	;# 
   283  009A                     	;# 
   284  009B                     	;# 
   285  009B                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  0111                     	;# 
   292  0112                     	;# 
   293  0113                     	;# 
   294  0114                     	;# 
   295  0115                     	;# 
   296  0116                     	;# 
   297  0117                     	;# 
   298  0118                     	;# 
   299  0119                     	;# 
   300  011A                     	;# 
   301  011B                     	;# 
   302  011D                     	;# 
   303  011E                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0191                     	;# 
   307  0191                     	;# 
   308  0192                     	;# 
   309  0193                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0194                     	;# 
   313  0195                     	;# 
   314  0196                     	;# 
   315  0199                     	;# 
   316  019A                     	;# 
   317  019B                     	;# 
   318  019B                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019C                     	;# 
   322  019C                     	;# 
   323  019D                     	;# 
   324  019E                     	;# 
   325  019F                     	;# 
   326  020C                     	;# 
   327  020D                     	;# 
   328  0211                     	;# 
   329  0211                     	;# 
   330  0212                     	;# 
   331  0212                     	;# 
   332  0213                     	;# 
   333  0213                     	;# 
   334  0214                     	;# 
   335  0214                     	;# 
   336  0215                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0216                     	;# 
   340  0216                     	;# 
   341  0217                     	;# 
   342  0217                     	;# 
   343  0219                     	;# 
   344  021A                     	;# 
   345  021B                     	;# 
   346  021C                     	;# 
   347  021D                     	;# 
   348  021E                     	;# 
   349  021F                     	;# 
   350  0291                     	;# 
   351  0291                     	;# 
   352  0292                     	;# 
   353  0293                     	;# 
   354  0294                     	;# 
   355  0295                     	;# 
   356  0295                     	;# 
   357  0296                     	;# 
   358  0298                     	;# 
   359  0298                     	;# 
   360  0299                     	;# 
   361  029A                     	;# 
   362  029B                     	;# 
   363  029C                     	;# 
   364  029C                     	;# 
   365  029D                     	;# 
   366  029E                     	;# 
   367  029E                     	;# 
   368  0311                     	;# 
   369  0311                     	;# 
   370  0312                     	;# 
   371  0313                     	;# 
   372  0318                     	;# 
   373  0318                     	;# 
   374  0319                     	;# 
   375  031A                     	;# 
   376  0394                     	;# 
   377  0395                     	;# 
   378  0396                     	;# 
   379  039A                     	;# 
   380  039C                     	;# 
   381  039D                     	;# 
   382  039E                     	;# 
   383  039F                     	;# 
   384  0415                     	;# 
   385  0416                     	;# 
   386  0417                     	;# 
   387  041C                     	;# 
   388  041D                     	;# 
   389  041E                     	;# 
   390  0FE4                     	;# 
   391  0FE5                     	;# 
   392  0FE6                     	;# 
   393  0FE7                     	;# 
   394  0FE8                     	;# 
   395  0FE9                     	;# 
   396  0FEA                     	;# 
   397  0FEB                     	;# 
   398  0FED                     	;# 
   399  0FEE                     	;# 
   400  0FEF                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0016                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001C                     	;# 
   428  001E                     	;# 
   429  001F                     	;# 
   430  008C                     	;# 
   431  008D                     	;# 
   432  0091                     	;# 
   433  0092                     	;# 
   434  0093                     	;# 
   435  0094                     	;# 
   436  0095                     	;# 
   437  0096                     	;# 
   438  0097                     	;# 
   439  0098                     	;# 
   440  0099                     	;# 
   441  009A                     	;# 
   442  009B                     	;# 
   443  009B                     	;# 
   444  009C                     	;# 
   445  009D                     	;# 
   446  009E                     	;# 
   447  010C                     	;# 
   448  010D                     	;# 
   449  0111                     	;# 
   450  0112                     	;# 
   451  0113                     	;# 
   452  0114                     	;# 
   453  0115                     	;# 
   454  0116                     	;# 
   455  0117                     	;# 
   456  0118                     	;# 
   457  0119                     	;# 
   458  011A                     	;# 
   459  011B                     	;# 
   460  011D                     	;# 
   461  011E                     	;# 
   462  018C                     	;# 
   463  018D                     	;# 
   464  0191                     	;# 
   465  0191                     	;# 
   466  0192                     	;# 
   467  0193                     	;# 
   468  0193                     	;# 
   469  0193                     	;# 
   470  0194                     	;# 
   471  0195                     	;# 
   472  0196                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019C                     	;# 
   480  019C                     	;# 
   481  019D                     	;# 
   482  019E                     	;# 
   483  019F                     	;# 
   484  020C                     	;# 
   485  020D                     	;# 
   486  0211                     	;# 
   487  0211                     	;# 
   488  0212                     	;# 
   489  0212                     	;# 
   490  0213                     	;# 
   491  0213                     	;# 
   492  0214                     	;# 
   493  0214                     	;# 
   494  0215                     	;# 
   495  0215                     	;# 
   496  0215                     	;# 
   497  0216                     	;# 
   498  0216                     	;# 
   499  0217                     	;# 
   500  0217                     	;# 
   501  0219                     	;# 
   502  021A                     	;# 
   503  021B                     	;# 
   504  021C                     	;# 
   505  021D                     	;# 
   506  021E                     	;# 
   507  021F                     	;# 
   508  0291                     	;# 
   509  0291                     	;# 
   510  0292                     	;# 
   511  0293                     	;# 
   512  0294                     	;# 
   513  0295                     	;# 
   514  0295                     	;# 
   515  0296                     	;# 
   516  0298                     	;# 
   517  0298                     	;# 
   518  0299                     	;# 
   519  029A                     	;# 
   520  029B                     	;# 
   521  029C                     	;# 
   522  029C                     	;# 
   523  029D                     	;# 
   524  029E                     	;# 
   525  029E                     	;# 
   526  0311                     	;# 
   527  0311                     	;# 
   528  0312                     	;# 
   529  0313                     	;# 
   530  0318                     	;# 
   531  0318                     	;# 
   532  0319                     	;# 
   533  031A                     	;# 
   534  0394                     	;# 
   535  0395                     	;# 
   536  0396                     	;# 
   537  039A                     	;# 
   538  039C                     	;# 
   539  039D                     	;# 
   540  039E                     	;# 
   541  039F                     	;# 
   542  0415                     	;# 
   543  0416                     	;# 
   544  0417                     	;# 
   545  041C                     	;# 
   546  041D                     	;# 
   547  041E                     	;# 
   548  0FE4                     	;# 
   549  0FE5                     	;# 
   550  0FE6                     	;# 
   551  0FE7                     	;# 
   552  0FE8                     	;# 
   553  0FE9                     	;# 
   554  0FEA                     	;# 
   555  0FEB                     	;# 
   556  0FED                     	;# 
   557  0FEE                     	;# 
   558  0FEF                     	;# 
   559  0000                     	;# 
   560  0001                     	;# 
   561  0002                     	;# 
   562  0003                     	;# 
   563  0004                     	;# 
   564  0005                     	;# 
   565  0006                     	;# 
   566  0007                     	;# 
   567  0008                     	;# 
   568  0009                     	;# 
   569  000A                     	;# 
   570  000B                     	;# 
   571  000C                     	;# 
   572  000D                     	;# 
   573  0011                     	;# 
   574  0012                     	;# 
   575  0013                     	;# 
   576  0014                     	;# 
   577  0015                     	;# 
   578  0016                     	;# 
   579  0016                     	;# 
   580  0017                     	;# 
   581  0018                     	;# 
   582  0019                     	;# 
   583  001A                     	;# 
   584  001B                     	;# 
   585  001C                     	;# 
   586  001E                     	;# 
   587  001F                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0095                     	;# 
   595  0096                     	;# 
   596  0097                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009A                     	;# 
   600  009B                     	;# 
   601  009B                     	;# 
   602  009C                     	;# 
   603  009D                     	;# 
   604  009E                     	;# 
   605  010C                     	;# 
   606  010D                     	;# 
   607  0111                     	;# 
   608  0112                     	;# 
   609  0113                     	;# 
   610  0114                     	;# 
   611  0115                     	;# 
   612  0116                     	;# 
   613  0117                     	;# 
   614  0118                     	;# 
   615  0119                     	;# 
   616  011A                     	;# 
   617  011B                     	;# 
   618  011D                     	;# 
   619  011E                     	;# 
   620  018C                     	;# 
   621  018D                     	;# 
   622  0191                     	;# 
   623  0191                     	;# 
   624  0192                     	;# 
   625  0193                     	;# 
   626  0193                     	;# 
   627  0193                     	;# 
   628  0194                     	;# 
   629  0195                     	;# 
   630  0196                     	;# 
   631  0199                     	;# 
   632  019A                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019B                     	;# 
   637  019C                     	;# 
   638  019C                     	;# 
   639  019D                     	;# 
   640  019E                     	;# 
   641  019F                     	;# 
   642  020C                     	;# 
   643  020D                     	;# 
   644  0211                     	;# 
   645  0211                     	;# 
   646  0212                     	;# 
   647  0212                     	;# 
   648  0213                     	;# 
   649  0213                     	;# 
   650  0214                     	;# 
   651  0214                     	;# 
   652  0215                     	;# 
   653  0215                     	;# 
   654  0215                     	;# 
   655  0216                     	;# 
   656  0216                     	;# 
   657  0217                     	;# 
   658  0217                     	;# 
   659  0219                     	;# 
   660  021A                     	;# 
   661  021B                     	;# 
   662  021C                     	;# 
   663  021D                     	;# 
   664  021E                     	;# 
   665  021F                     	;# 
   666  0291                     	;# 
   667  0291                     	;# 
   668  0292                     	;# 
   669  0293                     	;# 
   670  0294                     	;# 
   671  0295                     	;# 
   672  0295                     	;# 
   673  0296                     	;# 
   674  0298                     	;# 
   675  0298                     	;# 
   676  0299                     	;# 
   677  029A                     	;# 
   678  029B                     	;# 
   679  029C                     	;# 
   680  029C                     	;# 
   681  029D                     	;# 
   682  029E                     	;# 
   683  029E                     	;# 
   684  0311                     	;# 
   685  0311                     	;# 
   686  0312                     	;# 
   687  0313                     	;# 
   688  0318                     	;# 
   689  0318                     	;# 
   690  0319                     	;# 
   691  031A                     	;# 
   692  0394                     	;# 
   693  0395                     	;# 
   694  0396                     	;# 
   695  039A                     	;# 
   696  039C                     	;# 
   697  039D                     	;# 
   698  039E                     	;# 
   699  039F                     	;# 
   700  0415                     	;# 
   701  0416                     	;# 
   702  0417                     	;# 
   703  041C                     	;# 
   704  041D                     	;# 
   705  041E                     	;# 
   706  0FE4                     	;# 
   707  0FE5                     	;# 
   708  0FE6                     	;# 
   709  0FE7                     	;# 
   710  0FE8                     	;# 
   711  0FE9                     	;# 
   712  0FEA                     	;# 
   713  0FEB                     	;# 
   714  0FED                     	;# 
   715  0FEE                     	;# 
   716  0FEF                     	;# 
   717  0000                     	;# 
   718  0001                     	;# 
   719  0002                     	;# 
   720  0003                     	;# 
   721  0004                     	;# 
   722  0005                     	;# 
   723  0006                     	;# 
   724  0007                     	;# 
   725  0008                     	;# 
   726  0009                     	;# 
   727  000A                     	;# 
   728  000B                     	;# 
   729  000C                     	;# 
   730  000D                     	;# 
   731  0011                     	;# 
   732  0012                     	;# 
   733  0013                     	;# 
   734  0014                     	;# 
   735  0015                     	;# 
   736  0016                     	;# 
   737  0016                     	;# 
   738  0017                     	;# 
   739  0018                     	;# 
   740  0019                     	;# 
   741  001A                     	;# 
   742  001B                     	;# 
   743  001C                     	;# 
   744  001E                     	;# 
   745  001F                     	;# 
   746  008C                     	;# 
   747  008D                     	;# 
   748  0091                     	;# 
   749  0092                     	;# 
   750  0093                     	;# 
   751  0094                     	;# 
   752  0095                     	;# 
   753  0096                     	;# 
   754  0097                     	;# 
   755  0098                     	;# 
   756  0099                     	;# 
   757  009A                     	;# 
   758  009B                     	;# 
   759  009B                     	;# 
   760  009C                     	;# 
   761  009D                     	;# 
   762  009E                     	;# 
   763  010C                     	;# 
   764  010D                     	;# 
   765  0111                     	;# 
   766  0112                     	;# 
   767  0113                     	;# 
   768  0114                     	;# 
   769  0115                     	;# 
   770  0116                     	;# 
   771  0117                     	;# 
   772  0118                     	;# 
   773  0119                     	;# 
   774  011A                     	;# 
   775  011B                     	;# 
   776  011D                     	;# 
   777  011E                     	;# 
   778  018C                     	;# 
   779  018D                     	;# 
   780  0191                     	;# 
   781  0191                     	;# 
   782  0192                     	;# 
   783  0193                     	;# 
   784  0193                     	;# 
   785  0193                     	;# 
   786  0194                     	;# 
   787  0195                     	;# 
   788  0196                     	;# 
   789  0199                     	;# 
   790  019A                     	;# 
   791  019B                     	;# 
   792  019B                     	;# 
   793  019B                     	;# 
   794  019B                     	;# 
   795  019C                     	;# 
   796  019C                     	;# 
   797  019D                     	;# 
   798  019E                     	;# 
   799  019F                     	;# 
   800  020C                     	;# 
   801  020D                     	;# 
   802  0211                     	;# 
   803  0211                     	;# 
   804  0212                     	;# 
   805  0212                     	;# 
   806  0213                     	;# 
   807  0213                     	;# 
   808  0214                     	;# 
   809  0214                     	;# 
   810  0215                     	;# 
   811  0215                     	;# 
   812  0215                     	;# 
   813  0216                     	;# 
   814  0216                     	;# 
   815  0217                     	;# 
   816  0217                     	;# 
   817  0219                     	;# 
   818  021A                     	;# 
   819  021B                     	;# 
   820  021C                     	;# 
   821  021D                     	;# 
   822  021E                     	;# 
   823  021F                     	;# 
   824  0291                     	;# 
   825  0291                     	;# 
   826  0292                     	;# 
   827  0293                     	;# 
   828  0294                     	;# 
   829  0295                     	;# 
   830  0295                     	;# 
   831  0296                     	;# 
   832  0298                     	;# 
   833  0298                     	;# 
   834  0299                     	;# 
   835  029A                     	;# 
   836  029B                     	;# 
   837  029C                     	;# 
   838  029C                     	;# 
   839  029D                     	;# 
   840  029E                     	;# 
   841  029E                     	;# 
   842  0311                     	;# 
   843  0311                     	;# 
   844  0312                     	;# 
   845  0313                     	;# 
   846  0318                     	;# 
   847  0318                     	;# 
   848  0319                     	;# 
   849  031A                     	;# 
   850  0394                     	;# 
   851  0395                     	;# 
   852  0396                     	;# 
   853  039A                     	;# 
   854  039C                     	;# 
   855  039D                     	;# 
   856  039E                     	;# 
   857  039F                     	;# 
   858  0415                     	;# 
   859  0416                     	;# 
   860  0417                     	;# 
   861  041C                     	;# 
   862  041D                     	;# 
   863  041E                     	;# 
   864  0FE4                     	;# 
   865  0FE5                     	;# 
   866  0FE6                     	;# 
   867  0FE7                     	;# 
   868  0FE8                     	;# 
   869  0FE9                     	;# 
   870  0FEA                     	;# 
   871  0FEB                     	;# 
   872  0FED                     	;# 
   873  0FEE                     	;# 
   874  0FEF                     	;# 
   875  0000                     	;# 
   876  0001                     	;# 
   877  0002                     	;# 
   878  0003                     	;# 
   879  0004                     	;# 
   880  0005                     	;# 
   881  0006                     	;# 
   882  0007                     	;# 
   883  0008                     	;# 
   884  0009                     	;# 
   885  000A                     	;# 
   886  000B                     	;# 
   887  000C                     	;# 
   888  000D                     	;# 
   889  0011                     	;# 
   890  0012                     	;# 
   891  0013                     	;# 
   892  0014                     	;# 
   893  0015                     	;# 
   894  0016                     	;# 
   895  0016                     	;# 
   896  0017                     	;# 
   897  0018                     	;# 
   898  0019                     	;# 
   899  001A                     	;# 
   900  001B                     	;# 
   901  001C                     	;# 
   902  001E                     	;# 
   903  001F                     	;# 
   904  008C                     	;# 
   905  008D                     	;# 
   906  0091                     	;# 
   907  0092                     	;# 
   908  0093                     	;# 
   909  0094                     	;# 
   910  0095                     	;# 
   911  0096                     	;# 
   912  0097                     	;# 
   913  0098                     	;# 
   914  0099                     	;# 
   915  009A                     	;# 
   916  009B                     	;# 
   917  009B                     	;# 
   918  009C                     	;# 
   919  009D                     	;# 
   920  009E                     	;# 
   921  010C                     	;# 
   922  010D                     	;# 
   923  0111                     	;# 
   924  0112                     	;# 
   925  0113                     	;# 
   926  0114                     	;# 
   927  0115                     	;# 
   928  0116                     	;# 
   929  0117                     	;# 
   930  0118                     	;# 
   931  0119                     	;# 
   932  011A                     	;# 
   933  011B                     	;# 
   934  011D                     	;# 
   935  011E                     	;# 
   936  018C                     	;# 
   937  018D                     	;# 
   938  0191                     	;# 
   939  0191                     	;# 
   940  0192                     	;# 
   941  0193                     	;# 
   942  0193                     	;# 
   943  0193                     	;# 
   944  0194                     	;# 
   945  0195                     	;# 
   946  0196                     	;# 
   947  0199                     	;# 
   948  019A                     	;# 
   949  019B                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019C                     	;# 
   954  019C                     	;# 
   955  019D                     	;# 
   956  019E                     	;# 
   957  019F                     	;# 
   958  020C                     	;# 
   959  020D                     	;# 
   960  0211                     	;# 
   961  0211                     	;# 
   962  0212                     	;# 
   963  0212                     	;# 
   964  0213                     	;# 
   965  0213                     	;# 
   966  0214                     	;# 
   967  0214                     	;# 
   968  0215                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0216                     	;# 
   972  0216                     	;# 
   973  0217                     	;# 
   974  0217                     	;# 
   975  0219                     	;# 
   976  021A                     	;# 
   977  021B                     	;# 
   978  021C                     	;# 
   979  021D                     	;# 
   980  021E                     	;# 
   981  021F                     	;# 
   982  0291                     	;# 
   983  0291                     	;# 
   984  0292                     	;# 
   985  0293                     	;# 
   986  0294                     	;# 
   987  0295                     	;# 
   988  0295                     	;# 
   989  0296                     	;# 
   990  0298                     	;# 
   991  0298                     	;# 
   992  0299                     	;# 
   993  029A                     	;# 
   994  029B                     	;# 
   995  029C                     	;# 
   996  029C                     	;# 
   997  029D                     	;# 
   998  029E                     	;# 
   999  029E                     	;# 
  1000  0311                     	;# 
  1001  0311                     	;# 
  1002  0312                     	;# 
  1003  0313                     	;# 
  1004  0318                     	;# 
  1005  0318                     	;# 
  1006  0319                     	;# 
  1007  031A                     	;# 
  1008  0394                     	;# 
  1009  0395                     	;# 
  1010  0396                     	;# 
  1011  039A                     	;# 
  1012  039C                     	;# 
  1013  039D                     	;# 
  1014  039E                     	;# 
  1015  039F                     	;# 
  1016  0415                     	;# 
  1017  0416                     	;# 
  1018  0417                     	;# 
  1019  041C                     	;# 
  1020  041D                     	;# 
  1021  041E                     	;# 
  1022  0FE4                     	;# 
  1023  0FE5                     	;# 
  1024  0FE6                     	;# 
  1025  0FE7                     	;# 
  1026  0FE8                     	;# 
  1027  0FE9                     	;# 
  1028  0FEA                     	;# 
  1029  0FEB                     	;# 
  1030  0FED                     	;# 
  1031  0FEE                     	;# 
  1032  0FEF                     	;# 
  1033  0000                     	;# 
  1034  0001                     	;# 
  1035  0002                     	;# 
  1036  0003                     	;# 
  1037  0004                     	;# 
  1038  0005                     	;# 
  1039  0006                     	;# 
  1040  0007                     	;# 
  1041  0008                     	;# 
  1042  0009                     	;# 
  1043  000A                     	;# 
  1044  000B                     	;# 
  1045  000C                     	;# 
  1046  000D                     	;# 
  1047  0011                     	;# 
  1048  0012                     	;# 
  1049  0013                     	;# 
  1050  0014                     	;# 
  1051  0015                     	;# 
  1052  0016                     	;# 
  1053  0016                     	;# 
  1054  0017                     	;# 
  1055  0018                     	;# 
  1056  0019                     	;# 
  1057  001A                     	;# 
  1058  001B                     	;# 
  1059  001C                     	;# 
  1060  001E                     	;# 
  1061  001F                     	;# 
  1062  008C                     	;# 
  1063  008D                     	;# 
  1064  0091                     	;# 
  1065  0092                     	;# 
  1066  0093                     	;# 
  1067  0094                     	;# 
  1068  0095                     	;# 
  1069  0096                     	;# 
  1070  0097                     	;# 
  1071  0098                     	;# 
  1072  0099                     	;# 
  1073  009A                     	;# 
  1074  009B                     	;# 
  1075  009B                     	;# 
  1076  009C                     	;# 
  1077  009D                     	;# 
  1078  009E                     	;# 
  1079  010C                     	;# 
  1080  010D                     	;# 
  1081  0111                     	;# 
  1082  0112                     	;# 
  1083  0113                     	;# 
  1084  0114                     	;# 
  1085  0115                     	;# 
  1086  0116                     	;# 
  1087  0117                     	;# 
  1088  0118                     	;# 
  1089  0119                     	;# 
  1090  011A                     	;# 
  1091  011B                     	;# 
  1092  011D                     	;# 
  1093  011E                     	;# 
  1094  018C                     	;# 
  1095  018D                     	;# 
  1096  0191                     	;# 
  1097  0191                     	;# 
  1098  0192                     	;# 
  1099  0193                     	;# 
  1100  0193                     	;# 
  1101  0193                     	;# 
  1102  0194                     	;# 
  1103  0195                     	;# 
  1104  0196                     	;# 
  1105  0199                     	;# 
  1106  019A                     	;# 
  1107  019B                     	;# 
  1108  019B                     	;# 
  1109  019B                     	;# 
  1110  019B                     	;# 
  1111  019C                     	;# 
  1112  019C                     	;# 
  1113  019D                     	;# 
  1114  019E                     	;# 
  1115  019F                     	;# 
  1116  020C                     	;# 
  1117  020D                     	;# 
  1118  0211                     	;# 
  1119  0211                     	;# 
  1120  0212                     	;# 
  1121  0212                     	;# 
  1122  0213                     	;# 
  1123  0213                     	;# 
  1124  0214                     	;# 
  1125  0214                     	;# 
  1126  0215                     	;# 
  1127  0215                     	;# 
  1128  0215                     	;# 
  1129  0216                     	;# 
  1130  0216                     	;# 
  1131  0217                     	;# 
  1132  0217                     	;# 
  1133  0219                     	;# 
  1134  021A                     	;# 
  1135  021B                     	;# 
  1136  021C                     	;# 
  1137  021D                     	;# 
  1138  021E                     	;# 
  1139  021F                     	;# 
  1140  0291                     	;# 
  1141  0291                     	;# 
  1142  0292                     	;# 
  1143  0293                     	;# 
  1144  0294                     	;# 
  1145  0295                     	;# 
  1146  0295                     	;# 
  1147  0296                     	;# 
  1148  0298                     	;# 
  1149  0298                     	;# 
  1150  0299                     	;# 
  1151  029A                     	;# 
  1152  029B                     	;# 
  1153  029C                     	;# 
  1154  029C                     	;# 
  1155  029D                     	;# 
  1156  029E                     	;# 
  1157  029E                     	;# 
  1158  0311                     	;# 
  1159  0311                     	;# 
  1160  0312                     	;# 
  1161  0313                     	;# 
  1162  0318                     	;# 
  1163  0318                     	;# 
  1164  0319                     	;# 
  1165  031A                     	;# 
  1166  0394                     	;# 
  1167  0395                     	;# 
  1168  0396                     	;# 
  1169  039A                     	;# 
  1170  039C                     	;# 
  1171  039D                     	;# 
  1172  039E                     	;# 
  1173  039F                     	;# 
  1174  0415                     	;# 
  1175  0416                     	;# 
  1176  0417                     	;# 
  1177  041C                     	;# 
  1178  041D                     	;# 
  1179  041E                     	;# 
  1180  0FE4                     	;# 
  1181  0FE5                     	;# 
  1182  0FE6                     	;# 
  1183  0FE7                     	;# 
  1184  0FE8                     	;# 
  1185  0FE9                     	;# 
  1186  0FEA                     	;# 
  1187  0FEB                     	;# 
  1188  0FED                     	;# 
  1189  0FEE                     	;# 
  1190  0FEF                     	;# 
  1191  0000                     	;# 
  1192  0001                     	;# 
  1193  0002                     	;# 
  1194  0003                     	;# 
  1195  0004                     	;# 
  1196  0005                     	;# 
  1197  0006                     	;# 
  1198  0007                     	;# 
  1199  0008                     	;# 
  1200  0009                     	;# 
  1201  000A                     	;# 
  1202  000B                     	;# 
  1203  000C                     	;# 
  1204  000D                     	;# 
  1205  0011                     	;# 
  1206  0012                     	;# 
  1207  0013                     	;# 
  1208  0014                     	;# 
  1209  0015                     	;# 
  1210  0016                     	;# 
  1211  0016                     	;# 
  1212  0017                     	;# 
  1213  0018                     	;# 
  1214  0019                     	;# 
  1215  001A                     	;# 
  1216  001B                     	;# 
  1217  001C                     	;# 
  1218  001E                     	;# 
  1219  001F                     	;# 
  1220  008C                     	;# 
  1221  008D                     	;# 
  1222  0091                     	;# 
  1223  0092                     	;# 
  1224  0093                     	;# 
  1225  0094                     	;# 
  1226  0095                     	;# 
  1227  0096                     	;# 
  1228  0097                     	;# 
  1229  0098                     	;# 
  1230  0099                     	;# 
  1231  009A                     	;# 
  1232  009B                     	;# 
  1233  009B                     	;# 
  1234  009C                     	;# 
  1235  009D                     	;# 
  1236  009E                     	;# 
  1237  010C                     	;# 
  1238  010D                     	;# 
  1239  0111                     	;# 
  1240  0112                     	;# 
  1241  0113                     	;# 
  1242  0114                     	;# 
  1243  0115                     	;# 
  1244  0116                     	;# 
  1245  0117                     	;# 
  1246  0118                     	;# 
  1247  0119                     	;# 
  1248  011A                     	;# 
  1249  011B                     	;# 
  1250  011D                     	;# 
  1251  011E                     	;# 
  1252  018C                     	;# 
  1253  018D                     	;# 
  1254  0191                     	;# 
  1255  0191                     	;# 
  1256  0192                     	;# 
  1257  0193                     	;# 
  1258  0193                     	;# 
  1259  0193                     	;# 
  1260  0194                     	;# 
  1261  0195                     	;# 
  1262  0196                     	;# 
  1263  0199                     	;# 
  1264  019A                     	;# 
  1265  019B                     	;# 
  1266  019B                     	;# 
  1267  019B                     	;# 
  1268  019B                     	;# 
  1269  019C                     	;# 
  1270  019C                     	;# 
  1271  019D                     	;# 
  1272  019E                     	;# 
  1273  019F                     	;# 
  1274  020C                     	;# 
  1275  020D                     	;# 
  1276  0211                     	;# 
  1277  0211                     	;# 
  1278  0212                     	;# 
  1279  0212                     	;# 
  1280  0213                     	;# 
  1281  0213                     	;# 
  1282  0214                     	;# 
  1283  0214                     	;# 
  1284  0215                     	;# 
  1285  0215                     	;# 
  1286  0215                     	;# 
  1287  0216                     	;# 
  1288  0216                     	;# 
  1289  0217                     	;# 
  1290  0217                     	;# 
  1291  0219                     	;# 
  1292  021A                     	;# 
  1293  021B                     	;# 
  1294  021C                     	;# 
  1295  021D                     	;# 
  1296  021E                     	;# 
  1297  021F                     	;# 
  1298  0291                     	;# 
  1299  0291                     	;# 
  1300  0292                     	;# 
  1301  0293                     	;# 
  1302  0294                     	;# 
  1303  0295                     	;# 
  1304  0295                     	;# 
  1305  0296                     	;# 
  1306  0298                     	;# 
  1307  0298                     	;# 
  1308  0299                     	;# 
  1309  029A                     	;# 
  1310  029B                     	;# 
  1311  029C                     	;# 
  1312  029C                     	;# 
  1313  029D                     	;# 
  1314  029E                     	;# 
  1315  029E                     	;# 
  1316  0311                     	;# 
  1317  0311                     	;# 
  1318  0312                     	;# 
  1319  0313                     	;# 
  1320  0318                     	;# 
  1321  0318                     	;# 
  1322  0319                     	;# 
  1323  031A                     	;# 
  1324  0394                     	;# 
  1325  0395                     	;# 
  1326  0396                     	;# 
  1327  039A                     	;# 
  1328  039C                     	;# 
  1329  039D                     	;# 
  1330  039E                     	;# 
  1331  039F                     	;# 
  1332  0415                     	;# 
  1333  0416                     	;# 
  1334  0417                     	;# 
  1335  041C                     	;# 
  1336  041D                     	;# 
  1337  041E                     	;# 
  1338  0FE4                     	;# 
  1339  0FE5                     	;# 
  1340  0FE6                     	;# 
  1341  0FE7                     	;# 
  1342  0FE8                     	;# 
  1343  0FE9                     	;# 
  1344  0FEA                     	;# 
  1345  0FEB                     	;# 
  1346  0FED                     	;# 
  1347  0FEE                     	;# 
  1348  0FEF                     	;# 
  1349  0000                     	;# 
  1350  0001                     	;# 
  1351  0002                     	;# 
  1352  0003                     	;# 
  1353  0004                     	;# 
  1354  0005                     	;# 
  1355  0006                     	;# 
  1356  0007                     	;# 
  1357  0008                     	;# 
  1358  0009                     	;# 
  1359  000A                     	;# 
  1360  000B                     	;# 
  1361  000C                     	;# 
  1362  000D                     	;# 
  1363  0011                     	;# 
  1364  0012                     	;# 
  1365  0013                     	;# 
  1366  0014                     	;# 
  1367  0015                     	;# 
  1368  0016                     	;# 
  1369  0016                     	;# 
  1370  0017                     	;# 
  1371  0018                     	;# 
  1372  0019                     	;# 
  1373  001A                     	;# 
  1374  001B                     	;# 
  1375  001C                     	;# 
  1376  001E                     	;# 
  1377  001F                     	;# 
  1378  008C                     	;# 
  1379  008D                     	;# 
  1380  0091                     	;# 
  1381  0092                     	;# 
  1382  0093                     	;# 
  1383  0094                     	;# 
  1384  0095                     	;# 
  1385  0096                     	;# 
  1386  0097                     	;# 
  1387  0098                     	;# 
  1388  0099                     	;# 
  1389  009A                     	;# 
  1390  009B                     	;# 
  1391  009B                     	;# 
  1392  009C                     	;# 
  1393  009D                     	;# 
  1394  009E                     	;# 
  1395  010C                     	;# 
  1396  010D                     	;# 
  1397  0111                     	;# 
  1398  0112                     	;# 
  1399  0113                     	;# 
  1400  0114                     	;# 
  1401  0115                     	;# 
  1402  0116                     	;# 
  1403  0117                     	;# 
  1404  0118                     	;# 
  1405  0119                     	;# 
  1406  011A                     	;# 
  1407  011B                     	;# 
  1408  011D                     	;# 
  1409  011E                     	;# 
  1410  018C                     	;# 
  1411  018D                     	;# 
  1412  0191                     	;# 
  1413  0191                     	;# 
  1414  0192                     	;# 
  1415  0193                     	;# 
  1416  0193                     	;# 
  1417  0193                     	;# 
  1418  0194                     	;# 
  1419  0195                     	;# 
  1420  0196                     	;# 
  1421  0199                     	;# 
  1422  019A                     	;# 
  1423  019B                     	;# 
  1424  019B                     	;# 
  1425  019B                     	;# 
  1426  019B                     	;# 
  1427  019C                     	;# 
  1428  019C                     	;# 
  1429  019D                     	;# 
  1430  019E                     	;# 
  1431  019F                     	;# 
  1432  020C                     	;# 
  1433  020D                     	;# 
  1434  0211                     	;# 
  1435  0211                     	;# 
  1436  0212                     	;# 
  1437  0212                     	;# 
  1438  0213                     	;# 
  1439  0213                     	;# 
  1440  0214                     	;# 
  1441  0214                     	;# 
  1442  0215                     	;# 
  1443  0215                     	;# 
  1444  0215                     	;# 
  1445  0216                     	;# 
  1446  0216                     	;# 
  1447  0217                     	;# 
  1448  0217                     	;# 
  1449  0219                     	;# 
  1450  021A                     	;# 
  1451  021B                     	;# 
  1452  021C                     	;# 
  1453  021D                     	;# 
  1454  021E                     	;# 
  1455  021F                     	;# 
  1456  0291                     	;# 
  1457  0291                     	;# 
  1458  0292                     	;# 
  1459  0293                     	;# 
  1460  0294                     	;# 
  1461  0295                     	;# 
  1462  0295                     	;# 
  1463  0296                     	;# 
  1464  0298                     	;# 
  1465  0298                     	;# 
  1466  0299                     	;# 
  1467  029A                     	;# 
  1468  029B                     	;# 
  1469  029C                     	;# 
  1470  029C                     	;# 
  1471  029D                     	;# 
  1472  029E                     	;# 
  1473  029E                     	;# 
  1474  0311                     	;# 
  1475  0311                     	;# 
  1476  0312                     	;# 
  1477  0313                     	;# 
  1478  0318                     	;# 
  1479  0318                     	;# 
  1480  0319                     	;# 
  1481  031A                     	;# 
  1482  0394                     	;# 
  1483  0395                     	;# 
  1484  0396                     	;# 
  1485  039A                     	;# 
  1486  039C                     	;# 
  1487  039D                     	;# 
  1488  039E                     	;# 
  1489  039F                     	;# 
  1490  0415                     	;# 
  1491  0416                     	;# 
  1492  0417                     	;# 
  1493  041C                     	;# 
  1494  041D                     	;# 
  1495  041E                     	;# 
  1496  0FE4                     	;# 
  1497  0FE5                     	;# 
  1498  0FE6                     	;# 
  1499  0FE7                     	;# 
  1500  0FE8                     	;# 
  1501  0FE9                     	;# 
  1502  0FEA                     	;# 
  1503  0FEB                     	;# 
  1504  0FED                     	;# 
  1505  0FEE                     	;# 
  1506  0FEF                     	;# 
  1507  0000                     	;# 
  1508  0001                     	;# 
  1509  0002                     	;# 
  1510  0003                     	;# 
  1511  0004                     	;# 
  1512  0005                     	;# 
  1513  0006                     	;# 
  1514  0007                     	;# 
  1515  0008                     	;# 
  1516  0009                     	;# 
  1517  000A                     	;# 
  1518  000B                     	;# 
  1519  000C                     	;# 
  1520  000D                     	;# 
  1521  0011                     	;# 
  1522  0012                     	;# 
  1523  0013                     	;# 
  1524  0014                     	;# 
  1525  0015                     	;# 
  1526  0016                     	;# 
  1527  0016                     	;# 
  1528  0017                     	;# 
  1529  0018                     	;# 
  1530  0019                     	;# 
  1531  001A                     	;# 
  1532  001B                     	;# 
  1533  001C                     	;# 
  1534  001E                     	;# 
  1535  001F                     	;# 
  1536  008C                     	;# 
  1537  008D                     	;# 
  1538  0091                     	;# 
  1539  0092                     	;# 
  1540  0093                     	;# 
  1541  0094                     	;# 
  1542  0095                     	;# 
  1543  0096                     	;# 
  1544  0097                     	;# 
  1545  0098                     	;# 
  1546  0099                     	;# 
  1547  009A                     	;# 
  1548  009B                     	;# 
  1549  009B                     	;# 
  1550  009C                     	;# 
  1551  009D                     	;# 
  1552  009E                     	;# 
  1553  010C                     	;# 
  1554  010D                     	;# 
  1555  0111                     	;# 
  1556  0112                     	;# 
  1557  0113                     	;# 
  1558  0114                     	;# 
  1559  0115                     	;# 
  1560  0116                     	;# 
  1561  0117                     	;# 
  1562  0118                     	;# 
  1563  0119                     	;# 
  1564  011A                     	;# 
  1565  011B                     	;# 
  1566  011D                     	;# 
  1567  011E                     	;# 
  1568  018C                     	;# 
  1569  018D                     	;# 
  1570  0191                     	;# 
  1571  0191                     	;# 
  1572  0192                     	;# 
  1573  0193                     	;# 
  1574  0193                     	;# 
  1575  0193                     	;# 
  1576  0194                     	;# 
  1577  0195                     	;# 
  1578  0196                     	;# 
  1579  0199                     	;# 
  1580  019A                     	;# 
  1581  019B                     	;# 
  1582  019B                     	;# 
  1583  019B                     	;# 
  1584  019B                     	;# 
  1585  019C                     	;# 
  1586  019C                     	;# 
  1587  019D                     	;# 
  1588  019E                     	;# 
  1589  019F                     	;# 
  1590  020C                     	;# 
  1591  020D                     	;# 
  1592  0211                     	;# 
  1593  0211                     	;# 
  1594  0212                     	;# 
  1595  0212                     	;# 
  1596  0213                     	;# 
  1597  0213                     	;# 
  1598  0214                     	;# 
  1599  0214                     	;# 
  1600  0215                     	;# 
  1601  0215                     	;# 
  1602  0215                     	;# 
  1603  0216                     	;# 
  1604  0216                     	;# 
  1605  0217                     	;# 
  1606  0217                     	;# 
  1607  0219                     	;# 
  1608  021A                     	;# 
  1609  021B                     	;# 
  1610  021C                     	;# 
  1611  021D                     	;# 
  1612  021E                     	;# 
  1613  021F                     	;# 
  1614  0291                     	;# 
  1615  0291                     	;# 
  1616  0292                     	;# 
  1617  0293                     	;# 
  1618  0294                     	;# 
  1619  0295                     	;# 
  1620  0295                     	;# 
  1621  0296                     	;# 
  1622  0298                     	;# 
  1623  0298                     	;# 
  1624  0299                     	;# 
  1625  029A                     	;# 
  1626  029B                     	;# 
  1627  029C                     	;# 
  1628  029C                     	;# 
  1629  029D                     	;# 
  1630  029E                     	;# 
  1631  029E                     	;# 
  1632  0311                     	;# 
  1633  0311                     	;# 
  1634  0312                     	;# 
  1635  0313                     	;# 
  1636  0318                     	;# 
  1637  0318                     	;# 
  1638  0319                     	;# 
  1639  031A                     	;# 
  1640  0394                     	;# 
  1641  0395                     	;# 
  1642  0396                     	;# 
  1643  039A                     	;# 
  1644  039C                     	;# 
  1645  039D                     	;# 
  1646  039E                     	;# 
  1647  039F                     	;# 
  1648  0415                     	;# 
  1649  0416                     	;# 
  1650  0417                     	;# 
  1651  041C                     	;# 
  1652  041D                     	;# 
  1653  041E                     	;# 
  1654  0FE4                     	;# 
  1655  0FE5                     	;# 
  1656  0FE6                     	;# 
  1657  0FE7                     	;# 
  1658  0FE8                     	;# 
  1659  0FE9                     	;# 
  1660  0FEA                     	;# 
  1661  0FEB                     	;# 
  1662  0FED                     	;# 
  1663  0FEE                     	;# 
  1664  0FEF                     	;# 
  1665  000D                     _PORTB	set	13
  1666  000C                     _PORTA	set	12
  1667  001C                     _T2CONbits	set	28
  1668  001B                     _PR2	set	27
  1669  0011                     _PIR1bits	set	17
  1670  000B                     _INTCONbits	set	11
  1671  009B                     _ADRESL	set	155
  1672  009C                     _ADRESH	set	156
  1673  009D                     _ADCON0bits	set	157
  1674  008D                     _TRISB	set	141
  1675  008C                     _TRISA	set	140
  1676  009E                     _ADCON1	set	158
  1677  009D                     _ADCON0	set	157
  1678  0095                     _OPTION_REG	set	149
  1679  0095                     _OPTION_REGbits	set	149
  1680  0091                     _PIE1bits	set	145
  1681  0099                     _OSCCONbits	set	153
  1682  010D                     _LATB	set	269
  1683  010C                     _LATA	set	268
  1684  011D                     _APFCON0bits	set	285
  1685  018D                     _ANSELB	set	397
  1686  018C                     _ANSELA	set	396
  1687  0293                     _CCP1CONbits	set	659
  1688  0296                     _PSTR1CONbits	set	662
  1689  0291                     _CCPR1L	set	657
  1690  0293                     _CCP1CON	set	659
  1691                           
  1692                           	psect	stringtext1
  1693  07C6                     __pstringtext1:
  1694  07C6                     STR_1:
  1695  07C6  3428               	retlw	40	;'('
  1696  07C7  3428               	retlw	40	;'('
  1697  07C8  3449               	retlw	73	;'I'
  1698  07C9  344E               	retlw	78	;'N'
  1699  07CA  3454               	retlw	84	;'T'
  1700  07CB  3443               	retlw	67	;'C'
  1701  07CC  344F               	retlw	79	;'O'
  1702  07CD  344E               	retlw	78	;'N'
  1703  07CE  3429               	retlw	41	;')'
  1704  07CF  3426               	retlw	38	;'&'
  1705  07D0  3430               	retlw	48	;'0'
  1706  07D1  3437               	retlw	55	;'7'
  1707  07D2  3446               	retlw	70	;'F'
  1708  07D3  3468               	retlw	104	;'h'
  1709  07D4  3429               	retlw	41	;')'
  1710  07D5  342C               	retlw	44	;','
  1711  07D6  3432               	retlw	50	;'2'
  1712  07D7  3400               	retlw	0
  1713                           
  1714                           	psect	stringtext2
  1715  07D8                     __pstringtext2:
  1716  07D8                     STR_3:
  1717  07D8  3428               	retlw	40	;'('
  1718  07D9  3428               	retlw	40	;'('
  1719  07DA  3450               	retlw	80	;'P'
  1720  07DB  3449               	retlw	73	;'I'
  1721  07DC  3452               	retlw	82	;'R'
  1722  07DD  3431               	retlw	49	;'1'
  1723  07DE  3429               	retlw	41	;')'
  1724  07DF  3426               	retlw	38	;'&'
  1725  07E0  3430               	retlw	48	;'0'
  1726  07E1  3437               	retlw	55	;'7'
  1727  07E2  3446               	retlw	70	;'F'
  1728  07E3  3468               	retlw	104	;'h'
  1729  07E4  3429               	retlw	41	;')'
  1730  07E5  342C               	retlw	44	;','
  1731  07E6  3432               	retlw	50	;'2'
  1732  07E7  3400               	retlw	0
  1733                           
  1734                           	psect	stringtext3
  1735  0000                     __pstringtext3:
  1736  07D8                     
  1737                           	psect	cinit
  1738  0084                     start_initialization:	
  1739                           ; #config settings
  1740                           
  1741  0084                     __initialization:
  1742                           
  1743                           ; Clear objects allocated to BANK0
  1744  0084  3040               	movlw	low __pbssBANK0
  1745  0085  0084               	movwf	4
  1746  0086  3000               	movlw	high __pbssBANK0
  1747  0087  0085               	movwf	5
  1748  0088  301C               	movlw	28
  1749  0089  318F  27DD  3180   	fcall	clear_ram0
  1750                           
  1751                           ; Clear objects allocated to BANK1
  1752  008C  30A0               	movlw	low __pbssBANK1
  1753  008D  0084               	movwf	4
  1754  008E  3000               	movlw	high __pbssBANK1
  1755  008F  0085               	movwf	5
  1756  0090  3040               	movlw	64
  1757  0091  318F  27DD  3180   	fcall	clear_ram0
  1758                           
  1759                           ; Clear objects allocated to BANK2
  1760  0094  3020               	movlw	low __pbssBANK2
  1761  0095  0084               	movwf	4
  1762  0096  3001               	movlw	high __pbssBANK2
  1763  0097  0085               	movwf	5
  1764  0098  3040               	movlw	64
  1765  0099  318F  27DD  3180   	fcall	clear_ram0
  1766                           
  1767                           ; Clear objects allocated to BANK3
  1768  009C  30A0               	movlw	low __pbssBANK3
  1769  009D  0084               	movwf	4
  1770  009E  3001               	movlw	high __pbssBANK3
  1771  009F  0085               	movwf	5
  1772  00A0  3020               	movlw	32
  1773  00A1  318F  27DD  3180   	fcall	clear_ram0
  1774  00A4                     end_of_initialization:	
  1775                           ;End of C runtime variable initialization code
  1776                           
  1777  00A4                     __end_of__initialization:
  1778  00A4  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1779  00A5  0020               	movlb	0
  1780  00A6  3186  2EE3         	ljmp	_main	;jump to C main() function
  1781                           
  1782                           	psect	bssBANK0
  1783  0040                     __pbssBANK0:
  1784  0040                     _clockFrequency:
  1785  0040                     	ds	4
  1786  0044                     _filteredDutyPot:
  1787  0044                     	ds	2
  1788  0046                     _filteredFreqPot:
  1789  0046                     	ds	2
  1790  0048                     _filteredVout:
  1791  0048                     	ds	2
  1792  004A                     _filteredIL:
  1793  004A                     	ds	2
  1794  004C                     _filteredIDS:
  1795  004C                     	ds	2
  1796  004E                     _latestIL:
  1797  004E                     	ds	2
  1798  0050                     _prevDuty:
  1799  0050                     	ds	2
  1800  0052                     _setDuty:
  1801  0052                     	ds	2
  1802  0054                     _timerSlotQuarter:
  1803  0054                     	ds	1
  1804  0055                     _timerSlotHalf:
  1805  0055                     	ds	1
  1806  0056                     _potSetCount:
  1807  0056                     	ds	1
  1808  0057                     _tripIL:
  1809  0057                     	ds	1
  1810  0058                     _tripIDS:
  1811  0058                     	ds	1
  1812  0059                     _prevPeriod:
  1813  0059                     	ds	1
  1814  005A                     _currentState:
  1815  005A                     	ds	1
  1816  005B                     _setPeriod:
  1817  005B                     	ds	1
  1818                           
  1819                           	psect	bssBANK1
  1820  00A0                     __pbssBANK1:
  1821  00A0                     _currentILFIFO:
  1822  00A0                     	ds	32
  1823  00C0                     _currentIDSFIFO:
  1824  00C0                     	ds	32
  1825                           
  1826                           	psect	bssBANK2
  1827  0120                     __pbssBANK2:
  1828  0120                     _freqPotFIFO:
  1829  0120                     	ds	32
  1830  0140                     _voutFIFO:
  1831  0140                     	ds	32
  1832                           
  1833                           	psect	bssBANK3
  1834  01A0                     __pbssBANK3:
  1835  01A0                     _dutyPotFIFO:
  1836  01A0                     	ds	32
  1837                           
  1838                           	psect	clrtext
  1839  0FDD                     clear_ram0:	
  1840                           ;	Called with FSR0 containing the base address, and
  1841                           ;	WREG with the size to clear
  1842                           
  1843  0FDD  0064               	clrwdt	;clear the watchdog before getting into this loop
  1844  0FDE                     clrloop0:
  1845  0FDE  0180               	clrf	0	;clear RAM location pointed to by FSR
  1846  0FDF  3101               	addfsr 0,1
  1847  0FE0  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1848  0FE1  2FDE               	goto	clrloop0	;have we reached the end yet?
  1849  0FE2  3400               	retlw	0	;all done for this memory range, return
  1850                           
  1851                           	psect	cstackCOMMON
  1852  0070                     __pcstackCOMMON:
  1853  0070                     ?_currentTripRead:
  1854  0070                     ?_transToOverCurrentFault:	
  1855                           ; 1 bytes @ 0x0
  1856                           
  1857  0070                     ??_transToOverCurrentFault:	
  1858                           ; 1 bytes @ 0x0
  1859                           
  1860  0070                     ?_setPWMDutyandPeriod:	
  1861                           ; 1 bytes @ 0x0
  1862                           
  1863  0070                     ?_runPotScaling:	
  1864                           ; 1 bytes @ 0x0
  1865                           
  1866  0070                     ?_setupInternalOscillator:	
  1867                           ; 1 bytes @ 0x0
  1868                           
  1869  0070                     ?_setupPWM:	
  1870                           ; 1 bytes @ 0x0
  1871                           
  1872  0070                     ?_setupTimer0Interrupt:	
  1873                           ; 1 bytes @ 0x0
  1874                           
  1875  0070                     ?_initialiseADCModule:	
  1876                           ; 1 bytes @ 0x0
  1877                           
  1878  0070                     ?_initialiseCurrentSensors:	
  1879                           ; 1 bytes @ 0x0
  1880                           
  1881  0070                     ?_initialisePotentiometers:	
  1882                           ; 1 bytes @ 0x0
  1883                           
  1884  0070                     ?_readGPIO:	
  1885                           ; 1 bytes @ 0x0
  1886                           
  1887  0070                     ?_transToVoltageModeControl:	
  1888                           ; 1 bytes @ 0x0
  1889                           
  1890  0070                     ?_transToCurrentModeControl:	
  1891                           ; 1 bytes @ 0x0
  1892                           
  1893  0070                     ?_transToPotControl:	
  1894                           ; 1 bytes @ 0x0
  1895                           
  1896  0070                     ?_currentTripReset:	
  1897                           ; 1 bytes @ 0x0
  1898                           
  1899  0070                     ?_Tick980Hz:	
  1900                           ; 1 bytes @ 0x0
  1901                           
  1902  0070                     ?_initialiseADCPin:	
  1903                           ; 1 bytes @ 0x0
  1904                           
  1905  0070                     ?i1_writeGPIO:	
  1906                           ; 1 bytes @ 0x0
  1907                           
  1908  0070                     ?i1_readGPIO:	
  1909                           ; 1 bytes @ 0x0
  1910                           
  1911  0070                     ??i1_readGPIO:	
  1912                           ; 1 bytes @ 0x0
  1913                           
  1914  0070                     ?_readFilteredIL:	
  1915                           ; 1 bytes @ 0x0
  1916                           
  1917  0070                     ?_readILCurrentADCRaw:	
  1918                           ; 2 bytes @ 0x0
  1919                           
  1920  0070                     ?_readADCRaw:	
  1921                           ; 2 bytes @ 0x0
  1922                           
  1923  0070                     ?___wmul:	
  1924                           ; 2 bytes @ 0x0
  1925                           
  1926  0070                     ?___lmul:	
  1927                           ; 2 bytes @ 0x0
  1928                           
  1929  0070                     i1writeGPIO@writeValue:	
  1930                           ; 4 bytes @ 0x0
  1931                           
  1932  0070                     setPWMDutyandPeriod@dutyCycle:	
  1933                           ; 1 bytes @ 0x0
  1934                           
  1935  0070                     ___wmul@multiplier:	
  1936                           ; 2 bytes @ 0x0
  1937                           
  1938  0070                     ___lmul@multiplier:	
  1939                           ; 2 bytes @ 0x0
  1940                           
  1941                           
  1942                           ; 4 bytes @ 0x0
  1943  0070                     	ds	1
  1944  0071                     ??i1_writeGPIO:
  1945                           
  1946                           ; 1 bytes @ 0x1
  1947  0071                     	ds	1
  1948  0072                     ??_readFilteredIL:
  1949  0072                     ??_readILCurrentADCRaw:	
  1950                           ; 1 bytes @ 0x2
  1951                           
  1952  0072                     ??_readADCRaw:	
  1953                           ; 1 bytes @ 0x2
  1954                           
  1955  0072                     setPWMDutyandPeriod@period:	
  1956                           ; 1 bytes @ 0x2
  1957                           
  1958  0072                     i1readGPIO@readA:	
  1959                           ; 1 bytes @ 0x2
  1960                           
  1961  0072                     ___wmul@multiplicand:	
  1962                           ; 1 bytes @ 0x2
  1963                           
  1964                           
  1965                           ; 2 bytes @ 0x2
  1966  0072                     	ds	1
  1967  0073                     ??_setPWMDutyandPeriod:
  1968  0073                     i1writeGPIO@portType:	
  1969                           ; 1 bytes @ 0x3
  1970                           
  1971  0073                     i1readGPIO@returnValueA:	
  1972                           ; 1 bytes @ 0x3
  1973                           
  1974                           
  1975                           ; 1 bytes @ 0x3
  1976  0073                     	ds	1
  1977  0074                     ??___wmul:
  1978  0074                     i1writeGPIO@gpioNumber:	
  1979                           ; 1 bytes @ 0x4
  1980                           
  1981  0074                     i1readGPIO@readB:	
  1982                           ; 1 bytes @ 0x4
  1983                           
  1984  0074                     readADCRaw@returnValue:	
  1985                           ; 1 bytes @ 0x4
  1986                           
  1987  0074                     ___wmul@product:	
  1988                           ; 2 bytes @ 0x4
  1989                           
  1990  0074                     ___lmul@multiplicand:	
  1991                           ; 2 bytes @ 0x4
  1992                           
  1993                           
  1994                           ; 4 bytes @ 0x4
  1995  0074                     	ds	1
  1996  0075                     i1writeGPIO@portNumber:
  1997  0075                     i1readGPIO@returnValueB:	
  1998                           ; 1 bytes @ 0x5
  1999                           
  2000                           
  2001                           ; 1 bytes @ 0x5
  2002  0075                     	ds	1
  2003  0076                     ?___lldiv:
  2004  0076                     readADCRaw@channel:	
  2005                           ; 4 bytes @ 0x6
  2006                           
  2007  0076                     i1readGPIO@portNumber:	
  2008                           ; 1 bytes @ 0x6
  2009                           
  2010  0076                     readFilteredIL@sumOfSamples:	
  2011                           ; 1 bytes @ 0x6
  2012                           
  2013  0076                     ___lldiv@divisor:	
  2014                           ; 4 bytes @ 0x6
  2015                           
  2016                           
  2017                           ; 4 bytes @ 0x6
  2018  0076                     	ds	1
  2019  0077                     readADCRaw@gpioValid:
  2020  0077                     i1readGPIO@portType:	
  2021                           ; 1 bytes @ 0x7
  2022                           
  2023                           
  2024                           ; 1 bytes @ 0x7
  2025  0077                     	ds	1
  2026  0078                     ??___lmul:
  2027  0078                     readADCRaw@i:	
  2028                           ; 1 bytes @ 0x8
  2029                           
  2030  0078                     i1readGPIO@gpioNumber:	
  2031                           ; 1 bytes @ 0x8
  2032                           
  2033  0078                     ___lmul@product:	
  2034                           ; 1 bytes @ 0x8
  2035                           
  2036                           
  2037                           ; 4 bytes @ 0x8
  2038  0078                     	ds	1
  2039  0079                     ??_currentTripRead:
  2040  0079                     readADCRaw@i_674:	
  2041                           ; 1 bytes @ 0x9
  2042                           
  2043                           
  2044                           ; 1 bytes @ 0x9
  2045  0079                     	ds	1
  2046  007A                     readADCRaw@gpioNumber:
  2047  007A                     _currentTripRead$912:	
  2048                           ; 1 bytes @ 0xA
  2049                           
  2050  007A                     readFilteredIL@i_920:	
  2051                           ; 1 bytes @ 0xA
  2052                           
  2053  007A                     ___lldiv@dividend:	
  2054                           ; 1 bytes @ 0xA
  2055                           
  2056                           
  2057                           ; 4 bytes @ 0xA
  2058  007A                     	ds	1
  2059  007B                     ?_readFilteredVout:
  2060  007B                     ?_readFilteredDutyPot:	
  2061                           ; 2 bytes @ 0xB
  2062                           
  2063  007B                     ?_readFilteredFreqPot:	
  2064                           ; 2 bytes @ 0xB
  2065                           
  2066  007B                     readFilteredIL@i:	
  2067                           ; 2 bytes @ 0xB
  2068                           
  2069                           
  2070                           ; 1 bytes @ 0xB
  2071  007B                     	ds	3
  2072                           
  2073                           	psect	cstackBANK0
  2074  0020                     __pcstackBANK0:
  2075  0020                     ??_readFilteredVout:
  2076  0020                     ??_readFilteredDutyPot:	
  2077                           ; 1 bytes @ 0x0
  2078                           
  2079  0020                     ??_readFilteredFreqPot:	
  2080                           ; 1 bytes @ 0x0
  2081                           
  2082  0020                     ??___lldiv:	
  2083                           ; 1 bytes @ 0x0
  2084                           
  2085                           
  2086                           ; 1 bytes @ 0x0
  2087  0020                     	ds	1
  2088  0021                     ___lldiv@quotient:
  2089                           
  2090                           ; 4 bytes @ 0x1
  2091  0021                     	ds	3
  2092  0024                     readFilteredDutyPot@sumOfSamples:
  2093  0024                     readFilteredFreqPot@sumOfSamples:	
  2094                           ; 4 bytes @ 0x4
  2095                           
  2096  0024                     readFilteredVout@sumOfSamples:	
  2097                           ; 4 bytes @ 0x4
  2098                           
  2099                           
  2100                           ; 4 bytes @ 0x4
  2101  0024                     	ds	1
  2102  0025                     ___lldiv@counter:
  2103                           
  2104                           ; 1 bytes @ 0x5
  2105  0025                     	ds	1
  2106  0026                     ??_runPotScaling:
  2107                           
  2108                           ; 1 bytes @ 0x6
  2109  0026                     	ds	2
  2110  0028                     readFilteredDutyPot@i_773:
  2111  0028                     readFilteredFreqPot@i_777:	
  2112                           ; 1 bytes @ 0x8
  2113                           
  2114  0028                     readFilteredVout@i_836:	
  2115                           ; 1 bytes @ 0x8
  2116                           
  2117                           
  2118                           ; 1 bytes @ 0x8
  2119  0028                     	ds	1
  2120  0029                     readFilteredDutyPot@i:
  2121  0029                     readFilteredFreqPot@i:	
  2122                           ; 1 bytes @ 0x9
  2123                           
  2124  0029                     readFilteredVout@i:	
  2125                           ; 1 bytes @ 0x9
  2126                           
  2127                           
  2128                           ; 1 bytes @ 0x9
  2129  0029                     	ds	5
  2130  002E                     runPotScaling@maxDuty:
  2131                           
  2132                           ; 2 bytes @ 0xE
  2133  002E                     	ds	2
  2134  0030                     runPotScaling@minDuty:
  2135                           
  2136                           ; 2 bytes @ 0x10
  2137  0030                     	ds	2
  2138  0032                     ??_Tick980Hz:
  2139                           
  2140                           ; 1 bytes @ 0x12
  2141  0032                     	ds	1
  2142  0033                     ?_writeGPIO:
  2143  0033                     ??_setupInternalOscillator:	
  2144                           ; 1 bytes @ 0x13
  2145                           
  2146  0033                     ??_setupTimer0Interrupt:	
  2147                           ; 1 bytes @ 0x13
  2148                           
  2149  0033                     ??_initialiseADCModule:	
  2150                           ; 1 bytes @ 0x13
  2151                           
  2152  0033                     ?_initialiseGPIO:	
  2153                           ; 1 bytes @ 0x13
  2154                           
  2155  0033                     ??_readGPIO:	
  2156                           ; 1 bytes @ 0x13
  2157                           
  2158  0033                     ??_transToVoltageModeControl:	
  2159                           ; 1 bytes @ 0x13
  2160                           
  2161  0033                     ??_transToCurrentModeControl:	
  2162                           ; 1 bytes @ 0x13
  2163                           
  2164  0033                     ??_transToPotControl:	
  2165                           ; 1 bytes @ 0x13
  2166                           
  2167  0033                     ??_initialiseADCPin:	
  2168                           ; 1 bytes @ 0x13
  2169                           
  2170  0033                     initialiseGPIO@direction:	
  2171                           ; 1 bytes @ 0x13
  2172                           
  2173  0033                     writeGPIO@writeValue:	
  2174                           ; 1 bytes @ 0x13
  2175                           
  2176                           
  2177                           ; 1 bytes @ 0x13
  2178  0033                     	ds	1
  2179  0034                     ??_writeGPIO:
  2180  0034                     ??_initialiseGPIO:	
  2181                           ; 1 bytes @ 0x14
  2182                           
  2183                           
  2184                           ; 1 bytes @ 0x14
  2185  0034                     	ds	1
  2186  0035                     setupInternalOscillator@selectedFreq:
  2187  0035                     initialiseADCPin@gpioValid:	
  2188                           ; 1 bytes @ 0x15
  2189                           
  2190  0035                     readGPIO@readA:	
  2191                           ; 1 bytes @ 0x15
  2192                           
  2193                           
  2194                           ; 1 bytes @ 0x15
  2195  0035                     	ds	1
  2196  0036                     initialiseADCPin@portType:
  2197  0036                     initialiseGPIO@portType:	
  2198                           ; 1 bytes @ 0x16
  2199                           
  2200  0036                     writeGPIO@portType:	
  2201                           ; 1 bytes @ 0x16
  2202                           
  2203  0036                     readGPIO@returnValueA:	
  2204                           ; 1 bytes @ 0x16
  2205                           
  2206                           
  2207                           ; 1 bytes @ 0x16
  2208  0036                     	ds	1
  2209  0037                     initialiseADCPin@portNumber:
  2210  0037                     initialiseGPIO@gpioNumber:	
  2211                           ; 1 bytes @ 0x17
  2212                           
  2213  0037                     writeGPIO@gpioNumber:	
  2214                           ; 1 bytes @ 0x17
  2215                           
  2216  0037                     readGPIO@readB:	
  2217                           ; 1 bytes @ 0x17
  2218                           
  2219                           
  2220                           ; 1 bytes @ 0x17
  2221  0037                     	ds	1
  2222  0038                     initialiseADCPin@gpioNumber:
  2223  0038                     initialiseGPIO@portNumber:	
  2224                           ; 1 bytes @ 0x18
  2225                           
  2226  0038                     writeGPIO@portNumber:	
  2227                           ; 1 bytes @ 0x18
  2228                           
  2229  0038                     readGPIO@returnValueB:	
  2230                           ; 1 bytes @ 0x18
  2231                           
  2232                           
  2233                           ; 1 bytes @ 0x18
  2234  0038                     	ds	1
  2235  0039                     ??_setupPWM:
  2236  0039                     ??_initialiseCurrentSensors:	
  2237                           ; 1 bytes @ 0x19
  2238                           
  2239  0039                     ??_initialisePotentiometers:	
  2240                           ; 1 bytes @ 0x19
  2241                           
  2242  0039                     ??_currentTripReset:	
  2243                           ; 1 bytes @ 0x19
  2244                           
  2245  0039                     readGPIO@portNumber:	
  2246                           ; 1 bytes @ 0x19
  2247                           
  2248                           
  2249                           ; 1 bytes @ 0x19
  2250  0039                     	ds	1
  2251  003A                     readGPIO@portType:
  2252                           
  2253                           ; 1 bytes @ 0x1A
  2254  003A                     	ds	1
  2255  003B                     readGPIO@gpioNumber:
  2256                           
  2257                           ; 1 bytes @ 0x1B
  2258  003B                     	ds	1
  2259  003C                     ?_main:
  2260  003C                     main@argc:	
  2261                           ; 2 bytes @ 0x1C
  2262                           
  2263                           
  2264                           ; 2 bytes @ 0x1C
  2265  003C                     	ds	2
  2266  003E                     main@argv:
  2267                           
  2268                           ; 2 bytes @ 0x1E
  2269  003E                     	ds	2
  2270  0040                     ??_main:
  2271                           
  2272                           	psect	maintext
  2273  06E3                     __pmaintext:	
  2274                           ; 1 bytes @ 0x20
  2275 ;;
  2276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2277 ;;
  2278 ;; *************** function _main *****************
  2279 ;; Defined at:
  2280 ;;		line 103 in file "main.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  argc            2   28[BANK0 ] int 
  2283 ;;  argv            2   30[BANK0 ] PTR PTR unsigned char 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2   28[BANK0 ] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : B1F/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2295 ;;      Params:         0       4       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0
  2298 ;;      Totals:         0       4       0       0       0       0
  2299 ;;Total ram usage:        4 bytes
  2300 ;; Hardware stack levels required when called: 6
  2301 ;; This function calls:
  2302 ;;		_initialiseADCModule
  2303 ;;		_initialiseCurrentSensors
  2304 ;;		_initialiseGPIO
  2305 ;;		_initialisePotentiometers
  2306 ;;		_readGPIO
  2307 ;;		_setupInternalOscillator
  2308 ;;		_setupPWM
  2309 ;;		_setupTimer0Interrupt
  2310 ;;		_transToCurrentModeControl
  2311 ;;		_transToPotControl
  2312 ;;		_transToVoltageModeControl
  2313 ;; This function is called by:
  2314 ;;		Startup code after reset
  2315 ;; This function uses a non-reentrant model
  2316 ;;
  2317                           
  2318  06E3                     _main:	
  2319                           ;psect for function _main
  2320                           
  2321  06E3                     l2458:	
  2322                           ;incstack = 0
  2323                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2324                           
  2325                           
  2326                           ;main.c: 105:     setupInternalOscillator(freq32M);
  2327  06E3  300A               	movlw	10
  2328  06E4  3181  2184  3186   	fcall	_setupInternalOscillator
  2329  06E7                     l2460:
  2330                           
  2331                           ;main.c: 107:     setupPWM();
  2332  06E7  3187  27A9  3186   	fcall	_setupPWM
  2333  06EA                     l2462:
  2334                           
  2335                           ;main.c: 108:     setupTimer0Interrupt();
  2336  06EA  318F  27E3  3186   	fcall	_setupTimer0Interrupt
  2337  06ED                     l2464:
  2338                           
  2339                           ;main.c: 109:     initialiseADCModule();
  2340  06ED  318F  27CB  3186   	fcall	_initialiseADCModule
  2341  06F0                     l2466:
  2342                           
  2343                           ;main.c: 110:     initialiseCurrentSensors();
  2344  06F0  3187  276A  3186   	fcall	_initialiseCurrentSensors
  2345  06F3                     l2468:
  2346                           
  2347                           ;main.c: 111:     initialisePotentiometers();
  2348  06F3  3187  27F6  3186   	fcall	_initialisePotentiometers
  2349  06F6                     l2470:
  2350                           
  2351                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  2352  06F6  0020               	movlb	0	; select bank0
  2353  06F7  01B3               	clrf	initialiseGPIO@direction
  2354  06F8  300C               	movlw	12
  2355  06F9  3182  225F  3186   	fcall	_initialiseGPIO
  2356  06FC                     l2472:
  2357                           
  2358                           ;main.c: 114:         if(1) transToVoltageModeControl();
  2359  06FC  3008               	movlw	8
  2360  06FD  3186  266C  3186   	fcall	_readGPIO
  2361  0700  3A01               	xorlw	1
  2362  0701  1903               	skipnz
  2363  0702  2F04               	goto	u2241
  2364  0703  2F05               	goto	u2240
  2365  0704                     u2241:
  2366  0704  2F0C               	goto	l2476
  2367  0705                     u2240:
  2368  0705                     l2474:
  2369  0705  318F  27D7  3186   	fcall	_transToVoltageModeControl
  2370  0708                     l110:	
  2371                           ;main.c: 115:         if(~1) transToCurrentModeControl();
  2372                           
  2373  0708  318F  27D1  3186   	fcall	_transToCurrentModeControl
  2374  070B  2F0F               	goto	l113
  2375  070C                     l2476:
  2376  070C  318F  27C7  3186   	fcall	_transToPotControl
  2377  070F                     l113:	
  2378                           ;main.c: 119:     while(1){
  2379                           
  2380  070F  2F0F               	goto	l113
  2381  0710  3180  2882         	ljmp	start
  2382  0712                     __end_of_main:
  2383                           
  2384                           	psect	text1
  2385  0FD7                     __ptext1:	
  2386 ;; *************** function _transToVoltageModeControl *****************
  2387 ;; Defined at:
  2388 ;;		line 27 in file "StateMachine.c"
  2389 ;; Parameters:    Size  Location     Type
  2390 ;;		None
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;		None
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      void 
  2395 ;; Registers used:
  2396 ;;		wreg
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2402 ;;      Params:         0       0       0       0       0       0
  2403 ;;      Locals:         0       0       0       0       0       0
  2404 ;;      Temps:          0       1       0       0       0       0
  2405 ;;      Totals:         0       1       0       0       0       0
  2406 ;;Total ram usage:        1 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 3
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_main
  2413 ;; This function uses a non-reentrant model
  2414 ;;
  2415                           
  2416  0FD7                     _transToVoltageModeControl:	
  2417                           ;psect for function _transToVoltageModeControl
  2418                           
  2419  0FD7                     l2386:	
  2420                           ;incstack = 0
  2421                           ; Regs used in _transToVoltageModeControl: [wreg]
  2422                           
  2423                           
  2424                           ;StateMachine.c: 28:     currentState = voltageModeControl;
  2425  0FD7  3002               	movlw	2
  2426  0FD8  0020               	movlb	0	; select bank0
  2427  0FD9  00B3               	movwf	??_transToVoltageModeControl
  2428  0FDA  0833               	movf	??_transToVoltageModeControl,w
  2429  0FDB  00DA               	movwf	_currentState
  2430  0FDC                     l516:
  2431  0FDC  0008               	return
  2432  0FDD                     __end_of_transToVoltageModeControl:
  2433                           
  2434                           	psect	text2
  2435  0FC7                     __ptext2:	
  2436 ;; *************** function _transToPotControl *****************
  2437 ;; Defined at:
  2438 ;;		line 18 in file "StateMachine.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;		None
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;		None
  2443 ;; Return value:  Size  Location     Type
  2444 ;;                  1    wreg      void 
  2445 ;; Registers used:
  2446 ;;		None
  2447 ;; Tracked objects:
  2448 ;;		On entry : 0/0
  2449 ;;		On exit  : 0/0
  2450 ;;		Unchanged: 0/0
  2451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2452 ;;      Params:         0       0       0       0       0       0
  2453 ;;      Locals:         0       0       0       0       0       0
  2454 ;;      Temps:          0       0       0       0       0       0
  2455 ;;      Totals:         0       0       0       0       0       0
  2456 ;;Total ram usage:        0 bytes
  2457 ;; Hardware stack levels used: 1
  2458 ;; Hardware stack levels required when called: 3
  2459 ;; This function calls:
  2460 ;;		Nothing
  2461 ;; This function is called by:
  2462 ;;		_main
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466  0FC7                     _transToPotControl:	
  2467                           ;psect for function _transToPotControl
  2468                           
  2469  0FC7                     l2390:	
  2470                           ;incstack = 0
  2471                           ; Regs used in _transToPotControl: []
  2472                           
  2473                           
  2474                           ;StateMachine.c: 19:     currentState = potControl;
  2475  0FC7  0020               	movlb	0	; select bank0
  2476  0FC8  01DA               	clrf	_currentState
  2477  0FC9  0ADA               	incf	_currentState,f
  2478  0FCA                     l513:
  2479  0FCA  0008               	return
  2480  0FCB                     __end_of_transToPotControl:
  2481                           
  2482                           	psect	text3
  2483  0FD1                     __ptext3:	
  2484 ;; *************** function _transToCurrentModeControl *****************
  2485 ;; Defined at:
  2486 ;;		line 36 in file "StateMachine.c"
  2487 ;; Parameters:    Size  Location     Type
  2488 ;;		None
  2489 ;; Auto vars:     Size  Location     Type
  2490 ;;		None
  2491 ;; Return value:  Size  Location     Type
  2492 ;;                  1    wreg      void 
  2493 ;; Registers used:
  2494 ;;		wreg
  2495 ;; Tracked objects:
  2496 ;;		On entry : 0/0
  2497 ;;		On exit  : 0/0
  2498 ;;		Unchanged: 0/0
  2499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2500 ;;      Params:         0       0       0       0       0       0
  2501 ;;      Locals:         0       0       0       0       0       0
  2502 ;;      Temps:          0       1       0       0       0       0
  2503 ;;      Totals:         0       1       0       0       0       0
  2504 ;;Total ram usage:        1 bytes
  2505 ;; Hardware stack levels used: 1
  2506 ;; Hardware stack levels required when called: 3
  2507 ;; This function calls:
  2508 ;;		Nothing
  2509 ;; This function is called by:
  2510 ;;		_main
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514  0FD1                     _transToCurrentModeControl:	
  2515                           ;psect for function _transToCurrentModeControl
  2516                           
  2517  0FD1                     l2388:	
  2518                           ;incstack = 0
  2519                           ; Regs used in _transToCurrentModeControl: [wreg]
  2520                           
  2521                           
  2522                           ;StateMachine.c: 37:     currentState = currentModeControl;
  2523  0FD1  3003               	movlw	3
  2524  0FD2  0020               	movlb	0	; select bank0
  2525  0FD3  00B3               	movwf	??_transToCurrentModeControl
  2526  0FD4  0833               	movf	??_transToCurrentModeControl,w
  2527  0FD5  00DA               	movwf	_currentState
  2528  0FD6                     l519:
  2529  0FD6  0008               	return
  2530  0FD7                     __end_of_transToCurrentModeControl:
  2531                           
  2532                           	psect	text4
  2533  0FE3                     __ptext4:	
  2534 ;; *************** function _setupTimer0Interrupt *****************
  2535 ;; Defined at:
  2536 ;;		line 17 in file "Timer0.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2550 ;;      Params:         0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0
  2552 ;;      Temps:          0       0       0       0       0       0
  2553 ;;      Totals:         0       0       0       0       0       0
  2554 ;;Total ram usage:        0 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 3
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564  0FE3                     _setupTimer0Interrupt:	
  2565                           ;psect for function _setupTimer0Interrupt
  2566                           
  2567  0FE3                     l2342:	
  2568                           ;incstack = 0
  2569                           ; Regs used in _setupTimer0Interrupt: [wreg]
  2570                           
  2571                           
  2572                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  2573  0FE3  178B               	bsf	11,7	;volatile
  2574                           
  2575                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  2576  0FE4  168B               	bsf	11,5	;volatile
  2577                           
  2578                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  2579  0FE5  0021               	movlb	1	; select bank1
  2580  0FE6  1295               	bcf	21,5	;volatile
  2581                           
  2582                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  2583  0FE7  1195               	bcf	21,3	;volatile
  2584  0FE8                     l2344:
  2585                           
  2586                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  2587  0FE8  3004               	movlw	4
  2588  0FE9  0095               	movwf	21	;volatile
  2589  0FEA                     l194:
  2590  0FEA  0008               	return
  2591  0FEB                     __end_of_setupTimer0Interrupt:
  2592                           
  2593                           	psect	text5
  2594  07A9                     __ptext5:	
  2595 ;; *************** function _setupPWM *****************
  2596 ;; Defined at:
  2597 ;;		line 16 in file "PWM.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;		None
  2600 ;; Auto vars:     Size  Location     Type
  2601 ;;		None
  2602 ;; Return value:  Size  Location     Type
  2603 ;;                  1    wreg      void 
  2604 ;; Registers used:
  2605 ;;		wreg, status,2, status,0, pclath, cstack
  2606 ;; Tracked objects:
  2607 ;;		On entry : 0/0
  2608 ;;		On exit  : 0/0
  2609 ;;		Unchanged: 0/0
  2610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2611 ;;      Params:         0       0       0       0       0       0
  2612 ;;      Locals:         0       0       0       0       0       0
  2613 ;;      Temps:          0       0       0       0       0       0
  2614 ;;      Totals:         0       0       0       0       0       0
  2615 ;;Total ram usage:        0 bytes
  2616 ;; Hardware stack levels used: 1
  2617 ;; Hardware stack levels required when called: 4
  2618 ;; This function calls:
  2619 ;;		_initialiseGPIO
  2620 ;; This function is called by:
  2621 ;;		_main
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625  07A9                     _setupPWM:	
  2626                           ;psect for function _setupPWM
  2627                           
  2628  07A9                     l2318:	
  2629                           ;incstack = 0
  2630                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2631                           
  2632                           
  2633                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2634  07A9  300C               	movlw	12
  2635  07AA  0025               	movlb	5	; select bank5
  2636  07AB  0093               	movwf	19	;volatile
  2637  07AC                     l2320:
  2638                           
  2639                           ;PWM.c: 20:     PR2 = 0;
  2640  07AC  0020               	movlb	0	; select bank0
  2641  07AD  019B               	clrf	27	;volatile
  2642  07AE                     l2322:
  2643                           
  2644                           ;PWM.c: 21:     CCPR1L = 0;
  2645  07AE  0025               	movlb	5	; select bank5
  2646  07AF  0191               	clrf	17	;volatile
  2647  07B0                     l2324:
  2648                           
  2649                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2650  07B0  0022               	movlb	2	; select bank2
  2651  07B1  151D               	bsf	29,2	;volatile
  2652  07B2                     l2326:
  2653                           
  2654                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2655  07B2  0025               	movlb	5	; select bank5
  2656  07B3  1596               	bsf	22,3	;volatile
  2657  07B4                     l2328:
  2658                           
  2659                           ;PWM.c: 25:     PSTR1CONbits.STR1A = 0;
  2660  07B4  1016               	bcf	22,0	;volatile
  2661  07B5                     l2330:
  2662                           
  2663                           ;PWM.c: 27:     T2CONbits.T2CKPS = 0b00;
  2664  07B5  30FC               	movlw	-4
  2665  07B6  0020               	movlb	0	; select bank0
  2666  07B7  059C               	andwf	28,f	;volatile
  2667  07B8                     l2332:
  2668                           
  2669                           ;PWM.c: 28:     PIE1bits.TMR2IE = 0;
  2670  07B8  0021               	movlb	1	; select bank1
  2671  07B9  1091               	bcf	17,1	;volatile
  2672  07BA                     l2334:
  2673                           
  2674                           ;PWM.c: 29:     T2CONbits.TMR2ON = 1;
  2675  07BA  0020               	movlb	0	; select bank0
  2676  07BB  151C               	bsf	28,2	;volatile
  2677  07BC                     l2336:
  2678                           
  2679                           ;PWM.c: 31:     INTCONbits.PEIE = 1;
  2680  07BC  170B               	bsf	11,6	;volatile
  2681  07BD                     l2338:
  2682                           
  2683                           ;PWM.c: 32:     PIE1bits.CCP1IE = 1;
  2684  07BD  0021               	movlb	1	; select bank1
  2685  07BE  1511               	bsf	17,2	;volatile
  2686  07BF                     l2340:
  2687                           
  2688                           ;PWM.c: 36:     initialiseGPIO(pinRA6, 0);
  2689  07BF  0020               	movlb	0	; select bank0
  2690  07C0  01B3               	clrf	initialiseGPIO@direction
  2691  07C1  3006               	movlw	6
  2692  07C2  3182  225F  3187   	fcall	_initialiseGPIO
  2693  07C5                     l167:
  2694  07C5  0008               	return
  2695  07C6                     __end_of_setupPWM:
  2696                           
  2697                           	psect	text6
  2698  0184                     __ptext6:	
  2699 ;; *************** function _setupInternalOscillator *****************
  2700 ;; Defined at:
  2701 ;;		line 130 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;  selectedFreq    1    wreg     const enum E2840
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;  selectedFreq    1   21[BANK0 ] const enum E2840
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2715 ;;      Params:         0       0       0       0       0       0
  2716 ;;      Locals:         0       1       0       0       0       0
  2717 ;;      Temps:          0       2       0       0       0       0
  2718 ;;      Totals:         0       3       0       0       0       0
  2719 ;;Total ram usage:        3 bytes
  2720 ;; Hardware stack levels used: 1
  2721 ;; Hardware stack levels required when called: 3
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_main
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729  0184                     _setupInternalOscillator:	
  2730                           ;psect for function _setupInternalOscillator
  2731                           
  2732                           
  2733                           ;incstack = 0
  2734                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2735                           ;setupInternalOscillator@selectedFreq stored from wreg
  2736  0184  0020               	movlb	0	; select bank0
  2737  0185  00B5               	movwf	setupInternalOscillator@selectedFreq
  2738  0186                     l2240:
  2739                           
  2740                           ;main.c: 134:     switch(selectedFreq){
  2741  0186  2A33               	goto	l2310
  2742  0187                     l2242:
  2743  0187  3087               	movlw	-121
  2744  0188  0021               	movlb	1	; select bank1
  2745  0189  0599               	andwf	25,f	;volatile
  2746  018A                     l2244:
  2747  018A  1399               	bcf	25,7	;volatile
  2748  018B                     l2246:
  2749  018B  3000               	movlw	0
  2750  018C  0020               	movlb	0	; select bank0
  2751  018D  00C3               	movwf	_clockFrequency+3
  2752  018E  3000               	movlw	0
  2753  018F  00C2               	movwf	_clockFrequency+2
  2754  0190  3079               	movlw	121
  2755  0191  00C1               	movwf	_clockFrequency+1
  2756  0192  3018               	movlw	24
  2757  0193  00C0               	movwf	_clockFrequency
  2758  0194  2A5E               	goto	l132
  2759  0195                     l2248:
  2760  0195  0021               	movlb	1	; select bank1
  2761  0196  0819               	movf	25,w	;volatile
  2762  0197  3987               	andlw	-121
  2763  0198  3820               	iorlw	32
  2764  0199  0099               	movwf	25	;volatile
  2765  019A                     l2250:
  2766  019A  1399               	bcf	25,7	;volatile
  2767  019B                     l2252:
  2768  019B  3000               	movlw	0
  2769  019C  0020               	movlb	0	; select bank0
  2770  019D  00C3               	movwf	_clockFrequency+3
  2771  019E  3000               	movlw	0
  2772  019F  00C2               	movwf	_clockFrequency+2
  2773  01A0  30F4               	movlw	244
  2774  01A1  00C1               	movwf	_clockFrequency+1
  2775  01A2  3024               	movlw	36
  2776  01A3  00C0               	movwf	_clockFrequency
  2777  01A4  2A5E               	goto	l132
  2778  01A5                     l2254:
  2779  01A5  0021               	movlb	1	; select bank1
  2780  01A6  0819               	movf	25,w	;volatile
  2781  01A7  3987               	andlw	-121
  2782  01A8  3828               	iorlw	40
  2783  01A9  0099               	movwf	25	;volatile
  2784  01AA                     l2256:
  2785  01AA  1399               	bcf	25,7	;volatile
  2786  01AB                     l2258:
  2787  01AB  3000               	movlw	0
  2788  01AC  0020               	movlb	0	; select bank0
  2789  01AD  00C3               	movwf	_clockFrequency+3
  2790  01AE  3001               	movlw	1
  2791  01AF  00C2               	movwf	_clockFrequency+2
  2792  01B0  30E8               	movlw	232
  2793  01B1  00C1               	movwf	_clockFrequency+1
  2794  01B2  3048               	movlw	72
  2795  01B3  00C0               	movwf	_clockFrequency
  2796  01B4  2A5E               	goto	l132
  2797  01B5                     l2260:
  2798  01B5  0021               	movlb	1	; select bank1
  2799  01B6  0819               	movf	25,w	;volatile
  2800  01B7  3987               	andlw	-121
  2801  01B8  3830               	iorlw	48
  2802  01B9  0099               	movwf	25	;volatile
  2803  01BA                     l2262:
  2804  01BA  1399               	bcf	25,7	;volatile
  2805  01BB                     l2264:
  2806  01BB  3000               	movlw	0
  2807  01BC  0020               	movlb	0	; select bank0
  2808  01BD  00C3               	movwf	_clockFrequency+3
  2809  01BE  3003               	movlw	3
  2810  01BF  00C2               	movwf	_clockFrequency+2
  2811  01C0  30D0               	movlw	208
  2812  01C1  00C1               	movwf	_clockFrequency+1
  2813  01C2  3090               	movlw	144
  2814  01C3  00C0               	movwf	_clockFrequency
  2815  01C4  2A5E               	goto	l132
  2816  01C5                     l2266:
  2817  01C5  0021               	movlb	1	; select bank1
  2818  01C6  0819               	movf	25,w	;volatile
  2819  01C7  3987               	andlw	-121
  2820  01C8  3838               	iorlw	56
  2821  01C9  0099               	movwf	25	;volatile
  2822  01CA                     l2268:
  2823  01CA  1399               	bcf	25,7	;volatile
  2824  01CB                     l2270:
  2825  01CB  3000               	movlw	0
  2826  01CC  0020               	movlb	0	; select bank0
  2827  01CD  00C3               	movwf	_clockFrequency+3
  2828  01CE  3007               	movlw	7
  2829  01CF  00C2               	movwf	_clockFrequency+2
  2830  01D0  30A1               	movlw	161
  2831  01D1  00C1               	movwf	_clockFrequency+1
  2832  01D2  3020               	movlw	32
  2833  01D3  00C0               	movwf	_clockFrequency
  2834  01D4  2A5E               	goto	l132
  2835  01D5                     l2272:
  2836  01D5  0021               	movlb	1	; select bank1
  2837  01D6  0819               	movf	25,w	;volatile
  2838  01D7  3987               	andlw	-121
  2839  01D8  3858               	iorlw	88
  2840  01D9  0099               	movwf	25	;volatile
  2841  01DA                     l2274:
  2842  01DA  1399               	bcf	25,7	;volatile
  2843  01DB                     l2276:
  2844  01DB  3000               	movlw	0
  2845  01DC  0020               	movlb	0	; select bank0
  2846  01DD  00C3               	movwf	_clockFrequency+3
  2847  01DE  300F               	movlw	15
  2848  01DF  00C2               	movwf	_clockFrequency+2
  2849  01E0  3042               	movlw	66
  2850  01E1  00C1               	movwf	_clockFrequency+1
  2851  01E2  3040               	movlw	64
  2852  01E3  00C0               	movwf	_clockFrequency
  2853  01E4  2A5E               	goto	l132
  2854  01E5                     l2278:
  2855  01E5  0021               	movlb	1	; select bank1
  2856  01E6  0819               	movf	25,w	;volatile
  2857  01E7  3987               	andlw	-121
  2858  01E8  3860               	iorlw	96
  2859  01E9  0099               	movwf	25	;volatile
  2860  01EA                     l2280:
  2861  01EA  1399               	bcf	25,7	;volatile
  2862  01EB                     l2282:
  2863  01EB  3000               	movlw	0
  2864  01EC  0020               	movlb	0	; select bank0
  2865  01ED  00C3               	movwf	_clockFrequency+3
  2866  01EE  301E               	movlw	30
  2867  01EF  00C2               	movwf	_clockFrequency+2
  2868  01F0  3084               	movlw	132
  2869  01F1  00C1               	movwf	_clockFrequency+1
  2870  01F2  3080               	movlw	128
  2871  01F3  00C0               	movwf	_clockFrequency
  2872  01F4  2A5E               	goto	l132
  2873  01F5                     l2284:
  2874  01F5  0021               	movlb	1	; select bank1
  2875  01F6  0819               	movf	25,w	;volatile
  2876  01F7  3987               	andlw	-121
  2877  01F8  3868               	iorlw	104
  2878  01F9  0099               	movwf	25	;volatile
  2879  01FA                     l2286:
  2880  01FA  1399               	bcf	25,7	;volatile
  2881  01FB                     l2288:
  2882  01FB  3000               	movlw	0
  2883  01FC  0020               	movlb	0	; select bank0
  2884  01FD  00C3               	movwf	_clockFrequency+3
  2885  01FE  303D               	movlw	61
  2886  01FF  00C2               	movwf	_clockFrequency+2
  2887  0200  3009               	movlw	9
  2888  0201  00C1               	movwf	_clockFrequency+1
  2889  0202  3000               	movlw	0
  2890  0203  00C0               	movwf	_clockFrequency
  2891  0204  2A5E               	goto	l132
  2892  0205                     l2290:
  2893  0205  0021               	movlb	1	; select bank1
  2894  0206  0819               	movf	25,w	;volatile
  2895  0207  3987               	andlw	-121
  2896  0208  3870               	iorlw	112
  2897  0209  0099               	movwf	25	;volatile
  2898  020A                     l2292:
  2899  020A  1399               	bcf	25,7	;volatile
  2900  020B                     l2294:
  2901  020B  3000               	movlw	0
  2902  020C  0020               	movlb	0	; select bank0
  2903  020D  00C3               	movwf	_clockFrequency+3
  2904  020E  307A               	movlw	122
  2905  020F  00C2               	movwf	_clockFrequency+2
  2906  0210  3012               	movlw	18
  2907  0211  00C1               	movwf	_clockFrequency+1
  2908  0212  3000               	movlw	0
  2909  0213  00C0               	movwf	_clockFrequency
  2910  0214  2A5E               	goto	l132
  2911  0215                     l2296:
  2912  0215  3078               	movlw	120
  2913  0216  0021               	movlb	1	; select bank1
  2914  0217  0499               	iorwf	25,f	;volatile
  2915  0218                     l2298:
  2916  0218  1399               	bcf	25,7	;volatile
  2917  0219                     l2300:
  2918  0219  3000               	movlw	0
  2919  021A  0020               	movlb	0	; select bank0
  2920  021B  00C3               	movwf	_clockFrequency+3
  2921  021C  30F4               	movlw	244
  2922  021D  00C2               	movwf	_clockFrequency+2
  2923  021E  3024               	movlw	36
  2924  021F  00C1               	movwf	_clockFrequency+1
  2925  0220  3000               	movlw	0
  2926  0221  00C0               	movwf	_clockFrequency
  2927  0222  2A5E               	goto	l132
  2928  0223                     l2302:
  2929  0223  0021               	movlb	1	; select bank1
  2930  0224  0819               	movf	25,w	;volatile
  2931  0225  3987               	andlw	-121
  2932  0226  3870               	iorlw	112
  2933  0227  0099               	movwf	25	;volatile
  2934  0228                     l2304:
  2935  0228  1799               	bsf	25,7	;volatile
  2936  0229                     l2306:
  2937  0229  3001               	movlw	1
  2938  022A  0020               	movlb	0	; select bank0
  2939  022B  00C3               	movwf	_clockFrequency+3
  2940  022C  30E8               	movlw	232
  2941  022D  00C2               	movwf	_clockFrequency+2
  2942  022E  3048               	movlw	72
  2943  022F  00C1               	movwf	_clockFrequency+1
  2944  0230  3000               	movlw	0
  2945  0231  00C0               	movwf	_clockFrequency
  2946  0232  2A5E               	goto	l132
  2947  0233                     l2310:
  2948  0233  0835               	movf	setupInternalOscillator@selectedFreq,w
  2949  0234  00B3               	movwf	??_setupInternalOscillator
  2950  0235  01B4               	clrf	??_setupInternalOscillator+1
  2951                           
  2952                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2953                           ; Switch size 1, requested type "simple"
  2954                           ; Number of cases is 1, Range of values is 0 to 0
  2955                           ; switch strategies available:
  2956                           ; Name         Instructions Cycles
  2957                           ; simple_byte            4     3 (average)
  2958                           ; direct_byte            8     6 (fixed)
  2959                           ; jumptable            260     6 (fixed)
  2960                           ;	Chosen strategy is simple_byte
  2961  0236  0834               	movf	??_setupInternalOscillator+1,w
  2962  0237  3A00               	xorlw	0	; case 0
  2963  0238  1903               	skipnz
  2964  0239  2A3B               	goto	l2556
  2965  023A  2A5E               	goto	l132
  2966  023B                     l2556:
  2967                           
  2968                           ; Switch size 1, requested type "simple"
  2969                           ; Number of cases is 11, Range of values is 0 to 10
  2970                           ; switch strategies available:
  2971                           ; Name         Instructions Cycles
  2972                           ; direct_byte           28     6 (fixed)
  2973                           ; simple_byte           34    18 (average)
  2974                           ; jumptable            260     6 (fixed)
  2975                           ;	Chosen strategy is simple_byte
  2976  023B  0833               	movf	??_setupInternalOscillator,w
  2977  023C  3A00               	xorlw	0	; case 0
  2978  023D  1903               	skipnz
  2979  023E  2987               	goto	l2242
  2980  023F  3A01               	xorlw	1	; case 1
  2981  0240  1903               	skipnz
  2982  0241  2995               	goto	l2248
  2983  0242  3A03               	xorlw	3	; case 2
  2984  0243  1903               	skipnz
  2985  0244  29A5               	goto	l2254
  2986  0245  3A01               	xorlw	1	; case 3
  2987  0246  1903               	skipnz
  2988  0247  29B5               	goto	l2260
  2989  0248  3A07               	xorlw	7	; case 4
  2990  0249  1903               	skipnz
  2991  024A  29C5               	goto	l2266
  2992  024B  3A01               	xorlw	1	; case 5
  2993  024C  1903               	skipnz
  2994  024D  29D5               	goto	l2272
  2995  024E  3A03               	xorlw	3	; case 6
  2996  024F  1903               	skipnz
  2997  0250  29E5               	goto	l2278
  2998  0251  3A01               	xorlw	1	; case 7
  2999  0252  1903               	skipnz
  3000  0253  29F5               	goto	l2284
  3001  0254  3A0F               	xorlw	15	; case 8
  3002  0255  1903               	skipnz
  3003  0256  2A05               	goto	l2290
  3004  0257  3A01               	xorlw	1	; case 9
  3005  0258  1903               	skipnz
  3006  0259  2A15               	goto	l2296
  3007  025A  3A03               	xorlw	3	; case 10
  3008  025B  1903               	skipnz
  3009  025C  2A23               	goto	l2302
  3010  025D  2A5E               	goto	l132
  3011  025E                     l132:
  3012  025E  0008               	return
  3013  025F                     __end_of_setupInternalOscillator:
  3014                           
  3015                           	psect	text7
  3016  066C                     __ptext7:	
  3017 ;; *************** function _readGPIO *****************
  3018 ;; Defined at:
  3019 ;;		line 79 in file "GPIO.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  gpioNumber      1    wreg     const enum E2798
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;  gpioNumber      1   27[BANK0 ] const enum E2798
  3024 ;;  returnValueB    1   24[BANK0 ] unsigned char 
  3025 ;;  readB           1   23[BANK0 ] unsigned char 
  3026 ;;  returnValueA    1   22[BANK0 ] unsigned char 
  3027 ;;  readA           1   21[BANK0 ] unsigned char 
  3028 ;;  portType        1   26[BANK0 ] unsigned char 
  3029 ;;  portNumber      1   25[BANK0 ] unsigned char 
  3030 ;; Return value:  Size  Location     Type
  3031 ;;                  1    wreg      _Bool 
  3032 ;; Registers used:
  3033 ;;		wreg, status,2, status,0
  3034 ;; Tracked objects:
  3035 ;;		On entry : 0/0
  3036 ;;		On exit  : 0/0
  3037 ;;		Unchanged: 0/0
  3038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3039 ;;      Params:         0       0       0       0       0       0
  3040 ;;      Locals:         0       7       0       0       0       0
  3041 ;;      Temps:          0       2       0       0       0       0
  3042 ;;      Totals:         0       9       0       0       0       0
  3043 ;;Total ram usage:        9 bytes
  3044 ;; Hardware stack levels used: 1
  3045 ;; Hardware stack levels required when called: 3
  3046 ;; This function calls:
  3047 ;;		Nothing
  3048 ;; This function is called by:
  3049 ;;		_main
  3050 ;; This function uses a non-reentrant model
  3051 ;;
  3052                           
  3053  066C                     _readGPIO:	
  3054                           ;psect for function _readGPIO
  3055                           
  3056                           
  3057                           ;incstack = 0
  3058                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  3059                           ;readGPIO@gpioNumber stored from wreg
  3060  066C  0020               	movlb	0	; select bank0
  3061  066D  00BB               	movwf	readGPIO@gpioNumber
  3062  066E                     l2352:
  3063                           
  3064                           ;GPIO.c: 81:     uint8_t portType = 0;
  3065  066E  01BA               	clrf	readGPIO@portType
  3066  066F                     l2354:
  3067                           
  3068                           ;GPIO.c: 82:     if(gpioNumber > 7){
  3069  066F  3008               	movlw	8
  3070  0670  023B               	subwf	readGPIO@gpioNumber,w
  3071  0671  1C03               	skipc
  3072  0672  2E74               	goto	u2001
  3073  0673  2E75               	goto	u2000
  3074  0674                     u2001:
  3075  0674  2E7D               	goto	l2360
  3076  0675                     u2000:
  3077  0675                     l2356:
  3078                           
  3079                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  3080  0675  083B               	movf	readGPIO@gpioNumber,w
  3081  0676  3EF8               	addlw	248
  3082  0677  00B3               	movwf	??_readGPIO
  3083  0678  0833               	movf	??_readGPIO,w
  3084  0679  00B9               	movwf	readGPIO@portNumber
  3085  067A                     l2358:
  3086                           
  3087                           ;GPIO.c: 84:         portType = 1;
  3088  067A  01BA               	clrf	readGPIO@portType
  3089  067B  0ABA               	incf	readGPIO@portType,f
  3090                           
  3091                           ;GPIO.c: 85:     }
  3092  067C  2E82               	goto	l2364
  3093  067D                     l2360:
  3094                           
  3095                           ;GPIO.c: 87:         portNumber = gpioNumber;
  3096  067D  083B               	movf	readGPIO@gpioNumber,w
  3097  067E  00B3               	movwf	??_readGPIO
  3098  067F  0833               	movf	??_readGPIO,w
  3099  0680  00B9               	movwf	readGPIO@portNumber
  3100  0681                     l2362:
  3101                           
  3102                           ;GPIO.c: 88:         portType = 0;
  3103  0681  01BA               	clrf	readGPIO@portType
  3104  0682                     l2364:
  3105                           
  3106                           ;GPIO.c: 91:     if(portType == 0){
  3107  0682  083A               	movf	readGPIO@portType,w
  3108  0683  1D03               	btfss	3,2
  3109  0684  2E86               	goto	u2011
  3110  0685  2E87               	goto	u2010
  3111  0686                     u2011:
  3112  0686  2E99               	goto	l2376
  3113  0687                     u2010:
  3114  0687                     l2366:
  3115                           
  3116                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  3117  0687  080C               	movf	12,w	;volatile
  3118  0688  00B3               	movwf	??_readGPIO
  3119  0689  0833               	movf	??_readGPIO,w
  3120  068A  00B5               	movwf	readGPIO@readA
  3121  068B                     l2368:
  3122                           
  3123                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  3124  068B  0835               	movf	readGPIO@readA,w
  3125  068C  00B3               	movwf	??_readGPIO
  3126  068D  0A39               	incf	readGPIO@portNumber,w
  3127  068E  2E90               	goto	u2024
  3128  068F                     u2025:
  3129  068F  36B3               	lsrf	??_readGPIO,f
  3130  0690                     u2024:
  3131  0690  0B89               	decfsz	9,f
  3132  0691  2E8F               	goto	u2025
  3133  0692  0833               	movf	??_readGPIO,w
  3134  0693  3901               	andlw	1
  3135  0694  00B4               	movwf	??_readGPIO+1
  3136  0695  0834               	movf	??_readGPIO+1,w
  3137  0696  00B6               	movwf	readGPIO@returnValueA
  3138  0697                     l2370:
  3139                           
  3140                           ;GPIO.c: 94:         return returnValueA;
  3141  0697  0836               	movf	readGPIO@returnValueA,w
  3142  0698  2EAF               	goto	l319
  3143  0699                     l2376:
  3144  0699  033A               	decf	readGPIO@portType,w
  3145  069A  1D03               	btfss	3,2
  3146  069B  2E9D               	goto	u2031
  3147  069C  2E9E               	goto	u2030
  3148  069D                     u2031:
  3149  069D  2EAF               	goto	l319
  3150  069E                     u2030:
  3151  069E                     l2378:
  3152                           
  3153                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  3154  069E  080D               	movf	13,w	;volatile
  3155  069F  00B3               	movwf	??_readGPIO
  3156  06A0  0833               	movf	??_readGPIO,w
  3157  06A1  00B7               	movwf	readGPIO@readB
  3158  06A2                     l2380:
  3159                           
  3160                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  3161  06A2  0837               	movf	readGPIO@readB,w
  3162  06A3  00B3               	movwf	??_readGPIO
  3163  06A4  0A39               	incf	readGPIO@portNumber,w
  3164  06A5  2EA7               	goto	u2044
  3165  06A6                     u2045:
  3166  06A6  36B3               	lsrf	??_readGPIO,f
  3167  06A7                     u2044:
  3168  06A7  0B89               	decfsz	9,f
  3169  06A8  2EA6               	goto	u2045
  3170  06A9  0833               	movf	??_readGPIO,w
  3171  06AA  3901               	andlw	1
  3172  06AB  00B4               	movwf	??_readGPIO+1
  3173  06AC  0834               	movf	??_readGPIO+1,w
  3174  06AD  00B8               	movwf	readGPIO@returnValueB
  3175  06AE                     l2382:
  3176                           
  3177                           ;GPIO.c: 99:         return returnValueB;
  3178  06AE  0838               	movf	readGPIO@returnValueB,w
  3179  06AF                     l319:
  3180  06AF  0008               	return
  3181  06B0                     __end_of_readGPIO:
  3182                           
  3183                           	psect	text8
  3184  07F6                     __ptext8:	
  3185 ;; *************** function _initialisePotentiometers *****************
  3186 ;; Defined at:
  3187 ;;		line 15 in file "Potentiometer.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      void 
  3194 ;; Registers used:
  3195 ;;		wreg, status,2, status,0, pclath, cstack
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3201 ;;      Params:         0       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; Hardware stack levels required when called: 4
  3208 ;; This function calls:
  3209 ;;		_initialiseADCPin
  3210 ;; This function is called by:
  3211 ;;		_main
  3212 ;; This function uses a non-reentrant model
  3213 ;;
  3214                           
  3215  07F6                     _initialisePotentiometers:	
  3216                           ;psect for function _initialisePotentiometers
  3217                           
  3218  07F6                     l2350:	
  3219                           ;incstack = 0
  3220                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  3221                           
  3222                           
  3223                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  3224  07F6  3009               	movlw	9
  3225  07F7  3182  22DB  3187   	fcall	_initialiseADCPin
  3226                           
  3227                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  3228  07FA  300A               	movlw	10
  3229  07FB  3182  22DB  3187   	fcall	_initialiseADCPin
  3230  07FE                     l350:
  3231  07FE  0008               	return
  3232  07FF                     __end_of_initialisePotentiometers:
  3233                           
  3234                           	psect	text9
  3235  076A                     __ptext9:	
  3236 ;; *************** function _initialiseCurrentSensors *****************
  3237 ;; Defined at:
  3238 ;;		line 17 in file "CurrentSensor.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;		None
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  1    wreg      void 
  3245 ;; Registers used:
  3246 ;;		wreg, status,2, status,0, pclath, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3252 ;;      Params:         0       0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0
  3254 ;;      Temps:          0       0       0       0       0       0
  3255 ;;      Totals:         0       0       0       0       0       0
  3256 ;;Total ram usage:        0 bytes
  3257 ;; Hardware stack levels used: 1
  3258 ;; Hardware stack levels required when called: 5
  3259 ;; This function calls:
  3260 ;;		_currentTripReset
  3261 ;;		_initialiseADCPin
  3262 ;;		_initialiseGPIO
  3263 ;; This function is called by:
  3264 ;;		_main
  3265 ;; This function uses a non-reentrant model
  3266 ;;
  3267                           
  3268  076A                     _initialiseCurrentSensors:	
  3269                           ;psect for function _initialiseCurrentSensors
  3270                           
  3271  076A                     l2348:	
  3272                           ;incstack = 0
  3273                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  3274                           
  3275                           
  3276                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  3277  076A  0020               	movlb	0	; select bank0
  3278  076B  01B3               	clrf	initialiseGPIO@direction
  3279  076C  0AB3               	incf	initialiseGPIO@direction,f
  3280  076D  3003               	movlw	3
  3281  076E  3182  225F  3187   	fcall	_initialiseGPIO
  3282                           
  3283                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  3284  0771  0020               	movlb	0	; select bank0
  3285  0772  01B3               	clrf	initialiseGPIO@direction
  3286  0773  0AB3               	incf	initialiseGPIO@direction,f
  3287  0774  3001               	movlw	1
  3288  0775  3182  225F  3187   	fcall	_initialiseGPIO
  3289                           
  3290                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  3291  0778  3000               	movlw	0
  3292  0779  3182  22DB  3187   	fcall	_initialiseADCPin
  3293                           
  3294                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  3295  077C  3002               	movlw	2
  3296  077D  3182  22DB  3187   	fcall	_initialiseADCPin
  3297                           
  3298                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  3299  0780  0020               	movlb	0	; select bank0
  3300  0781  01B3               	clrf	initialiseGPIO@direction
  3301  0782  300B               	movlw	11
  3302  0783  3182  225F  3187   	fcall	_initialiseGPIO
  3303                           
  3304                           ;CurrentSensor.c: 23:     currentTripReset();
  3305  0786  3187  27E8  3187   	fcall	_currentTripReset
  3306  0789                     l473:
  3307  0789  0008               	return
  3308  078A                     __end_of_initialiseCurrentSensors:
  3309                           
  3310                           	psect	text10
  3311  025F                     __ptext10:	
  3312 ;; *************** function _initialiseGPIO *****************
  3313 ;; Defined at:
  3314 ;;		line 18 in file "GPIO.c"
  3315 ;; Parameters:    Size  Location     Type
  3316 ;;  gpioNumber      1    wreg     const enum E2798
  3317 ;;  direction       1   19[BANK0 ] unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  3320 ;;  portNumber      1   24[BANK0 ] unsigned char 
  3321 ;;  portType        1   22[BANK0 ] unsigned char 
  3322 ;; Return value:  Size  Location     Type
  3323 ;;                  1    wreg      void 
  3324 ;; Registers used:
  3325 ;;		wreg, status,2, status,0
  3326 ;; Tracked objects:
  3327 ;;		On entry : 0/0
  3328 ;;		On exit  : 0/0
  3329 ;;		Unchanged: 0/0
  3330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3331 ;;      Params:         0       1       0       0       0       0
  3332 ;;      Locals:         0       3       0       0       0       0
  3333 ;;      Temps:          0       2       0       0       0       0
  3334 ;;      Totals:         0       6       0       0       0       0
  3335 ;;Total ram usage:        6 bytes
  3336 ;; Hardware stack levels used: 1
  3337 ;; Hardware stack levels required when called: 3
  3338 ;; This function calls:
  3339 ;;		Nothing
  3340 ;; This function is called by:
  3341 ;;		_main
  3342 ;;		_setupPWM
  3343 ;;		_initialiseCurrentSensors
  3344 ;; This function uses a non-reentrant model
  3345 ;;
  3346                           
  3347  025F                     _initialiseGPIO:	
  3348                           ;psect for function _initialiseGPIO
  3349                           
  3350                           
  3351                           ;incstack = 0
  3352                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  3353                           ;initialiseGPIO@gpioNumber stored from wreg
  3354  025F  0020               	movlb	0	; select bank0
  3355  0260  00B7               	movwf	initialiseGPIO@gpioNumber
  3356  0261                     l1872:
  3357                           
  3358                           ;GPIO.c: 20:     uint8_t portType = 0;
  3359  0261  01B6               	clrf	initialiseGPIO@portType
  3360  0262                     l1874:
  3361                           
  3362                           ;GPIO.c: 21:     if(gpioNumber > 7){
  3363  0262  3008               	movlw	8
  3364  0263  0237               	subwf	initialiseGPIO@gpioNumber,w
  3365  0264  1C03               	skipc
  3366  0265  2A67               	goto	u1241
  3367  0266  2A68               	goto	u1240
  3368  0267                     u1241:
  3369  0267  2A70               	goto	l1880
  3370  0268                     u1240:
  3371  0268                     l1876:
  3372                           
  3373                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  3374  0268  0837               	movf	initialiseGPIO@gpioNumber,w
  3375  0269  3EF8               	addlw	248
  3376  026A  00B4               	movwf	??_initialiseGPIO
  3377  026B  0834               	movf	??_initialiseGPIO,w
  3378  026C  00B8               	movwf	initialiseGPIO@portNumber
  3379  026D                     l1878:
  3380                           
  3381                           ;GPIO.c: 23:         portType = 1;
  3382  026D  01B6               	clrf	initialiseGPIO@portType
  3383  026E  0AB6               	incf	initialiseGPIO@portType,f
  3384                           
  3385                           ;GPIO.c: 24:     }
  3386  026F  2A75               	goto	l1884
  3387  0270                     l1880:
  3388                           
  3389                           ;GPIO.c: 26:         portNumber = gpioNumber;
  3390  0270  0837               	movf	initialiseGPIO@gpioNumber,w
  3391  0271  00B4               	movwf	??_initialiseGPIO
  3392  0272  0834               	movf	??_initialiseGPIO,w
  3393  0273  00B8               	movwf	initialiseGPIO@portNumber
  3394  0274                     l1882:
  3395                           
  3396                           ;GPIO.c: 27:         portType = 0;
  3397  0274  01B6               	clrf	initialiseGPIO@portType
  3398  0275                     l1884:
  3399                           
  3400                           ;GPIO.c: 30:     if(portType == 0){
  3401  0275  0836               	movf	initialiseGPIO@portType,w
  3402  0276  1D03               	btfss	3,2
  3403  0277  2A79               	goto	u1251
  3404  0278  2A7A               	goto	u1250
  3405  0279                     u1251:
  3406  0279  2AA8               	goto	l1892
  3407  027A                     u1250:
  3408  027A                     l1886:
  3409                           
  3410                           ;GPIO.c: 31:         if(direction){
  3411  027A  0833               	movf	initialiseGPIO@direction,w
  3412  027B  1903               	btfsc	3,2
  3413  027C  2A7E               	goto	u1261
  3414  027D  2A7F               	goto	u1260
  3415  027E                     u1261:
  3416  027E  2A9A               	goto	l1890
  3417  027F                     u1260:
  3418  027F                     l1888:
  3419                           
  3420                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  3421  027F  3001               	movlw	1
  3422  0280  00B4               	movwf	??_initialiseGPIO
  3423  0281  0A38               	incf	initialiseGPIO@portNumber,w
  3424  0282  2A84               	goto	u1274
  3425  0283                     u1275:
  3426  0283  35B4               	lslf	??_initialiseGPIO,f
  3427  0284                     u1274:
  3428  0284  0B89               	decfsz	9,f
  3429  0285  2A83               	goto	u1275
  3430  0286  0834               	movf	??_initialiseGPIO,w
  3431  0287  00B5               	movwf	??_initialiseGPIO+1
  3432  0288  0835               	movf	??_initialiseGPIO+1,w
  3433  0289  0021               	movlb	1	; select bank1
  3434  028A  048C               	iorwf	12,f	;volatile
  3435                           
  3436                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  3437  028B  3001               	movlw	1
  3438  028C  0020               	movlb	0	; select bank0
  3439  028D  00B4               	movwf	??_initialiseGPIO
  3440  028E  0A38               	incf	initialiseGPIO@portNumber,w
  3441  028F  2A91               	goto	u1284
  3442  0290                     u1285:
  3443  0290  35B4               	lslf	??_initialiseGPIO,f
  3444  0291                     u1284:
  3445  0291  0B89               	decfsz	9,f
  3446  0292  2A90               	goto	u1285
  3447  0293  0834               	movf	??_initialiseGPIO,w
  3448  0294  3AFF               	xorlw	255
  3449  0295  00B5               	movwf	??_initialiseGPIO+1
  3450  0296  0835               	movf	??_initialiseGPIO+1,w
  3451  0297  0023               	movlb	3	; select bank3
  3452  0298  058C               	andwf	12,f	;volatile
  3453                           
  3454                           ;GPIO.c: 34:         }
  3455  0299  2ADA               	goto	l299
  3456  029A                     l1890:
  3457  029A  3001               	movlw	1
  3458  029B  00B4               	movwf	??_initialiseGPIO
  3459  029C  0A38               	incf	initialiseGPIO@portNumber,w
  3460  029D  2A9F               	goto	u1294
  3461  029E                     u1295:
  3462  029E  35B4               	lslf	??_initialiseGPIO,f
  3463  029F                     u1294:
  3464  029F  0B89               	decfsz	9,f
  3465  02A0  2A9E               	goto	u1295
  3466  02A1  0834               	movf	??_initialiseGPIO,w
  3467  02A2  3AFF               	xorlw	255
  3468  02A3  00B5               	movwf	??_initialiseGPIO+1
  3469  02A4  0835               	movf	??_initialiseGPIO+1,w
  3470  02A5  0021               	movlb	1	; select bank1
  3471  02A6  058C               	andwf	12,f	;volatile
  3472  02A7  2ADA               	goto	l299
  3473  02A8                     l1892:
  3474  02A8  0336               	decf	initialiseGPIO@portType,w
  3475  02A9  1D03               	btfss	3,2
  3476  02AA  2AAC               	goto	u1301
  3477  02AB  2AAD               	goto	u1300
  3478  02AC                     u1301:
  3479  02AC  2ADA               	goto	l299
  3480  02AD                     u1300:
  3481  02AD                     l1894:
  3482                           
  3483                           ;GPIO.c: 38:         if(direction){
  3484  02AD  0833               	movf	initialiseGPIO@direction,w
  3485  02AE  1903               	btfsc	3,2
  3486  02AF  2AB1               	goto	u1311
  3487  02B0  2AB2               	goto	u1310
  3488  02B1                     u1311:
  3489  02B1  2ACD               	goto	l1898
  3490  02B2                     u1310:
  3491  02B2                     l1896:
  3492                           
  3493                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  3494  02B2  3001               	movlw	1
  3495  02B3  00B4               	movwf	??_initialiseGPIO
  3496  02B4  0A38               	incf	initialiseGPIO@portNumber,w
  3497  02B5  2AB7               	goto	u1324
  3498  02B6                     u1325:
  3499  02B6  35B4               	lslf	??_initialiseGPIO,f
  3500  02B7                     u1324:
  3501  02B7  0B89               	decfsz	9,f
  3502  02B8  2AB6               	goto	u1325
  3503  02B9  0834               	movf	??_initialiseGPIO,w
  3504  02BA  00B5               	movwf	??_initialiseGPIO+1
  3505  02BB  0835               	movf	??_initialiseGPIO+1,w
  3506  02BC  0021               	movlb	1	; select bank1
  3507  02BD  048D               	iorwf	13,f	;volatile
  3508                           
  3509                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  3510  02BE  3001               	movlw	1
  3511  02BF  0020               	movlb	0	; select bank0
  3512  02C0  00B4               	movwf	??_initialiseGPIO
  3513  02C1  0A38               	incf	initialiseGPIO@portNumber,w
  3514  02C2  2AC4               	goto	u1334
  3515  02C3                     u1335:
  3516  02C3  35B4               	lslf	??_initialiseGPIO,f
  3517  02C4                     u1334:
  3518  02C4  0B89               	decfsz	9,f
  3519  02C5  2AC3               	goto	u1335
  3520  02C6  0834               	movf	??_initialiseGPIO,w
  3521  02C7  3AFF               	xorlw	255
  3522  02C8  00B5               	movwf	??_initialiseGPIO+1
  3523  02C9  0835               	movf	??_initialiseGPIO+1,w
  3524  02CA  0023               	movlb	3	; select bank3
  3525  02CB  058D               	andwf	13,f	;volatile
  3526                           
  3527                           ;GPIO.c: 41:         }
  3528  02CC  2ADA               	goto	l299
  3529  02CD                     l1898:
  3530  02CD  3001               	movlw	1
  3531  02CE  00B4               	movwf	??_initialiseGPIO
  3532  02CF  0A38               	incf	initialiseGPIO@portNumber,w
  3533  02D0  2AD2               	goto	u1344
  3534  02D1                     u1345:
  3535  02D1  35B4               	lslf	??_initialiseGPIO,f
  3536  02D2                     u1344:
  3537  02D2  0B89               	decfsz	9,f
  3538  02D3  2AD1               	goto	u1345
  3539  02D4  0834               	movf	??_initialiseGPIO,w
  3540  02D5  3AFF               	xorlw	255
  3541  02D6  00B5               	movwf	??_initialiseGPIO+1
  3542  02D7  0835               	movf	??_initialiseGPIO+1,w
  3543  02D8  0021               	movlb	1	; select bank1
  3544  02D9  058D               	andwf	13,f	;volatile
  3545  02DA                     l299:
  3546  02DA  0008               	return
  3547  02DB                     __end_of_initialiseGPIO:
  3548                           
  3549                           	psect	text11
  3550  02DB                     __ptext11:	
  3551 ;; *************** function _initialiseADCPin *****************
  3552 ;; Defined at:
  3553 ;;		line 37 in file "ADC.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;  gpioNumber      1    wreg     const enum E2798
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  3558 ;;  portNumber      1   23[BANK0 ] unsigned char 
  3559 ;;  portType        1   22[BANK0 ] unsigned char 
  3560 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  3561 ;; Return value:  Size  Location     Type
  3562 ;;                  1    wreg      void 
  3563 ;; Registers used:
  3564 ;;		wreg, status,2, status,0
  3565 ;; Tracked objects:
  3566 ;;		On entry : 0/0
  3567 ;;		On exit  : 0/0
  3568 ;;		Unchanged: 0/0
  3569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3570 ;;      Params:         0       0       0       0       0       0
  3571 ;;      Locals:         0       4       0       0       0       0
  3572 ;;      Temps:          0       2       0       0       0       0
  3573 ;;      Totals:         0       6       0       0       0       0
  3574 ;;Total ram usage:        6 bytes
  3575 ;; Hardware stack levels used: 1
  3576 ;; Hardware stack levels required when called: 3
  3577 ;; This function calls:
  3578 ;;		Nothing
  3579 ;; This function is called by:
  3580 ;;		_initialisePotentiometers
  3581 ;;		_initialiseCurrentSensors
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585  02DB                     _initialiseADCPin:	
  3586                           ;psect for function _initialiseADCPin
  3587                           
  3588                           
  3589                           ;incstack = 0
  3590                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3591                           ;initialiseADCPin@gpioNumber stored from wreg
  3592  02DB  0020               	movlb	0	; select bank0
  3593  02DC  00B8               	movwf	initialiseADCPin@gpioNumber
  3594  02DD                     l1900:
  3595                           
  3596                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3597  02DD  01B7               	clrf	initialiseADCPin@portNumber
  3598                           
  3599                           ;ADC.c: 40:     uint8_t portType = 0;
  3600  02DE  01B6               	clrf	initialiseADCPin@portType
  3601                           
  3602                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3603  02DF  01B5               	clrf	initialiseADCPin@gpioValid
  3604  02E0                     l1902:
  3605                           
  3606                           ;ADC.c: 43:     if(gpioNumber < 4){
  3607  02E0  3004               	movlw	4
  3608  02E1  0238               	subwf	initialiseADCPin@gpioNumber,w
  3609  02E2  1803               	skipnc
  3610  02E3  2AE5               	goto	u1351
  3611  02E4  2AE6               	goto	u1350
  3612  02E5                     u1351:
  3613  02E5  2AED               	goto	l1910
  3614  02E6                     u1350:
  3615  02E6                     l1904:
  3616                           
  3617                           ;ADC.c: 44:         portNumber = gpioNumber;
  3618  02E6  0838               	movf	initialiseADCPin@gpioNumber,w
  3619  02E7  00B3               	movwf	??_initialiseADCPin
  3620  02E8  0833               	movf	??_initialiseADCPin,w
  3621  02E9  00B7               	movwf	initialiseADCPin@portNumber
  3622  02EA                     l1906:
  3623                           
  3624                           ;ADC.c: 45:         portType = 0;
  3625  02EA  01B6               	clrf	initialiseADCPin@portType
  3626  02EB                     l1908:
  3627                           
  3628                           ;ADC.c: 46:         gpioValid = 1;
  3629  02EB  01B5               	clrf	initialiseADCPin@gpioValid
  3630  02EC  0AB5               	incf	initialiseADCPin@gpioValid,f
  3631  02ED                     l1910:
  3632                           
  3633                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3634  02ED  3009               	movlw	9
  3635  02EE  0238               	subwf	initialiseADCPin@gpioNumber,w
  3636  02EF  1C03               	skipc
  3637  02F0  2AF2               	goto	u1361
  3638  02F1  2AF3               	goto	u1360
  3639  02F2                     u1361:
  3640  02F2  2B02               	goto	l231
  3641  02F3                     u1360:
  3642  02F3                     l1912:
  3643  02F3  3010               	movlw	16
  3644  02F4  0238               	subwf	initialiseADCPin@gpioNumber,w
  3645  02F5  1803               	skipnc
  3646  02F6  2AF8               	goto	u1371
  3647  02F7  2AF9               	goto	u1370
  3648  02F8                     u1371:
  3649  02F8  2B02               	goto	l231
  3650  02F9                     u1370:
  3651  02F9                     l1914:
  3652                           
  3653                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3654  02F9  0838               	movf	initialiseADCPin@gpioNumber,w
  3655  02FA  3EF8               	addlw	248
  3656  02FB  00B3               	movwf	??_initialiseADCPin
  3657  02FC  0833               	movf	??_initialiseADCPin,w
  3658  02FD  00B7               	movwf	initialiseADCPin@portNumber
  3659  02FE                     l1916:
  3660                           
  3661                           ;ADC.c: 51:         portType = 1;
  3662  02FE  01B6               	clrf	initialiseADCPin@portType
  3663  02FF  0AB6               	incf	initialiseADCPin@portType,f
  3664  0300                     l1918:
  3665                           
  3666                           ;ADC.c: 52:         gpioValid = 1;
  3667  0300  01B5               	clrf	initialiseADCPin@gpioValid
  3668  0301  0AB5               	incf	initialiseADCPin@gpioValid,f
  3669  0302                     l231:	
  3670                           ;ADC.c: 53:     }
  3671                           
  3672                           
  3673                           ;ADC.c: 55:     if(gpioValid){
  3674  0302  0835               	movf	initialiseADCPin@gpioValid,w
  3675  0303  1903               	btfsc	3,2
  3676  0304  2B06               	goto	u1381
  3677  0305  2B07               	goto	u1380
  3678  0306                     u1381:
  3679  0306  2B44               	goto	l236
  3680  0307                     u1380:
  3681  0307                     l1920:
  3682                           
  3683                           ;ADC.c: 56:         if(portType == 0){
  3684  0307  0836               	movf	initialiseADCPin@portType,w
  3685  0308  1D03               	btfss	3,2
  3686  0309  2B0B               	goto	u1391
  3687  030A  2B0C               	goto	u1390
  3688  030B                     u1391:
  3689  030B  2B26               	goto	l1924
  3690  030C                     u1390:
  3691  030C                     l1922:
  3692                           
  3693                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3694  030C  3001               	movlw	1
  3695  030D  00B3               	movwf	??_initialiseADCPin
  3696  030E  0A37               	incf	initialiseADCPin@portNumber,w
  3697  030F  2B11               	goto	u1404
  3698  0310                     u1405:
  3699  0310  35B3               	lslf	??_initialiseADCPin,f
  3700  0311                     u1404:
  3701  0311  0B89               	decfsz	9,f
  3702  0312  2B10               	goto	u1405
  3703  0313  0833               	movf	??_initialiseADCPin,w
  3704  0314  00B4               	movwf	??_initialiseADCPin+1
  3705  0315  0834               	movf	??_initialiseADCPin+1,w
  3706  0316  0021               	movlb	1	; select bank1
  3707  0317  048C               	iorwf	12,f	;volatile
  3708                           
  3709                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3710  0318  3001               	movlw	1
  3711  0319  0020               	movlb	0	; select bank0
  3712  031A  00B3               	movwf	??_initialiseADCPin
  3713  031B  0A37               	incf	initialiseADCPin@portNumber,w
  3714  031C  2B1E               	goto	u1414
  3715  031D                     u1415:
  3716  031D  35B3               	lslf	??_initialiseADCPin,f
  3717  031E                     u1414:
  3718  031E  0B89               	decfsz	9,f
  3719  031F  2B1D               	goto	u1415
  3720  0320  0833               	movf	??_initialiseADCPin,w
  3721  0321  00B4               	movwf	??_initialiseADCPin+1
  3722  0322  0834               	movf	??_initialiseADCPin+1,w
  3723  0323  0023               	movlb	3	; select bank3
  3724  0324  048C               	iorwf	12,f	;volatile
  3725                           
  3726                           ;ADC.c: 59:         }
  3727  0325  2B44               	goto	l236
  3728  0326                     l1924:
  3729  0326  0336               	decf	initialiseADCPin@portType,w
  3730  0327  1D03               	btfss	3,2
  3731  0328  2B2A               	goto	u1421
  3732  0329  2B2B               	goto	u1420
  3733  032A                     u1421:
  3734  032A  2B44               	goto	l236
  3735  032B                     u1420:
  3736  032B                     l1926:
  3737                           
  3738                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3739  032B  3001               	movlw	1
  3740  032C  00B3               	movwf	??_initialiseADCPin
  3741  032D  0A37               	incf	initialiseADCPin@portNumber,w
  3742  032E  2B30               	goto	u1434
  3743  032F                     u1435:
  3744  032F  35B3               	lslf	??_initialiseADCPin,f
  3745  0330                     u1434:
  3746  0330  0B89               	decfsz	9,f
  3747  0331  2B2F               	goto	u1435
  3748  0332  0833               	movf	??_initialiseADCPin,w
  3749  0333  00B4               	movwf	??_initialiseADCPin+1
  3750  0334  0834               	movf	??_initialiseADCPin+1,w
  3751  0335  0021               	movlb	1	; select bank1
  3752  0336  048D               	iorwf	13,f	;volatile
  3753                           
  3754                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3755  0337  3001               	movlw	1
  3756  0338  0020               	movlb	0	; select bank0
  3757  0339  00B3               	movwf	??_initialiseADCPin
  3758  033A  0A37               	incf	initialiseADCPin@portNumber,w
  3759  033B  2B3D               	goto	u1444
  3760  033C                     u1445:
  3761  033C  35B3               	lslf	??_initialiseADCPin,f
  3762  033D                     u1444:
  3763  033D  0B89               	decfsz	9,f
  3764  033E  2B3C               	goto	u1445
  3765  033F  0833               	movf	??_initialiseADCPin,w
  3766  0340  00B4               	movwf	??_initialiseADCPin+1
  3767  0341  0834               	movf	??_initialiseADCPin+1,w
  3768  0342  0023               	movlb	3	; select bank3
  3769  0343  048D               	iorwf	13,f	;volatile
  3770  0344                     l236:
  3771  0344  0008               	return
  3772  0345                     __end_of_initialiseADCPin:
  3773                           
  3774                           	psect	text12
  3775  07E8                     __ptext12:	
  3776 ;; *************** function _currentTripReset *****************
  3777 ;; Defined at:
  3778 ;;		line 70 in file "CurrentSensor.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;		None
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3792 ;;      Params:         0       0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 4
  3799 ;; This function calls:
  3800 ;;		_writeGPIO
  3801 ;; This function is called by:
  3802 ;;		_initialiseCurrentSensors
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806  07E8                     _currentTripReset:	
  3807                           ;psect for function _currentTripReset
  3808                           
  3809  07E8                     l1978:	
  3810                           ;incstack = 0
  3811                           ; Regs used in _currentTripReset: [wreg+status,2+status,0+pclath+cstack]
  3812                           
  3813                           
  3814                           ;CurrentSensor.c: 71:     writeGPIO(pinRB3, 0);
  3815  07E8  0020               	movlb	0	; select bank0
  3816  07E9  01B3               	clrf	writeGPIO@writeValue
  3817  07EA  300B               	movlw	11
  3818  07EB  3183  23A7  3187   	fcall	_writeGPIO
  3819  07EE                     l1980:
  3820                           
  3821                           ;CurrentSensor.c: 72:      _delay((unsigned long)((2)*(freq32M/4000000.0)));
  3822                           ;CurrentSensor.c: 73:     writeGPIO(pinRB3, 1);
  3823  07EE  0020               	movlb	0	; select bank0
  3824  07EF  01B3               	clrf	writeGPIO@writeValue
  3825  07F0  0AB3               	incf	writeGPIO@writeValue,f
  3826  07F1  300B               	movlw	11
  3827  07F2  3183  23A7  3187   	fcall	_writeGPIO
  3828  07F5                     l495:
  3829  07F5  0008               	return
  3830  07F6                     __end_of_currentTripReset:
  3831                           
  3832                           	psect	text13
  3833  03A7                     __ptext13:	
  3834 ;; *************** function _writeGPIO *****************
  3835 ;; Defined at:
  3836 ;;		line 52 in file "GPIO.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  gpioNumber      1    wreg     const enum E2798
  3839 ;;  writeValue      1   19[BANK0 ] unsigned char 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  3842 ;;  portNumber      1   24[BANK0 ] unsigned char 
  3843 ;;  portType        1   22[BANK0 ] unsigned char 
  3844 ;; Return value:  Size  Location     Type
  3845 ;;                  1    wreg      void 
  3846 ;; Registers used:
  3847 ;;		wreg, status,2, status,0
  3848 ;; Tracked objects:
  3849 ;;		On entry : 0/0
  3850 ;;		On exit  : 0/0
  3851 ;;		Unchanged: 0/0
  3852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3853 ;;      Params:         0       1       0       0       0       0
  3854 ;;      Locals:         0       3       0       0       0       0
  3855 ;;      Temps:          0       2       0       0       0       0
  3856 ;;      Totals:         0       6       0       0       0       0
  3857 ;;Total ram usage:        6 bytes
  3858 ;; Hardware stack levels used: 1
  3859 ;; Hardware stack levels required when called: 3
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_currentTripReset
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867  03A7                     _writeGPIO:	
  3868                           ;psect for function _writeGPIO
  3869                           
  3870                           
  3871                           ;incstack = 0
  3872                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3873                           ;writeGPIO@gpioNumber stored from wreg
  3874  03A7  0020               	movlb	0	; select bank0
  3875  03A8  00B7               	movwf	writeGPIO@gpioNumber
  3876  03A9                     l1844:
  3877                           
  3878                           ;GPIO.c: 54:     uint8_t portType = 0;
  3879  03A9  01B6               	clrf	writeGPIO@portType
  3880  03AA                     l1846:
  3881                           
  3882                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3883  03AA  3008               	movlw	8
  3884  03AB  0237               	subwf	writeGPIO@gpioNumber,w
  3885  03AC  1C03               	skipc
  3886  03AD  2BAF               	goto	u1151
  3887  03AE  2BB0               	goto	u1150
  3888  03AF                     u1151:
  3889  03AF  2BB8               	goto	l1852
  3890  03B0                     u1150:
  3891  03B0                     l1848:
  3892                           
  3893                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3894  03B0  0837               	movf	writeGPIO@gpioNumber,w
  3895  03B1  3EF8               	addlw	248
  3896  03B2  00B4               	movwf	??_writeGPIO
  3897  03B3  0834               	movf	??_writeGPIO,w
  3898  03B4  00B8               	movwf	writeGPIO@portNumber
  3899  03B5                     l1850:
  3900                           
  3901                           ;GPIO.c: 57:         portType = 1;
  3902  03B5  01B6               	clrf	writeGPIO@portType
  3903  03B6  0AB6               	incf	writeGPIO@portType,f
  3904                           
  3905                           ;GPIO.c: 58:     }
  3906  03B7  2BBD               	goto	l1856
  3907  03B8                     l1852:
  3908                           
  3909                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3910  03B8  0837               	movf	writeGPIO@gpioNumber,w
  3911  03B9  00B4               	movwf	??_writeGPIO
  3912  03BA  0834               	movf	??_writeGPIO,w
  3913  03BB  00B8               	movwf	writeGPIO@portNumber
  3914  03BC                     l1854:
  3915                           
  3916                           ;GPIO.c: 61:         portType = 0;
  3917  03BC  01B6               	clrf	writeGPIO@portType
  3918  03BD                     l1856:
  3919                           
  3920                           ;GPIO.c: 64:     if(portType == 0){
  3921  03BD  0836               	movf	writeGPIO@portType,w
  3922  03BE  1D03               	btfss	3,2
  3923  03BF  2BC1               	goto	u1161
  3924  03C0  2BC2               	goto	u1160
  3925  03C1                     u1161:
  3926  03C1  2BE2               	goto	l1864
  3927  03C2                     u1160:
  3928  03C2                     l1858:
  3929                           
  3930                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3931  03C2  0833               	movf	writeGPIO@writeValue,w
  3932  03C3  1903               	btfsc	3,2
  3933  03C4  2BC6               	goto	u1171
  3934  03C5  2BC7               	goto	u1170
  3935  03C6                     u1171:
  3936  03C6  2BD4               	goto	l1862
  3937  03C7                     u1170:
  3938  03C7                     l1860:
  3939  03C7  3001               	movlw	1
  3940  03C8  00B4               	movwf	??_writeGPIO
  3941  03C9  0A38               	incf	writeGPIO@portNumber,w
  3942  03CA  2BCC               	goto	u1184
  3943  03CB                     u1185:
  3944  03CB  35B4               	lslf	??_writeGPIO,f
  3945  03CC                     u1184:
  3946  03CC  0B89               	decfsz	9,f
  3947  03CD  2BCB               	goto	u1185
  3948  03CE  0834               	movf	??_writeGPIO,w
  3949  03CF  00B5               	movwf	??_writeGPIO+1
  3950  03D0  0835               	movf	??_writeGPIO+1,w
  3951  03D1  0022               	movlb	2	; select bank2
  3952  03D2  048C               	iorwf	12,f	;volatile
  3953  03D3  2C06               	goto	l313
  3954  03D4                     l1862:
  3955  03D4  3001               	movlw	1
  3956  03D5  00B4               	movwf	??_writeGPIO
  3957  03D6  0A38               	incf	writeGPIO@portNumber,w
  3958  03D7  2BD9               	goto	u1194
  3959  03D8                     u1195:
  3960  03D8  35B4               	lslf	??_writeGPIO,f
  3961  03D9                     u1194:
  3962  03D9  0B89               	decfsz	9,f
  3963  03DA  2BD8               	goto	u1195
  3964  03DB  0834               	movf	??_writeGPIO,w
  3965  03DC  3AFF               	xorlw	255
  3966  03DD  00B5               	movwf	??_writeGPIO+1
  3967  03DE  0835               	movf	??_writeGPIO+1,w
  3968  03DF  0022               	movlb	2	; select bank2
  3969  03E0  058C               	andwf	12,f	;volatile
  3970  03E1  2C06               	goto	l313
  3971  03E2                     l1864:
  3972  03E2  0336               	decf	writeGPIO@portType,w
  3973  03E3  1D03               	btfss	3,2
  3974  03E4  2BE6               	goto	u1201
  3975  03E5  2BE7               	goto	u1200
  3976  03E6                     u1201:
  3977  03E6  2C06               	goto	l313
  3978  03E7                     u1200:
  3979  03E7                     l1866:
  3980                           
  3981                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3982  03E7  0833               	movf	writeGPIO@writeValue,w
  3983  03E8  1903               	btfsc	3,2
  3984  03E9  2BEB               	goto	u1211
  3985  03EA  2BEC               	goto	u1210
  3986  03EB                     u1211:
  3987  03EB  2BF9               	goto	l1870
  3988  03EC                     u1210:
  3989  03EC                     l1868:
  3990  03EC  3001               	movlw	1
  3991  03ED  00B4               	movwf	??_writeGPIO
  3992  03EE  0A38               	incf	writeGPIO@portNumber,w
  3993  03EF  2BF1               	goto	u1224
  3994  03F0                     u1225:
  3995  03F0  35B4               	lslf	??_writeGPIO,f
  3996  03F1                     u1224:
  3997  03F1  0B89               	decfsz	9,f
  3998  03F2  2BF0               	goto	u1225
  3999  03F3  0834               	movf	??_writeGPIO,w
  4000  03F4  00B5               	movwf	??_writeGPIO+1
  4001  03F5  0835               	movf	??_writeGPIO+1,w
  4002  03F6  0022               	movlb	2	; select bank2
  4003  03F7  048D               	iorwf	13,f	;volatile
  4004  03F8  2C06               	goto	l313
  4005  03F9                     l1870:
  4006  03F9  3001               	movlw	1
  4007  03FA  00B4               	movwf	??_writeGPIO
  4008  03FB  0A38               	incf	writeGPIO@portNumber,w
  4009  03FC  2BFE               	goto	u1234
  4010  03FD                     u1235:
  4011  03FD  35B4               	lslf	??_writeGPIO,f
  4012  03FE                     u1234:
  4013  03FE  0B89               	decfsz	9,f
  4014  03FF  2BFD               	goto	u1235
  4015  0400  0834               	movf	??_writeGPIO,w
  4016  0401  3AFF               	xorlw	255
  4017  0402  00B5               	movwf	??_writeGPIO+1
  4018  0403  0835               	movf	??_writeGPIO+1,w
  4019  0404  0022               	movlb	2	; select bank2
  4020  0405  058D               	andwf	13,f	;volatile
  4021  0406                     l313:
  4022  0406  0008               	return
  4023  0407                     __end_of_writeGPIO:
  4024                           
  4025                           	psect	text14
  4026  0FCB                     __ptext14:	
  4027 ;; *************** function _initialiseADCModule *****************
  4028 ;; Defined at:
  4029 ;;		line 14 in file "ADC.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4043 ;;      Params:         0       0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used: 1
  4049 ;; Hardware stack levels required when called: 3
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057  0FCB                     _initialiseADCModule:	
  4058                           ;psect for function _initialiseADCModule
  4059                           
  4060  0FCB                     l2346:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _initialiseADCModule: [wreg]
  4063                           
  4064                           
  4065                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  4066  0FCB  3001               	movlw	1
  4067  0FCC  0021               	movlb	1	; select bank1
  4068  0FCD  009D               	movwf	29	;volatile
  4069                           
  4070                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  4071  0FCE  3080               	movlw	128
  4072  0FCF  009E               	movwf	30	;volatile
  4073  0FD0                     l227:
  4074  0FD0  0008               	return
  4075  0FD1                     __end_of_initialiseADCModule:
  4076                           
  4077                           	psect	intentry
  4078  0004                     __pintentry:	
  4079 ;; *************** function _Tick980Hz *****************
  4080 ;; Defined at:
  4081 ;;		line 41 in file "main.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;		None
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;		None
  4086 ;; Return value:  Size  Location     Type
  4087 ;;                  1    wreg      void 
  4088 ;; Registers used:
  4089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4090 ;; Tracked objects:
  4091 ;;		On entry : 0/0
  4092 ;;		On exit  : 0/0
  4093 ;;		Unchanged: 0/0
  4094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4095 ;;      Params:         0       0       0       0       0       0
  4096 ;;      Locals:         0       0       0       0       0       0
  4097 ;;      Temps:          0       1       0       0       0       0
  4098 ;;      Totals:         0       1       0       0       0       0
  4099 ;;Total ram usage:        1 bytes
  4100 ;; Hardware stack levels used: 1
  4101 ;; Hardware stack levels required when called: 2
  4102 ;; This function calls:
  4103 ;;		_currentTripRead
  4104 ;;		_readFilteredDutyPot
  4105 ;;		_readFilteredFreqPot
  4106 ;;		_readFilteredIL
  4107 ;;		_readFilteredVout
  4108 ;;		_readILCurrentADCRaw
  4109 ;;		_runPotScaling
  4110 ;;		_setPWMDutyandPeriod
  4111 ;;		_transToOverCurrentFault
  4112 ;;		i1_writeGPIO
  4113 ;; This function is called by:
  4114 ;;		Interrupt level 1
  4115 ;; This function uses a non-reentrant model
  4116 ;;
  4117                           
  4118  0004                     _Tick980Hz:
  4119                           
  4120                           ;incstack = 0
  4121  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4122                           
  4123                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4124  0005  3180               	pagesel	$
  4125  0006                     i1l2428:
  4126                           
  4127                           ;main.c: 52:         if(currentTripRead() == 1){
  4128  0006  3187  2712  3180   	fcall	_currentTripRead
  4129  0009  3A01               	xorlw	1
  4130  000A  1D03               	skipz
  4131  000B  280D               	goto	u215_21
  4132  000C  280E               	goto	u215_20
  4133  000D                     u215_21:
  4134  000D  2811               	goto	i1l98
  4135  000E                     u215_20:
  4136  000E                     i1l2430:
  4137                           
  4138                           ;main.c: 53:             transToOverCurrentFault();
  4139  000E  318F  27EB  3180   	fcall	_transToOverCurrentFault
  4140  0011                     i1l98:	
  4141                           ;main.c: 54:         }
  4142                           
  4143                           
  4144                           ;main.c: 56:         setPWMDutyandPeriod(setDuty, setPeriod);
  4145  0011  0020               	movlb	0	; select bank0
  4146  0012  0853               	movf	_setDuty+1,w
  4147  0013  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  4148  0014  0852               	movf	_setDuty,w
  4149  0015  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  4150  0016  085B               	movf	_setPeriod,w
  4151  0017  00B2               	movwf	??_Tick980Hz
  4152  0018  0832               	movf	??_Tick980Hz,w
  4153  0019  00F2               	movwf	setPWMDutyandPeriod@period
  4154  001A  3187  273F  3180   	fcall	_setPWMDutyandPeriod
  4155  001D                     i1l2432:
  4156                           
  4157                           ;main.c: 59:         if(timerSlotHalf == 0){
  4158  001D  0020               	movlb	0	; select bank0
  4159  001E  0855               	movf	_timerSlotHalf,w	;volatile
  4160  001F  1D03               	btfss	3,2
  4161  0020  2822               	goto	u216_21
  4162  0021  2823               	goto	u216_20
  4163  0022                     u216_21:
  4164  0022  2828               	goto	i1l2436
  4165  0023                     u216_20:
  4166  0023                     i1l2434:
  4167                           
  4168                           ;main.c: 61:             writeGPIO(pinRB4, 0);
  4169  0023  01F0               	clrf	i1writeGPIO@writeValue
  4170  0024  300C               	movlw	12
  4171  0025  3184  2407  3180   	fcall	i1_writeGPIO
  4172  0028                     i1l2436:
  4173                           
  4174                           ;main.c: 63:         if(timerSlotHalf == 1){
  4175  0028  0020               	movlb	0	; select bank0
  4176  0029  0355               	decf	_timerSlotHalf,w	;volatile
  4177  002A  1D03               	btfss	3,2
  4178  002B  282D               	goto	u217_21
  4179  002C  282E               	goto	u217_20
  4180  002D                     u217_21:
  4181  002D  286C               	goto	i1l2450
  4182  002E                     u217_20:
  4183  002E                     i1l2438:
  4184                           
  4185                           ;main.c: 65:             filteredIL = readFilteredIL();
  4186  002E  3185  25D2  3180   	fcall	_readFilteredIL
  4187  0031  0871               	movf	?_readFilteredIL+1,w
  4188  0032  0020               	movlb	0	; select bank0
  4189  0033  00CB               	movwf	_filteredIL+1
  4190  0034  0870               	movf	?_readFilteredIL,w
  4191  0035  00CA               	movwf	_filteredIL
  4192                           
  4193                           ;main.c: 67:             filteredVout = readFilteredVout();
  4194  0036  3184  24C1  3180   	fcall	_readFilteredVout
  4195  0039  087C               	movf	?_readFilteredVout+1,w
  4196  003A  0020               	movlb	0	; select bank0
  4197  003B  00C9               	movwf	_filteredVout+1
  4198  003C  087B               	movf	?_readFilteredVout,w
  4199  003D  00C8               	movwf	_filteredVout
  4200  003E                     i1l2440:
  4201                           
  4202                           ;main.c: 70:             if(timerSlotQuarter == 0){
  4203  003E  0854               	movf	_timerSlotQuarter,w	;volatile
  4204  003F  1D03               	btfss	3,2
  4205  0040  2842               	goto	u218_21
  4206  0041  2843               	goto	u218_20
  4207  0042                     u218_21:
  4208  0042  284C               	goto	i1l2444
  4209  0043                     u218_20:
  4210  0043                     i1l2442:
  4211                           
  4212                           ;main.c: 72:                 writeGPIO(pinRB4, 1);
  4213  0043  01F0               	clrf	i1writeGPIO@writeValue
  4214  0044  0AF0               	incf	i1writeGPIO@writeValue,f
  4215  0045  300C               	movlw	12
  4216  0046  3184  2407  3180   	fcall	i1_writeGPIO
  4217                           
  4218                           ;main.c: 73:                 runPotScaling();
  4219  0049  3180  20A8  3180   	fcall	_runPotScaling
  4220  004C                     i1l2444:
  4221                           
  4222                           ;main.c: 76:             if(timerSlotQuarter == 1){
  4223  004C  0020               	movlb	0	; select bank0
  4224  004D  0354               	decf	_timerSlotQuarter,w	;volatile
  4225  004E  1D03               	btfss	3,2
  4226  004F  2851               	goto	u219_21
  4227  0050  2852               	goto	u219_20
  4228  0051                     u219_21:
  4229  0051  2862               	goto	i1l2448
  4230  0052                     u219_20:
  4231  0052                     i1l2446:
  4232                           
  4233                           ;main.c: 78:                 filteredDutyPot = readFilteredDutyPot();
  4234  0052  3185  2577  3180   	fcall	_readFilteredDutyPot
  4235  0055  087C               	movf	?_readFilteredDutyPot+1,w
  4236  0056  0020               	movlb	0	; select bank0
  4237  0057  00C5               	movwf	_filteredDutyPot+1
  4238  0058  087B               	movf	?_readFilteredDutyPot,w
  4239  0059  00C4               	movwf	_filteredDutyPot
  4240                           
  4241                           ;main.c: 79:                 filteredFreqPot = readFilteredFreqPot();
  4242  005A  3185  251C  3180   	fcall	_readFilteredFreqPot
  4243  005D  087C               	movf	?_readFilteredFreqPot+1,w
  4244  005E  0020               	movlb	0	; select bank0
  4245  005F  00C7               	movwf	_filteredFreqPot+1
  4246  0060  087B               	movf	?_readFilteredFreqPot,w
  4247  0061  00C6               	movwf	_filteredFreqPot
  4248  0062                     i1l2448:
  4249                           
  4250                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  4251  0062  0354               	decf	_timerSlotQuarter,w	;volatile
  4252  0063  1D03               	btfss	3,2
  4253  0064  2866               	goto	u220_21
  4254  0065  2868               	goto	u220_20
  4255  0066                     u220_21:
  4256  0066  3001               	movlw	1
  4257  0067  2869               	goto	u221_20
  4258  0068                     u220_20:
  4259  0068  3000               	movlw	0
  4260  0069                     u221_20:
  4261  0069  00B2               	movwf	??_Tick980Hz
  4262  006A  0832               	movf	??_Tick980Hz,w
  4263  006B  00D4               	movwf	_timerSlotQuarter	;volatile
  4264  006C                     i1l2450:
  4265                           
  4266                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  4267  006C  0355               	decf	_timerSlotHalf,w	;volatile
  4268  006D  1D03               	btfss	3,2
  4269  006E  2870               	goto	u222_21
  4270  006F  2872               	goto	u222_20
  4271  0070                     u222_21:
  4272  0070  3001               	movlw	1
  4273  0071  2873               	goto	u223_20
  4274  0072                     u222_20:
  4275  0072  3000               	movlw	0
  4276  0073                     u223_20:
  4277  0073  00B2               	movwf	??_Tick980Hz
  4278  0074  0832               	movf	??_Tick980Hz,w
  4279  0075  00D5               	movwf	_timerSlotHalf	;volatile
  4280  0076                     i1l2452:
  4281                           
  4282                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  4283  0076  110B               	bcf	11,2	;volatile
  4284  0077                     i1l2454:
  4285                           
  4286                           ;main.c: 91:         latestIL = readILCurrentADCRaw();
  4287  0077  318F  27F4  3180   	fcall	_readILCurrentADCRaw
  4288  007A  0871               	movf	?_readILCurrentADCRaw+1,w
  4289  007B  0020               	movlb	0	; select bank0
  4290  007C  00CF               	movwf	_latestIL+1	;volatile
  4291  007D  0870               	movf	?_readILCurrentADCRaw,w
  4292  007E  00CE               	movwf	_latestIL	;volatile
  4293  007F                     i1l2456:
  4294                           
  4295                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  4296  007F  1111               	bcf	17,2	;volatile
  4297  0080                     i1l104:
  4298  0080  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4299  0081  0009               	retfie
  4300  0082                     __end_of_Tick980Hz:
  4301                           
  4302                           	psect	text16
  4303  0407                     __ptext16:	
  4304 ;; *************** function i1_writeGPIO *****************
  4305 ;; Defined at:
  4306 ;;		line 52 in file "GPIO.c"
  4307 ;; Parameters:    Size  Location     Type
  4308 ;;  gpioNumber      1    wreg     const enum E2798
  4309 ;;  writeValue      1    0[COMMON] unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  gpioNumber      1    4[COMMON] const enum E2798
  4312 ;;  portNumber      1    5[COMMON] unsigned char 
  4313 ;;  portType        1    3[COMMON] unsigned char 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4323 ;;      Params:         1       0       0       0       0       0
  4324 ;;      Locals:         3       0       0       0       0       0
  4325 ;;      Temps:          2       0       0       0       0       0
  4326 ;;      Totals:         6       0       0       0       0       0
  4327 ;;Total ram usage:        6 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; This function calls:
  4330 ;;		Nothing
  4331 ;; This function is called by:
  4332 ;;		_Tick980Hz
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336  0407                     i1_writeGPIO:	
  4337                           ;psect for function i1_writeGPIO
  4338                           
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  4342                           ;i1writeGPIO@gpioNumber stored from wreg
  4343  0407  00F4               	movwf	i1writeGPIO@gpioNumber
  4344  0408                     i1l2400:
  4345                           
  4346                           ;GPIO.c: 54:     uint8_t portType = 0;
  4347  0408  01F3               	clrf	i1writeGPIO@portType
  4348  0409                     i1l2402:
  4349                           
  4350                           ;GPIO.c: 55:     if(gpioNumber > 7){
  4351  0409  3008               	movlw	8
  4352  040A  0274               	subwf	i1writeGPIO@gpioNumber,w
  4353  040B  1C03               	skipc
  4354  040C  2C0E               	goto	u206_21
  4355  040D  2C0F               	goto	u206_20
  4356  040E                     u206_21:
  4357  040E  2C17               	goto	i1l2408
  4358  040F                     u206_20:
  4359  040F                     i1l2404:
  4360                           
  4361                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  4362  040F  0874               	movf	i1writeGPIO@gpioNumber,w
  4363  0410  3EF8               	addlw	248
  4364  0411  00F1               	movwf	??i1_writeGPIO
  4365  0412  0871               	movf	??i1_writeGPIO,w
  4366  0413  00F5               	movwf	i1writeGPIO@portNumber
  4367  0414                     i1l2406:
  4368                           
  4369                           ;GPIO.c: 57:         portType = 1;
  4370  0414  01F3               	clrf	i1writeGPIO@portType
  4371  0415  0AF3               	incf	i1writeGPIO@portType,f
  4372                           
  4373                           ;GPIO.c: 58:     }
  4374  0416  2C1C               	goto	i1l2412
  4375  0417                     i1l2408:
  4376                           
  4377                           ;GPIO.c: 60:         portNumber = gpioNumber;
  4378  0417  0874               	movf	i1writeGPIO@gpioNumber,w
  4379  0418  00F1               	movwf	??i1_writeGPIO
  4380  0419  0871               	movf	??i1_writeGPIO,w
  4381  041A  00F5               	movwf	i1writeGPIO@portNumber
  4382  041B                     i1l2410:
  4383                           
  4384                           ;GPIO.c: 61:         portType = 0;
  4385  041B  01F3               	clrf	i1writeGPIO@portType
  4386  041C                     i1l2412:
  4387                           
  4388                           ;GPIO.c: 64:     if(portType == 0){
  4389  041C  0873               	movf	i1writeGPIO@portType,w
  4390  041D  1D03               	btfss	3,2
  4391  041E  2C20               	goto	u207_21
  4392  041F  2C21               	goto	u207_20
  4393  0420                     u207_21:
  4394  0420  2C41               	goto	i1l2420
  4395  0421                     u207_20:
  4396  0421                     i1l2414:
  4397                           
  4398                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  4399  0421  0870               	movf	i1writeGPIO@writeValue,w
  4400  0422  1903               	btfsc	3,2
  4401  0423  2C25               	goto	u208_21
  4402  0424  2C26               	goto	u208_20
  4403  0425                     u208_21:
  4404  0425  2C33               	goto	i1l2418
  4405  0426                     u208_20:
  4406  0426                     i1l2416:
  4407  0426  3001               	movlw	1
  4408  0427  00F1               	movwf	??i1_writeGPIO
  4409  0428  0A75               	incf	i1writeGPIO@portNumber,w
  4410  0429  2C2B               	goto	u209_24
  4411  042A                     u209_25:
  4412  042A  35F1               	lslf	??i1_writeGPIO,f
  4413  042B                     u209_24:
  4414  042B  0B89               	decfsz	9,f
  4415  042C  2C2A               	goto	u209_25
  4416  042D  0871               	movf	??i1_writeGPIO,w
  4417  042E  00F2               	movwf	??i1_writeGPIO+1
  4418  042F  0872               	movf	??i1_writeGPIO+1,w
  4419  0430  0022               	movlb	2	; select bank2
  4420  0431  048C               	iorwf	12,f	;volatile
  4421  0432  2C65               	goto	i1l313
  4422  0433                     i1l2418:
  4423  0433  3001               	movlw	1
  4424  0434  00F1               	movwf	??i1_writeGPIO
  4425  0435  0A75               	incf	i1writeGPIO@portNumber,w
  4426  0436  2C38               	goto	u210_24
  4427  0437                     u210_25:
  4428  0437  35F1               	lslf	??i1_writeGPIO,f
  4429  0438                     u210_24:
  4430  0438  0B89               	decfsz	9,f
  4431  0439  2C37               	goto	u210_25
  4432  043A  0871               	movf	??i1_writeGPIO,w
  4433  043B  3AFF               	xorlw	255
  4434  043C  00F2               	movwf	??i1_writeGPIO+1
  4435  043D  0872               	movf	??i1_writeGPIO+1,w
  4436  043E  0022               	movlb	2	; select bank2
  4437  043F  058C               	andwf	12,f	;volatile
  4438  0440  2C65               	goto	i1l313
  4439  0441                     i1l2420:
  4440  0441  0373               	decf	i1writeGPIO@portType,w
  4441  0442  1D03               	btfss	3,2
  4442  0443  2C45               	goto	u211_21
  4443  0444  2C46               	goto	u211_20
  4444  0445                     u211_21:
  4445  0445  2C65               	goto	i1l313
  4446  0446                     u211_20:
  4447  0446                     i1l2422:
  4448                           
  4449                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  4450  0446  0870               	movf	i1writeGPIO@writeValue,w
  4451  0447  1903               	btfsc	3,2
  4452  0448  2C4A               	goto	u212_21
  4453  0449  2C4B               	goto	u212_20
  4454  044A                     u212_21:
  4455  044A  2C58               	goto	i1l2426
  4456  044B                     u212_20:
  4457  044B                     i1l2424:
  4458  044B  3001               	movlw	1
  4459  044C  00F1               	movwf	??i1_writeGPIO
  4460  044D  0A75               	incf	i1writeGPIO@portNumber,w
  4461  044E  2C50               	goto	u213_24
  4462  044F                     u213_25:
  4463  044F  35F1               	lslf	??i1_writeGPIO,f
  4464  0450                     u213_24:
  4465  0450  0B89               	decfsz	9,f
  4466  0451  2C4F               	goto	u213_25
  4467  0452  0871               	movf	??i1_writeGPIO,w
  4468  0453  00F2               	movwf	??i1_writeGPIO+1
  4469  0454  0872               	movf	??i1_writeGPIO+1,w
  4470  0455  0022               	movlb	2	; select bank2
  4471  0456  048D               	iorwf	13,f	;volatile
  4472  0457  2C65               	goto	i1l313
  4473  0458                     i1l2426:
  4474  0458  3001               	movlw	1
  4475  0459  00F1               	movwf	??i1_writeGPIO
  4476  045A  0A75               	incf	i1writeGPIO@portNumber,w
  4477  045B  2C5D               	goto	u214_24
  4478  045C                     u214_25:
  4479  045C  35F1               	lslf	??i1_writeGPIO,f
  4480  045D                     u214_24:
  4481  045D  0B89               	decfsz	9,f
  4482  045E  2C5C               	goto	u214_25
  4483  045F  0871               	movf	??i1_writeGPIO,w
  4484  0460  3AFF               	xorlw	255
  4485  0461  00F2               	movwf	??i1_writeGPIO+1
  4486  0462  0872               	movf	??i1_writeGPIO+1,w
  4487  0463  0022               	movlb	2	; select bank2
  4488  0464  058D               	andwf	13,f	;volatile
  4489  0465                     i1l313:
  4490  0465  0008               	return
  4491  0466                     __end_ofi1_writeGPIO:
  4492                           
  4493                           	psect	text17
  4494  0FEB                     __ptext17:	
  4495 ;; *************** function _transToOverCurrentFault *****************
  4496 ;; Defined at:
  4497 ;;		line 45 in file "StateMachine.c"
  4498 ;; Parameters:    Size  Location     Type
  4499 ;;		None
  4500 ;; Auto vars:     Size  Location     Type
  4501 ;;		None
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  1    wreg      void 
  4504 ;; Registers used:
  4505 ;;		wreg, status,2
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4511 ;;      Params:         0       0       0       0       0       0
  4512 ;;      Locals:         0       0       0       0       0       0
  4513 ;;      Temps:          1       0       0       0       0       0
  4514 ;;      Totals:         1       0       0       0       0       0
  4515 ;;Total ram usage:        1 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_Tick980Hz
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524  0FEB                     _transToOverCurrentFault:	
  4525                           ;psect for function _transToOverCurrentFault
  4526                           
  4527  0FEB                     i1l2082:	
  4528                           ;incstack = 0
  4529                           ; Regs used in _transToOverCurrentFault: [wreg+status,2]
  4530                           
  4531                           
  4532                           ;StateMachine.c: 46:     setDuty = 0;
  4533  0FEB  0020               	movlb	0	; select bank0
  4534  0FEC  01D2               	clrf	_setDuty
  4535  0FED  01D3               	clrf	_setDuty+1
  4536                           
  4537                           ;StateMachine.c: 47:     setPeriod = 0;
  4538  0FEE  01DB               	clrf	_setPeriod
  4539  0FEF                     i1l2084:
  4540                           
  4541                           ;StateMachine.c: 48:     currentState = overCurrentFault;
  4542  0FEF  3004               	movlw	4
  4543  0FF0  00F0               	movwf	??_transToOverCurrentFault
  4544  0FF1  0870               	movf	??_transToOverCurrentFault,w
  4545  0FF2  00DA               	movwf	_currentState
  4546  0FF3                     i1l522:
  4547  0FF3  0008               	return
  4548  0FF4                     __end_of_transToOverCurrentFault:
  4549                           
  4550                           	psect	text18
  4551  073F                     __ptext18:	
  4552 ;; *************** function _setPWMDutyandPeriod *****************
  4553 ;; Defined at:
  4554 ;;		line 49 in file "PWM.c"
  4555 ;; Parameters:    Size  Location     Type
  4556 ;;  dutyCycle       2    0[COMMON] unsigned short 
  4557 ;;  period          1    2[COMMON] unsigned char 
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2, status,0
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4569 ;;      Params:         3       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0
  4571 ;;      Temps:          2       0       0       0       0       0
  4572 ;;      Totals:         5       0       0       0       0       0
  4573 ;;Total ram usage:        5 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_Tick980Hz
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582  073F                     _setPWMDutyandPeriod:	
  4583                           ;psect for function _setPWMDutyandPeriod
  4584                           
  4585  073F                     i1l2086:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  4588                           
  4589                           
  4590                           ;PWM.c: 50:     PR2 = period;
  4591  073F  0872               	movf	setPWMDutyandPeriod@period,w
  4592  0740  0020               	movlb	0	; select bank0
  4593  0741  009B               	movwf	27	;volatile
  4594  0742                     i1l2088:
  4595                           
  4596                           ;PWM.c: 51:     CCPR1L = dutyCycle >> 2;
  4597  0742  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  4598  0743  00F4               	movwf	??_setPWMDutyandPeriod+1
  4599  0744  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4600  0745  00F3               	movwf	??_setPWMDutyandPeriod
  4601  0746  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4602  0747  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4603  0748  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4604  0749  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4605  074A  0873               	movf	??_setPWMDutyandPeriod,w
  4606  074B  0025               	movlb	5	; select bank5
  4607  074C  0091               	movwf	17	;volatile
  4608  074D                     i1l2090:
  4609                           
  4610                           ;PWM.c: 52:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4611  074D  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4612  074E  3901               	andlw	1
  4613  074F  00F3               	movwf	??_setPWMDutyandPeriod
  4614  0750  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4615  0751  0813               	movf	19,w	;volatile
  4616  0752  0673               	xorwf	??_setPWMDutyandPeriod,w
  4617  0753  39EF               	andlw	-17
  4618  0754  0673               	xorwf	??_setPWMDutyandPeriod,w
  4619  0755  0093               	movwf	19	;volatile
  4620                           
  4621                           ;PWM.c: 53:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4622  0756  3002               	movlw	2
  4623  0757  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4624  0758  00F3               	movwf	??_setPWMDutyandPeriod
  4625  0759  3000               	movlw	0
  4626  075A  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4627  075B  00F4               	movwf	??_setPWMDutyandPeriod+1
  4628  075C  3000               	movlw	0
  4629  075D  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4630  075E  3002               	movlw	2
  4631  075F  1903               	skipnz
  4632  0760  0273               	subwf	??_setPWMDutyandPeriod,w
  4633  0761  1803               	skipnc
  4634  0762  2F64               	goto	u179_21
  4635  0763  2F67               	goto	u179_20
  4636  0764                     u179_21:
  4637  0764  0025               	movlb	5	; select bank5
  4638  0765  1693               	bsf	19,5	;volatile
  4639  0766  2F69               	goto	u180_24
  4640  0767                     u179_20:
  4641  0767  0025               	movlb	5	; select bank5
  4642  0768  1293               	bcf	19,5	;volatile
  4643  0769                     u180_24:
  4644  0769                     i1l170:
  4645  0769  0008               	return
  4646  076A                     __end_of_setPWMDutyandPeriod:
  4647                           
  4648                           	psect	text19
  4649  00A8                     __ptext19:	
  4650 ;; *************** function _runPotScaling *****************
  4651 ;; Defined at:
  4652 ;;		line 55 in file "Potentiometer.c"
  4653 ;; Parameters:    Size  Location     Type
  4654 ;;		None
  4655 ;; Auto vars:     Size  Location     Type
  4656 ;;  minDuty         2   16[BANK0 ] unsigned short 
  4657 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0, pclath, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4667 ;;      Params:         0       0       0       0       0       0
  4668 ;;      Locals:         0       4       0       0       0       0
  4669 ;;      Temps:          0       8       0       0       0       0
  4670 ;;      Totals:         0      12       0       0       0       0
  4671 ;;Total ram usage:       12 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 1
  4674 ;; This function calls:
  4675 ;;		___lldiv
  4676 ;;		___lmul
  4677 ;;		___wmul
  4678 ;; This function is called by:
  4679 ;;		_Tick980Hz
  4680 ;; This function uses a non-reentrant model
  4681 ;;
  4682                           
  4683  00A8                     _runPotScaling:	
  4684                           ;psect for function _runPotScaling
  4685                           
  4686  00A8                     i1l2154:	
  4687                           ;incstack = 0
  4688                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  4689                           
  4690                           
  4691                           ;Potentiometer.c: 57:     if(currentState == potControl){
  4692  00A8  0020               	movlb	0	; select bank0
  4693  00A9  035A               	decf	_currentState,w
  4694  00AA  1D03               	btfss	3,2
  4695  00AB  28AD               	goto	u187_21
  4696  00AC  28AE               	goto	u187_20
  4697  00AD                     u187_21:
  4698  00AD  2983               	goto	i1l371
  4699  00AE                     u187_20:
  4700  00AE                     i1l2156:
  4701                           
  4702                           ;Potentiometer.c: 58:         potSetCount++;
  4703  00AE  3001               	movlw	1
  4704  00AF  00A6               	movwf	??_runPotScaling
  4705  00B0  0826               	movf	??_runPotScaling,w
  4706  00B1  07D6               	addwf	_potSetCount,f
  4707                           
  4708                           ;Potentiometer.c: 60:         if(potSetCount == 32){
  4709  00B2  3020               	movlw	32
  4710  00B3  0656               	xorwf	_potSetCount,w
  4711  00B4  1D03               	btfss	3,2
  4712  00B5  28B7               	goto	u188_21
  4713  00B6  28B8               	goto	u188_20
  4714  00B7                     u188_21:
  4715  00B7  2983               	goto	i1l371
  4716  00B8                     u188_20:
  4717  00B8                     i1l2158:
  4718                           
  4719                           ;Potentiometer.c: 62:             setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint
      +                          32_t)(159u - 15u)) >> 10 ) + 15u;
  4720  00B8  0846               	movf	_filteredFreqPot,w
  4721  00B9  3ED3               	addlw	211
  4722  00BA  00F0               	movwf	___lmul@multiplier
  4723  00BB  30FF               	movlw	255
  4724  00BC  3D47               	addwfc	_filteredFreqPot+1,w
  4725  00BD  00F1               	movwf	___lmul@multiplier+1
  4726  00BE  01F2               	clrf	___lmul@multiplier+2
  4727  00BF  01F3               	clrf	___lmul@multiplier+3
  4728  00C0  3000               	movlw	0
  4729  00C1  00F7               	movwf	___lmul@multiplicand+3
  4730  00C2  3000               	movlw	0
  4731  00C3  00F6               	movwf	___lmul@multiplicand+2
  4732  00C4  3000               	movlw	0
  4733  00C5  00F5               	movwf	___lmul@multiplicand+1
  4734  00C6  3090               	movlw	144
  4735  00C7  00F4               	movwf	___lmul@multiplicand
  4736  00C8  3186  26B0  3180   	fcall	___lmul
  4737  00CB  0870               	movf	?___lmul,w
  4738  00CC  0020               	movlb	0	; select bank0
  4739  00CD  00A6               	movwf	??_runPotScaling
  4740  00CE  0871               	movf	?___lmul+1,w
  4741  00CF  00A7               	movwf	??_runPotScaling+1
  4742  00D0  0872               	movf	?___lmul+2,w
  4743  00D1  00A8               	movwf	??_runPotScaling+2
  4744  00D2  0873               	movf	?___lmul+3,w
  4745  00D3  00A9               	movwf	??_runPotScaling+3
  4746  00D4  300A               	movlw	10
  4747  00D5                     u189_25:
  4748  00D5  36A9               	lsrf	??_runPotScaling+3,f
  4749  00D6  0CA8               	rrf	??_runPotScaling+2,f
  4750  00D7  0CA7               	rrf	??_runPotScaling+1,f
  4751  00D8  0CA6               	rrf	??_runPotScaling,f
  4752  00D9                     u189_20:
  4753  00D9  0B89               	decfsz	9,f
  4754  00DA  28D5               	goto	u189_25
  4755  00DB  0826               	movf	??_runPotScaling,w
  4756  00DC  3E0F               	addlw	15
  4757  00DD  00AA               	movwf	??_runPotScaling+4
  4758  00DE  082A               	movf	??_runPotScaling+4,w
  4759  00DF  00DB               	movwf	_setPeriod
  4760                           
  4761                           ;Potentiometer.c: 64:             setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) *
      +                           (uint32_t)setPeriod )) >> 8;
  4762  00E0  0844               	movf	_filteredDutyPot,w
  4763  00E1  3ED3               	addlw	211
  4764  00E2  00F0               	movwf	___lmul@multiplier
  4765  00E3  30FF               	movlw	255
  4766  00E4  3D45               	addwfc	_filteredDutyPot+1,w
  4767  00E5  00F1               	movwf	___lmul@multiplier+1
  4768  00E6  01F2               	clrf	___lmul@multiplier+2
  4769  00E7  01F3               	clrf	___lmul@multiplier+3
  4770  00E8  085B               	movf	_setPeriod,w
  4771  00E9  00A6               	movwf	??_runPotScaling
  4772  00EA  01A7               	clrf	??_runPotScaling+1
  4773  00EB  01A8               	clrf	??_runPotScaling+2
  4774  00EC  01A9               	clrf	??_runPotScaling+3
  4775  00ED  0829               	movf	??_runPotScaling+3,w
  4776  00EE  00F7               	movwf	___lmul@multiplicand+3
  4777  00EF  0828               	movf	??_runPotScaling+2,w
  4778  00F0  00F6               	movwf	___lmul@multiplicand+2
  4779  00F1  0827               	movf	??_runPotScaling+1,w
  4780  00F2  00F5               	movwf	___lmul@multiplicand+1
  4781  00F3  0826               	movf	??_runPotScaling,w
  4782  00F4  00F4               	movwf	___lmul@multiplicand
  4783  00F5  3186  26B0  3180   	fcall	___lmul
  4784  00F8  0870               	movf	?___lmul,w
  4785  00F9  0020               	movlb	0	; select bank0
  4786  00FA  00AA               	movwf	??_runPotScaling+4
  4787  00FB  0871               	movf	?___lmul+1,w
  4788  00FC  00AB               	movwf	??_runPotScaling+5
  4789  00FD  0872               	movf	?___lmul+2,w
  4790  00FE  00AC               	movwf	??_runPotScaling+6
  4791  00FF  0873               	movf	?___lmul+3,w
  4792  0100  00AD               	movwf	??_runPotScaling+7
  4793  0101  3008               	movlw	8
  4794  0102                     u190_25:
  4795  0102  36AD               	lsrf	??_runPotScaling+7,f
  4796  0103  0CAC               	rrf	??_runPotScaling+6,f
  4797  0104  0CAB               	rrf	??_runPotScaling+5,f
  4798  0105  0CAA               	rrf	??_runPotScaling+4,f
  4799  0106                     u190_20:
  4800  0106  0B89               	decfsz	9,f
  4801  0107  2902               	goto	u190_25
  4802  0108  082B               	movf	??_runPotScaling+5,w
  4803  0109  00D3               	movwf	_setDuty+1
  4804  010A  082A               	movf	??_runPotScaling+4,w
  4805  010B  00D2               	movwf	_setDuty
  4806                           
  4807                           ;Potentiometer.c: 67:             uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t)
      +                           90) * setPeriod)) / 25);
  4808  010C  3000               	movlw	0
  4809  010D  00F9               	movwf	___lldiv@divisor+3
  4810  010E  3000               	movlw	0
  4811  010F  00F8               	movwf	___lldiv@divisor+2
  4812  0110  3000               	movlw	0
  4813  0111  00F7               	movwf	___lldiv@divisor+1
  4814  0112  3019               	movlw	25
  4815  0113  00F6               	movwf	___lldiv@divisor
  4816  0114  305A               	movlw	90
  4817  0115  00F2               	movwf	___wmul@multiplicand
  4818  0116  3000               	movlw	0
  4819  0117  00F3               	movwf	___wmul@multiplicand+1
  4820  0118  085B               	movf	_setPeriod,w
  4821  0119  00A6               	movwf	??_runPotScaling
  4822  011A  01A7               	clrf	??_runPotScaling+1
  4823  011B  0826               	movf	??_runPotScaling,w
  4824  011C  00F0               	movwf	___wmul@multiplier
  4825  011D  0827               	movf	??_runPotScaling+1,w
  4826  011E  00F1               	movwf	___wmul@multiplier+1
  4827  011F  3187  278A  3180   	fcall	___wmul
  4828  0122  0870               	movf	?___wmul,w
  4829  0123  0020               	movlb	0	; select bank0
  4830  0124  00A8               	movwf	??_runPotScaling+2
  4831  0125  0871               	movf	?___wmul+1,w
  4832  0126  00A9               	movwf	??_runPotScaling+3
  4833  0127  01AA               	clrf	??_runPotScaling+4
  4834  0128  01AB               	clrf	??_runPotScaling+5
  4835  0129  082B               	movf	??_runPotScaling+5,w
  4836  012A  00FD               	movwf	___lldiv@dividend+3
  4837  012B  082A               	movf	??_runPotScaling+4,w
  4838  012C  00FC               	movwf	___lldiv@dividend+2
  4839  012D  0829               	movf	??_runPotScaling+3,w
  4840  012E  00FB               	movwf	___lldiv@dividend+1
  4841  012F  0828               	movf	??_runPotScaling+2,w
  4842  0130  00FA               	movwf	___lldiv@dividend
  4843  0131  3184  2466  3180   	fcall	___lldiv
  4844  0134  0877               	movf	?___lldiv+1,w
  4845  0135  0020               	movlb	0	; select bank0
  4846  0136  00AF               	movwf	runPotScaling@maxDuty+1
  4847  0137  0876               	movf	?___lldiv,w
  4848  0138  00AE               	movwf	runPotScaling@maxDuty
  4849                           
  4850                           ;Potentiometer.c: 68:             uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t)
      +                           10) * setPeriod)) / 25);
  4851  0139  3000               	movlw	0
  4852  013A  00F9               	movwf	___lldiv@divisor+3
  4853  013B  3000               	movlw	0
  4854  013C  00F8               	movwf	___lldiv@divisor+2
  4855  013D  3000               	movlw	0
  4856  013E  00F7               	movwf	___lldiv@divisor+1
  4857  013F  3019               	movlw	25
  4858  0140  00F6               	movwf	___lldiv@divisor
  4859  0141  300A               	movlw	10
  4860  0142  00F2               	movwf	___wmul@multiplicand
  4861  0143  3000               	movlw	0
  4862  0144  00F3               	movwf	___wmul@multiplicand+1
  4863  0145  085B               	movf	_setPeriod,w
  4864  0146  00A6               	movwf	??_runPotScaling
  4865  0147  01A7               	clrf	??_runPotScaling+1
  4866  0148  0826               	movf	??_runPotScaling,w
  4867  0149  00F0               	movwf	___wmul@multiplier
  4868  014A  0827               	movf	??_runPotScaling+1,w
  4869  014B  00F1               	movwf	___wmul@multiplier+1
  4870  014C  3187  278A  3180   	fcall	___wmul
  4871  014F  0870               	movf	?___wmul,w
  4872  0150  0020               	movlb	0	; select bank0
  4873  0151  00A8               	movwf	??_runPotScaling+2
  4874  0152  0871               	movf	?___wmul+1,w
  4875  0153  00A9               	movwf	??_runPotScaling+3
  4876  0154  01AA               	clrf	??_runPotScaling+4
  4877  0155  01AB               	clrf	??_runPotScaling+5
  4878  0156  082B               	movf	??_runPotScaling+5,w
  4879  0157  00FD               	movwf	___lldiv@dividend+3
  4880  0158  082A               	movf	??_runPotScaling+4,w
  4881  0159  00FC               	movwf	___lldiv@dividend+2
  4882  015A  0829               	movf	??_runPotScaling+3,w
  4883  015B  00FB               	movwf	___lldiv@dividend+1
  4884  015C  0828               	movf	??_runPotScaling+2,w
  4885  015D  00FA               	movwf	___lldiv@dividend
  4886  015E  3184  2466  3180   	fcall	___lldiv
  4887  0161  0877               	movf	?___lldiv+1,w
  4888  0162  0020               	movlb	0	; select bank0
  4889  0163  00B1               	movwf	runPotScaling@minDuty+1
  4890  0164  0876               	movf	?___lldiv,w
  4891  0165  00B0               	movwf	runPotScaling@minDuty
  4892  0166                     i1l2160:
  4893                           
  4894                           ;Potentiometer.c: 69:             if(setDuty > maxDuty) setDuty = maxDuty;
  4895  0166  0853               	movf	_setDuty+1,w
  4896  0167  022F               	subwf	runPotScaling@maxDuty+1,w
  4897  0168  1D03               	skipz
  4898  0169  296C               	goto	u191_25
  4899  016A  0852               	movf	_setDuty,w
  4900  016B  022E               	subwf	runPotScaling@maxDuty,w
  4901  016C                     u191_25:
  4902  016C  1803               	skipnc
  4903  016D  296F               	goto	u191_21
  4904  016E  2970               	goto	u191_20
  4905  016F                     u191_21:
  4906  016F  2974               	goto	i1l369
  4907  0170                     u191_20:
  4908  0170                     i1l2162:
  4909  0170  082F               	movf	runPotScaling@maxDuty+1,w
  4910  0171  00D3               	movwf	_setDuty+1
  4911  0172  082E               	movf	runPotScaling@maxDuty,w
  4912  0173  00D2               	movwf	_setDuty
  4913  0174                     i1l369:
  4914                           
  4915                           ;Potentiometer.c: 70:             if(setDuty < minDuty) setDuty = minDuty;
  4916  0174  0831               	movf	runPotScaling@minDuty+1,w
  4917  0175  0253               	subwf	_setDuty+1,w
  4918  0176  1D03               	skipz
  4919  0177  297A               	goto	u192_25
  4920  0178  0830               	movf	runPotScaling@minDuty,w
  4921  0179  0252               	subwf	_setDuty,w
  4922  017A                     u192_25:
  4923  017A  1803               	skipnc
  4924  017B  297D               	goto	u192_21
  4925  017C  297E               	goto	u192_20
  4926  017D                     u192_21:
  4927  017D  2982               	goto	i1l2166
  4928  017E                     u192_20:
  4929  017E                     i1l2164:
  4930  017E  0831               	movf	runPotScaling@minDuty+1,w
  4931  017F  00D3               	movwf	_setDuty+1
  4932  0180  0830               	movf	runPotScaling@minDuty,w
  4933  0181  00D2               	movwf	_setDuty
  4934  0182                     i1l2166:
  4935                           
  4936                           ;Potentiometer.c: 72:             potSetCount = 0;
  4937  0182  01D6               	clrf	_potSetCount
  4938  0183                     i1l371:
  4939  0183  0008               	return
  4940  0184                     __end_of_runPotScaling:
  4941                           
  4942                           	psect	text20
  4943  078A                     __ptext20:	
  4944 ;; *************** function ___wmul *****************
  4945 ;; Defined at:
  4946 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  multiplier      2    0[COMMON] unsigned int 
  4949 ;;  multiplicand    2    2[COMMON] unsigned int 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  product         2    4[COMMON] unsigned int 
  4952 ;; Return value:  Size  Location     Type
  4953 ;;                  2    0[COMMON] unsigned int 
  4954 ;; Registers used:
  4955 ;;		wreg, status,2, status,0
  4956 ;; Tracked objects:
  4957 ;;		On entry : 0/0
  4958 ;;		On exit  : 0/0
  4959 ;;		Unchanged: 0/0
  4960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4961 ;;      Params:         4       0       0       0       0       0
  4962 ;;      Locals:         2       0       0       0       0       0
  4963 ;;      Temps:          0       0       0       0       0       0
  4964 ;;      Totals:         6       0       0       0       0       0
  4965 ;;Total ram usage:        6 bytes
  4966 ;; Hardware stack levels used: 1
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_runPotScaling
  4971 ;;		_convertRawToDeciVolts
  4972 ;;		_convertRawToMilliAmps
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976  078A                     ___wmul:	
  4977                           ;psect for function ___wmul
  4978                           
  4979  078A                     i1l1982:	
  4980                           ;incstack = 0
  4981                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4982                           
  4983  078A  01F4               	clrf	___wmul@product
  4984  078B  01F5               	clrf	___wmul@product+1
  4985  078C                     i1l1984:
  4986  078C  1C70               	btfss	___wmul@multiplier,0
  4987  078D  2F8F               	goto	u153_21
  4988  078E  2F90               	goto	u153_20
  4989  078F                     u153_21:
  4990  078F  2F94               	goto	i1l672
  4991  0790                     u153_20:
  4992  0790                     i1l1986:
  4993  0790  0872               	movf	___wmul@multiplicand,w
  4994  0791  07F4               	addwf	___wmul@product,f
  4995  0792  0873               	movf	___wmul@multiplicand+1,w
  4996  0793  3DF5               	addwfc	___wmul@product+1,f
  4997  0794                     i1l672:
  4998  0794  3001               	movlw	1
  4999  0795                     u154_25:
  5000  0795  35F2               	lslf	___wmul@multiplicand,f
  5001  0796  0DF3               	rlf	___wmul@multiplicand+1,f
  5002  0797  0B89               	decfsz	9,f
  5003  0798  2F95               	goto	u154_25
  5004  0799                     i1l1988:
  5005  0799  3001               	movlw	1
  5006  079A                     u155_25:
  5007  079A  36F1               	lsrf	___wmul@multiplier+1,f
  5008  079B  0CF0               	rrf	___wmul@multiplier,f
  5009  079C  0B89               	decfsz	9,f
  5010  079D  2F9A               	goto	u155_25
  5011  079E                     i1l1990:
  5012  079E  0870               	movf	___wmul@multiplier,w
  5013  079F  0471               	iorwf	___wmul@multiplier+1,w
  5014  07A0  1D03               	btfss	3,2
  5015  07A1  2FA3               	goto	u156_21
  5016  07A2  2FA4               	goto	u156_20
  5017  07A3                     u156_21:
  5018  07A3  2F8C               	goto	i1l1984
  5019  07A4                     u156_20:
  5020  07A4                     i1l1992:
  5021  07A4  0875               	movf	___wmul@product+1,w
  5022  07A5  00F1               	movwf	?___wmul+1
  5023  07A6  0874               	movf	___wmul@product,w
  5024  07A7  00F0               	movwf	?___wmul
  5025  07A8                     i1l674:
  5026  07A8  0008               	return
  5027  07A9                     __end_of___wmul:
  5028                           
  5029                           	psect	text21
  5030  06B0                     __ptext21:	
  5031 ;; *************** function ___lmul *****************
  5032 ;; Defined at:
  5033 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  multiplier      4    0[COMMON] unsigned long 
  5036 ;;  multiplicand    4    4[COMMON] unsigned long 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  product         4    8[COMMON] unsigned long 
  5039 ;; Return value:  Size  Location     Type
  5040 ;;                  4    0[COMMON] unsigned long 
  5041 ;; Registers used:
  5042 ;;		wreg, status,2, status,0
  5043 ;; Tracked objects:
  5044 ;;		On entry : 0/0
  5045 ;;		On exit  : 0/0
  5046 ;;		Unchanged: 0/0
  5047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5048 ;;      Params:         8       0       0       0       0       0
  5049 ;;      Locals:         4       0       0       0       0       0
  5050 ;;      Temps:          0       0       0       0       0       0
  5051 ;;      Totals:        12       0       0       0       0       0
  5052 ;;Total ram usage:       12 bytes
  5053 ;; Hardware stack levels used: 1
  5054 ;; This function calls:
  5055 ;;		Nothing
  5056 ;; This function is called by:
  5057 ;;		_runPotScaling
  5058 ;; This function uses a non-reentrant model
  5059 ;;
  5060                           
  5061  06B0                     ___lmul:	
  5062                           ;psect for function ___lmul
  5063                           
  5064  06B0                     i1l1996:	
  5065                           ;incstack = 0
  5066                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5067                           
  5068  06B0  3000               	movlw	0
  5069  06B1  00FB               	movwf	___lmul@product+3
  5070  06B2  3000               	movlw	0
  5071  06B3  00FA               	movwf	___lmul@product+2
  5072  06B4  3000               	movlw	0
  5073  06B5  00F9               	movwf	___lmul@product+1
  5074  06B6  3000               	movlw	0
  5075  06B7  00F8               	movwf	___lmul@product
  5076  06B8                     i1l1998:
  5077  06B8  1C70               	btfss	___lmul@multiplier,0
  5078  06B9  2EBB               	goto	u157_21
  5079  06BA  2EBC               	goto	u157_20
  5080  06BB                     u157_21:
  5081  06BB  2EC4               	goto	i1l2002
  5082  06BC                     u157_20:
  5083  06BC                     i1l2000:
  5084  06BC  0874               	movf	___lmul@multiplicand,w
  5085  06BD  07F8               	addwf	___lmul@product,f
  5086  06BE  0875               	movf	___lmul@multiplicand+1,w
  5087  06BF  3DF9               	addwfc	___lmul@product+1,f
  5088  06C0  0876               	movf	___lmul@multiplicand+2,w
  5089  06C1  3DFA               	addwfc	___lmul@product+2,f
  5090  06C2  0877               	movf	___lmul@multiplicand+3,w
  5091  06C3  3DFB               	addwfc	___lmul@product+3,f
  5092  06C4                     i1l2002:
  5093  06C4  3001               	movlw	1
  5094  06C5                     u158_25:
  5095  06C5  35F4               	lslf	___lmul@multiplicand,f
  5096  06C6  0DF5               	rlf	___lmul@multiplicand+1,f
  5097  06C7  0DF6               	rlf	___lmul@multiplicand+2,f
  5098  06C8  0DF7               	rlf	___lmul@multiplicand+3,f
  5099  06C9  0B89               	decfsz	9,f
  5100  06CA  2EC5               	goto	u158_25
  5101  06CB                     i1l2004:
  5102  06CB  3001               	movlw	1
  5103  06CC                     u159_25:
  5104  06CC  36F3               	lsrf	___lmul@multiplier+3,f
  5105  06CD  0CF2               	rrf	___lmul@multiplier+2,f
  5106  06CE  0CF1               	rrf	___lmul@multiplier+1,f
  5107  06CF  0CF0               	rrf	___lmul@multiplier,f
  5108  06D0  0B89               	decfsz	9,f
  5109  06D1  2ECC               	goto	u159_25
  5110  06D2  0873               	movf	___lmul@multiplier+3,w
  5111  06D3  0472               	iorwf	___lmul@multiplier+2,w
  5112  06D4  0471               	iorwf	___lmul@multiplier+1,w
  5113  06D5  0470               	iorwf	___lmul@multiplier,w
  5114  06D6  1D03               	skipz
  5115  06D7  2ED9               	goto	u160_21
  5116  06D8  2EDA               	goto	u160_20
  5117  06D9                     u160_21:
  5118  06D9  2EB8               	goto	i1l1998
  5119  06DA                     u160_20:
  5120  06DA                     i1l2006:
  5121  06DA  087B               	movf	___lmul@product+3,w
  5122  06DB  00F3               	movwf	?___lmul+3
  5123  06DC  087A               	movf	___lmul@product+2,w
  5124  06DD  00F2               	movwf	?___lmul+2
  5125  06DE  0879               	movf	___lmul@product+1,w
  5126  06DF  00F1               	movwf	?___lmul+1
  5127  06E0  0878               	movf	___lmul@product,w
  5128  06E1  00F0               	movwf	?___lmul
  5129  06E2                     i1l686:
  5130  06E2  0008               	return
  5131  06E3                     __end_of___lmul:
  5132                           
  5133                           	psect	text22
  5134  0466                     __ptext22:	
  5135 ;; *************** function ___lldiv *****************
  5136 ;; Defined at:
  5137 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  divisor         4    6[COMMON] unsigned long 
  5140 ;;  dividend        4   10[COMMON] unsigned long 
  5141 ;; Auto vars:     Size  Location     Type
  5142 ;;  quotient        4    1[BANK0 ] unsigned long 
  5143 ;;  counter         1    5[BANK0 ] unsigned char 
  5144 ;; Return value:  Size  Location     Type
  5145 ;;                  4    6[COMMON] unsigned long 
  5146 ;; Registers used:
  5147 ;;		wreg, status,2, status,0
  5148 ;; Tracked objects:
  5149 ;;		On entry : 0/0
  5150 ;;		On exit  : 0/0
  5151 ;;		Unchanged: 0/0
  5152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5153 ;;      Params:         8       0       0       0       0       0
  5154 ;;      Locals:         0       5       0       0       0       0
  5155 ;;      Temps:          0       1       0       0       0       0
  5156 ;;      Totals:         8       6       0       0       0       0
  5157 ;;Total ram usage:       14 bytes
  5158 ;; Hardware stack levels used: 1
  5159 ;; This function calls:
  5160 ;;		Nothing
  5161 ;; This function is called by:
  5162 ;;		_runPotScaling
  5163 ;; This function uses a non-reentrant model
  5164 ;;
  5165                           
  5166  0466                     ___lldiv:	
  5167                           ;psect for function ___lldiv
  5168                           
  5169  0466                     i1l2010:	
  5170                           ;incstack = 0
  5171                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5172                           
  5173  0466  3000               	movlw	0
  5174  0467  0020               	movlb	0	; select bank0
  5175  0468  00A4               	movwf	___lldiv@quotient+3
  5176  0469  3000               	movlw	0
  5177  046A  00A3               	movwf	___lldiv@quotient+2
  5178  046B  3000               	movlw	0
  5179  046C  00A2               	movwf	___lldiv@quotient+1
  5180  046D  3000               	movlw	0
  5181  046E  00A1               	movwf	___lldiv@quotient
  5182  046F  0879               	movf	___lldiv@divisor+3,w
  5183  0470  0478               	iorwf	___lldiv@divisor+2,w
  5184  0471  0477               	iorwf	___lldiv@divisor+1,w
  5185  0472  0476               	iorwf	___lldiv@divisor,w
  5186  0473  1903               	skipnz
  5187  0474  2C76               	goto	u161_21
  5188  0475  2C77               	goto	u161_20
  5189  0476                     u161_21:
  5190  0476  2CB8               	goto	i1l2030
  5191  0477                     u161_20:
  5192  0477                     i1l2012:
  5193  0477  01A5               	clrf	___lldiv@counter
  5194  0478  0AA5               	incf	___lldiv@counter,f
  5195  0479  2C85               	goto	i1l2016
  5196  047A                     i1l2014:
  5197  047A  3001               	movlw	1
  5198  047B                     u162_25:
  5199  047B  35F6               	lslf	___lldiv@divisor,f
  5200  047C  0DF7               	rlf	___lldiv@divisor+1,f
  5201  047D  0DF8               	rlf	___lldiv@divisor+2,f
  5202  047E  0DF9               	rlf	___lldiv@divisor+3,f
  5203  047F  0B89               	decfsz	9,f
  5204  0480  2C7B               	goto	u162_25
  5205  0481  3001               	movlw	1
  5206  0482  00A0               	movwf	??___lldiv
  5207  0483  0820               	movf	??___lldiv,w
  5208  0484  07A5               	addwf	___lldiv@counter,f
  5209  0485                     i1l2016:
  5210  0485  1FF9               	btfss	___lldiv@divisor+3,7
  5211  0486  2C88               	goto	u163_21
  5212  0487  2C89               	goto	u163_20
  5213  0488                     u163_21:
  5214  0488  2C7A               	goto	i1l2014
  5215  0489                     u163_20:
  5216  0489                     i1l2018:
  5217  0489  3001               	movlw	1
  5218  048A                     u164_25:
  5219  048A  35A1               	lslf	___lldiv@quotient,f
  5220  048B  0DA2               	rlf	___lldiv@quotient+1,f
  5221  048C  0DA3               	rlf	___lldiv@quotient+2,f
  5222  048D  0DA4               	rlf	___lldiv@quotient+3,f
  5223  048E  0B89               	decfsz	9,f
  5224  048F  2C8A               	goto	u164_25
  5225  0490                     i1l2020:
  5226  0490  0879               	movf	___lldiv@divisor+3,w
  5227  0491  027D               	subwf	___lldiv@dividend+3,w
  5228  0492  1D03               	skipz
  5229  0493  2C9E               	goto	u165_25
  5230  0494  0878               	movf	___lldiv@divisor+2,w
  5231  0495  027C               	subwf	___lldiv@dividend+2,w
  5232  0496  1D03               	skipz
  5233  0497  2C9E               	goto	u165_25
  5234  0498  0877               	movf	___lldiv@divisor+1,w
  5235  0499  027B               	subwf	___lldiv@dividend+1,w
  5236  049A  1D03               	skipz
  5237  049B  2C9E               	goto	u165_25
  5238  049C  0876               	movf	___lldiv@divisor,w
  5239  049D  027A               	subwf	___lldiv@dividend,w
  5240  049E                     u165_25:
  5241  049E  1C03               	skipc
  5242  049F  2CA1               	goto	u165_21
  5243  04A0  2CA2               	goto	u165_20
  5244  04A1                     u165_21:
  5245  04A1  2CAB               	goto	i1l2026
  5246  04A2                     u165_20:
  5247  04A2                     i1l2022:
  5248  04A2  0876               	movf	___lldiv@divisor,w
  5249  04A3  02FA               	subwf	___lldiv@dividend,f
  5250  04A4  0877               	movf	___lldiv@divisor+1,w
  5251  04A5  3BFB               	subwfb	___lldiv@dividend+1,f
  5252  04A6  0878               	movf	___lldiv@divisor+2,w
  5253  04A7  3BFC               	subwfb	___lldiv@dividend+2,f
  5254  04A8  0879               	movf	___lldiv@divisor+3,w
  5255  04A9  3BFD               	subwfb	___lldiv@dividend+3,f
  5256  04AA                     i1l2024:
  5257  04AA  1421               	bsf	___lldiv@quotient,0
  5258  04AB                     i1l2026:
  5259  04AB  3001               	movlw	1
  5260  04AC                     u166_25:
  5261  04AC  36F9               	lsrf	___lldiv@divisor+3,f
  5262  04AD  0CF8               	rrf	___lldiv@divisor+2,f
  5263  04AE  0CF7               	rrf	___lldiv@divisor+1,f
  5264  04AF  0CF6               	rrf	___lldiv@divisor,f
  5265  04B0  0B89               	decfsz	9,f
  5266  04B1  2CAC               	goto	u166_25
  5267  04B2                     i1l2028:
  5268  04B2  3001               	movlw	1
  5269  04B3  02A5               	subwf	___lldiv@counter,f
  5270  04B4  1D03               	btfss	3,2
  5271  04B5  2CB7               	goto	u167_21
  5272  04B6  2CB8               	goto	u167_20
  5273  04B7                     u167_21:
  5274  04B7  2C89               	goto	i1l2018
  5275  04B8                     u167_20:
  5276  04B8                     i1l2030:
  5277  04B8  0824               	movf	___lldiv@quotient+3,w
  5278  04B9  00F9               	movwf	?___lldiv+3
  5279  04BA  0823               	movf	___lldiv@quotient+2,w
  5280  04BB  00F8               	movwf	?___lldiv+2
  5281  04BC  0822               	movf	___lldiv@quotient+1,w
  5282  04BD  00F7               	movwf	?___lldiv+1
  5283  04BE  0821               	movf	___lldiv@quotient,w
  5284  04BF  00F6               	movwf	?___lldiv
  5285  04C0                     i1l708:
  5286  04C0  0008               	return
  5287  04C1                     __end_of___lldiv:
  5288                           
  5289                           	psect	text23
  5290  0FF4                     __ptext23:	
  5291 ;; *************** function _readILCurrentADCRaw *****************
  5292 ;; Defined at:
  5293 ;;		line 108 in file "ADC.c"
  5294 ;; Parameters:    Size  Location     Type
  5295 ;;		None
  5296 ;; Auto vars:     Size  Location     Type
  5297 ;;		None
  5298 ;; Return value:  Size  Location     Type
  5299 ;;                  2    0[COMMON] unsigned short 
  5300 ;; Registers used:
  5301 ;;		wreg
  5302 ;; Tracked objects:
  5303 ;;		On entry : 0/0
  5304 ;;		On exit  : 0/0
  5305 ;;		Unchanged: 0/0
  5306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5307 ;;      Params:         2       0       0       0       0       0
  5308 ;;      Locals:         0       0       0       0       0       0
  5309 ;;      Temps:          0       0       0       0       0       0
  5310 ;;      Totals:         2       0       0       0       0       0
  5311 ;;Total ram usage:        2 bytes
  5312 ;; Hardware stack levels used: 1
  5313 ;; This function calls:
  5314 ;;		Nothing
  5315 ;; This function is called by:
  5316 ;;		_Tick980Hz
  5317 ;; This function uses a non-reentrant model
  5318 ;;
  5319                           
  5320  0FF4                     _readILCurrentADCRaw:	
  5321                           ;psect for function _readILCurrentADCRaw
  5322                           
  5323  0FF4                     i1l2232:	
  5324                           ;incstack = 0
  5325                           ; Regs used in _readILCurrentADCRaw: [wreg]
  5326                           
  5327                           
  5328                           ;ADC.c: 110:     if(~ADCON0bits.GO_nDONE){
  5329  0FF4  0021               	movlb	1	; select bank1
  5330  0FF5  081D               	movf	29,w	;volatile
  5331  0FF6                     i1l2234:
  5332                           
  5333                           ;ADC.c: 111:         ADCON0bits.GO_nDONE = 1;
  5334  0FF6  149D               	bsf	29,1	;volatile
  5335  0FF7                     i1l254:	
  5336                           ;ADC.c: 112:         while(ADCON0bits.GO_nDONE);
  5337                           
  5338  0FF7  189D               	btfsc	29,1	;volatile
  5339  0FF8  2FFA               	goto	u199_21
  5340  0FF9  2FFB               	goto	u199_20
  5341  0FFA                     u199_21:
  5342  0FFA  2FF7               	goto	i1l254
  5343  0FFB                     u199_20:
  5344  0FFB                     i1l2236:
  5345                           
  5346                           ;ADC.c: 113:         return ((ADRESH<<8)+ADRESL);
  5347  0FFB  081C               	movf	28,w	;volatile
  5348  0FFC  00F1               	movwf	?_readILCurrentADCRaw+1
  5349  0FFD  081B               	movf	27,w	;volatile
  5350  0FFE  00F0               	movwf	?_readILCurrentADCRaw
  5351  0FFF                     i1l257:
  5352  0FFF  0008               	return
  5353  1000                     __end_of_readILCurrentADCRaw:
  5354                           
  5355                           	psect	text24
  5356  04C1                     __ptext24:	
  5357 ;; *************** function _readFilteredVout *****************
  5358 ;; Defined at:
  5359 ;;		line 20 in file "Controller.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;		None
  5362 ;; Auto vars:     Size  Location     Type
  5363 ;;  i               1    8[BANK0 ] unsigned char 
  5364 ;;  i               1    9[BANK0 ] unsigned char 
  5365 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5366 ;; Return value:  Size  Location     Type
  5367 ;;                  2   11[COMMON] unsigned short 
  5368 ;; Registers used:
  5369 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5370 ;; Tracked objects:
  5371 ;;		On entry : 0/0
  5372 ;;		On exit  : 0/0
  5373 ;;		Unchanged: 0/0
  5374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5375 ;;      Params:         2       0       0       0       0       0
  5376 ;;      Locals:         0       6       0       0       0       0
  5377 ;;      Temps:          0       4       0       0       0       0
  5378 ;;      Totals:         2      10       0       0       0       0
  5379 ;;Total ram usage:       12 bytes
  5380 ;; Hardware stack levels used: 1
  5381 ;; Hardware stack levels required when called: 1
  5382 ;; This function calls:
  5383 ;;		_readADCRaw
  5384 ;; This function is called by:
  5385 ;;		_Tick980Hz
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389  04C1                     _readFilteredVout:	
  5390                           ;psect for function _readFilteredVout
  5391                           
  5392  04C1                     i1l2122:	
  5393                           ;incstack = 0
  5394                           ; Regs used in _readFilteredVout: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5395                           
  5396                           
  5397                           ;Controller.c: 21:     for(uint8_t i=0; i<16 -1; i++) voutFIFO[i] = voutFIFO[i+1];
  5398  04C1  0020               	movlb	0	; select bank0
  5399  04C2  01A9               	clrf	readFilteredVout@i
  5400  04C3                     i1l2128:
  5401  04C3  3529               	lslf	readFilteredVout@i,w
  5402  04C4  3E42               	addlw	(low ((_voutFIFO| (0+256)+2)))& (0+255)
  5403  04C5  0086               	movwf	6
  5404  04C6  3001               	movlw	1	; select bank2/3
  5405  04C7  0087               	movwf	7
  5406  04C8  3529               	lslf	readFilteredVout@i,w
  5407  04C9  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  5408  04CA  0084               	movwf	4
  5409  04CB  3001               	movlw	1	; select bank2/3
  5410  04CC  0085               	movwf	5
  5411  04CD  3F40               	moviw [0]fsr1
  5412  04CE  3F80               	movwi [0]fsr0
  5413  04CF  3F41               	moviw [1]fsr1
  5414  04D0  3F81               	movwi [1]fsr0
  5415  04D1                     i1l2130:
  5416  04D1  3001               	movlw	1
  5417  04D2  00A0               	movwf	??_readFilteredVout
  5418  04D3  0820               	movf	??_readFilteredVout,w
  5419  04D4  07A9               	addwf	readFilteredVout@i,f
  5420  04D5                     i1l2132:
  5421  04D5  300F               	movlw	15
  5422  04D6  0229               	subwf	readFilteredVout@i,w
  5423  04D7  1C03               	skipc
  5424  04D8  2CDA               	goto	u184_21
  5425  04D9  2CDB               	goto	u184_20
  5426  04DA                     u184_21:
  5427  04DA  2CC3               	goto	i1l2128
  5428  04DB                     u184_20:
  5429  04DB                     i1l2134:
  5430                           
  5431                           ;Controller.c: 22:     voutFIFO[16 -1] = readADCRaw(pinRA4);
  5432  04DB  3004               	movlw	4
  5433  04DC  3183  2345  3184   	fcall	_readADCRaw
  5434  04DF  0871               	movf	?_readADCRaw+1,w
  5435  04E0  0022               	movlb	2	; select bank2
  5436  04E1  00DF               	movwf	((_voutFIFO+1)^(0+256)+30)
  5437  04E2  0870               	movf	?_readADCRaw,w
  5438  04E3  00DE               	movwf	(_voutFIFO^(0+256)+30)
  5439  04E4                     i1l2136:
  5440                           
  5441                           ;Controller.c: 23:     uint32_t sumOfSamples = 0;
  5442  04E4  3000               	movlw	0
  5443  04E5  0020               	movlb	0	; select bank0
  5444  04E6  00A7               	movwf	readFilteredVout@sumOfSamples+3
  5445  04E7  3000               	movlw	0
  5446  04E8  00A6               	movwf	readFilteredVout@sumOfSamples+2
  5447  04E9  3000               	movlw	0
  5448  04EA  00A5               	movwf	readFilteredVout@sumOfSamples+1
  5449  04EB  3000               	movlw	0
  5450  04EC  00A4               	movwf	readFilteredVout@sumOfSamples
  5451  04ED                     i1l2138:
  5452                           
  5453                           ;Controller.c: 24:     for(uint8_t i=0; i<16; i++) sumOfSamples += voutFIFO[i];
  5454  04ED  01A8               	clrf	readFilteredVout@i_836
  5455  04EE                     i1l2144:
  5456  04EE  3528               	lslf	readFilteredVout@i_836,w
  5457  04EF  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  5458  04F0  0086               	movwf	6
  5459  04F1  3001               	movlw	1	; select bank2/3
  5460  04F2  0087               	movwf	7
  5461  04F3  3F40               	moviw [0]fsr1
  5462  04F4  00A0               	movwf	??_readFilteredVout
  5463  04F5  3F41               	moviw [1]fsr1
  5464  04F6  00A1               	movwf	??_readFilteredVout+1
  5465  04F7  0820               	movf	??_readFilteredVout,w
  5466  04F8  07A4               	addwf	readFilteredVout@sumOfSamples,f
  5467  04F9  0821               	movf	??_readFilteredVout+1,w
  5468  04FA  3DA5               	addwfc	readFilteredVout@sumOfSamples+1,f
  5469  04FB  3000               	movlw	0
  5470  04FC  3DA6               	addwfc	readFilteredVout@sumOfSamples+2,f
  5471  04FD  3DA7               	addwfc	readFilteredVout@sumOfSamples+3,f
  5472  04FE                     i1l2146:
  5473  04FE  3001               	movlw	1
  5474  04FF  00A0               	movwf	??_readFilteredVout
  5475  0500  0820               	movf	??_readFilteredVout,w
  5476  0501  07A8               	addwf	readFilteredVout@i_836,f
  5477  0502                     i1l2148:
  5478  0502  3010               	movlw	16
  5479  0503  0228               	subwf	readFilteredVout@i_836,w
  5480  0504  1C03               	skipc
  5481  0505  2D07               	goto	u185_21
  5482  0506  2D08               	goto	u185_20
  5483  0507                     u185_21:
  5484  0507  2CEE               	goto	i1l2144
  5485  0508                     u185_20:
  5486  0508                     i1l2150:
  5487                           
  5488                           ;Controller.c: 26:     return (sumOfSamples >> 4);
  5489  0508  0824               	movf	readFilteredVout@sumOfSamples,w
  5490  0509  00A0               	movwf	??_readFilteredVout
  5491  050A  0825               	movf	readFilteredVout@sumOfSamples+1,w
  5492  050B  00A1               	movwf	??_readFilteredVout+1
  5493  050C  0826               	movf	readFilteredVout@sumOfSamples+2,w
  5494  050D  00A2               	movwf	??_readFilteredVout+2
  5495  050E  0827               	movf	readFilteredVout@sumOfSamples+3,w
  5496  050F  00A3               	movwf	??_readFilteredVout+3
  5497  0510  3004               	movlw	4
  5498  0511                     u186_25:
  5499  0511  36A3               	lsrf	??_readFilteredVout+3,f
  5500  0512  0CA2               	rrf	??_readFilteredVout+2,f
  5501  0513  0CA1               	rrf	??_readFilteredVout+1,f
  5502  0514  0CA0               	rrf	??_readFilteredVout,f
  5503  0515                     u186_20:
  5504  0515  0B89               	decfsz	9,f
  5505  0516  2D11               	goto	u186_25
  5506  0517  0821               	movf	??_readFilteredVout+1,w
  5507  0518  00FC               	movwf	?_readFilteredVout+1
  5508  0519  0820               	movf	??_readFilteredVout,w
  5509  051A  00FB               	movwf	?_readFilteredVout
  5510  051B                     i1l416:
  5511  051B  0008               	return
  5512  051C                     __end_of_readFilteredVout:
  5513                           
  5514                           	psect	text25
  5515  05D2                     __ptext25:	
  5516 ;; *************** function _readFilteredIL *****************
  5517 ;; Defined at:
  5518 ;;		line 55 in file "CurrentSensor.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;		None
  5521 ;; Auto vars:     Size  Location     Type
  5522 ;;  i               1   10[COMMON] unsigned char 
  5523 ;;  i               1   11[COMMON] unsigned char 
  5524 ;;  sumOfSamples    4    6[COMMON] unsigned long 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  2    0[COMMON] unsigned short 
  5527 ;; Registers used:
  5528 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5534 ;;      Params:         2       0       0       0       0       0
  5535 ;;      Locals:         6       0       0       0       0       0
  5536 ;;      Temps:          4       0       0       0       0       0
  5537 ;;      Totals:        12       0       0       0       0       0
  5538 ;;Total ram usage:       12 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; This function calls:
  5541 ;;		Nothing
  5542 ;; This function is called by:
  5543 ;;		_Tick980Hz
  5544 ;; This function uses a non-reentrant model
  5545 ;;
  5546                           
  5547  05D2                     _readFilteredIL:	
  5548                           ;psect for function _readFilteredIL
  5549                           
  5550  05D2                     i1l2092:	
  5551                           ;incstack = 0
  5552                           ; Regs used in _readFilteredIL: [wreg-fsr1h+status,2+status,0]
  5553                           
  5554                           
  5555                           ;CurrentSensor.c: 56:     for(uint8_t i=0; i<16 -1; i++) currentILFIFO[i] = currentILFIF
      +                          O[i+1];
  5556  05D2  01FB               	clrf	readFilteredIL@i
  5557  05D3                     i1l2098:
  5558  05D3  357B               	lslf	readFilteredIL@i,w
  5559  05D4  3EA2               	addlw	(low ((_currentILFIFO| 0+2)))& (0+255)
  5560  05D5  0086               	movwf	6
  5561  05D6  0187               	clrf	7
  5562  05D7  357B               	lslf	readFilteredIL@i,w
  5563  05D8  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  5564  05D9  0084               	movwf	4
  5565  05DA  0185               	clrf	5
  5566  05DB  3F40               	moviw [0]fsr1
  5567  05DC  3F80               	movwi [0]fsr0
  5568  05DD  3F41               	moviw [1]fsr1
  5569  05DE  3F81               	movwi [1]fsr0
  5570  05DF                     i1l2100:
  5571  05DF  3001               	movlw	1
  5572  05E0  00F2               	movwf	??_readFilteredIL
  5573  05E1  0872               	movf	??_readFilteredIL,w
  5574  05E2  07FB               	addwf	readFilteredIL@i,f
  5575  05E3                     i1l2102:
  5576  05E3  300F               	movlw	15
  5577  05E4  027B               	subwf	readFilteredIL@i,w
  5578  05E5  1C03               	skipc
  5579  05E6  2DE8               	goto	u181_21
  5580  05E7  2DE9               	goto	u181_20
  5581  05E8                     u181_21:
  5582  05E8  2DD3               	goto	i1l2098
  5583  05E9                     u181_20:
  5584  05E9                     i1l2104:
  5585                           
  5586                           ;CurrentSensor.c: 57:     currentILFIFO[16 -1] = latestIL;
  5587  05E9  0020               	movlb	0	; select bank0
  5588  05EA  084F               	movf	_latestIL+1,w	;volatile
  5589  05EB  0021               	movlb	1	; select bank1
  5590  05EC  00BF               	movwf	((_currentILFIFO+1)^(0+128)+30)
  5591  05ED  0020               	movlb	0	; select bank0
  5592  05EE  084E               	movf	_latestIL,w	;volatile
  5593  05EF  0021               	movlb	1	; select bank1
  5594  05F0  00BE               	movwf	(_currentILFIFO^(0+128)+30)
  5595                           
  5596                           ;CurrentSensor.c: 58:     uint32_t sumOfSamples = 0;
  5597  05F1  3000               	movlw	0
  5598  05F2  00F9               	movwf	readFilteredIL@sumOfSamples+3
  5599  05F3  3000               	movlw	0
  5600  05F4  00F8               	movwf	readFilteredIL@sumOfSamples+2
  5601  05F5  3000               	movlw	0
  5602  05F6  00F7               	movwf	readFilteredIL@sumOfSamples+1
  5603  05F7  3000               	movlw	0
  5604  05F8  00F6               	movwf	readFilteredIL@sumOfSamples
  5605  05F9                     i1l2106:
  5606                           
  5607                           ;CurrentSensor.c: 59:     for(uint8_t i=0; i<16; i++) sumOfSamples += currentILFIFO[i];
  5608  05F9  01FA               	clrf	readFilteredIL@i_920
  5609  05FA                     i1l2112:
  5610  05FA  357A               	lslf	readFilteredIL@i_920,w
  5611  05FB  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  5612  05FC  0086               	movwf	6
  5613  05FD  0187               	clrf	7
  5614  05FE  3F40               	moviw [0]fsr1
  5615  05FF  00F2               	movwf	??_readFilteredIL
  5616  0600  3F41               	moviw [1]fsr1
  5617  0601  00F3               	movwf	??_readFilteredIL+1
  5618  0602  0872               	movf	??_readFilteredIL,w
  5619  0603  07F6               	addwf	readFilteredIL@sumOfSamples,f
  5620  0604  0873               	movf	??_readFilteredIL+1,w
  5621  0605  3DF7               	addwfc	readFilteredIL@sumOfSamples+1,f
  5622  0606  3000               	movlw	0
  5623  0607  3DF8               	addwfc	readFilteredIL@sumOfSamples+2,f
  5624  0608  3DF9               	addwfc	readFilteredIL@sumOfSamples+3,f
  5625  0609                     i1l2114:
  5626  0609  3001               	movlw	1
  5627  060A  00F2               	movwf	??_readFilteredIL
  5628  060B  0872               	movf	??_readFilteredIL,w
  5629  060C  07FA               	addwf	readFilteredIL@i_920,f
  5630  060D                     i1l2116:
  5631  060D  3010               	movlw	16
  5632  060E  027A               	subwf	readFilteredIL@i_920,w
  5633  060F  1C03               	skipc
  5634  0610  2E12               	goto	u182_21
  5635  0611  2E13               	goto	u182_20
  5636  0612                     u182_21:
  5637  0612  2DFA               	goto	i1l2112
  5638  0613                     u182_20:
  5639  0613                     i1l2118:
  5640                           
  5641                           ;CurrentSensor.c: 61:     return (sumOfSamples >> 4);
  5642  0613  0876               	movf	readFilteredIL@sumOfSamples,w
  5643  0614  00F2               	movwf	??_readFilteredIL
  5644  0615  0877               	movf	readFilteredIL@sumOfSamples+1,w
  5645  0616  00F3               	movwf	??_readFilteredIL+1
  5646  0617  0878               	movf	readFilteredIL@sumOfSamples+2,w
  5647  0618  00F4               	movwf	??_readFilteredIL+2
  5648  0619  0879               	movf	readFilteredIL@sumOfSamples+3,w
  5649  061A  00F5               	movwf	??_readFilteredIL+3
  5650  061B  3004               	movlw	4
  5651  061C                     u183_25:
  5652  061C  36F5               	lsrf	??_readFilteredIL+3,f
  5653  061D  0CF4               	rrf	??_readFilteredIL+2,f
  5654  061E  0CF3               	rrf	??_readFilteredIL+1,f
  5655  061F  0CF2               	rrf	??_readFilteredIL,f
  5656  0620                     u183_20:
  5657  0620  0B89               	decfsz	9,f
  5658  0621  2E1C               	goto	u183_25
  5659  0622  0873               	movf	??_readFilteredIL+1,w
  5660  0623  00F1               	movwf	?_readFilteredIL+1
  5661  0624  0872               	movf	??_readFilteredIL,w
  5662  0625  00F0               	movwf	?_readFilteredIL
  5663  0626                     i1l492:
  5664  0626  0008               	return
  5665  0627                     __end_of_readFilteredIL:
  5666                           
  5667                           	psect	text26
  5668  051C                     __ptext26:	
  5669 ;; *************** function _readFilteredFreqPot *****************
  5670 ;; Defined at:
  5671 ;;		line 39 in file "Potentiometer.c"
  5672 ;; Parameters:    Size  Location     Type
  5673 ;;		None
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  i               1    8[BANK0 ] unsigned char 
  5676 ;;  i               1    9[BANK0 ] unsigned char 
  5677 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  2   11[COMMON] unsigned short 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/0
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5687 ;;      Params:         2       0       0       0       0       0
  5688 ;;      Locals:         0       6       0       0       0       0
  5689 ;;      Temps:          0       4       0       0       0       0
  5690 ;;      Totals:         2      10       0       0       0       0
  5691 ;;Total ram usage:       12 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 1
  5694 ;; This function calls:
  5695 ;;		_readADCRaw
  5696 ;; This function is called by:
  5697 ;;		_Tick980Hz
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701  051C                     _readFilteredFreqPot:	
  5702                           ;psect for function _readFilteredFreqPot
  5703                           
  5704  051C                     i1l2200:	
  5705                           ;incstack = 0
  5706                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5707                           
  5708                           
  5709                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  5710  051C  0020               	movlb	0	; select bank0
  5711  051D  01A9               	clrf	readFilteredFreqPot@i
  5712  051E                     i1l2206:
  5713  051E  3529               	lslf	readFilteredFreqPot@i,w
  5714  051F  3E22               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  5715  0520  0086               	movwf	6
  5716  0521  3001               	movlw	1	; select bank2/3
  5717  0522  0087               	movwf	7
  5718  0523  3529               	lslf	readFilteredFreqPot@i,w
  5719  0524  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5720  0525  0084               	movwf	4
  5721  0526  3001               	movlw	1	; select bank2/3
  5722  0527  0085               	movwf	5
  5723  0528  3F40               	moviw [0]fsr1
  5724  0529  3F80               	movwi [0]fsr0
  5725  052A  3F41               	moviw [1]fsr1
  5726  052B  3F81               	movwi [1]fsr0
  5727  052C                     i1l2208:
  5728  052C  3001               	movlw	1
  5729  052D  00A0               	movwf	??_readFilteredFreqPot
  5730  052E  0820               	movf	??_readFilteredFreqPot,w
  5731  052F  07A9               	addwf	readFilteredFreqPot@i,f
  5732  0530                     i1l2210:
  5733  0530  300F               	movlw	15
  5734  0531  0229               	subwf	readFilteredFreqPot@i,w
  5735  0532  1C03               	skipc
  5736  0533  2D35               	goto	u196_21
  5737  0534  2D36               	goto	u196_20
  5738  0535                     u196_21:
  5739  0535  2D1E               	goto	i1l2206
  5740  0536                     u196_20:
  5741  0536                     i1l2212:
  5742                           
  5743                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  5744  0536  300A               	movlw	10
  5745  0537  3183  2345  3185   	fcall	_readADCRaw
  5746  053A  0871               	movf	?_readADCRaw+1,w
  5747  053B  0022               	movlb	2	; select bank2
  5748  053C  00BF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  5749  053D  0870               	movf	?_readADCRaw,w
  5750  053E  00BE               	movwf	(_freqPotFIFO^(0+256)+30)
  5751  053F                     i1l2214:
  5752                           
  5753                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  5754  053F  3000               	movlw	0
  5755  0540  0020               	movlb	0	; select bank0
  5756  0541  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  5757  0542  3000               	movlw	0
  5758  0543  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  5759  0544  3000               	movlw	0
  5760  0545  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  5761  0546  3000               	movlw	0
  5762  0547  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  5763  0548                     i1l2216:
  5764                           
  5765                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  5766  0548  01A8               	clrf	readFilteredFreqPot@i_777
  5767  0549                     i1l2222:
  5768  0549  3528               	lslf	readFilteredFreqPot@i_777,w
  5769  054A  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5770  054B  0086               	movwf	6
  5771  054C  3001               	movlw	1	; select bank2/3
  5772  054D  0087               	movwf	7
  5773  054E  3F40               	moviw [0]fsr1
  5774  054F  00A0               	movwf	??_readFilteredFreqPot
  5775  0550  3F41               	moviw [1]fsr1
  5776  0551  00A1               	movwf	??_readFilteredFreqPot+1
  5777  0552  0820               	movf	??_readFilteredFreqPot,w
  5778  0553  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  5779  0554  0821               	movf	??_readFilteredFreqPot+1,w
  5780  0555  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  5781  0556  3000               	movlw	0
  5782  0557  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  5783  0558  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  5784  0559                     i1l2224:
  5785  0559  3001               	movlw	1
  5786  055A  00A0               	movwf	??_readFilteredFreqPot
  5787  055B  0820               	movf	??_readFilteredFreqPot,w
  5788  055C  07A8               	addwf	readFilteredFreqPot@i_777,f
  5789  055D                     i1l2226:
  5790  055D  3010               	movlw	16
  5791  055E  0228               	subwf	readFilteredFreqPot@i_777,w
  5792  055F  1C03               	skipc
  5793  0560  2D62               	goto	u197_21
  5794  0561  2D63               	goto	u197_20
  5795  0562                     u197_21:
  5796  0562  2D49               	goto	i1l2222
  5797  0563                     u197_20:
  5798  0563                     i1l2228:
  5799                           
  5800                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  5801  0563  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  5802  0564  00A0               	movwf	??_readFilteredFreqPot
  5803  0565  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  5804  0566  00A1               	movwf	??_readFilteredFreqPot+1
  5805  0567  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  5806  0568  00A2               	movwf	??_readFilteredFreqPot+2
  5807  0569  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  5808  056A  00A3               	movwf	??_readFilteredFreqPot+3
  5809  056B  3004               	movlw	4
  5810  056C                     u198_25:
  5811  056C  36A3               	lsrf	??_readFilteredFreqPot+3,f
  5812  056D  0CA2               	rrf	??_readFilteredFreqPot+2,f
  5813  056E  0CA1               	rrf	??_readFilteredFreqPot+1,f
  5814  056F  0CA0               	rrf	??_readFilteredFreqPot,f
  5815  0570                     u198_20:
  5816  0570  0B89               	decfsz	9,f
  5817  0571  2D6C               	goto	u198_25
  5818  0572  0821               	movf	??_readFilteredFreqPot+1,w
  5819  0573  00FC               	movwf	?_readFilteredFreqPot+1
  5820  0574  0820               	movf	??_readFilteredFreqPot,w
  5821  0575  00FB               	movwf	?_readFilteredFreqPot
  5822  0576                     i1l364:
  5823  0576  0008               	return
  5824  0577                     __end_of_readFilteredFreqPot:
  5825                           
  5826                           	psect	text27
  5827  0577                     __ptext27:	
  5828 ;; *************** function _readFilteredDutyPot *****************
  5829 ;; Defined at:
  5830 ;;		line 25 in file "Potentiometer.c"
  5831 ;; Parameters:    Size  Location     Type
  5832 ;;		None
  5833 ;; Auto vars:     Size  Location     Type
  5834 ;;  i               1    8[BANK0 ] unsigned char 
  5835 ;;  i               1    9[BANK0 ] unsigned char 
  5836 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  2   11[COMMON] unsigned short 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5841 ;; Tracked objects:
  5842 ;;		On entry : 0/0
  5843 ;;		On exit  : 0/0
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5846 ;;      Params:         2       0       0       0       0       0
  5847 ;;      Locals:         0       6       0       0       0       0
  5848 ;;      Temps:          0       4       0       0       0       0
  5849 ;;      Totals:         2      10       0       0       0       0
  5850 ;;Total ram usage:       12 bytes
  5851 ;; Hardware stack levels used: 1
  5852 ;; Hardware stack levels required when called: 1
  5853 ;; This function calls:
  5854 ;;		_readADCRaw
  5855 ;; This function is called by:
  5856 ;;		_Tick980Hz
  5857 ;; This function uses a non-reentrant model
  5858 ;;
  5859                           
  5860  0577                     _readFilteredDutyPot:	
  5861                           ;psect for function _readFilteredDutyPot
  5862                           
  5863  0577                     i1l2168:	
  5864                           ;incstack = 0
  5865                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5866                           
  5867                           
  5868                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  5869  0577  0020               	movlb	0	; select bank0
  5870  0578  01A9               	clrf	readFilteredDutyPot@i
  5871  0579                     i1l2174:
  5872  0579  3529               	lslf	readFilteredDutyPot@i,w
  5873  057A  3EA2               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  5874  057B  0086               	movwf	6
  5875  057C  3001               	movlw	1	; select bank3/4
  5876  057D  0087               	movwf	7
  5877  057E  3529               	lslf	readFilteredDutyPot@i,w
  5878  057F  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5879  0580  0084               	movwf	4
  5880  0581  3001               	movlw	1	; select bank3/4
  5881  0582  0085               	movwf	5
  5882  0583  3F40               	moviw [0]fsr1
  5883  0584  3F80               	movwi [0]fsr0
  5884  0585  3F41               	moviw [1]fsr1
  5885  0586  3F81               	movwi [1]fsr0
  5886  0587                     i1l2176:
  5887  0587  3001               	movlw	1
  5888  0588  00A0               	movwf	??_readFilteredDutyPot
  5889  0589  0820               	movf	??_readFilteredDutyPot,w
  5890  058A  07A9               	addwf	readFilteredDutyPot@i,f
  5891  058B                     i1l2178:
  5892  058B  300F               	movlw	15
  5893  058C  0229               	subwf	readFilteredDutyPot@i,w
  5894  058D  1C03               	skipc
  5895  058E  2D90               	goto	u193_21
  5896  058F  2D91               	goto	u193_20
  5897  0590                     u193_21:
  5898  0590  2D79               	goto	i1l2174
  5899  0591                     u193_20:
  5900  0591                     i1l2180:
  5901                           
  5902                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  5903  0591  3009               	movlw	9
  5904  0592  3183  2345  3185   	fcall	_readADCRaw
  5905  0595  0871               	movf	?_readADCRaw+1,w
  5906  0596  0023               	movlb	3	; select bank3
  5907  0597  00BF               	movwf	((_dutyPotFIFO+1)^(0+384)+30)
  5908  0598  0870               	movf	?_readADCRaw,w
  5909  0599  00BE               	movwf	(_dutyPotFIFO^(0+384)+30)
  5910  059A                     i1l2182:
  5911                           
  5912                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  5913  059A  3000               	movlw	0
  5914  059B  0020               	movlb	0	; select bank0
  5915  059C  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  5916  059D  3000               	movlw	0
  5917  059E  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  5918  059F  3000               	movlw	0
  5919  05A0  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  5920  05A1  3000               	movlw	0
  5921  05A2  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  5922  05A3                     i1l2184:
  5923                           
  5924                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  5925  05A3  01A8               	clrf	readFilteredDutyPot@i_773
  5926  05A4                     i1l2190:
  5927  05A4  3528               	lslf	readFilteredDutyPot@i_773,w
  5928  05A5  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5929  05A6  0086               	movwf	6
  5930  05A7  3001               	movlw	1	; select bank3/4
  5931  05A8  0087               	movwf	7
  5932  05A9  3F40               	moviw [0]fsr1
  5933  05AA  00A0               	movwf	??_readFilteredDutyPot
  5934  05AB  3F41               	moviw [1]fsr1
  5935  05AC  00A1               	movwf	??_readFilteredDutyPot+1
  5936  05AD  0820               	movf	??_readFilteredDutyPot,w
  5937  05AE  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  5938  05AF  0821               	movf	??_readFilteredDutyPot+1,w
  5939  05B0  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  5940  05B1  3000               	movlw	0
  5941  05B2  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  5942  05B3  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  5943  05B4                     i1l2192:
  5944  05B4  3001               	movlw	1
  5945  05B5  00A0               	movwf	??_readFilteredDutyPot
  5946  05B6  0820               	movf	??_readFilteredDutyPot,w
  5947  05B7  07A8               	addwf	readFilteredDutyPot@i_773,f
  5948  05B8                     i1l2194:
  5949  05B8  3010               	movlw	16
  5950  05B9  0228               	subwf	readFilteredDutyPot@i_773,w
  5951  05BA  1C03               	skipc
  5952  05BB  2DBD               	goto	u194_21
  5953  05BC  2DBE               	goto	u194_20
  5954  05BD                     u194_21:
  5955  05BD  2DA4               	goto	i1l2190
  5956  05BE                     u194_20:
  5957  05BE                     i1l2196:
  5958                           
  5959                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  5960  05BE  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  5961  05BF  00A0               	movwf	??_readFilteredDutyPot
  5962  05C0  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  5963  05C1  00A1               	movwf	??_readFilteredDutyPot+1
  5964  05C2  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  5965  05C3  00A2               	movwf	??_readFilteredDutyPot+2
  5966  05C4  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  5967  05C5  00A3               	movwf	??_readFilteredDutyPot+3
  5968  05C6  3004               	movlw	4
  5969  05C7                     u195_25:
  5970  05C7  36A3               	lsrf	??_readFilteredDutyPot+3,f
  5971  05C8  0CA2               	rrf	??_readFilteredDutyPot+2,f
  5972  05C9  0CA1               	rrf	??_readFilteredDutyPot+1,f
  5973  05CA  0CA0               	rrf	??_readFilteredDutyPot,f
  5974  05CB                     u195_20:
  5975  05CB  0B89               	decfsz	9,f
  5976  05CC  2DC7               	goto	u195_25
  5977  05CD  0821               	movf	??_readFilteredDutyPot+1,w
  5978  05CE  00FC               	movwf	?_readFilteredDutyPot+1
  5979  05CF  0820               	movf	??_readFilteredDutyPot,w
  5980  05D0  00FB               	movwf	?_readFilteredDutyPot
  5981  05D1                     i1l357:
  5982  05D1  0008               	return
  5983  05D2                     __end_of_readFilteredDutyPot:
  5984                           
  5985                           	psect	text28
  5986  0345                     __ptext28:	
  5987 ;; *************** function _readADCRaw *****************
  5988 ;; Defined at:
  5989 ;;		line 71 in file "ADC.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  gpioNumber      1    wreg     const enum E2798
  5992 ;; Auto vars:     Size  Location     Type
  5993 ;;  gpioNumber      1   10[COMMON] const enum E2798
  5994 ;;  i               1    9[COMMON] unsigned char 
  5995 ;;  i               1    8[COMMON] unsigned char 
  5996 ;;  returnValue     2    4[COMMON] unsigned int 
  5997 ;;  gpioValid       1    7[COMMON] unsigned char 
  5998 ;;  channel         1    6[COMMON] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[COMMON] unsigned short 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6008 ;;      Params:         2       0       0       0       0       0
  6009 ;;      Locals:         7       0       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0       0
  6011 ;;      Totals:        11       0       0       0       0       0
  6012 ;;Total ram usage:       11 bytes
  6013 ;; Hardware stack levels used: 1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		_readFilteredDutyPot
  6018 ;;		_readFilteredFreqPot
  6019 ;;		_readFilteredVout
  6020 ;;		_readFilteredIDS
  6021 ;; This function uses a non-reentrant model
  6022 ;;
  6023                           
  6024  0345                     _readADCRaw:	
  6025                           ;psect for function _readADCRaw
  6026                           
  6027                           
  6028                           ;incstack = 0
  6029                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  6030                           ;readADCRaw@gpioNumber stored from wreg
  6031  0345  00FA               	movwf	readADCRaw@gpioNumber
  6032  0346                     i1l1928:
  6033                           
  6034                           ;ADC.c: 72:     uint8_t channel = 0;
  6035  0346  01F6               	clrf	readADCRaw@channel
  6036                           
  6037                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  6038  0347  01F7               	clrf	readADCRaw@gpioValid
  6039  0348                     i1l1930:
  6040                           
  6041                           ;ADC.c: 75:     if(gpioNumber < 4){
  6042  0348  3004               	movlw	4
  6043  0349  027A               	subwf	readADCRaw@gpioNumber,w
  6044  034A  1803               	skipnc
  6045  034B  2B4D               	goto	u145_21
  6046  034C  2B4E               	goto	u145_20
  6047  034D                     u145_21:
  6048  034D  2B54               	goto	i1l239
  6049  034E                     u145_20:
  6050  034E                     i1l1932:
  6051                           
  6052                           ;ADC.c: 76:         channel = gpioNumber;
  6053  034E  087A               	movf	readADCRaw@gpioNumber,w
  6054  034F  00F2               	movwf	??_readADCRaw
  6055  0350  0872               	movf	??_readADCRaw,w
  6056  0351  00F6               	movwf	readADCRaw@channel
  6057  0352                     i1l1934:
  6058                           
  6059                           ;ADC.c: 77:         gpioValid = 1;
  6060  0352  01F7               	clrf	readADCRaw@gpioValid
  6061  0353  0AF7               	incf	readADCRaw@gpioValid,f
  6062  0354                     i1l239:	
  6063                           ;ADC.c: 78:     }
  6064                           
  6065                           
  6066                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  6067  0354  3009               	movlw	9
  6068  0355  027A               	subwf	readADCRaw@gpioNumber,w
  6069  0356  1C03               	skipc
  6070  0357  2B59               	goto	u146_21
  6071  0358  2B5A               	goto	u146_20
  6072  0359                     u146_21:
  6073  0359  2B67               	goto	i1l240
  6074  035A                     u146_20:
  6075  035A                     i1l1936:
  6076  035A  3010               	movlw	16
  6077  035B  027A               	subwf	readADCRaw@gpioNumber,w
  6078  035C  1803               	skipnc
  6079  035D  2B5F               	goto	u147_21
  6080  035E  2B60               	goto	u147_20
  6081  035F                     u147_21:
  6082  035F  2B67               	goto	i1l240
  6083  0360                     u147_20:
  6084  0360                     i1l1938:
  6085                           
  6086                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  6087  0360  087A               	movf	readADCRaw@gpioNumber,w
  6088  0361  3C14               	sublw	20
  6089  0362  00F2               	movwf	??_readADCRaw
  6090  0363  0872               	movf	??_readADCRaw,w
  6091  0364  00F6               	movwf	readADCRaw@channel
  6092  0365                     i1l1940:
  6093                           
  6094                           ;ADC.c: 81:         gpioValid = 1;
  6095  0365  01F7               	clrf	readADCRaw@gpioValid
  6096  0366  0AF7               	incf	readADCRaw@gpioValid,f
  6097  0367                     i1l240:	
  6098                           ;ADC.c: 82:     }
  6099                           
  6100                           
  6101                           ;ADC.c: 83:     if(gpioValid){
  6102  0367  0877               	movf	readADCRaw@gpioValid,w
  6103  0368  1903               	btfsc	3,2
  6104  0369  2B6B               	goto	u148_21
  6105  036A  2B6C               	goto	u148_20
  6106  036B                     u148_21:
  6107  036B  2BA6               	goto	i1l250
  6108  036C                     u148_20:
  6109  036C                     i1l1942:
  6110                           
  6111                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  6112  036C  0021               	movlb	1	; select bank1
  6113  036D  081D               	movf	29,w	;volatile
  6114  036E                     i1l1944:
  6115                           
  6116                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  6117  036E  3083               	movlw	131
  6118  036F  00F2               	movwf	??_readADCRaw
  6119  0370  0872               	movf	??_readADCRaw,w
  6120  0371  059D               	andwf	29,f	;volatile
  6121  0372                     i1l1946:
  6122                           
  6123                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  6124  0372  0876               	movf	readADCRaw@channel,w	;volatile
  6125  0373  00F2               	movwf	??_readADCRaw
  6126  0374  3001               	movlw	1
  6127  0375                     u149_25:
  6128  0375  35F2               	lslf	??_readADCRaw,f
  6129  0376  3EFF               	addlw	-1
  6130  0377  1D03               	skipz
  6131  0378  2B75               	goto	u149_25
  6132  0379  3572               	lslf	??_readADCRaw,w
  6133  037A  00F3               	movwf	??_readADCRaw+1
  6134  037B  0873               	movf	??_readADCRaw+1,w
  6135  037C  049D               	iorwf	29,f	;volatile
  6136  037D                     i1l1948:
  6137                           
  6138                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  6139  037D  01F8               	clrf	readADCRaw@i
  6140  037E                     i1l1954:
  6141  037E  3001               	movlw	1
  6142  037F  00F2               	movwf	??_readADCRaw
  6143  0380  0872               	movf	??_readADCRaw,w
  6144  0381  07F8               	addwf	readADCRaw@i,f
  6145  0382                     i1l1956:
  6146  0382  3008               	movlw	8
  6147  0383  0278               	subwf	readADCRaw@i,w
  6148  0384  1C03               	skipc
  6149  0385  2B87               	goto	u150_21
  6150  0386  2B88               	goto	u150_20
  6151  0387                     u150_21:
  6152  0387  2B7E               	goto	i1l1954
  6153  0388                     u150_20:
  6154  0388                     i1l244:
  6155                           
  6156                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  6157  0388  0021               	movlb	1	; select bank1
  6158  0389  149D               	bsf	29,1	;volatile
  6159  038A                     i1l245:	
  6160                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  6161                           
  6162  038A  189D               	btfsc	29,1	;volatile
  6163  038B  2B8D               	goto	u151_21
  6164  038C  2B8E               	goto	u151_20
  6165  038D                     u151_21:
  6166  038D  2B8A               	goto	i1l245
  6167  038E                     u151_20:
  6168  038E                     i1l1958:
  6169                           
  6170                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  6171  038E  081C               	movf	28,w	;volatile
  6172  038F  00F5               	movwf	readADCRaw@returnValue+1
  6173  0390  081B               	movf	27,w	;volatile
  6174  0391  00F4               	movwf	readADCRaw@returnValue
  6175  0392                     i1l1960:
  6176                           
  6177                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  6178  0392  3083               	movlw	131
  6179  0393  00F2               	movwf	??_readADCRaw
  6180  0394  0872               	movf	??_readADCRaw,w
  6181  0395  059D               	andwf	29,f	;volatile
  6182  0396                     i1l1962:
  6183                           
  6184                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  6185  0396  159D               	bsf	29,3	;volatile
  6186  0397                     i1l1964:
  6187                           
  6188                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  6189  0397  01F9               	clrf	readADCRaw@i_674
  6190  0398                     i1l1970:
  6191  0398  3001               	movlw	1
  6192  0399  00F2               	movwf	??_readADCRaw
  6193  039A  0872               	movf	??_readADCRaw,w
  6194  039B  07F9               	addwf	readADCRaw@i_674,f
  6195  039C                     i1l1972:
  6196  039C  3008               	movlw	8
  6197  039D  0279               	subwf	readADCRaw@i_674,w
  6198  039E  1C03               	skipc
  6199  039F  2BA1               	goto	u152_21
  6200  03A0  2BA2               	goto	u152_20
  6201  03A1                     u152_21:
  6202  03A1  2B98               	goto	i1l1970
  6203  03A2                     u152_20:
  6204  03A2                     i1l1974:
  6205                           
  6206                           ;ADC.c: 97:             return returnValue;
  6207  03A2  0875               	movf	readADCRaw@returnValue+1,w
  6208  03A3  00F1               	movwf	?_readADCRaw+1
  6209  03A4  0874               	movf	readADCRaw@returnValue,w
  6210  03A5  00F0               	movwf	?_readADCRaw
  6211  03A6                     i1l250:
  6212  03A6  0008               	return
  6213  03A7                     __end_of_readADCRaw:
  6214                           
  6215                           	psect	text29
  6216  0712                     __ptext29:	
  6217 ;; *************** function _currentTripRead *****************
  6218 ;; Defined at:
  6219 ;;		line 30 in file "CurrentSensor.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      _Bool 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, pclath, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6233 ;;      Params:         0       0       0       0       0       0
  6234 ;;      Locals:         1       0       0       0       0       0
  6235 ;;      Temps:          1       0       0       0       0       0
  6236 ;;      Totals:         2       0       0       0       0       0
  6237 ;;Total ram usage:        2 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 1
  6240 ;; This function calls:
  6241 ;;		i1_readGPIO
  6242 ;; This function is called by:
  6243 ;;		_Tick980Hz
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247  0712                     _currentTripRead:	
  6248                           ;psect for function _currentTripRead
  6249                           
  6250  0712                     i1l2068:	
  6251                           ;incstack = 0
  6252                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  6253                           
  6254                           
  6255                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  6256  0712  3001               	movlw	1
  6257  0713  3186  2627  3187   	fcall	i1_readGPIO
  6258  0716  3A01               	xorlw	1
  6259  0717  1D03               	skipz
  6260  0718  2F1A               	goto	u173_21
  6261  0719  2F1C               	goto	u173_20
  6262  071A                     u173_21:
  6263  071A  3001               	movlw	1
  6264  071B  2F1D               	goto	u174_20
  6265  071C                     u173_20:
  6266  071C  3000               	movlw	0
  6267  071D                     u174_20:
  6268  071D  00F9               	movwf	??_currentTripRead
  6269  071E  0879               	movf	??_currentTripRead,w
  6270  071F  0020               	movlb	0	; select bank0
  6271  0720  00D8               	movwf	_tripIDS
  6272                           
  6273                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  6274  0721  3003               	movlw	3
  6275  0722  3186  2627  3187   	fcall	i1_readGPIO
  6276  0725  3A01               	xorlw	1
  6277  0726  1D03               	skipz
  6278  0727  2F29               	goto	u175_21
  6279  0728  2F2B               	goto	u175_20
  6280  0729                     u175_21:
  6281  0729  3001               	movlw	1
  6282  072A  2F2C               	goto	u176_20
  6283  072B                     u175_20:
  6284  072B  3000               	movlw	0
  6285  072C                     u176_20:
  6286  072C  00F9               	movwf	??_currentTripRead
  6287  072D  0879               	movf	??_currentTripRead,w
  6288  072E  0020               	movlb	0	; select bank0
  6289  072F  00D7               	movwf	_tripIL
  6290  0730                     i1l2070:
  6291                           
  6292                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  6293  0730  01FA               	clrf	_currentTripRead$912
  6294  0731  0AFA               	incf	_currentTripRead$912,f
  6295  0732                     i1l2072:
  6296  0732  0857               	movf	_tripIL,w
  6297  0733  1D03               	btfss	3,2
  6298  0734  2F36               	goto	u177_21
  6299  0735  2F37               	goto	u177_20
  6300  0736                     u177_21:
  6301  0736  2F3D               	goto	i1l2078
  6302  0737                     u177_20:
  6303  0737                     i1l2074:
  6304  0737  0858               	movf	_tripIDS,w
  6305  0738  1D03               	btfss	3,2
  6306  0739  2F3B               	goto	u178_21
  6307  073A  2F3C               	goto	u178_20
  6308  073B                     u178_21:
  6309  073B  2F3D               	goto	i1l2078
  6310  073C                     u178_20:
  6311  073C                     i1l2076:
  6312  073C  01FA               	clrf	_currentTripRead$912
  6313  073D                     i1l2078:
  6314  073D  087A               	movf	_currentTripRead$912,w
  6315  073E                     i1l478:
  6316  073E  0008               	return
  6317  073F                     __end_of_currentTripRead:
  6318                           
  6319                           	psect	text30
  6320  0627                     __ptext30:	
  6321 ;; *************** function i1_readGPIO *****************
  6322 ;; Defined at:
  6323 ;;		line 79 in file "GPIO.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  gpioNumber      1    wreg     const enum E2798
  6326 ;; Auto vars:     Size  Location     Type
  6327 ;;  gpioNumber      1    8[COMMON] const enum E2798
  6328 ;;  portType        1    7[COMMON] unsigned char 
  6329 ;;  portNumber      1    6[COMMON] unsigned char 
  6330 ;;  returnValueB    1    5[COMMON] unsigned char 
  6331 ;;  readB           1    4[COMMON] unsigned char 
  6332 ;;  returnValueA    1    3[COMMON] unsigned char 
  6333 ;;  readA           1    2[COMMON] unsigned char 
  6334 ;; Return value:  Size  Location     Type
  6335 ;;                  1    wreg      _Bool 
  6336 ;; Registers used:
  6337 ;;		wreg, status,2, status,0
  6338 ;; Tracked objects:
  6339 ;;		On entry : 0/0
  6340 ;;		On exit  : 0/0
  6341 ;;		Unchanged: 0/0
  6342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6343 ;;      Params:         0       0       0       0       0       0
  6344 ;;      Locals:         7       0       0       0       0       0
  6345 ;;      Temps:          2       0       0       0       0       0
  6346 ;;      Totals:         9       0       0       0       0       0
  6347 ;;Total ram usage:        9 bytes
  6348 ;; Hardware stack levels used: 1
  6349 ;; This function calls:
  6350 ;;		Nothing
  6351 ;; This function is called by:
  6352 ;;		_currentTripRead
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356  0627                     i1_readGPIO:	
  6357                           ;psect for function i1_readGPIO
  6358                           
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in i1_readGPIO: [wreg+status,2+status,0]
  6362                           ;i1readGPIO@gpioNumber stored from wreg
  6363  0627  00F8               	movwf	i1readGPIO@gpioNumber
  6364  0628                     i1l2034:
  6365                           
  6366                           ;GPIO.c: 81:     uint8_t portType = 0;
  6367  0628  01F7               	clrf	i1readGPIO@portType
  6368  0629                     i1l2036:
  6369                           
  6370                           ;GPIO.c: 82:     if(gpioNumber > 7){
  6371  0629  3008               	movlw	8
  6372  062A  0278               	subwf	i1readGPIO@gpioNumber,w
  6373  062B  1C03               	skipc
  6374  062C  2E2E               	goto	u168_21
  6375  062D  2E2F               	goto	u168_20
  6376  062E                     u168_21:
  6377  062E  2E37               	goto	i1l2042
  6378  062F                     u168_20:
  6379  062F                     i1l2038:
  6380                           
  6381                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  6382  062F  0878               	movf	i1readGPIO@gpioNumber,w
  6383  0630  3EF8               	addlw	248
  6384  0631  00F0               	movwf	??i1_readGPIO
  6385  0632  0870               	movf	??i1_readGPIO,w
  6386  0633  00F6               	movwf	i1readGPIO@portNumber
  6387  0634                     i1l2040:
  6388                           
  6389                           ;GPIO.c: 84:         portType = 1;
  6390  0634  01F7               	clrf	i1readGPIO@portType
  6391  0635  0AF7               	incf	i1readGPIO@portType,f
  6392                           
  6393                           ;GPIO.c: 85:     }
  6394  0636  2E3C               	goto	i1l2046
  6395  0637                     i1l2042:
  6396                           
  6397                           ;GPIO.c: 87:         portNumber = gpioNumber;
  6398  0637  0878               	movf	i1readGPIO@gpioNumber,w
  6399  0638  00F0               	movwf	??i1_readGPIO
  6400  0639  0870               	movf	??i1_readGPIO,w
  6401  063A  00F6               	movwf	i1readGPIO@portNumber
  6402  063B                     i1l2044:
  6403                           
  6404                           ;GPIO.c: 88:         portType = 0;
  6405  063B  01F7               	clrf	i1readGPIO@portType
  6406  063C                     i1l2046:
  6407                           
  6408                           ;GPIO.c: 91:     if(portType == 0){
  6409  063C  0877               	movf	i1readGPIO@portType,w
  6410  063D  1D03               	btfss	3,2
  6411  063E  2E40               	goto	u169_21
  6412  063F  2E41               	goto	u169_20
  6413  0640                     u169_21:
  6414  0640  2E54               	goto	i1l2058
  6415  0641                     u169_20:
  6416  0641                     i1l2048:
  6417                           
  6418                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  6419  0641  0020               	movlb	0	; select bank0
  6420  0642  080C               	movf	12,w	;volatile
  6421  0643  00F0               	movwf	??i1_readGPIO
  6422  0644  0870               	movf	??i1_readGPIO,w
  6423  0645  00F2               	movwf	i1readGPIO@readA
  6424  0646                     i1l2050:
  6425                           
  6426                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  6427  0646  0872               	movf	i1readGPIO@readA,w
  6428  0647  00F0               	movwf	??i1_readGPIO
  6429  0648  0A76               	incf	i1readGPIO@portNumber,w
  6430  0649  2E4B               	goto	u170_24
  6431  064A                     u170_25:
  6432  064A  36F0               	lsrf	??i1_readGPIO,f
  6433  064B                     u170_24:
  6434  064B  0B89               	decfsz	9,f
  6435  064C  2E4A               	goto	u170_25
  6436  064D  0870               	movf	??i1_readGPIO,w
  6437  064E  3901               	andlw	1
  6438  064F  00F1               	movwf	??i1_readGPIO+1
  6439  0650  0871               	movf	??i1_readGPIO+1,w
  6440  0651  00F3               	movwf	i1readGPIO@returnValueA
  6441  0652                     i1l2052:
  6442                           
  6443                           ;GPIO.c: 94:         return returnValueA;
  6444  0652  0873               	movf	i1readGPIO@returnValueA,w
  6445  0653  2E6B               	goto	i1l319
  6446  0654                     i1l2058:
  6447  0654  0377               	decf	i1readGPIO@portType,w
  6448  0655  1D03               	btfss	3,2
  6449  0656  2E58               	goto	u171_21
  6450  0657  2E59               	goto	u171_20
  6451  0658                     u171_21:
  6452  0658  2E6B               	goto	i1l319
  6453  0659                     u171_20:
  6454  0659                     i1l2060:
  6455                           
  6456                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  6457  0659  0020               	movlb	0	; select bank0
  6458  065A  080D               	movf	13,w	;volatile
  6459  065B  00F0               	movwf	??i1_readGPIO
  6460  065C  0870               	movf	??i1_readGPIO,w
  6461  065D  00F4               	movwf	i1readGPIO@readB
  6462  065E                     i1l2062:
  6463                           
  6464                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  6465  065E  0874               	movf	i1readGPIO@readB,w
  6466  065F  00F0               	movwf	??i1_readGPIO
  6467  0660  0A76               	incf	i1readGPIO@portNumber,w
  6468  0661  2E63               	goto	u172_24
  6469  0662                     u172_25:
  6470  0662  36F0               	lsrf	??i1_readGPIO,f
  6471  0663                     u172_24:
  6472  0663  0B89               	decfsz	9,f
  6473  0664  2E62               	goto	u172_25
  6474  0665  0870               	movf	??i1_readGPIO,w
  6475  0666  3901               	andlw	1
  6476  0667  00F1               	movwf	??i1_readGPIO+1
  6477  0668  0871               	movf	??i1_readGPIO+1,w
  6478  0669  00F5               	movwf	i1readGPIO@returnValueB
  6479  066A                     i1l2064:
  6480                           
  6481                           ;GPIO.c: 99:         return returnValueB;
  6482  066A  0875               	movf	i1readGPIO@returnValueB,w
  6483  066B                     i1l319:
  6484  066B  0008               	return
  6485  066C                     __end_ofi1_readGPIO:
  6486  007E                     btemp	set	126	;btemp
  6487  007E                     int$flags	set	126
  6488  007E                     wtemp0	set	126
  6489                           
  6490                           	psect	idloc
  6491                           
  6492                           ;Config register IDLOC0 @ 0x8000
  6493                           ;	unspecified, using default values
  6494  8000                     	org	32768
  6495  8000  3FFF               	dw	16383
  6496                           
  6497                           ;Config register IDLOC1 @ 0x8001
  6498                           ;	unspecified, using default values
  6499  8001                     	org	32769
  6500  8001  3FFF               	dw	16383
  6501                           
  6502                           ;Config register IDLOC2 @ 0x8002
  6503                           ;	unspecified, using default values
  6504  8002                     	org	32770
  6505  8002  3FFF               	dw	16383
  6506                           
  6507                           ;Config register IDLOC3 @ 0x8003
  6508                           ;	unspecified, using default values
  6509  8003                     	org	32771
  6510  8003  3FFF               	dw	16383
  6511                           
  6512                           	psect	config
  6513                           
  6514                           ;Config register CONFIG1 @ 0x8007
  6515                           ;	Oscillator Selection
  6516                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6517                           ;	Watchdog Timer Enable
  6518                           ;	WDTE = OFF, WDT disabled
  6519                           ;	Power-up Timer Enable
  6520                           ;	PWRTE = OFF, PWRT disabled
  6521                           ;	MCLR Pin Function Select
  6522                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6523                           ;	Flash Program Memory Code Protection
  6524                           ;	CP = OFF, Program memory code protection is disabled
  6525                           ;	Data Memory Code Protection
  6526                           ;	CPD = OFF, Data memory code protection is disabled
  6527                           ;	Brown-out Reset Enable
  6528                           ;	BOREN = ON, Brown-out Reset enabled
  6529                           ;	Clock Out Enable
  6530                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6531                           ;	Internal/External Switchover
  6532                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6533                           ;	Fail-Safe Clock Monitor Enable
  6534                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6535  8007                     	org	32775
  6536  8007  0FA4               	dw	4004
  6537                           
  6538                           ;Config register CONFIG2 @ 0x8008
  6539                           ;	Flash Memory Self-Write Protection
  6540                           ;	WRT = OFF, Write protection off
  6541                           ;	PLL Enable
  6542                           ;	PLLEN = OFF, 4x PLL disabled
  6543                           ;	Stack Overflow/Underflow Reset Enable
  6544                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  6545                           ;	Brown-out Reset Voltage Selection
  6546                           ;	BORV = 0x1, unprogrammed default
  6547                           ;	Low-Voltage Programming Enable
  6548                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6549  8008                     	org	32776
  6550  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         188
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      60
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0      32
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredVout->_readADCRaw
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->i1_readGPIO

Critical Paths under _main in BANK0

    _main->_readGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _currentTripReset->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3336
                                             28 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
                           _readGPIO
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
          _transToCurrentModeControl
                  _transToPotControl
          _transToVoltageModeControl
 ---------------------------------------------------------------------------------
 (1) _transToVoltageModeControl                            1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _transToPotControl                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transToCurrentModeControl                            1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _readGPIO                                             9     9      0     252
                                             19 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1445
                   _currentTripReset
                   _initialiseADCPin
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _currentTripReset                                     0     0      0     500
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (3) _writeGPIO                                            6     5      1     500
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Tick980Hz                                            1     1      0    4021
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                     _readFilteredIL
                   _readFilteredVout
                _readILCurrentADCRaw
                      _runPotScaling
                _setPWMDutyandPeriod
            _transToOverCurrentFault
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (5) i1_writeGPIO                                          6     5      1     300
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (5) _transToOverCurrentFault                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _setPWMDutyandPeriod                                  5     2      3     240
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) _runPotScaling                                       12    12      0    1652
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _readILCurrentADCRaw                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredVout                                    12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredIL                                      12    10      2     182
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (6) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                         i1_readGPIO
 ---------------------------------------------------------------------------------
 (6) i1_readGPIO                                           9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _currentTripReset
       _writeGPIO
     _initialiseADCPin
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _readGPIO
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt
   _transToCurrentModeControl
   _transToPotControl
   _transToVoltageModeControl

 _Tick980Hz (ROOT)
   _currentTripRead
     i1_readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _readFilteredIL
   _readFilteredVout
     _readADCRaw
   _readILCurrentADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
   _setPWMDutyandPeriod
   _transToOverCurrentFault
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      3C       6       75.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      EA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 17:15:31 2023

                ___wmul@multiplicand 0072                                  l110 0708  
                                l113 070F                                  l132 025E  
                                l231 0302                                  l313 0406  
                                l227 0FD0                                  l236 0344  
                                l350 07FE                                  l319 06AF  
                                l167 07C5                                  l513 0FCA  
                                l194 0FEA                                  l516 0FDC  
                                l519 0FD6                                  l473 0789  
                                l299 02DA                                  l495 07F5  
                                _PR2 001B                    readFilteredVout@i 0029  
                                wreg 0009                  __end_ofi1_writeGPIO 0466  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                         i1_readGPIO 0627                                 l2300 0219  
                               l2302 0223                                 l2310 0233  
                               l2304 0228                                 l2240 0186  
                               l2320 07AC                                 l2306 0229  
                               l2250 019A                                 l2242 0187  
                               l2330 07B5                                 l2322 07AE  
                               l2260 01B5                                 l2252 019B  
                               l2244 018A                                 l2340 07BF  
                               l2332 07B8                                 l2324 07B0  
                               l2350 07F6                                 l2270 01CB  
                               l2262 01BA                                 l2254 01A5  
                               l2246 018B                                 l2334 07BA  
                               l2326 07B2                                 l2318 07A9  
                               l2342 0FE3                                 l2360 067D  
                               l2352 066E                                 l2280 01EA  
                               l2272 01D5                                 l2264 01BB  
                               l2256 01AA                                 l2248 0195  
                               l2336 07BC                                 l2328 07B4  
                               l2344 0FE8                                 l2346 0FCB  
                               l2370 0697                                 l2362 0681  
                               l2354 066F                                 l2290 0205  
                               l2282 01EB                                 l2274 01DA  
                               l2266 01C5                                 l2258 01AB  
                               l2338 07BD                                 l1900 02DD  
                               l2348 076A                                 l2380 06A2  
                               l2364 0682                                 l2356 0675  
                               l2292 020A                                 l2284 01F5  
                               l2276 01DB                                 l2268 01CA  
                               l2460 06E7                                 l1910 02ED  
                               l1902 02E0                                 l2382 06AE  
                               l2366 0687                                 l2358 067A  
                               l2294 020B                                 l2286 01FA  
                               l2278 01E5                                 l2390 0FC7  
                               l2470 06F6                                 l2462 06EA  
                               l1920 0307                                 l1912 02F3  
                               l1904 02E6                                 l2368 068B  
                               l2376 0699                                 l2296 0215  
                               l2288 01FB                                 l2472 06FC  
                               l2464 06ED                                 l1850 03B5  
                               l1922 030C                                 l1914 02F9  
                               l1906 02EA                                 l2378 069E  
                               l2298 0218                                 l2386 0FD7  
                               l2474 0705                                 l2466 06F0  
                               l2458 06E3                                 l1860 03C7  
                               l1852 03B8                                 l1844 03A9  
                               l1924 0326                                 l1916 02FE  
                               l1908 02EB                                 l2556 023B  
                               l2388 0FD1                                 l2476 070C  
                               l2468 06F3                                 l1870 03F9  
                               l1862 03D4                                 l1854 03BC  
                               l1846 03AA                                 l1926 032B  
                               l1918 0300                                 l1864 03E2  
                               l1856 03BD                                 l1848 03B0  
                               l1880 0270                                 l1872 0261  
                               l1866 03E7                                 l1858 03C2  
                               l1890 029A                                 l1882 0274  
                               l1874 0262                                 l1868 03EC  
                               l1980 07EE                                 l1892 02A8  
                               l1884 0275                                 l1876 0268  
                               l1894 02AD                                 l1886 027A  
                               l1878 026D                                 l1896 02B2  
                               l1888 027F                                 l1978 07E8  
                               l1898 02CD                                 STR_1 07C6  
                               STR_3 07D8                                 u1200 03E7  
                               u2000 0675                                 u1201 03E6  
                               u2001 0674                                 u1210 03EC  
                               u2010 0687                                 u1211 03EB  
                               u2011 0686                                 u1300 02AD  
                               u1301 02AC                                 u1150 03B0  
                               u1310 02B2                                 u2030 069E  
                               u1151 03AF                                 u1311 02B1  
                               u2031 069D                                 u1224 03F1  
                               u1160 03C2                                 u1240 0268  
                               u2024 0690                                 u1225 03F0  
                               u1161 03C1                                 u1241 0267  
                               u2025 068F                                 u1234 03FE  
                               u1170 03C7                                 u1250 027A  
                               u1235 03FD                                 u1171 03C6  
                               u1251 0279                                 u1420 032B  
                               u1404 0311                                 u1324 02B7  
                               u1260 027F                                 u2044 06A7  
                               u1421 032A                                 u1405 0310  
                               u1325 02B6                                 u1261 027E  
                               u2045 06A6                                 _LATA 010C  
                               u1414 031E                                 u1350 02E6  
                               u1334 02C4                                 _LATB 010D  
                               u1415 031D                                 u1351 02E5  
                               u1335 02C3                                 u1184 03CC  
                               u1360 02F3                                 u1344 02D2  
                               u2240 0705                                 u1185 03CB  
                               u1361 02F2                                 u1345 02D1  
                               u2241 0704                                 u1194 03D9  
                               u1434 0330                                 u1370 02F9  
                               u1274 0284                                 u1195 03D8  
                               u1435 032F                                 u1371 02F8  
                               u1275 0283                                 u1444 033D  
                               u1380 0307                                 u1284 0291  
                               u1445 033C                                 u1381 0306  
                               u1285 0290                                 u1390 030C  
                               u1294 029F                                 u1391 030B  
                               u1295 029E                                 i1l98 0011  
          _transToVoltageModeControl 0FD7                      _filteredFreqPot 0046  
                    _filteredDutyPot 0044                                 _main 06E3  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 0082  
          ??_setupInternalOscillator 0033                                ?_main 003C  
                    __end_of___lldiv 04C1                                i1l104 0080  
                              i1l240 0367                                i1l313 0465  
                              i1l250 03A6                                i1l170 0769  
                              i1l244 0388                                i1l245 038A  
                              i1l254 0FF7                                i1l319 066B  
                              i1l239 0354                                i1l416 051B  
                              i1l257 0FFF                                i1l522 0FF3  
                              i1l371 0183                                i1l364 0576  
                              i1l357 05D1                                i1l369 0174  
                              i1l492 0626                                i1l708 04C0  
                              i1l478 073E                                i1l672 0794  
                              i1l674 07A8                                i1l686 06E2  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
               readFilteredFreqPot@i 0029             readFilteredDutyPot@i_773 0028  
                              status 0003                                wtemp0 007E  
             initialiseGPIO@portType 0036                  _initialiseADCModule 0FCB  
               readFilteredDutyPot@i 0029           initialiseADCPin@gpioNumber 0038  
                    __initialization 0084                         __end_of_main 0712  
                  ?_initialiseADCPin 0070                          i1_writeGPIO 0407  
                             ??_main 0040                   ??_initialiseADCPin 0033  
           __end_of_readFilteredVout 051C                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0039      __end_of_setupInternalOscillator 025F  
setupInternalOscillator@selectedFreq 0035                               _ADCON0 009D  
                             _ADCON1 009E                          ?i1_readGPIO 0070  
                             _ADRESH 009C                               _ADRESL 009B  
                             _CCPR1L 0291                               _ANSELA 018C  
                             _ANSELB 018D                               i1l2000 06BC  
                             i1l2010 0466                               i1l2002 06C4  
                             i1l2100 05DF                               i1l2020 0490  
                             i1l2012 0477                               i1l2004 06CB  
                             i1l2102 05E3                               i1l2022 04A2  
                             i1l2014 047A                               i1l2030 04B8  
                             i1l2006 06DA                               i1l2040 0634  
                             i1l2200 051C                               i1l2112 05FA  
                             i1l2104 05E9                               i1l2024 04AA  
                             i1l2016 0485                               i1l2050 0646  
                             i1l2042 0637                               i1l2034 0628  
                             i1l2210 0530                               i1l2114 0609  
                             i1l2106 05F9                               i1l2130 04D1  
                             i1l2122 04C1                               i1l2026 04AB  
                             i1l2018 0489                               i1l2060 0659  
                             i1l2052 0652                               i1l2044 063B  
                             i1l2036 0629                               i1l2212 0536  
                             i1l2116 060D                               i1l2132 04D5  
                             i1l2028 04B2                               i1l2062 065E  
                             i1l2046 063C                               i1l2038 062F  
                             i1l2070 0730                               i1l2222 0549  
                             i1l2214 053F                               i1l2206 051E  
                             i1l2118 0613                               i1l2150 0508  
                             i1l2134 04DB                               i1l2064 066A  
                             i1l2048 0641                               i1l2072 0732  
                             i1l2224 0559                               i1l2216 0548  
                             i1l2208 052C                               i1l2144 04EE  
                             i1l2136 04E4                               i1l2128 04C3  
                             i1l2232 0FF4                               i1l2160 0166  
                             i1l2400 0408                               i1l2058 0654  
                             i1l2074 0737                               i1l2226 055D  
                             i1l2146 04FE                               i1l2138 04ED  
                             i1l2234 0FF6                               i1l2162 0170  
                             i1l2154 00A8                               i1l2090 074D  
                             i1l2082 0FEB                               i1l2410 041B  
                             i1l2402 0409                               i1l2076 073C  
                             i1l2068 0712                               i1l2180 0591  
                             i1l2228 0563                               i1l2092 05D2  
                             i1l2148 0502                               i1l2236 0FFB  
                             i1l2164 017E                               i1l2156 00AE  
                             i1l2084 0FEF                               i1l2420 0441  
                             i1l2412 041C                               i1l2404 040F  
                             i1l2078 073D                               i1l2190 05A4  
                             i1l2182 059A                               i1l2174 0579  
                             i1l2166 0182                               i1l2158 00B8  
                             i1l2086 073F                               i1l2422 0446  
                             i1l2414 0421                               i1l2406 0414  
                             i1l2430 000E                               i1l2192 05B4  
                             i1l2184 05A3                               i1l2176 0587  
                             i1l2168 0577                               i1l2088 0742  
                             i1l2424 044B                               i1l2416 0426  
                             i1l2408 0417                               i1l2440 003E  
                             i1l2432 001D                               i1l2194 05B8  
                             i1l2178 058B                               i1l2098 05D3  
                             i1l2426 0458                               i1l2418 0433  
                             i1l2442 0043                               i1l2450 006C  
                             i1l2434 0023                               i1l2196 05BE  
                             i1l2452 0076                               i1l2444 004C  
                             i1l2436 0028                               i1l2428 0006  
                             i1l2454 0077                               i1l2446 0052  
                             i1l2438 002E                               i1l2456 007F  
                             i1l2448 0062                               i1l1930 0348  
                             i1l1940 0365                               i1l1932 034E  
                             u210_24 0438                               u210_25 0437  
                             i1l1942 036C                               i1l1934 0352  
                             i1l1960 0392                               i1l1944 036E  
                             i1l1936 035A                               i1l1928 0346  
                             u211_20 0446                               u211_21 0445  
                             i1l1970 0398                               i1l1962 0396  
                             i1l1954 037E                               i1l1946 0372  
                             i1l1938 0360                               i1l1972 039C  
                             i1l1964 0397                               i1l1956 0382  
                             i1l1948 037D                               i1l1974 03A2  
                             i1l1958 038E                               i1l1990 079E  
                             i1l1982 078A                               i1l1992 07A4  
                             i1l1984 078C                               u212_20 044B  
                             u220_20 0068                               u212_21 044A  
                             u220_21 0066                               i1l1986 0790  
                             i1l1996 06B0                               i1l1988 0799  
                             i1l1998 06B8                               u221_20 0069  
                             u213_24 0450                               u213_25 044F  
                             u150_20 0388                               u206_20 040F  
                             u222_20 0072                               u150_21 0387  
                             u206_21 040E                               u222_21 0070  
                             u214_24 045D                               u214_25 045C  
                             u151_20 038E                               u207_20 0421  
                             u223_20 0073                               u215_20 000E  
                             u151_21 038D                               u207_21 0420  
                             u215_21 000D                               u152_20 03A2  
                             u160_20 06DA                               u208_20 0426  
                             u216_20 0023                               u152_21 03A1  
                             u160_21 06D9                               u208_21 0425  
                             u216_21 0022                               u145_20 034E  
                             u161_20 0477                               u153_20 0790  
                             u217_20 002E                               u145_21 034D  
                             u161_21 0476                               u153_21 078F  
                             u217_21 002D                               u209_24 042B  
                             u209_25 042A                               u146_20 035A  
                             u218_20 0043                               u146_21 0359  
                             u218_21 0042                               u170_24 064B  
                             u170_25 064A                               u162_25 047B  
                             u154_25 0795                               u171_20 0659  
                             u147_20 0360                               u163_20 0489  
                             u219_20 0052                               u171_21 0658  
                             u147_21 035F                               u163_21 0488  
                             u219_21 0051                               u155_25 079A  
                             u148_20 036C                               u156_20 07A4  
                             u148_21 036B                               u156_21 07A3  
                             u172_24 0663                               u180_24 0769  
                             u172_25 0662                               u164_25 048A  
                             u173_20 071C                               u181_20 05E9  
                             u165_20 04A2                               u157_20 06BC  
                             u173_21 071A                               u181_21 05E8  
                             u165_21 04A1                               u157_21 06BB  
                             u149_25 0375                               u165_25 049E  
                             u174_20 071D                               u182_20 0613  
                             u190_20 0106                               u182_21 0612  
                             u166_25 04AC                               u158_25 06C5  
                             u190_25 0102                               u175_20 072B  
                             u183_20 0620                               u167_20 04B8  
                             u191_20 0170                               u175_21 0729  
                             u167_21 04B7                               u191_21 016F  
                             u183_25 061C                               u159_25 06CC  
                             u191_25 016C                               u168_20 062F  
                             u176_20 072C                               u184_20 04DB  
                             u192_20 017E                               u168_21 062E  
                             u184_21 04DA                               u192_21 017D  
                             u192_25 017A                               u169_20 0641  
                             u177_20 0737                               u193_20 0591  
                             u185_20 0508                               u169_21 0640  
                             u177_21 0736                               u193_21 0590  
                             u185_21 0507                               u178_20 073C  
                             u194_20 05BE                               u186_20 0515  
                             u178_21 073B                               u194_21 05BD  
                             u186_25 0511                               u195_20 05CB  
                             u187_20 00AE                               u179_20 0767  
                             u187_21 00AD                               u179_21 0764  
                             u195_25 05C7                               u196_20 0536  
                             u188_20 00B8                               u196_21 0535  
                             u188_21 00B7                      ??_runPotScaling 0026  
                             u197_20 0563                               u189_20 00D9  
                             u197_21 0562                               u189_25 00D5  
                             u198_20 0570                               u198_25 056C  
                             u199_20 0FFB                               u199_21 0FFA  
            initialiseGPIO@direction 0033                     readGPIO@portType 003A  
        __end_of_readILCurrentADCRaw 1000                  readADCRaw@gpioValid 0077  
                             ___lmul 06B0                               ___wmul 078A  
                          ??___lldiv 0020                     __end_of_readGPIO 06B0  
                             _tripIL 0057            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 07F6  
         initialiseADCPin@portNumber 0037                     __end_of_setupPWM 07C6  
                    _currentTripRead 0712           ?_transToCurrentModeControl 0070  
            __end_of__initialization 00A4                       __pcstackCOMMON 0070  
          initialiseADCPin@gpioValid 0035                i1writeGPIO@gpioNumber 0074  
                      _currentILFIFO 00A0                       _OPTION_REGbits 0095  
                  __end_of_Tick980Hz 0082                           __pbssBANK0 0040  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                         __pbssBANK3 01A0                           __pmaintext 06E3  
                            ?___lmul 0070                              ?___wmul 0070  
  __end_of_transToVoltageModeControl 0FDD                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 073F          __end_of_setPWMDutyandPeriod 076A  
   __end_of_initialiseCurrentSensors 078A             initialiseADCPin@portType 0036  
            _transToOverCurrentFault 0FEB                   i1readGPIO@portType 0077  
              readFilteredVout@i_836 0028                i1writeGPIO@portNumber 0075  
                         _filteredIL 004A                            ?_readGPIO 0070  
                         _readADCRaw 0345                  _readFilteredFreqPot 051C  
               i1readGPIO@gpioNumber 0078                  _readFilteredDutyPot 0577  
                          ?_setupPWM 0070                 readADCRaw@gpioNumber 007A  
           initialiseGPIO@gpioNumber 0037                              ___lldiv 0466  
                       ?i1_writeGPIO 0070                 ?_readFilteredFreqPot 007B  
                            __ptext1 0FD7                              __ptext2 0FC7  
                            __ptext3 0FD1                              __ptext4 0FE3  
                            __ptext5 07A9                              __ptext6 0184  
                            __ptext7 066C                              __ptext8 07F6  
                            __ptext9 076A                 ?_readFilteredDutyPot 007B  
                          _T2CONbits 001C                    ?_readFilteredVout 007B  
                            _setDuty 0052                i1writeGPIO@writeValue 0070  
                            _tripIDS 0058                   ??_readFilteredVout 0020  
                       ??i1_readGPIO 0070                              clrloop0 0FDE  
               end_of_initialization 00A4                           ??_readGPIO 0033  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
                   _currentTripReset 07E8           ??_initialisePotentiometers 0039  
                         _prevPeriod 0059                    writeGPIO@portType 0036  
                     _readFilteredIL 05D2                   __end_ofi1_readGPIO 066C  
              ??_readFilteredFreqPot 0020                ??_readFilteredDutyPot 0020  
               i1readGPIO@portNumber 0076                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 0407            ??_transToOverCurrentFault 0070  
           initialiseGPIO@portNumber 0038                         _filteredVout 0048  
        ??_transToCurrentModeControl 0033                          ?_readADCRaw 0070  
                  _transToPotControl 0FC7                          _CCP1CONbits 0293  
                      readGPIO@readA 0035                        readGPIO@readB 0037  
              __end_of_runPotScaling 0184                   ?_transToPotControl 0070  
          ?_initialiseCurrentSensors 0070               __end_of_readFilteredIL 0627  
                ??_transToPotControl 0033                       __end_of___lmul 06E3  
        __end_of_initialiseADCModule 0FD1                       __end_of___wmul 07A9  
                     _clockFrequency 0040                  start_initialization 0084  
       __end_of_setupTimer0Interrupt 0FEB                       _currentIDSFIFO 00C0  
                          _Tick980Hz 0004            __end_of_transToPotControl 0FCB  
    __end_of_transToOverCurrentFault 0FF4                          _APFCON0bits 011D  
                           ??___lmul 0078                             ??___wmul 0074  
                    ?_readFilteredIL 0070            _transToCurrentModeControl 0FD1  
                          ___latbits 0001                        __pcstackBANK0 0020  
                         ?_Tick980Hz 0070                     _initialiseADCPin 02DB  
                       _currentState 005A                   readGPIO@gpioNumber 003B  
                     _initialiseGPIO 025F                      i1readGPIO@readA 0072  
                    i1readGPIO@readB 0074     __end_of_initialisePotentiometers 07FF  
                           ?___lldiv 0076           ?_transToVoltageModeControl 0070  
                    readADCRaw@i_674 0079             __end_of_currentTripReset 07F6  
    readFilteredDutyPot@sumOfSamples 0024                       ___wmul@product 0074  
             __end_of_initialiseGPIO 02DB                            clear_ram0 0FDD  
                          _setPeriod 005B                             _PIE1bits 0091  
                           _PIR1bits 0011         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 0FE3                  _currentTripRead$912 007A  
                        _filteredIDS 004C                           _ADCON0bits 009D  
                  ___wmul@multiplier 0070                   readGPIO@portNumber 0039  
                        _freqPotFIFO 0120                            _writeGPIO 03A7  
                        ??_Tick980Hz 0032                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 0FF4                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0033         readFilteredVout@sumOfSamples 0024  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 0577          __end_of_readFilteredDutyPot 05D2  
               runPotScaling@maxDuty 002E                 runPotScaling@minDuty 0030  
               ?_readILCurrentADCRaw 0070                  writeGPIO@gpioNumber 0037  
                 __end_of_readADCRaw 03A7             readFilteredFreqPot@i_777 0028  
                         ?_writeGPIO 0033                             __ptext10 025F  
                           __ptext11 02DB                             __ptext20 078A  
                           __ptext12 07E8                             __ptext21 06B0  
                           __ptext13 03A7                             __ptext30 0627  
                           __ptext22 0466                             __ptext14 0FCB  
                           __ptext23 0FF4                             __ptext24 04C1  
                           __ptext16 0407                             __ptext25 05D2  
                           __ptext17 0FEB                             __ptext26 051C  
                           __ptext18 073F                             __ptext27 0577  
                           __ptext19 00A8                             __ptext28 0345  
                           __ptext29 0712            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 01A0                  i1writeGPIO@portType 0073  
         readFilteredIL@sumOfSamples 0076                             _readGPIO 066C  
                           _latestIL 004E                     ??_readFilteredIL 0072  
                      _timerSlotHalf 0055                         _PSTR1CONbits 0296  
                           _prevDuty 0050                             _setupPWM 07A9  
                           int$flags 007E                ??_readILCurrentADCRaw 0072  
           __end_of_initialiseADCPin 0345                             main@argc 003C  
           ?_transToOverCurrentFault 0070                             main@argv 003E  
                           _voutFIFO 0140      readFilteredFreqPot@sumOfSamples 0024  
                   _timerSlotQuarter 0054                           _INTCONbits 000B  
  __end_of_transToCurrentModeControl 0FD7                  writeGPIO@portNumber 0038  
                           intlevel1 0000             _initialiseCurrentSensors 076A  
                   ___lldiv@dividend 007A               i1readGPIO@returnValueA 0073  
             i1readGPIO@returnValueB 0075                     _readFilteredVout 04C1  
             ??_setupTimer0Interrupt 0033                           _OSCCONbits 0099  
                        _potSetCount 0056                  _setPWMDutyandPeriod 073F  
            _setupInternalOscillator 0184          ??_transToVoltageModeControl 0033  
                      ??i1_writeGPIO 0071                        __pstringtext1 07C6  
                      __pstringtext2 07D8                        __pstringtext3 0000  
                         _OPTION_REG 0095                     ___lldiv@quotient 0021  
                writeGPIO@writeValue 0033                          ??_writeGPIO 0034  
               ?_setPWMDutyandPeriod 0070                    ?_currentTripReset 0070  
                 ??_currentTripReset 0039                readADCRaw@returnValue 0074  
                  ??_currentTripRead 0079                        _runPotScaling 00A8  
               readGPIO@returnValueA 0036                 readGPIO@returnValueB 0038  
                readFilteredIL@i_920 007A                      readFilteredIL@i 007B  
