

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 14:58:53 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1827 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021C                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  029E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0219                     	;# 
   334  021A                     	;# 
   335  021B                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021E                     	;# 
   339  021F                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  039A                     	;# 
   370  039C                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0219                     	;# 
   492  021A                     	;# 
   493  021B                     	;# 
   494  021C                     	;# 
   495  021D                     	;# 
   496  021E                     	;# 
   497  021F                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0294                     	;# 
   503  0295                     	;# 
   504  0295                     	;# 
   505  0296                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  029B                     	;# 
   511  029C                     	;# 
   512  029C                     	;# 
   513  029D                     	;# 
   514  029E                     	;# 
   515  029E                     	;# 
   516  0311                     	;# 
   517  0311                     	;# 
   518  0312                     	;# 
   519  0313                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  039A                     	;# 
   528  039C                     	;# 
   529  039D                     	;# 
   530  039E                     	;# 
   531  039F                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  041C                     	;# 
   536  041D                     	;# 
   537  041E                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011A                     	;# 
   607  011B                     	;# 
   608  011D                     	;# 
   609  011E                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0216                     	;# 
   646  0216                     	;# 
   647  0217                     	;# 
   648  0217                     	;# 
   649  0219                     	;# 
   650  021A                     	;# 
   651  021B                     	;# 
   652  021C                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029B                     	;# 
   669  029C                     	;# 
   670  029C                     	;# 
   671  029D                     	;# 
   672  029E                     	;# 
   673  029E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0318                     	;# 
   679  0318                     	;# 
   680  0319                     	;# 
   681  031A                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0013                     	;# 
   724  0014                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  029E                     	;# 
   831  029E                     	;# 
   832  0311                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0318                     	;# 
   837  0318                     	;# 
   838  0319                     	;# 
   839  031A                     	;# 
   840  0394                     	;# 
   841  0395                     	;# 
   842  0396                     	;# 
   843  039A                     	;# 
   844  039C                     	;# 
   845  039D                     	;# 
   846  039E                     	;# 
   847  039F                     	;# 
   848  0415                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  0FE4                     	;# 
   855  0FE5                     	;# 
   856  0FE6                     	;# 
   857  0FE7                     	;# 
   858  0FE8                     	;# 
   859  0FE9                     	;# 
   860  0FEA                     	;# 
   861  0FEB                     	;# 
   862  0FED                     	;# 
   863  0FEE                     	;# 
   864  0FEF                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0014                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0016                     	;# 
   886  0017                     	;# 
   887  0018                     	;# 
   888  0019                     	;# 
   889  001A                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001E                     	;# 
   893  001F                     	;# 
   894  008C                     	;# 
   895  008D                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0097                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0194                     	;# 
   935  0195                     	;# 
   936  0196                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019C                     	;# 
   944  019C                     	;# 
   945  019D                     	;# 
   946  019E                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0219                     	;# 
   966  021A                     	;# 
   967  021B                     	;# 
   968  021C                     	;# 
   969  021D                     	;# 
   970  021E                     	;# 
   971  021F                     	;# 
   972  0291                     	;# 
   973  0291                     	;# 
   974  0292                     	;# 
   975  0293                     	;# 
   976  0294                     	;# 
   977  0295                     	;# 
   978  0295                     	;# 
   979  0296                     	;# 
   980  0298                     	;# 
   981  0298                     	;# 
   982  0299                     	;# 
   983  029A                     	;# 
   984  029B                     	;# 
   985  029C                     	;# 
   986  029C                     	;# 
   987  029D                     	;# 
   988  029E                     	;# 
   989  029E                     	;# 
   990  0311                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0318                     	;# 
   995  0318                     	;# 
   996  0319                     	;# 
   997  031A                     	;# 
   998  0394                     	;# 
   999  0395                     	;# 
  1000  0396                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0415                     	;# 
  1007  0416                     	;# 
  1008  0417                     	;# 
  1009  041C                     	;# 
  1010  041D                     	;# 
  1011  041E                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0014                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  001E                     	;# 
  1051  001F                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0098                     	;# 
  1062  0099                     	;# 
  1063  009A                     	;# 
  1064  009B                     	;# 
  1065  009B                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011B                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0194                     	;# 
  1093  0195                     	;# 
  1094  0196                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0219                     	;# 
  1124  021A                     	;# 
  1125  021B                     	;# 
  1126  021C                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0295                     	;# 
  1136  0295                     	;# 
  1137  0296                     	;# 
  1138  0298                     	;# 
  1139  0298                     	;# 
  1140  0299                     	;# 
  1141  029A                     	;# 
  1142  029B                     	;# 
  1143  029C                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  0394                     	;# 
  1157  0395                     	;# 
  1158  0396                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0095                     	;# 
  1217  0096                     	;# 
  1218  0097                     	;# 
  1219  0098                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011D                     	;# 
  1241  011E                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0194                     	;# 
  1251  0195                     	;# 
  1252  0196                     	;# 
  1253  0199                     	;# 
  1254  019A                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  020C                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  0291                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0294                     	;# 
  1293  0295                     	;# 
  1294  0295                     	;# 
  1295  0296                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  029E                     	;# 
  1305  029E                     	;# 
  1306  0311                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0318                     	;# 
  1311  0318                     	;# 
  1312  0319                     	;# 
  1313  031A                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039C                     	;# 
  1319  039D                     	;# 
  1320  039E                     	;# 
  1321  039F                     	;# 
  1322  0415                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  0FE4                     	;# 
  1329  0FE5                     	;# 
  1330  0FE6                     	;# 
  1331  0FE7                     	;# 
  1332  0FE8                     	;# 
  1333  0FE9                     	;# 
  1334  0FEA                     	;# 
  1335  0FEB                     	;# 
  1336  0FED                     	;# 
  1337  0FEE                     	;# 
  1338  0FEF                     	;# 
  1339                           
  1340 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1341  000D                     _PORTB	set	13
  1342  000C                     _PORTA	set	12
  1343  001C                     _T2CONbits	set	28
  1344  001B                     _PR2	set	27
  1345  0011                     _PIR1bits	set	17
  1346  000B                     _INTCONbits	set	11
  1347  009B                     _ADRESL	set	155
  1348  009C                     _ADRESH	set	156
  1349  009D                     _ADCON0bits	set	157
  1350  008D                     _TRISB	set	141
  1351  008C                     _TRISA	set	140
  1352  009E                     _ADCON1	set	158
  1353  009D                     _ADCON0	set	157
  1354  0095                     _OPTION_REG	set	149
  1355  0095                     _OPTION_REGbits	set	149
  1356  0091                     _PIE1bits	set	145
  1357  0099                     _OSCCONbits	set	153
  1358  010D                     _LATB	set	269
  1359  010C                     _LATA	set	268
  1360  011D                     _APFCON0bits	set	285
  1361  018D                     _ANSELB	set	397
  1362  018C                     _ANSELA	set	396
  1363  0293                     _CCP1CONbits	set	659
  1364  0296                     _PSTR1CONbits	set	662
  1365  0291                     _CCPR1L	set	657
  1366  0293                     _CCP1CON	set	659
  1367                           
  1368                           	psect	stringtext1
  1369  06B1                     __pstringtext1:
  1370  06B1                     STR_1:
  1371  06B1  3428               	retlw	40	;'('
  1372  06B2  3428               	retlw	40	;'('
  1373  06B3  3449               	retlw	73	;'I'
  1374  06B4  344E               	retlw	78	;'N'
  1375  06B5  3454               	retlw	84	;'T'
  1376  06B6  3443               	retlw	67	;'C'
  1377  06B7  344F               	retlw	79	;'O'
  1378  06B8  344E               	retlw	78	;'N'
  1379  06B9  3429               	retlw	41	;')'
  1380  06BA  3426               	retlw	38	;'&'
  1381  06BB  3430               	retlw	48	;'0'
  1382  06BC  3437               	retlw	55	;'7'
  1383  06BD  3446               	retlw	70	;'F'
  1384  06BE  3468               	retlw	104	;'h'
  1385  06BF  3429               	retlw	41	;')'
  1386  06C0  342C               	retlw	44	;','
  1387  06C1  3432               	retlw	50	;'2'
  1388  06C2  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext2
  1391  06C3                     __pstringtext2:
  1392  06C3                     STR_3:
  1393  06C3  3428               	retlw	40	;'('
  1394  06C4  3428               	retlw	40	;'('
  1395  06C5  3450               	retlw	80	;'P'
  1396  06C6  3449               	retlw	73	;'I'
  1397  06C7  3452               	retlw	82	;'R'
  1398  06C8  3431               	retlw	49	;'1'
  1399  06C9  3429               	retlw	41	;')'
  1400  06CA  3426               	retlw	38	;'&'
  1401  06CB  3430               	retlw	48	;'0'
  1402  06CC  3437               	retlw	55	;'7'
  1403  06CD  3446               	retlw	70	;'F'
  1404  06CE  3468               	retlw	104	;'h'
  1405  06CF  3429               	retlw	41	;')'
  1406  06D0  342C               	retlw	44	;','
  1407  06D1  3432               	retlw	50	;'2'
  1408  06D2  3400               	retlw	0
  1409                           
  1410                           	psect	stringtext3
  1411  0000                     __pstringtext3:
  1412  06C3                     
  1413                           	psect	cinit
  1414  0074                     start_initialization:	
  1415                           ; #config settings
  1416                           
  1417  0074                     __initialization:
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  0074  303D               	movlw	low __pbssBANK0
  1421  0075  0084               	movwf	4
  1422  0076  3000               	movlw	high __pbssBANK0
  1423  0077  0085               	movwf	5
  1424  0078  301A               	movlw	26
  1425  0079  3186  26E4  3180   	fcall	clear_ram0
  1426                           
  1427                           ; Clear objects allocated to BANK1
  1428  007C  30A0               	movlw	low __pbssBANK1
  1429  007D  0084               	movwf	4
  1430  007E  3000               	movlw	high __pbssBANK1
  1431  007F  0085               	movwf	5
  1432  0080  3040               	movlw	64
  1433  0081  3186  26E4  3180   	fcall	clear_ram0
  1434                           
  1435                           ; Clear objects allocated to BANK2
  1436  0084  3020               	movlw	low __pbssBANK2
  1437  0085  0084               	movwf	4
  1438  0086  3001               	movlw	high __pbssBANK2
  1439  0087  0085               	movwf	5
  1440  0088  3040               	movlw	64
  1441  0089  3186  26E4  3180   	fcall	clear_ram0
  1442  008C                     end_of_initialization:	
  1443                           ;End of C runtime variable initialization code
  1444                           
  1445  008C                     __end_of__initialization:
  1446  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1447  008D  0020               	movlb	0
  1448  008E  3186  2E95         	ljmp	_main	;jump to C main() function
  1449                           
  1450                           	psect	bssBANK0
  1451  003D                     __pbssBANK0:
  1452  003D                     _clockFrequency:
  1453  003D                     	ds	4
  1454  0041                     _filteredDutyPot:
  1455  0041                     	ds	2
  1456  0043                     _filteredFreqPot:
  1457  0043                     	ds	2
  1458  0045                     _filteredIL:
  1459  0045                     	ds	2
  1460  0047                     _filteredIDS:
  1461  0047                     	ds	2
  1462  0049                     _latestIL1:
  1463  0049                     	ds	2
  1464  004B                     _prevDuty:
  1465  004B                     	ds	2
  1466  004D                     _setDuty:
  1467  004D                     	ds	2
  1468  004F                     _emergencyStop:
  1469  004F                     	ds	1
  1470  0050                     _timerSlotQuarter:
  1471  0050                     	ds	1
  1472  0051                     _timerSlotHalf:
  1473  0051                     	ds	1
  1474  0052                     _potSetCount:
  1475  0052                     	ds	1
  1476  0053                     _tripIL:
  1477  0053                     	ds	1
  1478  0054                     _tripIDS:
  1479  0054                     	ds	1
  1480  0055                     _prevPeriod:
  1481  0055                     	ds	1
  1482  0056                     _setPeriod:
  1483  0056                     	ds	1
  1484                           
  1485                           	psect	bssBANK1
  1486  00A0                     __pbssBANK1:
  1487  00A0                     _currentILFIFO:
  1488  00A0                     	ds	32
  1489  00C0                     _currentIDSFIFO:
  1490  00C0                     	ds	32
  1491                           
  1492                           	psect	bssBANK2
  1493  0120                     __pbssBANK2:
  1494  0120                     _dutyPotFIFO:
  1495  0120                     	ds	32
  1496  0140                     _freqPotFIFO:
  1497  0140                     	ds	32
  1498                           
  1499                           	psect	clrtext
  1500  06E4                     clear_ram0:	
  1501                           ;	Called with FSR0 containing the base address, and
  1502                           ;	WREG with the size to clear
  1503                           
  1504  06E4  0064               	clrwdt	;clear the watchdog before getting into this loop
  1505  06E5                     clrloop0:
  1506  06E5  0180               	clrf	0	;clear RAM location pointed to by FSR
  1507  06E6  3101               	addfsr 0,1
  1508  06E7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1509  06E8  2EE5               	goto	clrloop0	;have we reached the end yet?
  1510  06E9  3400               	retlw	0	;all done for this memory range, return
  1511                           
  1512                           	psect	cstackCOMMON
  1513  0070                     __pcstackCOMMON:
  1514  0070                     ?_currentTripRead:
  1515  0070                     ?_setPWMDutyandPeriod:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_runPotScaling:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_setupInternalOscillator:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_setupPWM:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_setupTimer0Interrupt:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_initialiseADCModule:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_initialiseCurrentSensors:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_initialisePotentiometers:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_Tick980Hz:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_initialiseADCPin:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_readGPIO:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_readGPIO:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?i1_writeGPIO:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_readADCRaw:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?___wmul:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560  0070                     ?___lmul:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0070                     i1writeGPIO@writeValue:	
  1564                           ; 4 bytes @ 0x0
  1565                           
  1566  0070                     setPWMDutyandPeriod@dutyCycle:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ___wmul@multiplier:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0070                     ___lmul@multiplier:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0x0
  1577  0070                     	ds	1
  1578  0071                     ??i1_writeGPIO:
  1579                           
  1580                           ; 1 bytes @ 0x1
  1581  0071                     	ds	1
  1582  0072                     ??_readADCRaw:
  1583  0072                     setPWMDutyandPeriod@period:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586  0072                     readGPIO@readA:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589  0072                     ___wmul@multiplicand:	
  1590                           ; 1 bytes @ 0x2
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  0072                     	ds	1
  1595  0073                     ??_setPWMDutyandPeriod:
  1596  0073                     readGPIO@returnValueA:	
  1597                           ; 1 bytes @ 0x3
  1598                           
  1599  0073                     i1writeGPIO@portType:	
  1600                           ; 1 bytes @ 0x3
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x3
  1604  0073                     	ds	1
  1605  0074                     ??___wmul:
  1606  0074                     readGPIO@readB:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609  0074                     i1writeGPIO@gpioNumber:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612  0074                     readADCRaw@returnValue:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615  0074                     ___wmul@product:	
  1616                           ; 2 bytes @ 0x4
  1617                           
  1618  0074                     ___lmul@multiplicand:	
  1619                           ; 2 bytes @ 0x4
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0x4
  1623  0074                     	ds	1
  1624  0075                     readGPIO@returnValueB:
  1625  0075                     i1writeGPIO@portNumber:	
  1626                           ; 1 bytes @ 0x5
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0x5
  1630  0075                     	ds	1
  1631  0076                     ?___lldiv:
  1632  0076                     readADCRaw@channel:	
  1633                           ; 4 bytes @ 0x6
  1634                           
  1635  0076                     readGPIO@portNumber:	
  1636                           ; 1 bytes @ 0x6
  1637                           
  1638  0076                     ___lldiv@divisor:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641                           
  1642                           ; 4 bytes @ 0x6
  1643  0076                     	ds	1
  1644  0077                     readADCRaw@gpioValid:
  1645  0077                     readGPIO@portType:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x7
  1650  0077                     	ds	1
  1651  0078                     ??___lmul:
  1652  0078                     readADCRaw@i:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0078                     readGPIO@gpioNumber:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658  0078                     ___lmul@product:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0x8
  1663  0078                     	ds	1
  1664  0079                     ??_currentTripRead:
  1665  0079                     readADCRaw@i_616:	
  1666                           ; 1 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x9
  1670  0079                     	ds	1
  1671  007A                     readADCRaw@gpioNumber:
  1672  007A                     _currentTripRead$747:	
  1673                           ; 1 bytes @ 0xA
  1674                           
  1675  007A                     ___lldiv@dividend:	
  1676                           ; 1 bytes @ 0xA
  1677                           
  1678                           
  1679                           ; 4 bytes @ 0xA
  1680  007A                     	ds	1
  1681  007B                     ?_readFilteredDutyPot:
  1682  007B                     ?_readFilteredFreqPot:	
  1683                           ; 2 bytes @ 0xB
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0xB
  1687  007B                     	ds	3
  1688                           
  1689                           	psect	cstackBANK0
  1690  0020                     __pcstackBANK0:
  1691  0020                     ??_readFilteredDutyPot:
  1692  0020                     ??_readFilteredFreqPot:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0020                     ??___lldiv:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698                           
  1699                           ; 1 bytes @ 0x0
  1700  0020                     	ds	1
  1701  0021                     ___lldiv@quotient:
  1702                           
  1703                           ; 4 bytes @ 0x1
  1704  0021                     	ds	3
  1705  0024                     readFilteredDutyPot@sumOfSamples:
  1706  0024                     readFilteredFreqPot@sumOfSamples:	
  1707                           ; 4 bytes @ 0x4
  1708                           
  1709                           
  1710                           ; 4 bytes @ 0x4
  1711  0024                     	ds	1
  1712  0025                     ___lldiv@counter:
  1713                           
  1714                           ; 1 bytes @ 0x5
  1715  0025                     	ds	1
  1716  0026                     ??_runPotScaling:
  1717                           
  1718                           ; 1 bytes @ 0x6
  1719  0026                     	ds	2
  1720  0028                     readFilteredDutyPot@i_702:
  1721  0028                     readFilteredFreqPot@i_706:	
  1722                           ; 1 bytes @ 0x8
  1723                           
  1724                           
  1725                           ; 1 bytes @ 0x8
  1726  0028                     	ds	1
  1727  0029                     readFilteredDutyPot@i:
  1728  0029                     readFilteredFreqPot@i:	
  1729                           ; 1 bytes @ 0x9
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x9
  1733  0029                     	ds	5
  1734  002E                     runPotScaling@maxDuty:
  1735                           
  1736                           ; 2 bytes @ 0xE
  1737  002E                     	ds	2
  1738  0030                     runPotScaling@minDuty:
  1739                           
  1740                           ; 2 bytes @ 0x10
  1741  0030                     	ds	2
  1742  0032                     ??_Tick980Hz:
  1743                           
  1744                           ; 1 bytes @ 0x12
  1745  0032                     	ds	1
  1746  0033                     ?_writeGPIO:
  1747  0033                     ??_setupInternalOscillator:	
  1748                           ; 1 bytes @ 0x13
  1749                           
  1750  0033                     ??_setupTimer0Interrupt:	
  1751                           ; 1 bytes @ 0x13
  1752                           
  1753  0033                     ??_initialiseADCModule:	
  1754                           ; 1 bytes @ 0x13
  1755                           
  1756  0033                     ?_initialiseGPIO:	
  1757                           ; 1 bytes @ 0x13
  1758                           
  1759  0033                     ??_initialiseADCPin:	
  1760                           ; 1 bytes @ 0x13
  1761                           
  1762  0033                     initialiseGPIO@direction:	
  1763                           ; 1 bytes @ 0x13
  1764                           
  1765  0033                     writeGPIO@writeValue:	
  1766                           ; 1 bytes @ 0x13
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x13
  1770  0033                     	ds	1
  1771  0034                     ??_writeGPIO:
  1772  0034                     ??_initialiseGPIO:	
  1773                           ; 1 bytes @ 0x14
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x14
  1777  0034                     	ds	1
  1778  0035                     setupInternalOscillator@selectedFreq:
  1779  0035                     initialiseADCPin@gpioValid:	
  1780                           ; 1 bytes @ 0x15
  1781                           
  1782                           
  1783                           ; 1 bytes @ 0x15
  1784  0035                     	ds	1
  1785  0036                     initialiseADCPin@portType:
  1786  0036                     initialiseGPIO@portType:	
  1787                           ; 1 bytes @ 0x16
  1788                           
  1789  0036                     writeGPIO@portType:	
  1790                           ; 1 bytes @ 0x16
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x16
  1794  0036                     	ds	1
  1795  0037                     initialiseADCPin@portNumber:
  1796  0037                     initialiseGPIO@gpioNumber:	
  1797                           ; 1 bytes @ 0x17
  1798                           
  1799  0037                     writeGPIO@gpioNumber:	
  1800                           ; 1 bytes @ 0x17
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x17
  1804  0037                     	ds	1
  1805  0038                     initialiseADCPin@gpioNumber:
  1806  0038                     initialiseGPIO@portNumber:	
  1807                           ; 1 bytes @ 0x18
  1808                           
  1809  0038                     writeGPIO@portNumber:	
  1810                           ; 1 bytes @ 0x18
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x18
  1814  0038                     	ds	1
  1815  0039                     ??_setupPWM:
  1816  0039                     ??_initialiseCurrentSensors:	
  1817                           ; 1 bytes @ 0x19
  1818                           
  1819  0039                     ??_initialisePotentiometers:	
  1820                           ; 1 bytes @ 0x19
  1821                           
  1822  0039                     ?_main:	
  1823                           ; 1 bytes @ 0x19
  1824                           
  1825  0039                     main@argc:	
  1826                           ; 2 bytes @ 0x19
  1827                           
  1828                           
  1829                           ; 2 bytes @ 0x19
  1830  0039                     	ds	2
  1831  003B                     main@argv:
  1832                           
  1833                           ; 2 bytes @ 0x1B
  1834  003B                     	ds	2
  1835  003D                     ??_main:
  1836                           
  1837                           	psect	maintext
  1838  0695                     __pmaintext:	
  1839                           ; 1 bytes @ 0x1D
  1840 ;;
  1841 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1842 ;;
  1843 ;; *************** function _main *****************
  1844 ;; Defined at:
  1845 ;;		line 103 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  argc            2   25[BANK0 ] int 
  1848 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   25[BANK0 ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : B1F/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1860 ;;      Params:         0       4       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0
  1863 ;;      Totals:         0       4       0       0       0       0
  1864 ;;Total ram usage:        4 bytes
  1865 ;; Hardware stack levels required when called: 5
  1866 ;; This function calls:
  1867 ;;		_initialiseADCModule
  1868 ;;		_initialiseCurrentSensors
  1869 ;;		_initialiseGPIO
  1870 ;;		_initialisePotentiometers
  1871 ;;		_setupInternalOscillator
  1872 ;;		_setupPWM
  1873 ;;		_setupTimer0Interrupt
  1874 ;; This function is called by:
  1875 ;;		Startup code after reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879  0695                     _main:	
  1880                           ;psect for function _main
  1881                           
  1882  0695                     l2102:	
  1883                           ;incstack = 0
  1884                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1885                           
  1886                           
  1887                           ;main.c: 105:     setupInternalOscillator(freq32M);
  1888  0695  300A               	movlw	10
  1889  0696  3181  2173  3186   	fcall	_setupInternalOscillator
  1890  0699                     l2104:
  1891                           
  1892                           ;main.c: 107:     setupPWM();
  1893  0699  3186  2678  3186   	fcall	_setupPWM
  1894  069C                     l2106:
  1895                           
  1896                           ;main.c: 108:     setupTimer0Interrupt();
  1897  069C  3186  26DC  3186   	fcall	_setupTimer0Interrupt
  1898  069F                     l2108:
  1899                           
  1900                           ;main.c: 109:     initialiseADCModule();
  1901  069F  3186  26EA  3186   	fcall	_initialiseADCModule
  1902  06A2                     l2110:
  1903                           
  1904                           ;main.c: 110:     initialiseCurrentSensors();
  1905  06A2  3186  2636  3186   	fcall	_initialiseCurrentSensors
  1906  06A5                     l2112:
  1907                           
  1908                           ;main.c: 111:     initialisePotentiometers();
  1909  06A5  3186  26D3  3186   	fcall	_initialisePotentiometers
  1910  06A8                     l2114:
  1911                           
  1912                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  1913  06A8  0020               	movlb	0	; select bank0
  1914  06A9  01B3               	clrf	initialiseGPIO@direction
  1915  06AA  300C               	movlw	12
  1916  06AB  3182  224E  3186   	fcall	_initialiseGPIO
  1917  06AE                     l92:	
  1918                           ;main.c: 114:     while(1){
  1919                           
  1920  06AE                     l93:	
  1921                           ;main.c: 116:     }
  1922                           
  1923  06AE  2EAE               	goto	l92
  1924  06AF  3180  2872         	ljmp	start
  1925  06B1                     __end_of_main:
  1926                           
  1927                           	psect	text1
  1928  06DC                     __ptext1:	
  1929 ;; *************** function _setupTimer0Interrupt *****************
  1930 ;; Defined at:
  1931 ;;		line 17 in file "Timer0.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1945 ;;      Params:         0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 3
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959  06DC                     _setupTimer0Interrupt:	
  1960                           ;psect for function _setupTimer0Interrupt
  1961                           
  1962  06DC                     l2030:	
  1963                           ;incstack = 0
  1964                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1965                           
  1966                           
  1967                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1968  06DC  178B               	bsf	11,7	;volatile
  1969                           
  1970                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1971  06DD  168B               	bsf	11,5	;volatile
  1972                           
  1973                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1974  06DE  0021               	movlb	1	; select bank1
  1975  06DF  1295               	bcf	21,5	;volatile
  1976                           
  1977                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1978  06E0  1195               	bcf	21,3	;volatile
  1979  06E1                     l2032:
  1980                           
  1981                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1982  06E1  3004               	movlw	4
  1983  06E2  0095               	movwf	21	;volatile
  1984  06E3                     l169:
  1985  06E3  0008               	return
  1986  06E4                     __end_of_setupTimer0Interrupt:
  1987                           
  1988                           	psect	text2
  1989  0678                     __ptext2:	
  1990 ;; *************** function _setupPWM *****************
  1991 ;; Defined at:
  1992 ;;		line 16 in file "PWM.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2006 ;;      Params:         0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 4
  2013 ;; This function calls:
  2014 ;;		_initialiseGPIO
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020  0678                     _setupPWM:	
  2021                           ;psect for function _setupPWM
  2022                           
  2023  0678                     l2006:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2026                           
  2027                           
  2028                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2029  0678  300C               	movlw	12
  2030  0679  0025               	movlb	5	; select bank5
  2031  067A  0093               	movwf	19	;volatile
  2032  067B                     l2008:
  2033                           
  2034                           ;PWM.c: 20:     PR2 = 0;
  2035  067B  0020               	movlb	0	; select bank0
  2036  067C  019B               	clrf	27	;volatile
  2037  067D                     l2010:
  2038                           
  2039                           ;PWM.c: 21:     CCPR1L = 0;
  2040  067D  0025               	movlb	5	; select bank5
  2041  067E  0191               	clrf	17	;volatile
  2042  067F                     l2012:
  2043                           
  2044                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2045  067F  0022               	movlb	2	; select bank2
  2046  0680  151D               	bsf	29,2	;volatile
  2047  0681                     l2014:
  2048                           
  2049                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2050  0681  0025               	movlb	5	; select bank5
  2051  0682  1596               	bsf	22,3	;volatile
  2052  0683                     l2016:
  2053                           
  2054                           ;PWM.c: 25:     PSTR1CONbits.STR1A = 0;
  2055  0683  1016               	bcf	22,0	;volatile
  2056  0684                     l2018:
  2057                           
  2058                           ;PWM.c: 27:     T2CONbits.T2CKPS = 0b00;
  2059  0684  30FC               	movlw	-4
  2060  0685  0020               	movlb	0	; select bank0
  2061  0686  059C               	andwf	28,f	;volatile
  2062  0687                     l2020:
  2063                           
  2064                           ;PWM.c: 28:     PIE1bits.TMR2IE = 0;
  2065  0687  0021               	movlb	1	; select bank1
  2066  0688  1091               	bcf	17,1	;volatile
  2067  0689                     l2022:
  2068                           
  2069                           ;PWM.c: 29:     T2CONbits.TMR2ON = 1;
  2070  0689  0020               	movlb	0	; select bank0
  2071  068A  151C               	bsf	28,2	;volatile
  2072  068B                     l2024:
  2073                           
  2074                           ;PWM.c: 31:     INTCONbits.PEIE = 1;
  2075  068B  170B               	bsf	11,6	;volatile
  2076  068C                     l2026:
  2077                           
  2078                           ;PWM.c: 32:     PIE1bits.CCP1IE = 1;
  2079  068C  0021               	movlb	1	; select bank1
  2080  068D  1511               	bsf	17,2	;volatile
  2081  068E                     l2028:
  2082                           
  2083                           ;PWM.c: 36:     initialiseGPIO(pinRA6, 0);
  2084  068E  0020               	movlb	0	; select bank0
  2085  068F  01B3               	clrf	initialiseGPIO@direction
  2086  0690  3006               	movlw	6
  2087  0691  3182  224E  3186   	fcall	_initialiseGPIO
  2088  0694                     l144:
  2089  0694  0008               	return
  2090  0695                     __end_of_setupPWM:
  2091                           
  2092                           	psect	text3
  2093  0173                     __ptext3:	
  2094 ;; *************** function _setupInternalOscillator *****************
  2095 ;; Defined at:
  2096 ;;		line 125 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  selectedFreq    1    wreg     const enum E2830
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2110 ;;      Params:         0       0       0       0       0       0
  2111 ;;      Locals:         0       1       0       0       0       0
  2112 ;;      Temps:          0       2       0       0       0       0
  2113 ;;      Totals:         0       3       0       0       0       0
  2114 ;;Total ram usage:        3 bytes
  2115 ;; Hardware stack levels used: 1
  2116 ;; Hardware stack levels required when called: 3
  2117 ;; This function calls:
  2118 ;;		Nothing
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124  0173                     _setupInternalOscillator:	
  2125                           ;psect for function _setupInternalOscillator
  2126                           
  2127                           
  2128                           ;incstack = 0
  2129                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2130                           ;setupInternalOscillator@selectedFreq stored from wreg
  2131  0173  0020               	movlb	0	; select bank0
  2132  0174  00B5               	movwf	setupInternalOscillator@selectedFreq
  2133  0175                     l1928:
  2134                           
  2135                           ;main.c: 129:     switch(selectedFreq){
  2136  0175  2A22               	goto	l1998
  2137  0176                     l1930:
  2138  0176  3087               	movlw	-121
  2139  0177  0021               	movlb	1	; select bank1
  2140  0178  0599               	andwf	25,f	;volatile
  2141  0179                     l1932:
  2142  0179  1399               	bcf	25,7	;volatile
  2143  017A                     l1934:
  2144  017A  3000               	movlw	0
  2145  017B  0020               	movlb	0	; select bank0
  2146  017C  00C0               	movwf	_clockFrequency+3
  2147  017D  3000               	movlw	0
  2148  017E  00BF               	movwf	_clockFrequency+2
  2149  017F  3079               	movlw	121
  2150  0180  00BE               	movwf	_clockFrequency+1
  2151  0181  3018               	movlw	24
  2152  0182  00BD               	movwf	_clockFrequency
  2153  0183  2A4D               	goto	l111
  2154  0184                     l1936:
  2155  0184  0021               	movlb	1	; select bank1
  2156  0185  0819               	movf	25,w	;volatile
  2157  0186  3987               	andlw	-121
  2158  0187  3820               	iorlw	32
  2159  0188  0099               	movwf	25	;volatile
  2160  0189                     l1938:
  2161  0189  1399               	bcf	25,7	;volatile
  2162  018A                     l1940:
  2163  018A  3000               	movlw	0
  2164  018B  0020               	movlb	0	; select bank0
  2165  018C  00C0               	movwf	_clockFrequency+3
  2166  018D  3000               	movlw	0
  2167  018E  00BF               	movwf	_clockFrequency+2
  2168  018F  30F4               	movlw	244
  2169  0190  00BE               	movwf	_clockFrequency+1
  2170  0191  3024               	movlw	36
  2171  0192  00BD               	movwf	_clockFrequency
  2172  0193  2A4D               	goto	l111
  2173  0194                     l1942:
  2174  0194  0021               	movlb	1	; select bank1
  2175  0195  0819               	movf	25,w	;volatile
  2176  0196  3987               	andlw	-121
  2177  0197  3828               	iorlw	40
  2178  0198  0099               	movwf	25	;volatile
  2179  0199                     l1944:
  2180  0199  1399               	bcf	25,7	;volatile
  2181  019A                     l1946:
  2182  019A  3000               	movlw	0
  2183  019B  0020               	movlb	0	; select bank0
  2184  019C  00C0               	movwf	_clockFrequency+3
  2185  019D  3001               	movlw	1
  2186  019E  00BF               	movwf	_clockFrequency+2
  2187  019F  30E8               	movlw	232
  2188  01A0  00BE               	movwf	_clockFrequency+1
  2189  01A1  3048               	movlw	72
  2190  01A2  00BD               	movwf	_clockFrequency
  2191  01A3  2A4D               	goto	l111
  2192  01A4                     l1948:
  2193  01A4  0021               	movlb	1	; select bank1
  2194  01A5  0819               	movf	25,w	;volatile
  2195  01A6  3987               	andlw	-121
  2196  01A7  3830               	iorlw	48
  2197  01A8  0099               	movwf	25	;volatile
  2198  01A9                     l1950:
  2199  01A9  1399               	bcf	25,7	;volatile
  2200  01AA                     l1952:
  2201  01AA  3000               	movlw	0
  2202  01AB  0020               	movlb	0	; select bank0
  2203  01AC  00C0               	movwf	_clockFrequency+3
  2204  01AD  3003               	movlw	3
  2205  01AE  00BF               	movwf	_clockFrequency+2
  2206  01AF  30D0               	movlw	208
  2207  01B0  00BE               	movwf	_clockFrequency+1
  2208  01B1  3090               	movlw	144
  2209  01B2  00BD               	movwf	_clockFrequency
  2210  01B3  2A4D               	goto	l111
  2211  01B4                     l1954:
  2212  01B4  0021               	movlb	1	; select bank1
  2213  01B5  0819               	movf	25,w	;volatile
  2214  01B6  3987               	andlw	-121
  2215  01B7  3838               	iorlw	56
  2216  01B8  0099               	movwf	25	;volatile
  2217  01B9                     l1956:
  2218  01B9  1399               	bcf	25,7	;volatile
  2219  01BA                     l1958:
  2220  01BA  3000               	movlw	0
  2221  01BB  0020               	movlb	0	; select bank0
  2222  01BC  00C0               	movwf	_clockFrequency+3
  2223  01BD  3007               	movlw	7
  2224  01BE  00BF               	movwf	_clockFrequency+2
  2225  01BF  30A1               	movlw	161
  2226  01C0  00BE               	movwf	_clockFrequency+1
  2227  01C1  3020               	movlw	32
  2228  01C2  00BD               	movwf	_clockFrequency
  2229  01C3  2A4D               	goto	l111
  2230  01C4                     l1960:
  2231  01C4  0021               	movlb	1	; select bank1
  2232  01C5  0819               	movf	25,w	;volatile
  2233  01C6  3987               	andlw	-121
  2234  01C7  3858               	iorlw	88
  2235  01C8  0099               	movwf	25	;volatile
  2236  01C9                     l1962:
  2237  01C9  1399               	bcf	25,7	;volatile
  2238  01CA                     l1964:
  2239  01CA  3000               	movlw	0
  2240  01CB  0020               	movlb	0	; select bank0
  2241  01CC  00C0               	movwf	_clockFrequency+3
  2242  01CD  300F               	movlw	15
  2243  01CE  00BF               	movwf	_clockFrequency+2
  2244  01CF  3042               	movlw	66
  2245  01D0  00BE               	movwf	_clockFrequency+1
  2246  01D1  3040               	movlw	64
  2247  01D2  00BD               	movwf	_clockFrequency
  2248  01D3  2A4D               	goto	l111
  2249  01D4                     l1966:
  2250  01D4  0021               	movlb	1	; select bank1
  2251  01D5  0819               	movf	25,w	;volatile
  2252  01D6  3987               	andlw	-121
  2253  01D7  3860               	iorlw	96
  2254  01D8  0099               	movwf	25	;volatile
  2255  01D9                     l1968:
  2256  01D9  1399               	bcf	25,7	;volatile
  2257  01DA                     l1970:
  2258  01DA  3000               	movlw	0
  2259  01DB  0020               	movlb	0	; select bank0
  2260  01DC  00C0               	movwf	_clockFrequency+3
  2261  01DD  301E               	movlw	30
  2262  01DE  00BF               	movwf	_clockFrequency+2
  2263  01DF  3084               	movlw	132
  2264  01E0  00BE               	movwf	_clockFrequency+1
  2265  01E1  3080               	movlw	128
  2266  01E2  00BD               	movwf	_clockFrequency
  2267  01E3  2A4D               	goto	l111
  2268  01E4                     l1972:
  2269  01E4  0021               	movlb	1	; select bank1
  2270  01E5  0819               	movf	25,w	;volatile
  2271  01E6  3987               	andlw	-121
  2272  01E7  3868               	iorlw	104
  2273  01E8  0099               	movwf	25	;volatile
  2274  01E9                     l1974:
  2275  01E9  1399               	bcf	25,7	;volatile
  2276  01EA                     l1976:
  2277  01EA  3000               	movlw	0
  2278  01EB  0020               	movlb	0	; select bank0
  2279  01EC  00C0               	movwf	_clockFrequency+3
  2280  01ED  303D               	movlw	61
  2281  01EE  00BF               	movwf	_clockFrequency+2
  2282  01EF  3009               	movlw	9
  2283  01F0  00BE               	movwf	_clockFrequency+1
  2284  01F1  3000               	movlw	0
  2285  01F2  00BD               	movwf	_clockFrequency
  2286  01F3  2A4D               	goto	l111
  2287  01F4                     l1978:
  2288  01F4  0021               	movlb	1	; select bank1
  2289  01F5  0819               	movf	25,w	;volatile
  2290  01F6  3987               	andlw	-121
  2291  01F7  3870               	iorlw	112
  2292  01F8  0099               	movwf	25	;volatile
  2293  01F9                     l1980:
  2294  01F9  1399               	bcf	25,7	;volatile
  2295  01FA                     l1982:
  2296  01FA  3000               	movlw	0
  2297  01FB  0020               	movlb	0	; select bank0
  2298  01FC  00C0               	movwf	_clockFrequency+3
  2299  01FD  307A               	movlw	122
  2300  01FE  00BF               	movwf	_clockFrequency+2
  2301  01FF  3012               	movlw	18
  2302  0200  00BE               	movwf	_clockFrequency+1
  2303  0201  3000               	movlw	0
  2304  0202  00BD               	movwf	_clockFrequency
  2305  0203  2A4D               	goto	l111
  2306  0204                     l1984:
  2307  0204  3078               	movlw	120
  2308  0205  0021               	movlb	1	; select bank1
  2309  0206  0499               	iorwf	25,f	;volatile
  2310  0207                     l1986:
  2311  0207  1399               	bcf	25,7	;volatile
  2312  0208                     l1988:
  2313  0208  3000               	movlw	0
  2314  0209  0020               	movlb	0	; select bank0
  2315  020A  00C0               	movwf	_clockFrequency+3
  2316  020B  30F4               	movlw	244
  2317  020C  00BF               	movwf	_clockFrequency+2
  2318  020D  3024               	movlw	36
  2319  020E  00BE               	movwf	_clockFrequency+1
  2320  020F  3000               	movlw	0
  2321  0210  00BD               	movwf	_clockFrequency
  2322  0211  2A4D               	goto	l111
  2323  0212                     l1990:
  2324  0212  0021               	movlb	1	; select bank1
  2325  0213  0819               	movf	25,w	;volatile
  2326  0214  3987               	andlw	-121
  2327  0215  3870               	iorlw	112
  2328  0216  0099               	movwf	25	;volatile
  2329  0217                     l1992:
  2330  0217  1799               	bsf	25,7	;volatile
  2331  0218                     l1994:
  2332  0218  3001               	movlw	1
  2333  0219  0020               	movlb	0	; select bank0
  2334  021A  00C0               	movwf	_clockFrequency+3
  2335  021B  30E8               	movlw	232
  2336  021C  00BF               	movwf	_clockFrequency+2
  2337  021D  3048               	movlw	72
  2338  021E  00BE               	movwf	_clockFrequency+1
  2339  021F  3000               	movlw	0
  2340  0220  00BD               	movwf	_clockFrequency
  2341  0221  2A4D               	goto	l111
  2342  0222                     l1998:
  2343  0222  0835               	movf	setupInternalOscillator@selectedFreq,w
  2344  0223  00B3               	movwf	??_setupInternalOscillator
  2345  0224  01B4               	clrf	??_setupInternalOscillator+1
  2346                           
  2347                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2348                           ; Switch size 1, requested type "simple"
  2349                           ; Number of cases is 1, Range of values is 0 to 0
  2350                           ; switch strategies available:
  2351                           ; Name         Instructions Cycles
  2352                           ; simple_byte            4     3 (average)
  2353                           ; direct_byte            8     6 (fixed)
  2354                           ; jumptable            260     6 (fixed)
  2355                           ;	Chosen strategy is simple_byte
  2356  0225  0834               	movf	??_setupInternalOscillator+1,w
  2357  0226  3A00               	xorlw	0	; case 0
  2358  0227  1903               	skipnz
  2359  0228  2A2A               	goto	l2202
  2360  0229  2A4D               	goto	l111
  2361  022A                     l2202:
  2362                           
  2363                           ; Switch size 1, requested type "simple"
  2364                           ; Number of cases is 11, Range of values is 0 to 10
  2365                           ; switch strategies available:
  2366                           ; Name         Instructions Cycles
  2367                           ; direct_byte           28     6 (fixed)
  2368                           ; simple_byte           34    18 (average)
  2369                           ; jumptable            260     6 (fixed)
  2370                           ;	Chosen strategy is simple_byte
  2371  022A  0833               	movf	??_setupInternalOscillator,w
  2372  022B  3A00               	xorlw	0	; case 0
  2373  022C  1903               	skipnz
  2374  022D  2976               	goto	l1930
  2375  022E  3A01               	xorlw	1	; case 1
  2376  022F  1903               	skipnz
  2377  0230  2984               	goto	l1936
  2378  0231  3A03               	xorlw	3	; case 2
  2379  0232  1903               	skipnz
  2380  0233  2994               	goto	l1942
  2381  0234  3A01               	xorlw	1	; case 3
  2382  0235  1903               	skipnz
  2383  0236  29A4               	goto	l1948
  2384  0237  3A07               	xorlw	7	; case 4
  2385  0238  1903               	skipnz
  2386  0239  29B4               	goto	l1954
  2387  023A  3A01               	xorlw	1	; case 5
  2388  023B  1903               	skipnz
  2389  023C  29C4               	goto	l1960
  2390  023D  3A03               	xorlw	3	; case 6
  2391  023E  1903               	skipnz
  2392  023F  29D4               	goto	l1966
  2393  0240  3A01               	xorlw	1	; case 7
  2394  0241  1903               	skipnz
  2395  0242  29E4               	goto	l1972
  2396  0243  3A0F               	xorlw	15	; case 8
  2397  0244  1903               	skipnz
  2398  0245  29F4               	goto	l1978
  2399  0246  3A01               	xorlw	1	; case 9
  2400  0247  1903               	skipnz
  2401  0248  2A04               	goto	l1984
  2402  0249  3A03               	xorlw	3	; case 10
  2403  024A  1903               	skipnz
  2404  024B  2A12               	goto	l1990
  2405  024C  2A4D               	goto	l111
  2406  024D                     l111:
  2407  024D  0008               	return
  2408  024E                     __end_of_setupInternalOscillator:
  2409                           
  2410                           	psect	text4
  2411  06D3                     __ptext4:	
  2412 ;; *************** function _initialisePotentiometers *****************
  2413 ;; Defined at:
  2414 ;;		line 15 in file "Potentiometer.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2, status,0, pclath, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2428 ;;      Params:         0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0
  2431 ;;      Totals:         0       0       0       0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; Hardware stack levels required when called: 4
  2435 ;; This function calls:
  2436 ;;		_initialiseADCPin
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442  06D3                     _initialisePotentiometers:	
  2443                           ;psect for function _initialisePotentiometers
  2444                           
  2445  06D3                     l2038:	
  2446                           ;incstack = 0
  2447                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2448                           
  2449                           
  2450                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2451  06D3  3009               	movlw	9
  2452  06D4  3182  22CA  3186   	fcall	_initialiseADCPin
  2453                           
  2454                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2455  06D7  300A               	movlw	10
  2456  06D8  3182  22CA  3186   	fcall	_initialiseADCPin
  2457  06DB                     l321:
  2458  06DB  0008               	return
  2459  06DC                     __end_of_initialisePotentiometers:
  2460                           
  2461                           	psect	text5
  2462  0636                     __ptext5:	
  2463 ;; *************** function _initialiseCurrentSensors *****************
  2464 ;; Defined at:
  2465 ;;		line 17 in file "CurrentSensor.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		wreg, status,2, status,0, pclath, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2479 ;;      Params:         0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 4
  2486 ;; This function calls:
  2487 ;;		_initialiseADCPin
  2488 ;;		_initialiseGPIO
  2489 ;;		_writeGPIO
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495  0636                     _initialiseCurrentSensors:	
  2496                           ;psect for function _initialiseCurrentSensors
  2497                           
  2498  0636                     l2036:	
  2499                           ;incstack = 0
  2500                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2501                           
  2502                           
  2503                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2504  0636  0020               	movlb	0	; select bank0
  2505  0637  01B3               	clrf	initialiseGPIO@direction
  2506  0638  0AB3               	incf	initialiseGPIO@direction,f
  2507  0639  3003               	movlw	3
  2508  063A  3182  224E  3186   	fcall	_initialiseGPIO
  2509                           
  2510                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2511  063D  0020               	movlb	0	; select bank0
  2512  063E  01B3               	clrf	initialiseGPIO@direction
  2513  063F  0AB3               	incf	initialiseGPIO@direction,f
  2514  0640  3001               	movlw	1
  2515  0641  3182  224E  3186   	fcall	_initialiseGPIO
  2516                           
  2517                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2518  0644  3000               	movlw	0
  2519  0645  3182  22CA  3186   	fcall	_initialiseADCPin
  2520                           
  2521                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  2522  0648  3002               	movlw	2
  2523  0649  3182  22CA  3186   	fcall	_initialiseADCPin
  2524                           
  2525                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2526  064C  0020               	movlb	0	; select bank0
  2527  064D  01B3               	clrf	initialiseGPIO@direction
  2528  064E  300B               	movlw	11
  2529  064F  3182  224E  3186   	fcall	_initialiseGPIO
  2530                           
  2531                           ;CurrentSensor.c: 23:     writeGPIO(9, 0);
  2532  0652  0020               	movlb	0	; select bank0
  2533  0653  01B3               	clrf	writeGPIO@writeValue
  2534  0654  3009               	movlw	9
  2535  0655  3183  2396  3186   	fcall	_writeGPIO
  2536  0658                     l378:
  2537  0658  0008               	return
  2538  0659                     __end_of_initialiseCurrentSensors:
  2539                           
  2540                           	psect	text6
  2541  0396                     __ptext6:	
  2542 ;; *************** function _writeGPIO *****************
  2543 ;; Defined at:
  2544 ;;		line 52 in file "GPIO.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  gpioNumber      1    wreg     const enum E2798
  2547 ;;  writeValue      1   19[BANK0 ] unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2550 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2551 ;;  portType        1   22[BANK0 ] unsigned char 
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, status,2, status,0
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2561 ;;      Params:         0       1       0       0       0       0
  2562 ;;      Locals:         0       3       0       0       0       0
  2563 ;;      Temps:          0       2       0       0       0       0
  2564 ;;      Totals:         0       6       0       0       0       0
  2565 ;;Total ram usage:        6 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 3
  2568 ;; This function calls:
  2569 ;;		Nothing
  2570 ;; This function is called by:
  2571 ;;		_initialiseCurrentSensors
  2572 ;;		_currentTripReset
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576  0396                     _writeGPIO:	
  2577                           ;psect for function _writeGPIO
  2578                           
  2579                           
  2580                           ;incstack = 0
  2581                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  2582                           ;writeGPIO@gpioNumber stored from wreg
  2583  0396  0020               	movlb	0	; select bank0
  2584  0397  00B7               	movwf	writeGPIO@gpioNumber
  2585  0398                     l1616:
  2586                           
  2587                           ;GPIO.c: 54:     uint8_t portType = 0;
  2588  0398  01B6               	clrf	writeGPIO@portType
  2589  0399                     l1618:
  2590                           
  2591                           ;GPIO.c: 55:     if(gpioNumber > 7){
  2592  0399  3008               	movlw	8
  2593  039A  0237               	subwf	writeGPIO@gpioNumber,w
  2594  039B  1C03               	skipc
  2595  039C  2B9E               	goto	u1031
  2596  039D  2B9F               	goto	u1030
  2597  039E                     u1031:
  2598  039E  2BA7               	goto	l1624
  2599  039F                     u1030:
  2600  039F                     l1620:
  2601                           
  2602                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  2603  039F  0837               	movf	writeGPIO@gpioNumber,w
  2604  03A0  3EF8               	addlw	248
  2605  03A1  00B4               	movwf	??_writeGPIO
  2606  03A2  0834               	movf	??_writeGPIO,w
  2607  03A3  00B8               	movwf	writeGPIO@portNumber
  2608  03A4                     l1622:
  2609                           
  2610                           ;GPIO.c: 57:         portType = 1;
  2611  03A4  01B6               	clrf	writeGPIO@portType
  2612  03A5  0AB6               	incf	writeGPIO@portType,f
  2613                           
  2614                           ;GPIO.c: 58:     }
  2615  03A6  2BAC               	goto	l1628
  2616  03A7                     l1624:
  2617                           
  2618                           ;GPIO.c: 60:         portNumber = gpioNumber;
  2619  03A7  0837               	movf	writeGPIO@gpioNumber,w
  2620  03A8  00B4               	movwf	??_writeGPIO
  2621  03A9  0834               	movf	??_writeGPIO,w
  2622  03AA  00B8               	movwf	writeGPIO@portNumber
  2623  03AB                     l1626:
  2624                           
  2625                           ;GPIO.c: 61:         portType = 0;
  2626  03AB  01B6               	clrf	writeGPIO@portType
  2627  03AC                     l1628:
  2628                           
  2629                           ;GPIO.c: 64:     if(portType == 0){
  2630  03AC  0836               	movf	writeGPIO@portType,w
  2631  03AD  1D03               	btfss	3,2
  2632  03AE  2BB0               	goto	u1041
  2633  03AF  2BB1               	goto	u1040
  2634  03B0                     u1041:
  2635  03B0  2BD1               	goto	l1636
  2636  03B1                     u1040:
  2637  03B1                     l1630:
  2638                           
  2639                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  2640  03B1  0833               	movf	writeGPIO@writeValue,w
  2641  03B2  1903               	btfsc	3,2
  2642  03B3  2BB5               	goto	u1051
  2643  03B4  2BB6               	goto	u1050
  2644  03B5                     u1051:
  2645  03B5  2BC3               	goto	l1634
  2646  03B6                     u1050:
  2647  03B6                     l1632:
  2648  03B6  3001               	movlw	1
  2649  03B7  00B4               	movwf	??_writeGPIO
  2650  03B8  0A38               	incf	writeGPIO@portNumber,w
  2651  03B9  2BBB               	goto	u1064
  2652  03BA                     u1065:
  2653  03BA  35B4               	lslf	??_writeGPIO,f
  2654  03BB                     u1064:
  2655  03BB  0B89               	decfsz	9,f
  2656  03BC  2BBA               	goto	u1065
  2657  03BD  0834               	movf	??_writeGPIO,w
  2658  03BE  00B5               	movwf	??_writeGPIO+1
  2659  03BF  0835               	movf	??_writeGPIO+1,w
  2660  03C0  0022               	movlb	2	; select bank2
  2661  03C1  048C               	iorwf	12,f	;volatile
  2662  03C2  2BF5               	goto	l284
  2663  03C3                     l1634:
  2664  03C3  3001               	movlw	1
  2665  03C4  00B4               	movwf	??_writeGPIO
  2666  03C5  0A38               	incf	writeGPIO@portNumber,w
  2667  03C6  2BC8               	goto	u1074
  2668  03C7                     u1075:
  2669  03C7  35B4               	lslf	??_writeGPIO,f
  2670  03C8                     u1074:
  2671  03C8  0B89               	decfsz	9,f
  2672  03C9  2BC7               	goto	u1075
  2673  03CA  0834               	movf	??_writeGPIO,w
  2674  03CB  3AFF               	xorlw	255
  2675  03CC  00B5               	movwf	??_writeGPIO+1
  2676  03CD  0835               	movf	??_writeGPIO+1,w
  2677  03CE  0022               	movlb	2	; select bank2
  2678  03CF  058C               	andwf	12,f	;volatile
  2679  03D0  2BF5               	goto	l284
  2680  03D1                     l1636:
  2681  03D1  0336               	decf	writeGPIO@portType,w
  2682  03D2  1D03               	btfss	3,2
  2683  03D3  2BD5               	goto	u1081
  2684  03D4  2BD6               	goto	u1080
  2685  03D5                     u1081:
  2686  03D5  2BF5               	goto	l284
  2687  03D6                     u1080:
  2688  03D6                     l1638:
  2689                           
  2690                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  2691  03D6  0833               	movf	writeGPIO@writeValue,w
  2692  03D7  1903               	btfsc	3,2
  2693  03D8  2BDA               	goto	u1091
  2694  03D9  2BDB               	goto	u1090
  2695  03DA                     u1091:
  2696  03DA  2BE8               	goto	l1642
  2697  03DB                     u1090:
  2698  03DB                     l1640:
  2699  03DB  3001               	movlw	1
  2700  03DC  00B4               	movwf	??_writeGPIO
  2701  03DD  0A38               	incf	writeGPIO@portNumber,w
  2702  03DE  2BE0               	goto	u1104
  2703  03DF                     u1105:
  2704  03DF  35B4               	lslf	??_writeGPIO,f
  2705  03E0                     u1104:
  2706  03E0  0B89               	decfsz	9,f
  2707  03E1  2BDF               	goto	u1105
  2708  03E2  0834               	movf	??_writeGPIO,w
  2709  03E3  00B5               	movwf	??_writeGPIO+1
  2710  03E4  0835               	movf	??_writeGPIO+1,w
  2711  03E5  0022               	movlb	2	; select bank2
  2712  03E6  048D               	iorwf	13,f	;volatile
  2713  03E7  2BF5               	goto	l284
  2714  03E8                     l1642:
  2715  03E8  3001               	movlw	1
  2716  03E9  00B4               	movwf	??_writeGPIO
  2717  03EA  0A38               	incf	writeGPIO@portNumber,w
  2718  03EB  2BED               	goto	u1114
  2719  03EC                     u1115:
  2720  03EC  35B4               	lslf	??_writeGPIO,f
  2721  03ED                     u1114:
  2722  03ED  0B89               	decfsz	9,f
  2723  03EE  2BEC               	goto	u1115
  2724  03EF  0834               	movf	??_writeGPIO,w
  2725  03F0  3AFF               	xorlw	255
  2726  03F1  00B5               	movwf	??_writeGPIO+1
  2727  03F2  0835               	movf	??_writeGPIO+1,w
  2728  03F3  0022               	movlb	2	; select bank2
  2729  03F4  058D               	andwf	13,f	;volatile
  2730  03F5                     l284:
  2731  03F5  0008               	return
  2732  03F6                     __end_of_writeGPIO:
  2733                           
  2734                           	psect	text7
  2735  024E                     __ptext7:	
  2736 ;; *************** function _initialiseGPIO *****************
  2737 ;; Defined at:
  2738 ;;		line 18 in file "GPIO.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  gpioNumber      1    wreg     const enum E2798
  2741 ;;  direction       1   19[BANK0 ] unsigned char 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2744 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2745 ;;  portType        1   22[BANK0 ] unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2755 ;;      Params:         0       1       0       0       0       0
  2756 ;;      Locals:         0       3       0       0       0       0
  2757 ;;      Temps:          0       2       0       0       0       0
  2758 ;;      Totals:         0       6       0       0       0       0
  2759 ;;Total ram usage:        6 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 3
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_main
  2766 ;;		_setupPWM
  2767 ;;		_initialiseCurrentSensors
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771  024E                     _initialiseGPIO:	
  2772                           ;psect for function _initialiseGPIO
  2773                           
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2777                           ;initialiseGPIO@gpioNumber stored from wreg
  2778  024E  0020               	movlb	0	; select bank0
  2779  024F  00B7               	movwf	initialiseGPIO@gpioNumber
  2780  0250                     l1644:
  2781                           
  2782                           ;GPIO.c: 20:     uint8_t portType = 0;
  2783  0250  01B6               	clrf	initialiseGPIO@portType
  2784  0251                     l1646:
  2785                           
  2786                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2787  0251  3008               	movlw	8
  2788  0252  0237               	subwf	initialiseGPIO@gpioNumber,w
  2789  0253  1C03               	skipc
  2790  0254  2A56               	goto	u1121
  2791  0255  2A57               	goto	u1120
  2792  0256                     u1121:
  2793  0256  2A5F               	goto	l1652
  2794  0257                     u1120:
  2795  0257                     l1648:
  2796                           
  2797                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2798  0257  0837               	movf	initialiseGPIO@gpioNumber,w
  2799  0258  3EF8               	addlw	248
  2800  0259  00B4               	movwf	??_initialiseGPIO
  2801  025A  0834               	movf	??_initialiseGPIO,w
  2802  025B  00B8               	movwf	initialiseGPIO@portNumber
  2803  025C                     l1650:
  2804                           
  2805                           ;GPIO.c: 23:         portType = 1;
  2806  025C  01B6               	clrf	initialiseGPIO@portType
  2807  025D  0AB6               	incf	initialiseGPIO@portType,f
  2808                           
  2809                           ;GPIO.c: 24:     }
  2810  025E  2A64               	goto	l1656
  2811  025F                     l1652:
  2812                           
  2813                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2814  025F  0837               	movf	initialiseGPIO@gpioNumber,w
  2815  0260  00B4               	movwf	??_initialiseGPIO
  2816  0261  0834               	movf	??_initialiseGPIO,w
  2817  0262  00B8               	movwf	initialiseGPIO@portNumber
  2818  0263                     l1654:
  2819                           
  2820                           ;GPIO.c: 27:         portType = 0;
  2821  0263  01B6               	clrf	initialiseGPIO@portType
  2822  0264                     l1656:
  2823                           
  2824                           ;GPIO.c: 30:     if(portType == 0){
  2825  0264  0836               	movf	initialiseGPIO@portType,w
  2826  0265  1D03               	btfss	3,2
  2827  0266  2A68               	goto	u1131
  2828  0267  2A69               	goto	u1130
  2829  0268                     u1131:
  2830  0268  2A97               	goto	l1664
  2831  0269                     u1130:
  2832  0269                     l1658:
  2833                           
  2834                           ;GPIO.c: 31:         if(direction){
  2835  0269  0833               	movf	initialiseGPIO@direction,w
  2836  026A  1903               	btfsc	3,2
  2837  026B  2A6D               	goto	u1141
  2838  026C  2A6E               	goto	u1140
  2839  026D                     u1141:
  2840  026D  2A89               	goto	l1662
  2841  026E                     u1140:
  2842  026E                     l1660:
  2843                           
  2844                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2845  026E  3001               	movlw	1
  2846  026F  00B4               	movwf	??_initialiseGPIO
  2847  0270  0A38               	incf	initialiseGPIO@portNumber,w
  2848  0271  2A73               	goto	u1154
  2849  0272                     u1155:
  2850  0272  35B4               	lslf	??_initialiseGPIO,f
  2851  0273                     u1154:
  2852  0273  0B89               	decfsz	9,f
  2853  0274  2A72               	goto	u1155
  2854  0275  0834               	movf	??_initialiseGPIO,w
  2855  0276  00B5               	movwf	??_initialiseGPIO+1
  2856  0277  0835               	movf	??_initialiseGPIO+1,w
  2857  0278  0021               	movlb	1	; select bank1
  2858  0279  048C               	iorwf	12,f	;volatile
  2859                           
  2860                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2861  027A  3001               	movlw	1
  2862  027B  0020               	movlb	0	; select bank0
  2863  027C  00B4               	movwf	??_initialiseGPIO
  2864  027D  0A38               	incf	initialiseGPIO@portNumber,w
  2865  027E  2A80               	goto	u1164
  2866  027F                     u1165:
  2867  027F  35B4               	lslf	??_initialiseGPIO,f
  2868  0280                     u1164:
  2869  0280  0B89               	decfsz	9,f
  2870  0281  2A7F               	goto	u1165
  2871  0282  0834               	movf	??_initialiseGPIO,w
  2872  0283  3AFF               	xorlw	255
  2873  0284  00B5               	movwf	??_initialiseGPIO+1
  2874  0285  0835               	movf	??_initialiseGPIO+1,w
  2875  0286  0023               	movlb	3	; select bank3
  2876  0287  058C               	andwf	12,f	;volatile
  2877                           
  2878                           ;GPIO.c: 34:         }
  2879  0288  2AC9               	goto	l270
  2880  0289                     l1662:
  2881  0289  3001               	movlw	1
  2882  028A  00B4               	movwf	??_initialiseGPIO
  2883  028B  0A38               	incf	initialiseGPIO@portNumber,w
  2884  028C  2A8E               	goto	u1174
  2885  028D                     u1175:
  2886  028D  35B4               	lslf	??_initialiseGPIO,f
  2887  028E                     u1174:
  2888  028E  0B89               	decfsz	9,f
  2889  028F  2A8D               	goto	u1175
  2890  0290  0834               	movf	??_initialiseGPIO,w
  2891  0291  3AFF               	xorlw	255
  2892  0292  00B5               	movwf	??_initialiseGPIO+1
  2893  0293  0835               	movf	??_initialiseGPIO+1,w
  2894  0294  0021               	movlb	1	; select bank1
  2895  0295  058C               	andwf	12,f	;volatile
  2896  0296  2AC9               	goto	l270
  2897  0297                     l1664:
  2898  0297  0336               	decf	initialiseGPIO@portType,w
  2899  0298  1D03               	btfss	3,2
  2900  0299  2A9B               	goto	u1181
  2901  029A  2A9C               	goto	u1180
  2902  029B                     u1181:
  2903  029B  2AC9               	goto	l270
  2904  029C                     u1180:
  2905  029C                     l1666:
  2906                           
  2907                           ;GPIO.c: 38:         if(direction){
  2908  029C  0833               	movf	initialiseGPIO@direction,w
  2909  029D  1903               	btfsc	3,2
  2910  029E  2AA0               	goto	u1191
  2911  029F  2AA1               	goto	u1190
  2912  02A0                     u1191:
  2913  02A0  2ABC               	goto	l1670
  2914  02A1                     u1190:
  2915  02A1                     l1668:
  2916                           
  2917                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2918  02A1  3001               	movlw	1
  2919  02A2  00B4               	movwf	??_initialiseGPIO
  2920  02A3  0A38               	incf	initialiseGPIO@portNumber,w
  2921  02A4  2AA6               	goto	u1204
  2922  02A5                     u1205:
  2923  02A5  35B4               	lslf	??_initialiseGPIO,f
  2924  02A6                     u1204:
  2925  02A6  0B89               	decfsz	9,f
  2926  02A7  2AA5               	goto	u1205
  2927  02A8  0834               	movf	??_initialiseGPIO,w
  2928  02A9  00B5               	movwf	??_initialiseGPIO+1
  2929  02AA  0835               	movf	??_initialiseGPIO+1,w
  2930  02AB  0021               	movlb	1	; select bank1
  2931  02AC  048D               	iorwf	13,f	;volatile
  2932                           
  2933                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2934  02AD  3001               	movlw	1
  2935  02AE  0020               	movlb	0	; select bank0
  2936  02AF  00B4               	movwf	??_initialiseGPIO
  2937  02B0  0A38               	incf	initialiseGPIO@portNumber,w
  2938  02B1  2AB3               	goto	u1214
  2939  02B2                     u1215:
  2940  02B2  35B4               	lslf	??_initialiseGPIO,f
  2941  02B3                     u1214:
  2942  02B3  0B89               	decfsz	9,f
  2943  02B4  2AB2               	goto	u1215
  2944  02B5  0834               	movf	??_initialiseGPIO,w
  2945  02B6  3AFF               	xorlw	255
  2946  02B7  00B5               	movwf	??_initialiseGPIO+1
  2947  02B8  0835               	movf	??_initialiseGPIO+1,w
  2948  02B9  0023               	movlb	3	; select bank3
  2949  02BA  058D               	andwf	13,f	;volatile
  2950                           
  2951                           ;GPIO.c: 41:         }
  2952  02BB  2AC9               	goto	l270
  2953  02BC                     l1670:
  2954  02BC  3001               	movlw	1
  2955  02BD  00B4               	movwf	??_initialiseGPIO
  2956  02BE  0A38               	incf	initialiseGPIO@portNumber,w
  2957  02BF  2AC1               	goto	u1224
  2958  02C0                     u1225:
  2959  02C0  35B4               	lslf	??_initialiseGPIO,f
  2960  02C1                     u1224:
  2961  02C1  0B89               	decfsz	9,f
  2962  02C2  2AC0               	goto	u1225
  2963  02C3  0834               	movf	??_initialiseGPIO,w
  2964  02C4  3AFF               	xorlw	255
  2965  02C5  00B5               	movwf	??_initialiseGPIO+1
  2966  02C6  0835               	movf	??_initialiseGPIO+1,w
  2967  02C7  0021               	movlb	1	; select bank1
  2968  02C8  058D               	andwf	13,f	;volatile
  2969  02C9                     l270:
  2970  02C9  0008               	return
  2971  02CA                     __end_of_initialiseGPIO:
  2972                           
  2973                           	psect	text8
  2974  02CA                     __ptext8:	
  2975 ;; *************** function _initialiseADCPin *****************
  2976 ;; Defined at:
  2977 ;;		line 37 in file "ADC.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  gpioNumber      1    wreg     const enum E2798
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2982 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2983 ;;  portType        1   22[BANK0 ] unsigned char 
  2984 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, status,2, status,0
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : 0/0
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2994 ;;      Params:         0       0       0       0       0       0
  2995 ;;      Locals:         0       4       0       0       0       0
  2996 ;;      Temps:          0       2       0       0       0       0
  2997 ;;      Totals:         0       6       0       0       0       0
  2998 ;;Total ram usage:        6 bytes
  2999 ;; Hardware stack levels used: 1
  3000 ;; Hardware stack levels required when called: 3
  3001 ;; This function calls:
  3002 ;;		Nothing
  3003 ;; This function is called by:
  3004 ;;		_initialisePotentiometers
  3005 ;;		_initialiseCurrentSensors
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009  02CA                     _initialiseADCPin:	
  3010                           ;psect for function _initialiseADCPin
  3011                           
  3012                           
  3013                           ;incstack = 0
  3014                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3015                           ;initialiseADCPin@gpioNumber stored from wreg
  3016  02CA  0020               	movlb	0	; select bank0
  3017  02CB  00B8               	movwf	initialiseADCPin@gpioNumber
  3018  02CC                     l1672:
  3019                           
  3020                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3021  02CC  01B7               	clrf	initialiseADCPin@portNumber
  3022                           
  3023                           ;ADC.c: 40:     uint8_t portType = 0;
  3024  02CD  01B6               	clrf	initialiseADCPin@portType
  3025                           
  3026                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3027  02CE  01B5               	clrf	initialiseADCPin@gpioValid
  3028  02CF                     l1674:
  3029                           
  3030                           ;ADC.c: 43:     if(gpioNumber < 4){
  3031  02CF  3004               	movlw	4
  3032  02D0  0238               	subwf	initialiseADCPin@gpioNumber,w
  3033  02D1  1803               	skipnc
  3034  02D2  2AD4               	goto	u1231
  3035  02D3  2AD5               	goto	u1230
  3036  02D4                     u1231:
  3037  02D4  2ADC               	goto	l1682
  3038  02D5                     u1230:
  3039  02D5                     l1676:
  3040                           
  3041                           ;ADC.c: 44:         portNumber = gpioNumber;
  3042  02D5  0838               	movf	initialiseADCPin@gpioNumber,w
  3043  02D6  00B3               	movwf	??_initialiseADCPin
  3044  02D7  0833               	movf	??_initialiseADCPin,w
  3045  02D8  00B7               	movwf	initialiseADCPin@portNumber
  3046  02D9                     l1678:
  3047                           
  3048                           ;ADC.c: 45:         portType = 0;
  3049  02D9  01B6               	clrf	initialiseADCPin@portType
  3050  02DA                     l1680:
  3051                           
  3052                           ;ADC.c: 46:         gpioValid = 1;
  3053  02DA  01B5               	clrf	initialiseADCPin@gpioValid
  3054  02DB  0AB5               	incf	initialiseADCPin@gpioValid,f
  3055  02DC                     l1682:
  3056                           
  3057                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3058  02DC  3009               	movlw	9
  3059  02DD  0238               	subwf	initialiseADCPin@gpioNumber,w
  3060  02DE  1C03               	skipc
  3061  02DF  2AE1               	goto	u1241
  3062  02E0  2AE2               	goto	u1240
  3063  02E1                     u1241:
  3064  02E1  2AF1               	goto	l204
  3065  02E2                     u1240:
  3066  02E2                     l1684:
  3067  02E2  3010               	movlw	16
  3068  02E3  0238               	subwf	initialiseADCPin@gpioNumber,w
  3069  02E4  1803               	skipnc
  3070  02E5  2AE7               	goto	u1251
  3071  02E6  2AE8               	goto	u1250
  3072  02E7                     u1251:
  3073  02E7  2AF1               	goto	l204
  3074  02E8                     u1250:
  3075  02E8                     l1686:
  3076                           
  3077                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3078  02E8  0838               	movf	initialiseADCPin@gpioNumber,w
  3079  02E9  3EF8               	addlw	248
  3080  02EA  00B3               	movwf	??_initialiseADCPin
  3081  02EB  0833               	movf	??_initialiseADCPin,w
  3082  02EC  00B7               	movwf	initialiseADCPin@portNumber
  3083  02ED                     l1688:
  3084                           
  3085                           ;ADC.c: 51:         portType = 1;
  3086  02ED  01B6               	clrf	initialiseADCPin@portType
  3087  02EE  0AB6               	incf	initialiseADCPin@portType,f
  3088  02EF                     l1690:
  3089                           
  3090                           ;ADC.c: 52:         gpioValid = 1;
  3091  02EF  01B5               	clrf	initialiseADCPin@gpioValid
  3092  02F0  0AB5               	incf	initialiseADCPin@gpioValid,f
  3093  02F1                     l204:	
  3094                           ;ADC.c: 53:     }
  3095                           
  3096                           
  3097                           ;ADC.c: 55:     if(gpioValid){
  3098  02F1  0835               	movf	initialiseADCPin@gpioValid,w
  3099  02F2  1903               	btfsc	3,2
  3100  02F3  2AF5               	goto	u1261
  3101  02F4  2AF6               	goto	u1260
  3102  02F5                     u1261:
  3103  02F5  2B33               	goto	l209
  3104  02F6                     u1260:
  3105  02F6                     l1692:
  3106                           
  3107                           ;ADC.c: 56:         if(portType == 0){
  3108  02F6  0836               	movf	initialiseADCPin@portType,w
  3109  02F7  1D03               	btfss	3,2
  3110  02F8  2AFA               	goto	u1271
  3111  02F9  2AFB               	goto	u1270
  3112  02FA                     u1271:
  3113  02FA  2B15               	goto	l1696
  3114  02FB                     u1270:
  3115  02FB                     l1694:
  3116                           
  3117                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3118  02FB  3001               	movlw	1
  3119  02FC  00B3               	movwf	??_initialiseADCPin
  3120  02FD  0A37               	incf	initialiseADCPin@portNumber,w
  3121  02FE  2B00               	goto	u1284
  3122  02FF                     u1285:
  3123  02FF  35B3               	lslf	??_initialiseADCPin,f
  3124  0300                     u1284:
  3125  0300  0B89               	decfsz	9,f
  3126  0301  2AFF               	goto	u1285
  3127  0302  0833               	movf	??_initialiseADCPin,w
  3128  0303  00B4               	movwf	??_initialiseADCPin+1
  3129  0304  0834               	movf	??_initialiseADCPin+1,w
  3130  0305  0021               	movlb	1	; select bank1
  3131  0306  048C               	iorwf	12,f	;volatile
  3132                           
  3133                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3134  0307  3001               	movlw	1
  3135  0308  0020               	movlb	0	; select bank0
  3136  0309  00B3               	movwf	??_initialiseADCPin
  3137  030A  0A37               	incf	initialiseADCPin@portNumber,w
  3138  030B  2B0D               	goto	u1294
  3139  030C                     u1295:
  3140  030C  35B3               	lslf	??_initialiseADCPin,f
  3141  030D                     u1294:
  3142  030D  0B89               	decfsz	9,f
  3143  030E  2B0C               	goto	u1295
  3144  030F  0833               	movf	??_initialiseADCPin,w
  3145  0310  00B4               	movwf	??_initialiseADCPin+1
  3146  0311  0834               	movf	??_initialiseADCPin+1,w
  3147  0312  0023               	movlb	3	; select bank3
  3148  0313  048C               	iorwf	12,f	;volatile
  3149                           
  3150                           ;ADC.c: 59:         }
  3151  0314  2B33               	goto	l209
  3152  0315                     l1696:
  3153  0315  0336               	decf	initialiseADCPin@portType,w
  3154  0316  1D03               	btfss	3,2
  3155  0317  2B19               	goto	u1301
  3156  0318  2B1A               	goto	u1300
  3157  0319                     u1301:
  3158  0319  2B33               	goto	l209
  3159  031A                     u1300:
  3160  031A                     l1698:
  3161                           
  3162                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3163  031A  3001               	movlw	1
  3164  031B  00B3               	movwf	??_initialiseADCPin
  3165  031C  0A37               	incf	initialiseADCPin@portNumber,w
  3166  031D  2B1F               	goto	u1314
  3167  031E                     u1315:
  3168  031E  35B3               	lslf	??_initialiseADCPin,f
  3169  031F                     u1314:
  3170  031F  0B89               	decfsz	9,f
  3171  0320  2B1E               	goto	u1315
  3172  0321  0833               	movf	??_initialiseADCPin,w
  3173  0322  00B4               	movwf	??_initialiseADCPin+1
  3174  0323  0834               	movf	??_initialiseADCPin+1,w
  3175  0324  0021               	movlb	1	; select bank1
  3176  0325  048D               	iorwf	13,f	;volatile
  3177                           
  3178                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3179  0326  3001               	movlw	1
  3180  0327  0020               	movlb	0	; select bank0
  3181  0328  00B3               	movwf	??_initialiseADCPin
  3182  0329  0A37               	incf	initialiseADCPin@portNumber,w
  3183  032A  2B2C               	goto	u1324
  3184  032B                     u1325:
  3185  032B  35B3               	lslf	??_initialiseADCPin,f
  3186  032C                     u1324:
  3187  032C  0B89               	decfsz	9,f
  3188  032D  2B2B               	goto	u1325
  3189  032E  0833               	movf	??_initialiseADCPin,w
  3190  032F  00B4               	movwf	??_initialiseADCPin+1
  3191  0330  0834               	movf	??_initialiseADCPin+1,w
  3192  0331  0023               	movlb	3	; select bank3
  3193  0332  048D               	iorwf	13,f	;volatile
  3194  0333                     l209:
  3195  0333  0008               	return
  3196  0334                     __end_of_initialiseADCPin:
  3197                           
  3198                           	psect	text9
  3199  06EA                     __ptext9:	
  3200 ;; *************** function _initialiseADCModule *****************
  3201 ;; Defined at:
  3202 ;;		line 14 in file "ADC.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3216 ;;      Params:         0       0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0       0
  3218 ;;      Temps:          0       0       0       0       0       0
  3219 ;;      Totals:         0       0       0       0       0       0
  3220 ;;Total ram usage:        0 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 3
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_main
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230  06EA                     _initialiseADCModule:	
  3231                           ;psect for function _initialiseADCModule
  3232                           
  3233  06EA                     l2034:	
  3234                           ;incstack = 0
  3235                           ; Regs used in _initialiseADCModule: [wreg]
  3236                           
  3237                           
  3238                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3239  06EA  3001               	movlw	1
  3240  06EB  0021               	movlb	1	; select bank1
  3241  06EC  009D               	movwf	29	;volatile
  3242                           
  3243                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3244  06ED  3080               	movlw	128
  3245  06EE  009E               	movwf	30	;volatile
  3246  06EF                     l200:
  3247  06EF  0008               	return
  3248  06F0                     __end_of_initialiseADCModule:
  3249                           
  3250                           	psect	intentry
  3251  0004                     __pintentry:	
  3252 ;; *************** function _Tick980Hz *****************
  3253 ;; Defined at:
  3254 ;;		line 41 in file "main.c"
  3255 ;; Parameters:    Size  Location     Type
  3256 ;;		None
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;		None
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3268 ;;      Params:         0       0       0       0       0       0
  3269 ;;      Locals:         0       0       0       0       0       0
  3270 ;;      Temps:          0       1       0       0       0       0
  3271 ;;      Totals:         0       1       0       0       0       0
  3272 ;;Total ram usage:        1 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 2
  3275 ;; This function calls:
  3276 ;;		_currentTripRead
  3277 ;;		_readFilteredDutyPot
  3278 ;;		_readFilteredFreqPot
  3279 ;;		_runPotScaling
  3280 ;;		_setPWMDutyandPeriod
  3281 ;;		i1_writeGPIO
  3282 ;; This function is called by:
  3283 ;;		Interrupt level 1
  3284 ;; This function uses a non-reentrant model
  3285 ;;
  3286                           
  3287  0004                     _Tick980Hz:
  3288                           
  3289                           ;incstack = 0
  3290  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3291                           
  3292                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3293  0005  3180               	pagesel	$
  3294  0006                     i1l2068:
  3295                           
  3296                           ;main.c: 52:         if(currentTripRead() == 1){
  3297  0006  3185  25DE  3180   	fcall	_currentTripRead
  3298  0009  3A01               	xorlw	1
  3299  000A  1D03               	skipz
  3300  000B  280D               	goto	u187_21
  3301  000C  280E               	goto	u187_20
  3302  000D                     u187_21:
  3303  000D  281A               	goto	i1l2074
  3304  000E                     u187_20:
  3305  000E                     i1l2070:
  3306                           
  3307                           ;main.c: 53:             emergencyStop = 1;
  3308  000E  3001               	movlw	1
  3309  000F  0020               	movlb	0	; select bank0
  3310  0010  00B2               	movwf	??_Tick980Hz
  3311  0011  0832               	movf	??_Tick980Hz,w
  3312  0012  00CF               	movwf	_emergencyStop	;volatile
  3313  0013                     i1l2072:
  3314                           
  3315                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3316  0013  3000               	movlw	0
  3317  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3318  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3319  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3320  0017  3186  260B  3180   	fcall	_setPWMDutyandPeriod
  3321  001A                     i1l2074:
  3322                           
  3323                           ;main.c: 57:         if(timerSlotHalf == 0){
  3324  001A  0020               	movlb	0	; select bank0
  3325  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3326  001C  1D03               	btfss	3,2
  3327  001D  281F               	goto	u188_21
  3328  001E  2820               	goto	u188_20
  3329  001F                     u188_21:
  3330  001F  2825               	goto	i1l2078
  3331  0020                     u188_20:
  3332  0020                     i1l2076:
  3333                           
  3334                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3335  0020  01F0               	clrf	i1writeGPIO@writeValue
  3336  0021  300C               	movlw	12
  3337  0022  3183  23F6  3180   	fcall	i1_writeGPIO
  3338  0025                     i1l2078:
  3339                           
  3340                           ;main.c: 61:         if(timerSlotHalf == 1){
  3341  0025  0020               	movlb	0	; select bank0
  3342  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3343  0027  1D03               	btfss	3,2
  3344  0028  282A               	goto	u189_21
  3345  0029  282B               	goto	u189_20
  3346  002A                     u189_21:
  3347  002A  2860               	goto	i1l82
  3348  002B                     u189_20:
  3349  002B                     i1l2080:
  3350                           
  3351                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3352  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3353  002C  1D03               	btfss	3,2
  3354  002D  282F               	goto	u190_21
  3355  002E  2830               	goto	u190_20
  3356  002F                     u190_21:
  3357  002F  2855               	goto	i1l2094
  3358  0030                     u190_20:
  3359  0030                     i1l2082:
  3360                           
  3361                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3362  0030  01F0               	clrf	i1writeGPIO@writeValue
  3363  0031  0AF0               	incf	i1writeGPIO@writeValue,f
  3364  0032  300C               	movlw	12
  3365  0033  3183  23F6  3180   	fcall	i1_writeGPIO
  3366                           
  3367                           ;main.c: 68:                 writeGPIO(9, 1);
  3368  0036  01F0               	clrf	i1writeGPIO@writeValue
  3369  0037  0AF0               	incf	i1writeGPIO@writeValue,f
  3370  0038  3009               	movlw	9
  3371  0039  3183  23F6  3180   	fcall	i1_writeGPIO
  3372  003C                     i1l2084:
  3373                           
  3374                           ;main.c: 70:                 filteredDutyPot = readFilteredDutyPot();
  3375  003C  3185  250B  3180   	fcall	_readFilteredDutyPot
  3376  003F  087C               	movf	?_readFilteredDutyPot+1,w
  3377  0040  0020               	movlb	0	; select bank0
  3378  0041  00C2               	movwf	_filteredDutyPot+1
  3379  0042  087B               	movf	?_readFilteredDutyPot,w
  3380  0043  00C1               	movwf	_filteredDutyPot
  3381  0044                     i1l2086:
  3382                           
  3383                           ;main.c: 71:                 filteredFreqPot = readFilteredFreqPot();
  3384  0044  3184  24B0  3180   	fcall	_readFilteredFreqPot
  3385  0047  087C               	movf	?_readFilteredFreqPot+1,w
  3386  0048  0020               	movlb	0	; select bank0
  3387  0049  00C4               	movwf	_filteredFreqPot+1
  3388  004A  087B               	movf	?_readFilteredFreqPot,w
  3389  004B  00C3               	movwf	_filteredFreqPot
  3390  004C                     i1l2088:
  3391                           
  3392                           ;main.c: 73:                 if(~emergencyStop){
  3393  004C  034F               	decf	_emergencyStop,w	;volatile
  3394  004D  1903               	btfsc	3,2
  3395  004E  2850               	goto	u191_21
  3396  004F  2851               	goto	u191_20
  3397  0050                     u191_21:
  3398  0050  2855               	goto	i1l2092
  3399  0051                     u191_20:
  3400  0051                     i1l2090:
  3401                           
  3402                           ;main.c: 74:                     runPotScaling();
  3403  0051  3180  2090  3180   	fcall	_runPotScaling
  3404  0054  2855               	goto	i1l2094
  3405  0055                     i1l2092:
  3406  0055                     i1l2094:
  3407                           
  3408                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  3409  0055  0020               	movlb	0	; select bank0
  3410  0056  0350               	decf	_timerSlotQuarter,w	;volatile
  3411  0057  1D03               	btfss	3,2
  3412  0058  285A               	goto	u192_21
  3413  0059  285C               	goto	u192_20
  3414  005A                     u192_21:
  3415  005A  3001               	movlw	1
  3416  005B  285D               	goto	u193_20
  3417  005C                     u192_20:
  3418  005C  3000               	movlw	0
  3419  005D                     u193_20:
  3420  005D  00B2               	movwf	??_Tick980Hz
  3421  005E  0832               	movf	??_Tick980Hz,w
  3422  005F  00D0               	movwf	_timerSlotQuarter	;volatile
  3423  0060                     i1l82:	
  3424                           ;main.c: 83:         }
  3425                           
  3426                           
  3427                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  3428  0060  0351               	decf	_timerSlotHalf,w	;volatile
  3429  0061  1D03               	btfss	3,2
  3430  0062  2864               	goto	u194_21
  3431  0063  2866               	goto	u194_20
  3432  0064                     u194_21:
  3433  0064  3001               	movlw	1
  3434  0065  2867               	goto	u195_20
  3435  0066                     u194_20:
  3436  0066  3000               	movlw	0
  3437  0067                     u195_20:
  3438  0067  00B2               	movwf	??_Tick980Hz
  3439  0068  0832               	movf	??_Tick980Hz,w
  3440  0069  00D1               	movwf	_timerSlotHalf	;volatile
  3441  006A                     i1l2096:
  3442                           
  3443                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  3444  006A  110B               	bcf	11,2	;volatile
  3445  006B                     i1l2098:
  3446                           
  3447                           ;main.c: 91:         latestIL1 = readILCurrentADCRaw;
  3448  006B  3000               	movlw	0
  3449  006C  00C9               	movwf	_latestIL1	;volatile
  3450  006D  3000               	movlw	0
  3451  006E  00CA               	movwf	_latestIL1+1	;volatile
  3452  006F                     i1l2100:
  3453                           
  3454                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  3455  006F  1111               	bcf	17,2	;volatile
  3456  0070                     i1l87:
  3457  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3458  0071  0009               	retfie
  3459  0072                     __end_of_Tick980Hz:
  3460                           
  3461                           	psect	text11
  3462  03F6                     __ptext11:	
  3463 ;; *************** function i1_writeGPIO *****************
  3464 ;; Defined at:
  3465 ;;		line 52 in file "GPIO.c"
  3466 ;; Parameters:    Size  Location     Type
  3467 ;;  gpioNumber      1    wreg     const enum E2798
  3468 ;;  writeValue      1    0[COMMON] unsigned char 
  3469 ;; Auto vars:     Size  Location     Type
  3470 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3471 ;;  portNumber      1    5[COMMON] unsigned char 
  3472 ;;  portType        1    3[COMMON] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  1    wreg      void 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3482 ;;      Params:         1       0       0       0       0       0
  3483 ;;      Locals:         3       0       0       0       0       0
  3484 ;;      Temps:          2       0       0       0       0       0
  3485 ;;      Totals:         6       0       0       0       0       0
  3486 ;;Total ram usage:        6 bytes
  3487 ;; Hardware stack levels used: 1
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_Tick980Hz
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495  03F6                     i1_writeGPIO:	
  3496                           ;psect for function i1_writeGPIO
  3497                           
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3501                           ;i1writeGPIO@gpioNumber stored from wreg
  3502  03F6  00F4               	movwf	i1writeGPIO@gpioNumber
  3503  03F7                     i1l2040:
  3504                           
  3505                           ;GPIO.c: 54:     uint8_t portType = 0;
  3506  03F7  01F3               	clrf	i1writeGPIO@portType
  3507  03F8                     i1l2042:
  3508                           
  3509                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3510  03F8  3008               	movlw	8
  3511  03F9  0274               	subwf	i1writeGPIO@gpioNumber,w
  3512  03FA  1C03               	skipc
  3513  03FB  2BFD               	goto	u178_21
  3514  03FC  2BFE               	goto	u178_20
  3515  03FD                     u178_21:
  3516  03FD  2C06               	goto	i1l2048
  3517  03FE                     u178_20:
  3518  03FE                     i1l2044:
  3519                           
  3520                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3521  03FE  0874               	movf	i1writeGPIO@gpioNumber,w
  3522  03FF  3EF8               	addlw	248
  3523  0400  00F1               	movwf	??i1_writeGPIO
  3524  0401  0871               	movf	??i1_writeGPIO,w
  3525  0402  00F5               	movwf	i1writeGPIO@portNumber
  3526  0403                     i1l2046:
  3527                           
  3528                           ;GPIO.c: 57:         portType = 1;
  3529  0403  01F3               	clrf	i1writeGPIO@portType
  3530  0404  0AF3               	incf	i1writeGPIO@portType,f
  3531                           
  3532                           ;GPIO.c: 58:     }
  3533  0405  2C0B               	goto	i1l2052
  3534  0406                     i1l2048:
  3535                           
  3536                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3537  0406  0874               	movf	i1writeGPIO@gpioNumber,w
  3538  0407  00F1               	movwf	??i1_writeGPIO
  3539  0408  0871               	movf	??i1_writeGPIO,w
  3540  0409  00F5               	movwf	i1writeGPIO@portNumber
  3541  040A                     i1l2050:
  3542                           
  3543                           ;GPIO.c: 61:         portType = 0;
  3544  040A  01F3               	clrf	i1writeGPIO@portType
  3545  040B                     i1l2052:
  3546                           
  3547                           ;GPIO.c: 64:     if(portType == 0){
  3548  040B  0873               	movf	i1writeGPIO@portType,w
  3549  040C  1D03               	btfss	3,2
  3550  040D  2C0F               	goto	u179_21
  3551  040E  2C10               	goto	u179_20
  3552  040F                     u179_21:
  3553  040F  2C30               	goto	i1l2060
  3554  0410                     u179_20:
  3555  0410                     i1l2054:
  3556                           
  3557                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3558  0410  0870               	movf	i1writeGPIO@writeValue,w
  3559  0411  1903               	btfsc	3,2
  3560  0412  2C14               	goto	u180_21
  3561  0413  2C15               	goto	u180_20
  3562  0414                     u180_21:
  3563  0414  2C22               	goto	i1l2058
  3564  0415                     u180_20:
  3565  0415                     i1l2056:
  3566  0415  3001               	movlw	1
  3567  0416  00F1               	movwf	??i1_writeGPIO
  3568  0417  0A75               	incf	i1writeGPIO@portNumber,w
  3569  0418  2C1A               	goto	u181_24
  3570  0419                     u181_25:
  3571  0419  35F1               	lslf	??i1_writeGPIO,f
  3572  041A                     u181_24:
  3573  041A  0B89               	decfsz	9,f
  3574  041B  2C19               	goto	u181_25
  3575  041C  0871               	movf	??i1_writeGPIO,w
  3576  041D  00F2               	movwf	??i1_writeGPIO+1
  3577  041E  0872               	movf	??i1_writeGPIO+1,w
  3578  041F  0022               	movlb	2	; select bank2
  3579  0420  048C               	iorwf	12,f	;volatile
  3580  0421  2C54               	goto	i1l284
  3581  0422                     i1l2058:
  3582  0422  3001               	movlw	1
  3583  0423  00F1               	movwf	??i1_writeGPIO
  3584  0424  0A75               	incf	i1writeGPIO@portNumber,w
  3585  0425  2C27               	goto	u182_24
  3586  0426                     u182_25:
  3587  0426  35F1               	lslf	??i1_writeGPIO,f
  3588  0427                     u182_24:
  3589  0427  0B89               	decfsz	9,f
  3590  0428  2C26               	goto	u182_25
  3591  0429  0871               	movf	??i1_writeGPIO,w
  3592  042A  3AFF               	xorlw	255
  3593  042B  00F2               	movwf	??i1_writeGPIO+1
  3594  042C  0872               	movf	??i1_writeGPIO+1,w
  3595  042D  0022               	movlb	2	; select bank2
  3596  042E  058C               	andwf	12,f	;volatile
  3597  042F  2C54               	goto	i1l284
  3598  0430                     i1l2060:
  3599  0430  0373               	decf	i1writeGPIO@portType,w
  3600  0431  1D03               	btfss	3,2
  3601  0432  2C34               	goto	u183_21
  3602  0433  2C35               	goto	u183_20
  3603  0434                     u183_21:
  3604  0434  2C54               	goto	i1l284
  3605  0435                     u183_20:
  3606  0435                     i1l2062:
  3607                           
  3608                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3609  0435  0870               	movf	i1writeGPIO@writeValue,w
  3610  0436  1903               	btfsc	3,2
  3611  0437  2C39               	goto	u184_21
  3612  0438  2C3A               	goto	u184_20
  3613  0439                     u184_21:
  3614  0439  2C47               	goto	i1l2066
  3615  043A                     u184_20:
  3616  043A                     i1l2064:
  3617  043A  3001               	movlw	1
  3618  043B  00F1               	movwf	??i1_writeGPIO
  3619  043C  0A75               	incf	i1writeGPIO@portNumber,w
  3620  043D  2C3F               	goto	u185_24
  3621  043E                     u185_25:
  3622  043E  35F1               	lslf	??i1_writeGPIO,f
  3623  043F                     u185_24:
  3624  043F  0B89               	decfsz	9,f
  3625  0440  2C3E               	goto	u185_25
  3626  0441  0871               	movf	??i1_writeGPIO,w
  3627  0442  00F2               	movwf	??i1_writeGPIO+1
  3628  0443  0872               	movf	??i1_writeGPIO+1,w
  3629  0444  0022               	movlb	2	; select bank2
  3630  0445  048D               	iorwf	13,f	;volatile
  3631  0446  2C54               	goto	i1l284
  3632  0447                     i1l2066:
  3633  0447  3001               	movlw	1
  3634  0448  00F1               	movwf	??i1_writeGPIO
  3635  0449  0A75               	incf	i1writeGPIO@portNumber,w
  3636  044A  2C4C               	goto	u186_24
  3637  044B                     u186_25:
  3638  044B  35F1               	lslf	??i1_writeGPIO,f
  3639  044C                     u186_24:
  3640  044C  0B89               	decfsz	9,f
  3641  044D  2C4B               	goto	u186_25
  3642  044E  0871               	movf	??i1_writeGPIO,w
  3643  044F  3AFF               	xorlw	255
  3644  0450  00F2               	movwf	??i1_writeGPIO+1
  3645  0451  0872               	movf	??i1_writeGPIO+1,w
  3646  0452  0022               	movlb	2	; select bank2
  3647  0453  058D               	andwf	13,f	;volatile
  3648  0454                     i1l284:
  3649  0454  0008               	return
  3650  0455                     __end_ofi1_writeGPIO:
  3651                           
  3652                           	psect	text12
  3653  0090                     __ptext12:	
  3654 ;; *************** function _runPotScaling *****************
  3655 ;; Defined at:
  3656 ;;		line 55 in file "Potentiometer.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3661 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg, status,2, status,0, pclath, cstack
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3671 ;;      Params:         0       0       0       0       0       0
  3672 ;;      Locals:         0       4       0       0       0       0
  3673 ;;      Temps:          0       8       0       0       0       0
  3674 ;;      Totals:         0      12       0       0       0       0
  3675 ;;Total ram usage:       12 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 1
  3678 ;; This function calls:
  3679 ;;		___lldiv
  3680 ;;		___lmul
  3681 ;;		___wmul
  3682 ;;		_setPWMDutyandPeriod
  3683 ;; This function is called by:
  3684 ;;		_Tick980Hz
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688  0090                     _runPotScaling:	
  3689                           ;psect for function _runPotScaling
  3690                           
  3691  0090                     i1l1914:	
  3692                           ;incstack = 0
  3693                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3694                           
  3695                           
  3696                           ;Potentiometer.c: 57:     potSetCount++;
  3697  0090  3001               	movlw	1
  3698  0091  0020               	movlb	0	; select bank0
  3699  0092  00A6               	movwf	??_runPotScaling
  3700  0093  0826               	movf	??_runPotScaling,w
  3701  0094  07D2               	addwf	_potSetCount,f
  3702                           
  3703                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3704  0095  3020               	movlw	32
  3705  0096  0652               	xorwf	_potSetCount,w
  3706  0097  1D03               	btfss	3,2
  3707  0098  289A               	goto	u173_21
  3708  0099  289B               	goto	u173_20
  3709  009A                     u173_21:
  3710  009A  2972               	goto	i1l341
  3711  009B                     u173_20:
  3712  009B                     i1l1916:
  3713                           
  3714                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3715  009B  0843               	movf	_filteredFreqPot,w
  3716  009C  3ED3               	addlw	211
  3717  009D  00F0               	movwf	___lmul@multiplier
  3718  009E  30FF               	movlw	255
  3719  009F  3D44               	addwfc	_filteredFreqPot+1,w
  3720  00A0  00F1               	movwf	___lmul@multiplier+1
  3721  00A1  01F2               	clrf	___lmul@multiplier+2
  3722  00A2  01F3               	clrf	___lmul@multiplier+3
  3723  00A3  3000               	movlw	0
  3724  00A4  00F7               	movwf	___lmul@multiplicand+3
  3725  00A5  3000               	movlw	0
  3726  00A6  00F6               	movwf	___lmul@multiplicand+2
  3727  00A7  3000               	movlw	0
  3728  00A8  00F5               	movwf	___lmul@multiplicand+1
  3729  00A9  3090               	movlw	144
  3730  00AA  00F4               	movwf	___lmul@multiplicand
  3731  00AB  3185  25AB  3180   	fcall	___lmul
  3732  00AE  0870               	movf	?___lmul,w
  3733  00AF  0020               	movlb	0	; select bank0
  3734  00B0  00A6               	movwf	??_runPotScaling
  3735  00B1  0871               	movf	?___lmul+1,w
  3736  00B2  00A7               	movwf	??_runPotScaling+1
  3737  00B3  0872               	movf	?___lmul+2,w
  3738  00B4  00A8               	movwf	??_runPotScaling+2
  3739  00B5  0873               	movf	?___lmul+3,w
  3740  00B6  00A9               	movwf	??_runPotScaling+3
  3741  00B7  300A               	movlw	10
  3742  00B8                     u174_25:
  3743  00B8  36A9               	lsrf	??_runPotScaling+3,f
  3744  00B9  0CA8               	rrf	??_runPotScaling+2,f
  3745  00BA  0CA7               	rrf	??_runPotScaling+1,f
  3746  00BB  0CA6               	rrf	??_runPotScaling,f
  3747  00BC                     u174_20:
  3748  00BC  0B89               	decfsz	9,f
  3749  00BD  28B8               	goto	u174_25
  3750  00BE  0826               	movf	??_runPotScaling,w
  3751  00BF  3E0F               	addlw	15
  3752  00C0  00AA               	movwf	??_runPotScaling+4
  3753  00C1  082A               	movf	??_runPotScaling+4,w
  3754  00C2  00D6               	movwf	_setPeriod
  3755                           
  3756                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3757  00C3  0841               	movf	_filteredDutyPot,w
  3758  00C4  3ED3               	addlw	211
  3759  00C5  00F0               	movwf	___lmul@multiplier
  3760  00C6  30FF               	movlw	255
  3761  00C7  3D42               	addwfc	_filteredDutyPot+1,w
  3762  00C8  00F1               	movwf	___lmul@multiplier+1
  3763  00C9  01F2               	clrf	___lmul@multiplier+2
  3764  00CA  01F3               	clrf	___lmul@multiplier+3
  3765  00CB  0856               	movf	_setPeriod,w
  3766  00CC  00A6               	movwf	??_runPotScaling
  3767  00CD  01A7               	clrf	??_runPotScaling+1
  3768  00CE  01A8               	clrf	??_runPotScaling+2
  3769  00CF  01A9               	clrf	??_runPotScaling+3
  3770  00D0  0829               	movf	??_runPotScaling+3,w
  3771  00D1  00F7               	movwf	___lmul@multiplicand+3
  3772  00D2  0828               	movf	??_runPotScaling+2,w
  3773  00D3  00F6               	movwf	___lmul@multiplicand+2
  3774  00D4  0827               	movf	??_runPotScaling+1,w
  3775  00D5  00F5               	movwf	___lmul@multiplicand+1
  3776  00D6  0826               	movf	??_runPotScaling,w
  3777  00D7  00F4               	movwf	___lmul@multiplicand
  3778  00D8  3185  25AB  3180   	fcall	___lmul
  3779  00DB  0870               	movf	?___lmul,w
  3780  00DC  0020               	movlb	0	; select bank0
  3781  00DD  00AA               	movwf	??_runPotScaling+4
  3782  00DE  0871               	movf	?___lmul+1,w
  3783  00DF  00AB               	movwf	??_runPotScaling+5
  3784  00E0  0872               	movf	?___lmul+2,w
  3785  00E1  00AC               	movwf	??_runPotScaling+6
  3786  00E2  0873               	movf	?___lmul+3,w
  3787  00E3  00AD               	movwf	??_runPotScaling+7
  3788  00E4  3008               	movlw	8
  3789  00E5                     u175_25:
  3790  00E5  36AD               	lsrf	??_runPotScaling+7,f
  3791  00E6  0CAC               	rrf	??_runPotScaling+6,f
  3792  00E7  0CAB               	rrf	??_runPotScaling+5,f
  3793  00E8  0CAA               	rrf	??_runPotScaling+4,f
  3794  00E9                     u175_20:
  3795  00E9  0B89               	decfsz	9,f
  3796  00EA  28E5               	goto	u175_25
  3797  00EB  082B               	movf	??_runPotScaling+5,w
  3798  00EC  00CE               	movwf	_setDuty+1
  3799  00ED  082A               	movf	??_runPotScaling+4,w
  3800  00EE  00CD               	movwf	_setDuty
  3801                           
  3802                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3803  00EF  3000               	movlw	0
  3804  00F0  00F9               	movwf	___lldiv@divisor+3
  3805  00F1  3000               	movlw	0
  3806  00F2  00F8               	movwf	___lldiv@divisor+2
  3807  00F3  3000               	movlw	0
  3808  00F4  00F7               	movwf	___lldiv@divisor+1
  3809  00F5  3019               	movlw	25
  3810  00F6  00F6               	movwf	___lldiv@divisor
  3811  00F7  305A               	movlw	90
  3812  00F8  00F2               	movwf	___wmul@multiplicand
  3813  00F9  3000               	movlw	0
  3814  00FA  00F3               	movwf	___wmul@multiplicand+1
  3815  00FB  0856               	movf	_setPeriod,w
  3816  00FC  00A6               	movwf	??_runPotScaling
  3817  00FD  01A7               	clrf	??_runPotScaling+1
  3818  00FE  0826               	movf	??_runPotScaling,w
  3819  00FF  00F0               	movwf	___wmul@multiplier
  3820  0100  0827               	movf	??_runPotScaling+1,w
  3821  0101  00F1               	movwf	___wmul@multiplier+1
  3822  0102  3186  2659  3180   	fcall	___wmul
  3823  0105  0870               	movf	?___wmul,w
  3824  0106  0020               	movlb	0	; select bank0
  3825  0107  00A8               	movwf	??_runPotScaling+2
  3826  0108  0871               	movf	?___wmul+1,w
  3827  0109  00A9               	movwf	??_runPotScaling+3
  3828  010A  01AA               	clrf	??_runPotScaling+4
  3829  010B  01AB               	clrf	??_runPotScaling+5
  3830  010C  082B               	movf	??_runPotScaling+5,w
  3831  010D  00FD               	movwf	___lldiv@dividend+3
  3832  010E  082A               	movf	??_runPotScaling+4,w
  3833  010F  00FC               	movwf	___lldiv@dividend+2
  3834  0110  0829               	movf	??_runPotScaling+3,w
  3835  0111  00FB               	movwf	___lldiv@dividend+1
  3836  0112  0828               	movf	??_runPotScaling+2,w
  3837  0113  00FA               	movwf	___lldiv@dividend
  3838  0114  3184  2455  3180   	fcall	___lldiv
  3839  0117  0877               	movf	?___lldiv+1,w
  3840  0118  0020               	movlb	0	; select bank0
  3841  0119  00AF               	movwf	runPotScaling@maxDuty+1
  3842  011A  0876               	movf	?___lldiv,w
  3843  011B  00AE               	movwf	runPotScaling@maxDuty
  3844                           
  3845                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3846  011C  3000               	movlw	0
  3847  011D  00F9               	movwf	___lldiv@divisor+3
  3848  011E  3000               	movlw	0
  3849  011F  00F8               	movwf	___lldiv@divisor+2
  3850  0120  3000               	movlw	0
  3851  0121  00F7               	movwf	___lldiv@divisor+1
  3852  0122  3019               	movlw	25
  3853  0123  00F6               	movwf	___lldiv@divisor
  3854  0124  300A               	movlw	10
  3855  0125  00F2               	movwf	___wmul@multiplicand
  3856  0126  3000               	movlw	0
  3857  0127  00F3               	movwf	___wmul@multiplicand+1
  3858  0128  0856               	movf	_setPeriod,w
  3859  0129  00A6               	movwf	??_runPotScaling
  3860  012A  01A7               	clrf	??_runPotScaling+1
  3861  012B  0826               	movf	??_runPotScaling,w
  3862  012C  00F0               	movwf	___wmul@multiplier
  3863  012D  0827               	movf	??_runPotScaling+1,w
  3864  012E  00F1               	movwf	___wmul@multiplier+1
  3865  012F  3186  2659  3180   	fcall	___wmul
  3866  0132  0870               	movf	?___wmul,w
  3867  0133  0020               	movlb	0	; select bank0
  3868  0134  00A8               	movwf	??_runPotScaling+2
  3869  0135  0871               	movf	?___wmul+1,w
  3870  0136  00A9               	movwf	??_runPotScaling+3
  3871  0137  01AA               	clrf	??_runPotScaling+4
  3872  0138  01AB               	clrf	??_runPotScaling+5
  3873  0139  082B               	movf	??_runPotScaling+5,w
  3874  013A  00FD               	movwf	___lldiv@dividend+3
  3875  013B  082A               	movf	??_runPotScaling+4,w
  3876  013C  00FC               	movwf	___lldiv@dividend+2
  3877  013D  0829               	movf	??_runPotScaling+3,w
  3878  013E  00FB               	movwf	___lldiv@dividend+1
  3879  013F  0828               	movf	??_runPotScaling+2,w
  3880  0140  00FA               	movwf	___lldiv@dividend
  3881  0141  3184  2455  3180   	fcall	___lldiv
  3882  0144  0877               	movf	?___lldiv+1,w
  3883  0145  0020               	movlb	0	; select bank0
  3884  0146  00B1               	movwf	runPotScaling@minDuty+1
  3885  0147  0876               	movf	?___lldiv,w
  3886  0148  00B0               	movwf	runPotScaling@minDuty
  3887  0149                     i1l1918:
  3888                           
  3889                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3890  0149  084E               	movf	_setDuty+1,w
  3891  014A  022F               	subwf	runPotScaling@maxDuty+1,w
  3892  014B  1D03               	skipz
  3893  014C  294F               	goto	u176_25
  3894  014D  084D               	movf	_setDuty,w
  3895  014E  022E               	subwf	runPotScaling@maxDuty,w
  3896  014F                     u176_25:
  3897  014F  1803               	skipnc
  3898  0150  2952               	goto	u176_21
  3899  0151  2953               	goto	u176_20
  3900  0152                     u176_21:
  3901  0152  2957               	goto	i1l339
  3902  0153                     u176_20:
  3903  0153                     i1l1920:
  3904  0153  082F               	movf	runPotScaling@maxDuty+1,w
  3905  0154  00CE               	movwf	_setDuty+1
  3906  0155  082E               	movf	runPotScaling@maxDuty,w
  3907  0156  00CD               	movwf	_setDuty
  3908  0157                     i1l339:
  3909                           
  3910                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3911  0157  0831               	movf	runPotScaling@minDuty+1,w
  3912  0158  024E               	subwf	_setDuty+1,w
  3913  0159  1D03               	skipz
  3914  015A  295D               	goto	u177_25
  3915  015B  0830               	movf	runPotScaling@minDuty,w
  3916  015C  024D               	subwf	_setDuty,w
  3917  015D                     u177_25:
  3918  015D  1803               	skipnc
  3919  015E  2960               	goto	u177_21
  3920  015F  2961               	goto	u177_20
  3921  0160                     u177_21:
  3922  0160  2965               	goto	i1l1924
  3923  0161                     u177_20:
  3924  0161                     i1l1922:
  3925  0161  0831               	movf	runPotScaling@minDuty+1,w
  3926  0162  00CE               	movwf	_setDuty+1
  3927  0163  0830               	movf	runPotScaling@minDuty,w
  3928  0164  00CD               	movwf	_setDuty
  3929  0165                     i1l1924:
  3930                           
  3931                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3932  0165  084E               	movf	_setDuty+1,w
  3933  0166  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3934  0167  084D               	movf	_setDuty,w
  3935  0168  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3936  0169  0856               	movf	_setPeriod,w
  3937  016A  00A6               	movwf	??_runPotScaling
  3938  016B  0826               	movf	??_runPotScaling,w
  3939  016C  00F2               	movwf	setPWMDutyandPeriod@period
  3940  016D  3186  260B  3180   	fcall	_setPWMDutyandPeriod
  3941  0170                     i1l1926:
  3942                           
  3943                           ;Potentiometer.c: 72:         potSetCount = 0;
  3944  0170  0020               	movlb	0	; select bank0
  3945  0171  01D2               	clrf	_potSetCount
  3946  0172                     i1l341:
  3947  0172  0008               	return
  3948  0173                     __end_of_runPotScaling:
  3949                           
  3950                           	psect	text13
  3951  060B                     __ptext13:	
  3952 ;; *************** function _setPWMDutyandPeriod *****************
  3953 ;; Defined at:
  3954 ;;		line 49 in file "PWM.c"
  3955 ;; Parameters:    Size  Location     Type
  3956 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3957 ;;  period          1    2[COMMON] unsigned char 
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3969 ;;      Params:         3       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0
  3971 ;;      Temps:          2       0       0       0       0       0
  3972 ;;      Totals:         5       0       0       0       0       0
  3973 ;;Total ram usage:        5 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; This function calls:
  3976 ;;		Nothing
  3977 ;; This function is called by:
  3978 ;;		_Tick980Hz
  3979 ;;		_runPotScaling
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983  060B                     _setPWMDutyandPeriod:	
  3984                           ;psect for function _setPWMDutyandPeriod
  3985                           
  3986  060B                     i1l1610:	
  3987                           ;incstack = 0
  3988                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3989                           
  3990                           
  3991                           ;PWM.c: 50:     PR2 = period;
  3992  060B  0872               	movf	setPWMDutyandPeriod@period,w
  3993  060C  0020               	movlb	0	; select bank0
  3994  060D  009B               	movwf	27	;volatile
  3995  060E                     i1l1612:
  3996                           
  3997                           ;PWM.c: 51:     CCPR1L = dutyCycle >> 2;
  3998  060E  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3999  060F  00F4               	movwf	??_setPWMDutyandPeriod+1
  4000  0610  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4001  0611  00F3               	movwf	??_setPWMDutyandPeriod
  4002  0612  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4003  0613  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4004  0614  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4005  0615  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4006  0616  0873               	movf	??_setPWMDutyandPeriod,w
  4007  0617  0025               	movlb	5	; select bank5
  4008  0618  0091               	movwf	17	;volatile
  4009  0619                     i1l1614:
  4010                           
  4011                           ;PWM.c: 52:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4012  0619  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4013  061A  3901               	andlw	1
  4014  061B  00F3               	movwf	??_setPWMDutyandPeriod
  4015  061C  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4016  061D  0813               	movf	19,w	;volatile
  4017  061E  0673               	xorwf	??_setPWMDutyandPeriod,w
  4018  061F  39EF               	andlw	-17
  4019  0620  0673               	xorwf	??_setPWMDutyandPeriod,w
  4020  0621  0093               	movwf	19	;volatile
  4021                           
  4022                           ;PWM.c: 53:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4023  0622  3002               	movlw	2
  4024  0623  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4025  0624  00F3               	movwf	??_setPWMDutyandPeriod
  4026  0625  3000               	movlw	0
  4027  0626  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4028  0627  00F4               	movwf	??_setPWMDutyandPeriod+1
  4029  0628  3000               	movlw	0
  4030  0629  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4031  062A  3002               	movlw	2
  4032  062B  1903               	skipnz
  4033  062C  0273               	subwf	??_setPWMDutyandPeriod,w
  4034  062D  1803               	skipnc
  4035  062E  2E30               	goto	u101_21
  4036  062F  2E33               	goto	u101_20
  4037  0630                     u101_21:
  4038  0630  0025               	movlb	5	; select bank5
  4039  0631  1693               	bsf	19,5	;volatile
  4040  0632  2E35               	goto	u102_24
  4041  0633                     u101_20:
  4042  0633  0025               	movlb	5	; select bank5
  4043  0634  1293               	bcf	19,5	;volatile
  4044  0635                     u102_24:
  4045  0635                     i1l147:
  4046  0635  0008               	return
  4047  0636                     __end_of_setPWMDutyandPeriod:
  4048                           
  4049                           	psect	text14
  4050  0659                     __ptext14:	
  4051 ;; *************** function ___wmul *****************
  4052 ;; Defined at:
  4053 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4054 ;; Parameters:    Size  Location     Type
  4055 ;;  multiplier      2    0[COMMON] unsigned int 
  4056 ;;  multiplicand    2    2[COMMON] unsigned int 
  4057 ;; Auto vars:     Size  Location     Type
  4058 ;;  product         2    4[COMMON] unsigned int 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  2    0[COMMON] unsigned int 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4068 ;;      Params:         4       0       0       0       0       0
  4069 ;;      Locals:         2       0       0       0       0       0
  4070 ;;      Temps:          0       0       0       0       0       0
  4071 ;;      Totals:         6       0       0       0       0       0
  4072 ;;Total ram usage:        6 bytes
  4073 ;; Hardware stack levels used: 1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_runPotScaling
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081  0659                     ___wmul:	
  4082                           ;psect for function ___wmul
  4083                           
  4084  0659                     i1l1784:	
  4085                           ;incstack = 0
  4086                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4087                           
  4088  0659  01F4               	clrf	___wmul@product
  4089  065A  01F5               	clrf	___wmul@product+1
  4090  065B                     i1l1786:
  4091  065B  1C70               	btfss	___wmul@multiplier,0
  4092  065C  2E5E               	goto	u146_21
  4093  065D  2E5F               	goto	u146_20
  4094  065E                     u146_21:
  4095  065E  2E63               	goto	i1l550
  4096  065F                     u146_20:
  4097  065F                     i1l1788:
  4098  065F  0872               	movf	___wmul@multiplicand,w
  4099  0660  07F4               	addwf	___wmul@product,f
  4100  0661  0873               	movf	___wmul@multiplicand+1,w
  4101  0662  3DF5               	addwfc	___wmul@product+1,f
  4102  0663                     i1l550:
  4103  0663  3001               	movlw	1
  4104  0664                     u147_25:
  4105  0664  35F2               	lslf	___wmul@multiplicand,f
  4106  0665  0DF3               	rlf	___wmul@multiplicand+1,f
  4107  0666  0B89               	decfsz	9,f
  4108  0667  2E64               	goto	u147_25
  4109  0668                     i1l1790:
  4110  0668  3001               	movlw	1
  4111  0669                     u148_25:
  4112  0669  36F1               	lsrf	___wmul@multiplier+1,f
  4113  066A  0CF0               	rrf	___wmul@multiplier,f
  4114  066B  0B89               	decfsz	9,f
  4115  066C  2E69               	goto	u148_25
  4116  066D                     i1l1792:
  4117  066D  0870               	movf	___wmul@multiplier,w
  4118  066E  0471               	iorwf	___wmul@multiplier+1,w
  4119  066F  1D03               	btfss	3,2
  4120  0670  2E72               	goto	u149_21
  4121  0671  2E73               	goto	u149_20
  4122  0672                     u149_21:
  4123  0672  2E5B               	goto	i1l1786
  4124  0673                     u149_20:
  4125  0673                     i1l1794:
  4126  0673  0875               	movf	___wmul@product+1,w
  4127  0674  00F1               	movwf	?___wmul+1
  4128  0675  0874               	movf	___wmul@product,w
  4129  0676  00F0               	movwf	?___wmul
  4130  0677                     i1l552:
  4131  0677  0008               	return
  4132  0678                     __end_of___wmul:
  4133                           
  4134                           	psect	text15
  4135  05AB                     __ptext15:	
  4136 ;; *************** function ___lmul *****************
  4137 ;; Defined at:
  4138 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  multiplier      4    0[COMMON] unsigned long 
  4141 ;;  multiplicand    4    4[COMMON] unsigned long 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  product         4    8[COMMON] unsigned long 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  4    0[COMMON] unsigned long 
  4146 ;; Registers used:
  4147 ;;		wreg, status,2, status,0
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4153 ;;      Params:         8       0       0       0       0       0
  4154 ;;      Locals:         4       0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0
  4156 ;;      Totals:        12       0       0       0       0       0
  4157 ;;Total ram usage:       12 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; This function calls:
  4160 ;;		Nothing
  4161 ;; This function is called by:
  4162 ;;		_runPotScaling
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166  05AB                     ___lmul:	
  4167                           ;psect for function ___lmul
  4168                           
  4169  05AB                     i1l1798:	
  4170                           ;incstack = 0
  4171                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4172                           
  4173  05AB  3000               	movlw	0
  4174  05AC  00FB               	movwf	___lmul@product+3
  4175  05AD  3000               	movlw	0
  4176  05AE  00FA               	movwf	___lmul@product+2
  4177  05AF  3000               	movlw	0
  4178  05B0  00F9               	movwf	___lmul@product+1
  4179  05B1  3000               	movlw	0
  4180  05B2  00F8               	movwf	___lmul@product
  4181  05B3                     i1l1800:
  4182  05B3  1C70               	btfss	___lmul@multiplier,0
  4183  05B4  2DB6               	goto	u150_21
  4184  05B5  2DB7               	goto	u150_20
  4185  05B6                     u150_21:
  4186  05B6  2DBF               	goto	i1l1804
  4187  05B7                     u150_20:
  4188  05B7                     i1l1802:
  4189  05B7  0874               	movf	___lmul@multiplicand,w
  4190  05B8  07F8               	addwf	___lmul@product,f
  4191  05B9  0875               	movf	___lmul@multiplicand+1,w
  4192  05BA  3DF9               	addwfc	___lmul@product+1,f
  4193  05BB  0876               	movf	___lmul@multiplicand+2,w
  4194  05BC  3DFA               	addwfc	___lmul@product+2,f
  4195  05BD  0877               	movf	___lmul@multiplicand+3,w
  4196  05BE  3DFB               	addwfc	___lmul@product+3,f
  4197  05BF                     i1l1804:
  4198  05BF  3001               	movlw	1
  4199  05C0                     u151_25:
  4200  05C0  35F4               	lslf	___lmul@multiplicand,f
  4201  05C1  0DF5               	rlf	___lmul@multiplicand+1,f
  4202  05C2  0DF6               	rlf	___lmul@multiplicand+2,f
  4203  05C3  0DF7               	rlf	___lmul@multiplicand+3,f
  4204  05C4  0B89               	decfsz	9,f
  4205  05C5  2DC0               	goto	u151_25
  4206  05C6                     i1l1806:
  4207  05C6  3001               	movlw	1
  4208  05C7                     u152_25:
  4209  05C7  36F3               	lsrf	___lmul@multiplier+3,f
  4210  05C8  0CF2               	rrf	___lmul@multiplier+2,f
  4211  05C9  0CF1               	rrf	___lmul@multiplier+1,f
  4212  05CA  0CF0               	rrf	___lmul@multiplier,f
  4213  05CB  0B89               	decfsz	9,f
  4214  05CC  2DC7               	goto	u152_25
  4215  05CD  0873               	movf	___lmul@multiplier+3,w
  4216  05CE  0472               	iorwf	___lmul@multiplier+2,w
  4217  05CF  0471               	iorwf	___lmul@multiplier+1,w
  4218  05D0  0470               	iorwf	___lmul@multiplier,w
  4219  05D1  1D03               	skipz
  4220  05D2  2DD4               	goto	u153_21
  4221  05D3  2DD5               	goto	u153_20
  4222  05D4                     u153_21:
  4223  05D4  2DB3               	goto	i1l1800
  4224  05D5                     u153_20:
  4225  05D5                     i1l1808:
  4226  05D5  087B               	movf	___lmul@product+3,w
  4227  05D6  00F3               	movwf	?___lmul+3
  4228  05D7  087A               	movf	___lmul@product+2,w
  4229  05D8  00F2               	movwf	?___lmul+2
  4230  05D9  0879               	movf	___lmul@product+1,w
  4231  05DA  00F1               	movwf	?___lmul+1
  4232  05DB  0878               	movf	___lmul@product,w
  4233  05DC  00F0               	movwf	?___lmul
  4234  05DD                     i1l564:
  4235  05DD  0008               	return
  4236  05DE                     __end_of___lmul:
  4237                           
  4238                           	psect	text16
  4239  0455                     __ptext16:	
  4240 ;; *************** function ___lldiv *****************
  4241 ;; Defined at:
  4242 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  divisor         4    6[COMMON] unsigned long 
  4245 ;;  dividend        4   10[COMMON] unsigned long 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;  quotient        4    1[BANK0 ] unsigned long 
  4248 ;;  counter         1    5[BANK0 ] unsigned char 
  4249 ;; Return value:  Size  Location     Type
  4250 ;;                  4    6[COMMON] unsigned long 
  4251 ;; Registers used:
  4252 ;;		wreg, status,2, status,0
  4253 ;; Tracked objects:
  4254 ;;		On entry : 0/0
  4255 ;;		On exit  : 0/0
  4256 ;;		Unchanged: 0/0
  4257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4258 ;;      Params:         8       0       0       0       0       0
  4259 ;;      Locals:         0       5       0       0       0       0
  4260 ;;      Temps:          0       1       0       0       0       0
  4261 ;;      Totals:         8       6       0       0       0       0
  4262 ;;Total ram usage:       14 bytes
  4263 ;; Hardware stack levels used: 1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_runPotScaling
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271  0455                     ___lldiv:	
  4272                           ;psect for function ___lldiv
  4273                           
  4274  0455                     i1l1812:	
  4275                           ;incstack = 0
  4276                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4277                           
  4278  0455  3000               	movlw	0
  4279  0456  0020               	movlb	0	; select bank0
  4280  0457  00A4               	movwf	___lldiv@quotient+3
  4281  0458  3000               	movlw	0
  4282  0459  00A3               	movwf	___lldiv@quotient+2
  4283  045A  3000               	movlw	0
  4284  045B  00A2               	movwf	___lldiv@quotient+1
  4285  045C  3000               	movlw	0
  4286  045D  00A1               	movwf	___lldiv@quotient
  4287  045E  0879               	movf	___lldiv@divisor+3,w
  4288  045F  0478               	iorwf	___lldiv@divisor+2,w
  4289  0460  0477               	iorwf	___lldiv@divisor+1,w
  4290  0461  0476               	iorwf	___lldiv@divisor,w
  4291  0462  1903               	skipnz
  4292  0463  2C65               	goto	u154_21
  4293  0464  2C66               	goto	u154_20
  4294  0465                     u154_21:
  4295  0465  2CA7               	goto	i1l1832
  4296  0466                     u154_20:
  4297  0466                     i1l1814:
  4298  0466  01A5               	clrf	___lldiv@counter
  4299  0467  0AA5               	incf	___lldiv@counter,f
  4300  0468  2C74               	goto	i1l1818
  4301  0469                     i1l1816:
  4302  0469  3001               	movlw	1
  4303  046A                     u155_25:
  4304  046A  35F6               	lslf	___lldiv@divisor,f
  4305  046B  0DF7               	rlf	___lldiv@divisor+1,f
  4306  046C  0DF8               	rlf	___lldiv@divisor+2,f
  4307  046D  0DF9               	rlf	___lldiv@divisor+3,f
  4308  046E  0B89               	decfsz	9,f
  4309  046F  2C6A               	goto	u155_25
  4310  0470  3001               	movlw	1
  4311  0471  00A0               	movwf	??___lldiv
  4312  0472  0820               	movf	??___lldiv,w
  4313  0473  07A5               	addwf	___lldiv@counter,f
  4314  0474                     i1l1818:
  4315  0474  1FF9               	btfss	___lldiv@divisor+3,7
  4316  0475  2C77               	goto	u156_21
  4317  0476  2C78               	goto	u156_20
  4318  0477                     u156_21:
  4319  0477  2C69               	goto	i1l1816
  4320  0478                     u156_20:
  4321  0478                     i1l1820:
  4322  0478  3001               	movlw	1
  4323  0479                     u157_25:
  4324  0479  35A1               	lslf	___lldiv@quotient,f
  4325  047A  0DA2               	rlf	___lldiv@quotient+1,f
  4326  047B  0DA3               	rlf	___lldiv@quotient+2,f
  4327  047C  0DA4               	rlf	___lldiv@quotient+3,f
  4328  047D  0B89               	decfsz	9,f
  4329  047E  2C79               	goto	u157_25
  4330  047F                     i1l1822:
  4331  047F  0879               	movf	___lldiv@divisor+3,w
  4332  0480  027D               	subwf	___lldiv@dividend+3,w
  4333  0481  1D03               	skipz
  4334  0482  2C8D               	goto	u158_25
  4335  0483  0878               	movf	___lldiv@divisor+2,w
  4336  0484  027C               	subwf	___lldiv@dividend+2,w
  4337  0485  1D03               	skipz
  4338  0486  2C8D               	goto	u158_25
  4339  0487  0877               	movf	___lldiv@divisor+1,w
  4340  0488  027B               	subwf	___lldiv@dividend+1,w
  4341  0489  1D03               	skipz
  4342  048A  2C8D               	goto	u158_25
  4343  048B  0876               	movf	___lldiv@divisor,w
  4344  048C  027A               	subwf	___lldiv@dividend,w
  4345  048D                     u158_25:
  4346  048D  1C03               	skipc
  4347  048E  2C90               	goto	u158_21
  4348  048F  2C91               	goto	u158_20
  4349  0490                     u158_21:
  4350  0490  2C9A               	goto	i1l1828
  4351  0491                     u158_20:
  4352  0491                     i1l1824:
  4353  0491  0876               	movf	___lldiv@divisor,w
  4354  0492  02FA               	subwf	___lldiv@dividend,f
  4355  0493  0877               	movf	___lldiv@divisor+1,w
  4356  0494  3BFB               	subwfb	___lldiv@dividend+1,f
  4357  0495  0878               	movf	___lldiv@divisor+2,w
  4358  0496  3BFC               	subwfb	___lldiv@dividend+2,f
  4359  0497  0879               	movf	___lldiv@divisor+3,w
  4360  0498  3BFD               	subwfb	___lldiv@dividend+3,f
  4361  0499                     i1l1826:
  4362  0499  1421               	bsf	___lldiv@quotient,0
  4363  049A                     i1l1828:
  4364  049A  3001               	movlw	1
  4365  049B                     u159_25:
  4366  049B  36F9               	lsrf	___lldiv@divisor+3,f
  4367  049C  0CF8               	rrf	___lldiv@divisor+2,f
  4368  049D  0CF7               	rrf	___lldiv@divisor+1,f
  4369  049E  0CF6               	rrf	___lldiv@divisor,f
  4370  049F  0B89               	decfsz	9,f
  4371  04A0  2C9B               	goto	u159_25
  4372  04A1                     i1l1830:
  4373  04A1  3001               	movlw	1
  4374  04A2  02A5               	subwf	___lldiv@counter,f
  4375  04A3  1D03               	btfss	3,2
  4376  04A4  2CA6               	goto	u160_21
  4377  04A5  2CA7               	goto	u160_20
  4378  04A6                     u160_21:
  4379  04A6  2C78               	goto	i1l1820
  4380  04A7                     u160_20:
  4381  04A7                     i1l1832:
  4382  04A7  0824               	movf	___lldiv@quotient+3,w
  4383  04A8  00F9               	movwf	?___lldiv+3
  4384  04A9  0823               	movf	___lldiv@quotient+2,w
  4385  04AA  00F8               	movwf	?___lldiv+2
  4386  04AB  0822               	movf	___lldiv@quotient+1,w
  4387  04AC  00F7               	movwf	?___lldiv+1
  4388  04AD  0821               	movf	___lldiv@quotient,w
  4389  04AE  00F6               	movwf	?___lldiv
  4390  04AF                     i1l586:
  4391  04AF  0008               	return
  4392  04B0                     __end_of___lldiv:
  4393                           
  4394                           	psect	text17
  4395  04B0                     __ptext17:	
  4396 ;; *************** function _readFilteredFreqPot *****************
  4397 ;; Defined at:
  4398 ;;		line 39 in file "Potentiometer.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  i               1    8[BANK0 ] unsigned char 
  4403 ;;  i               1    9[BANK0 ] unsigned char 
  4404 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  2   11[COMMON] unsigned short 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4414 ;;      Params:         2       0       0       0       0       0
  4415 ;;      Locals:         0       6       0       0       0       0
  4416 ;;      Temps:          0       4       0       0       0       0
  4417 ;;      Totals:         2      10       0       0       0       0
  4418 ;;Total ram usage:       12 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 1
  4421 ;; This function calls:
  4422 ;;		_readADCRaw
  4423 ;; This function is called by:
  4424 ;;		_Tick980Hz
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428  04B0                     _readFilteredFreqPot:	
  4429                           ;psect for function _readFilteredFreqPot
  4430                           
  4431  04B0                     i1l1882:	
  4432                           ;incstack = 0
  4433                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4434                           
  4435                           
  4436                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4437  04B0  0020               	movlb	0	; select bank0
  4438  04B1  01A9               	clrf	readFilteredFreqPot@i
  4439  04B2                     i1l1888:
  4440  04B2  3529               	lslf	readFilteredFreqPot@i,w
  4441  04B3  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4442  04B4  0086               	movwf	6
  4443  04B5  3001               	movlw	1	; select bank2/3
  4444  04B6  0087               	movwf	7
  4445  04B7  3529               	lslf	readFilteredFreqPot@i,w
  4446  04B8  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4447  04B9  0084               	movwf	4
  4448  04BA  3001               	movlw	1	; select bank2/3
  4449  04BB  0085               	movwf	5
  4450  04BC  3F40               	moviw [0]fsr1
  4451  04BD  3F80               	movwi [0]fsr0
  4452  04BE  3F41               	moviw [1]fsr1
  4453  04BF  3F81               	movwi [1]fsr0
  4454  04C0                     i1l1890:
  4455  04C0  3001               	movlw	1
  4456  04C1  00A0               	movwf	??_readFilteredFreqPot
  4457  04C2  0820               	movf	??_readFilteredFreqPot,w
  4458  04C3  07A9               	addwf	readFilteredFreqPot@i,f
  4459  04C4                     i1l1892:
  4460  04C4  300F               	movlw	15
  4461  04C5  0229               	subwf	readFilteredFreqPot@i,w
  4462  04C6  1C03               	skipc
  4463  04C7  2CC9               	goto	u170_21
  4464  04C8  2CCA               	goto	u170_20
  4465  04C9                     u170_21:
  4466  04C9  2CB2               	goto	i1l1888
  4467  04CA                     u170_20:
  4468  04CA                     i1l1894:
  4469                           
  4470                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4471  04CA  300A               	movlw	10
  4472  04CB  3183  2334  3184   	fcall	_readADCRaw
  4473  04CE  0871               	movf	?_readADCRaw+1,w
  4474  04CF  0022               	movlb	2	; select bank2
  4475  04D0  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4476  04D1  0870               	movf	?_readADCRaw,w
  4477  04D2  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4478  04D3                     i1l1896:
  4479                           
  4480                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4481  04D3  3000               	movlw	0
  4482  04D4  0020               	movlb	0	; select bank0
  4483  04D5  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4484  04D6  3000               	movlw	0
  4485  04D7  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4486  04D8  3000               	movlw	0
  4487  04D9  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4488  04DA  3000               	movlw	0
  4489  04DB  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4490  04DC                     i1l1898:
  4491                           
  4492                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4493  04DC  01A8               	clrf	readFilteredFreqPot@i_706
  4494  04DD                     i1l1904:
  4495  04DD  3528               	lslf	readFilteredFreqPot@i_706,w
  4496  04DE  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4497  04DF  0086               	movwf	6
  4498  04E0  3001               	movlw	1	; select bank2/3
  4499  04E1  0087               	movwf	7
  4500  04E2  3F40               	moviw [0]fsr1
  4501  04E3  00A0               	movwf	??_readFilteredFreqPot
  4502  04E4  3F41               	moviw [1]fsr1
  4503  04E5  00A1               	movwf	??_readFilteredFreqPot+1
  4504  04E6  0820               	movf	??_readFilteredFreqPot,w
  4505  04E7  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4506  04E8  0821               	movf	??_readFilteredFreqPot+1,w
  4507  04E9  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4508  04EA  3000               	movlw	0
  4509  04EB  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4510  04EC  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4511  04ED                     i1l1906:
  4512  04ED  3001               	movlw	1
  4513  04EE  00A0               	movwf	??_readFilteredFreqPot
  4514  04EF  0820               	movf	??_readFilteredFreqPot,w
  4515  04F0  07A8               	addwf	readFilteredFreqPot@i_706,f
  4516  04F1                     i1l1908:
  4517  04F1  3010               	movlw	16
  4518  04F2  0228               	subwf	readFilteredFreqPot@i_706,w
  4519  04F3  1C03               	skipc
  4520  04F4  2CF6               	goto	u171_21
  4521  04F5  2CF7               	goto	u171_20
  4522  04F6                     u171_21:
  4523  04F6  2CDD               	goto	i1l1904
  4524  04F7                     u171_20:
  4525  04F7                     i1l1910:
  4526                           
  4527                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4528  04F7  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4529  04F8  00A0               	movwf	??_readFilteredFreqPot
  4530  04F9  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4531  04FA  00A1               	movwf	??_readFilteredFreqPot+1
  4532  04FB  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4533  04FC  00A2               	movwf	??_readFilteredFreqPot+2
  4534  04FD  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4535  04FE  00A3               	movwf	??_readFilteredFreqPot+3
  4536  04FF  3004               	movlw	4
  4537  0500                     u172_25:
  4538  0500  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4539  0501  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4540  0502  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4541  0503  0CA0               	rrf	??_readFilteredFreqPot,f
  4542  0504                     u172_20:
  4543  0504  0B89               	decfsz	9,f
  4544  0505  2D00               	goto	u172_25
  4545  0506  0821               	movf	??_readFilteredFreqPot+1,w
  4546  0507  00FC               	movwf	?_readFilteredFreqPot+1
  4547  0508  0820               	movf	??_readFilteredFreqPot,w
  4548  0509  00FB               	movwf	?_readFilteredFreqPot
  4549  050A                     i1l335:
  4550  050A  0008               	return
  4551  050B                     __end_of_readFilteredFreqPot:
  4552                           
  4553                           	psect	text18
  4554  050B                     __ptext18:	
  4555 ;; *************** function _readFilteredDutyPot *****************
  4556 ;; Defined at:
  4557 ;;		line 25 in file "Potentiometer.c"
  4558 ;; Parameters:    Size  Location     Type
  4559 ;;		None
  4560 ;; Auto vars:     Size  Location     Type
  4561 ;;  i               1    8[BANK0 ] unsigned char 
  4562 ;;  i               1    9[BANK0 ] unsigned char 
  4563 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4564 ;; Return value:  Size  Location     Type
  4565 ;;                  2   11[COMMON] unsigned short 
  4566 ;; Registers used:
  4567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4568 ;; Tracked objects:
  4569 ;;		On entry : 0/0
  4570 ;;		On exit  : 0/0
  4571 ;;		Unchanged: 0/0
  4572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4573 ;;      Params:         2       0       0       0       0       0
  4574 ;;      Locals:         0       6       0       0       0       0
  4575 ;;      Temps:          0       4       0       0       0       0
  4576 ;;      Totals:         2      10       0       0       0       0
  4577 ;;Total ram usage:       12 bytes
  4578 ;; Hardware stack levels used: 1
  4579 ;; Hardware stack levels required when called: 1
  4580 ;; This function calls:
  4581 ;;		_readADCRaw
  4582 ;; This function is called by:
  4583 ;;		_Tick980Hz
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587  050B                     _readFilteredDutyPot:	
  4588                           ;psect for function _readFilteredDutyPot
  4589                           
  4590  050B                     i1l1850:	
  4591                           ;incstack = 0
  4592                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4593                           
  4594                           
  4595                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4596  050B  0020               	movlb	0	; select bank0
  4597  050C  01A9               	clrf	readFilteredDutyPot@i
  4598  050D                     i1l1856:
  4599  050D  3529               	lslf	readFilteredDutyPot@i,w
  4600  050E  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4601  050F  0086               	movwf	6
  4602  0510  3001               	movlw	1	; select bank2/3
  4603  0511  0087               	movwf	7
  4604  0512  3529               	lslf	readFilteredDutyPot@i,w
  4605  0513  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4606  0514  0084               	movwf	4
  4607  0515  3001               	movlw	1	; select bank2/3
  4608  0516  0085               	movwf	5
  4609  0517  3F40               	moviw [0]fsr1
  4610  0518  3F80               	movwi [0]fsr0
  4611  0519  3F41               	moviw [1]fsr1
  4612  051A  3F81               	movwi [1]fsr0
  4613  051B                     i1l1858:
  4614  051B  3001               	movlw	1
  4615  051C  00A0               	movwf	??_readFilteredDutyPot
  4616  051D  0820               	movf	??_readFilteredDutyPot,w
  4617  051E  07A9               	addwf	readFilteredDutyPot@i,f
  4618  051F                     i1l1860:
  4619  051F  300F               	movlw	15
  4620  0520  0229               	subwf	readFilteredDutyPot@i,w
  4621  0521  1C03               	skipc
  4622  0522  2D24               	goto	u167_21
  4623  0523  2D25               	goto	u167_20
  4624  0524                     u167_21:
  4625  0524  2D0D               	goto	i1l1856
  4626  0525                     u167_20:
  4627  0525                     i1l1862:
  4628                           
  4629                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4630  0525  3009               	movlw	9
  4631  0526  3183  2334  3185   	fcall	_readADCRaw
  4632  0529  0871               	movf	?_readADCRaw+1,w
  4633  052A  0022               	movlb	2	; select bank2
  4634  052B  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4635  052C  0870               	movf	?_readADCRaw,w
  4636  052D  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4637  052E                     i1l1864:
  4638                           
  4639                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4640  052E  3000               	movlw	0
  4641  052F  0020               	movlb	0	; select bank0
  4642  0530  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4643  0531  3000               	movlw	0
  4644  0532  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4645  0533  3000               	movlw	0
  4646  0534  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4647  0535  3000               	movlw	0
  4648  0536  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4649  0537                     i1l1866:
  4650                           
  4651                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4652  0537  01A8               	clrf	readFilteredDutyPot@i_702
  4653  0538                     i1l1872:
  4654  0538  3528               	lslf	readFilteredDutyPot@i_702,w
  4655  0539  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4656  053A  0086               	movwf	6
  4657  053B  3001               	movlw	1	; select bank2/3
  4658  053C  0087               	movwf	7
  4659  053D  3F40               	moviw [0]fsr1
  4660  053E  00A0               	movwf	??_readFilteredDutyPot
  4661  053F  3F41               	moviw [1]fsr1
  4662  0540  00A1               	movwf	??_readFilteredDutyPot+1
  4663  0541  0820               	movf	??_readFilteredDutyPot,w
  4664  0542  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4665  0543  0821               	movf	??_readFilteredDutyPot+1,w
  4666  0544  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4667  0545  3000               	movlw	0
  4668  0546  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4669  0547  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4670  0548                     i1l1874:
  4671  0548  3001               	movlw	1
  4672  0549  00A0               	movwf	??_readFilteredDutyPot
  4673  054A  0820               	movf	??_readFilteredDutyPot,w
  4674  054B  07A8               	addwf	readFilteredDutyPot@i_702,f
  4675  054C                     i1l1876:
  4676  054C  3010               	movlw	16
  4677  054D  0228               	subwf	readFilteredDutyPot@i_702,w
  4678  054E  1C03               	skipc
  4679  054F  2D51               	goto	u168_21
  4680  0550  2D52               	goto	u168_20
  4681  0551                     u168_21:
  4682  0551  2D38               	goto	i1l1872
  4683  0552                     u168_20:
  4684  0552                     i1l1878:
  4685                           
  4686                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4687  0552  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4688  0553  00A0               	movwf	??_readFilteredDutyPot
  4689  0554  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4690  0555  00A1               	movwf	??_readFilteredDutyPot+1
  4691  0556  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4692  0557  00A2               	movwf	??_readFilteredDutyPot+2
  4693  0558  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4694  0559  00A3               	movwf	??_readFilteredDutyPot+3
  4695  055A  3004               	movlw	4
  4696  055B                     u169_25:
  4697  055B  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4698  055C  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4699  055D  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4700  055E  0CA0               	rrf	??_readFilteredDutyPot,f
  4701  055F                     u169_20:
  4702  055F  0B89               	decfsz	9,f
  4703  0560  2D5B               	goto	u169_25
  4704  0561  0821               	movf	??_readFilteredDutyPot+1,w
  4705  0562  00FC               	movwf	?_readFilteredDutyPot+1
  4706  0563  0820               	movf	??_readFilteredDutyPot,w
  4707  0564  00FB               	movwf	?_readFilteredDutyPot
  4708  0565                     i1l328:
  4709  0565  0008               	return
  4710  0566                     __end_of_readFilteredDutyPot:
  4711                           
  4712                           	psect	text19
  4713  0334                     __ptext19:	
  4714 ;; *************** function _readADCRaw *****************
  4715 ;; Defined at:
  4716 ;;		line 71 in file "ADC.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;  gpioNumber      1    wreg     const enum E2798
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4721 ;;  i               1    9[COMMON] unsigned char 
  4722 ;;  i               1    8[COMMON] unsigned char 
  4723 ;;  returnValue     2    4[COMMON] unsigned int 
  4724 ;;  gpioValid       1    7[COMMON] unsigned char 
  4725 ;;  channel         1    6[COMMON] unsigned char 
  4726 ;; Return value:  Size  Location     Type
  4727 ;;                  2    0[COMMON] unsigned short 
  4728 ;; Registers used:
  4729 ;;		wreg, status,2, status,0
  4730 ;; Tracked objects:
  4731 ;;		On entry : 0/0
  4732 ;;		On exit  : 0/0
  4733 ;;		Unchanged: 0/0
  4734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4735 ;;      Params:         2       0       0       0       0       0
  4736 ;;      Locals:         7       0       0       0       0       0
  4737 ;;      Temps:          2       0       0       0       0       0
  4738 ;;      Totals:        11       0       0       0       0       0
  4739 ;;Total ram usage:       11 bytes
  4740 ;; Hardware stack levels used: 1
  4741 ;; This function calls:
  4742 ;;		Nothing
  4743 ;; This function is called by:
  4744 ;;		_readFilteredDutyPot
  4745 ;;		_readFilteredFreqPot
  4746 ;;		_readFilteredIDS
  4747 ;; This function uses a non-reentrant model
  4748 ;;
  4749                           
  4750  0334                     _readADCRaw:	
  4751                           ;psect for function _readADCRaw
  4752                           
  4753                           
  4754                           ;incstack = 0
  4755                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4756                           ;readADCRaw@gpioNumber stored from wreg
  4757  0334  00FA               	movwf	readADCRaw@gpioNumber
  4758  0335                     i1l1700:
  4759                           
  4760                           ;ADC.c: 72:     uint8_t channel = 0;
  4761  0335  01F6               	clrf	readADCRaw@channel
  4762                           
  4763                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4764  0336  01F7               	clrf	readADCRaw@gpioValid
  4765  0337                     i1l1702:
  4766                           
  4767                           ;ADC.c: 75:     if(gpioNumber < 4){
  4768  0337  3004               	movlw	4
  4769  0338  027A               	subwf	readADCRaw@gpioNumber,w
  4770  0339  1803               	skipnc
  4771  033A  2B3C               	goto	u133_21
  4772  033B  2B3D               	goto	u133_20
  4773  033C                     u133_21:
  4774  033C  2B43               	goto	i1l212
  4775  033D                     u133_20:
  4776  033D                     i1l1704:
  4777                           
  4778                           ;ADC.c: 76:         channel = gpioNumber;
  4779  033D  087A               	movf	readADCRaw@gpioNumber,w
  4780  033E  00F2               	movwf	??_readADCRaw
  4781  033F  0872               	movf	??_readADCRaw,w
  4782  0340  00F6               	movwf	readADCRaw@channel
  4783  0341                     i1l1706:
  4784                           
  4785                           ;ADC.c: 77:         gpioValid = 1;
  4786  0341  01F7               	clrf	readADCRaw@gpioValid
  4787  0342  0AF7               	incf	readADCRaw@gpioValid,f
  4788  0343                     i1l212:	
  4789                           ;ADC.c: 78:     }
  4790                           
  4791                           
  4792                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4793  0343  3009               	movlw	9
  4794  0344  027A               	subwf	readADCRaw@gpioNumber,w
  4795  0345  1C03               	skipc
  4796  0346  2B48               	goto	u134_21
  4797  0347  2B49               	goto	u134_20
  4798  0348                     u134_21:
  4799  0348  2B56               	goto	i1l213
  4800  0349                     u134_20:
  4801  0349                     i1l1708:
  4802  0349  3010               	movlw	16
  4803  034A  027A               	subwf	readADCRaw@gpioNumber,w
  4804  034B  1803               	skipnc
  4805  034C  2B4E               	goto	u135_21
  4806  034D  2B4F               	goto	u135_20
  4807  034E                     u135_21:
  4808  034E  2B56               	goto	i1l213
  4809  034F                     u135_20:
  4810  034F                     i1l1710:
  4811                           
  4812                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4813  034F  087A               	movf	readADCRaw@gpioNumber,w
  4814  0350  3C14               	sublw	20
  4815  0351  00F2               	movwf	??_readADCRaw
  4816  0352  0872               	movf	??_readADCRaw,w
  4817  0353  00F6               	movwf	readADCRaw@channel
  4818  0354                     i1l1712:
  4819                           
  4820                           ;ADC.c: 81:         gpioValid = 1;
  4821  0354  01F7               	clrf	readADCRaw@gpioValid
  4822  0355  0AF7               	incf	readADCRaw@gpioValid,f
  4823  0356                     i1l213:	
  4824                           ;ADC.c: 82:     }
  4825                           
  4826                           
  4827                           ;ADC.c: 83:     if(gpioValid){
  4828  0356  0877               	movf	readADCRaw@gpioValid,w
  4829  0357  1903               	btfsc	3,2
  4830  0358  2B5A               	goto	u136_21
  4831  0359  2B5B               	goto	u136_20
  4832  035A                     u136_21:
  4833  035A  2B95               	goto	i1l223
  4834  035B                     u136_20:
  4835  035B                     i1l1714:
  4836                           
  4837                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4838  035B  0021               	movlb	1	; select bank1
  4839  035C  081D               	movf	29,w	;volatile
  4840  035D                     i1l1716:
  4841                           
  4842                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4843  035D  3083               	movlw	131
  4844  035E  00F2               	movwf	??_readADCRaw
  4845  035F  0872               	movf	??_readADCRaw,w
  4846  0360  059D               	andwf	29,f	;volatile
  4847  0361                     i1l1718:
  4848                           
  4849                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4850  0361  0876               	movf	readADCRaw@channel,w	;volatile
  4851  0362  00F2               	movwf	??_readADCRaw
  4852  0363  3001               	movlw	1
  4853  0364                     u137_25:
  4854  0364  35F2               	lslf	??_readADCRaw,f
  4855  0365  3EFF               	addlw	-1
  4856  0366  1D03               	skipz
  4857  0367  2B64               	goto	u137_25
  4858  0368  3572               	lslf	??_readADCRaw,w
  4859  0369  00F3               	movwf	??_readADCRaw+1
  4860  036A  0873               	movf	??_readADCRaw+1,w
  4861  036B  049D               	iorwf	29,f	;volatile
  4862  036C                     i1l1720:
  4863                           
  4864                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4865  036C  01F8               	clrf	readADCRaw@i
  4866  036D                     i1l1726:
  4867  036D  3001               	movlw	1
  4868  036E  00F2               	movwf	??_readADCRaw
  4869  036F  0872               	movf	??_readADCRaw,w
  4870  0370  07F8               	addwf	readADCRaw@i,f
  4871  0371                     i1l1728:
  4872  0371  3008               	movlw	8
  4873  0372  0278               	subwf	readADCRaw@i,w
  4874  0373  1C03               	skipc
  4875  0374  2B76               	goto	u138_21
  4876  0375  2B77               	goto	u138_20
  4877  0376                     u138_21:
  4878  0376  2B6D               	goto	i1l1726
  4879  0377                     u138_20:
  4880  0377                     i1l217:
  4881                           
  4882                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4883  0377  0021               	movlb	1	; select bank1
  4884  0378  149D               	bsf	29,1	;volatile
  4885  0379                     i1l218:	
  4886                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4887                           
  4888  0379  189D               	btfsc	29,1	;volatile
  4889  037A  2B7C               	goto	u139_21
  4890  037B  2B7D               	goto	u139_20
  4891  037C                     u139_21:
  4892  037C  2B79               	goto	i1l218
  4893  037D                     u139_20:
  4894  037D                     i1l1730:
  4895                           
  4896                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4897  037D  081C               	movf	28,w	;volatile
  4898  037E  00F5               	movwf	readADCRaw@returnValue+1
  4899  037F  081B               	movf	27,w	;volatile
  4900  0380  00F4               	movwf	readADCRaw@returnValue
  4901  0381                     i1l1732:
  4902                           
  4903                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4904  0381  3083               	movlw	131
  4905  0382  00F2               	movwf	??_readADCRaw
  4906  0383  0872               	movf	??_readADCRaw,w
  4907  0384  059D               	andwf	29,f	;volatile
  4908  0385                     i1l1734:
  4909                           
  4910                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4911  0385  159D               	bsf	29,3	;volatile
  4912  0386                     i1l1736:
  4913                           
  4914                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4915  0386  01F9               	clrf	readADCRaw@i_616
  4916  0387                     i1l1742:
  4917  0387  3001               	movlw	1
  4918  0388  00F2               	movwf	??_readADCRaw
  4919  0389  0872               	movf	??_readADCRaw,w
  4920  038A  07F9               	addwf	readADCRaw@i_616,f
  4921  038B                     i1l1744:
  4922  038B  3008               	movlw	8
  4923  038C  0279               	subwf	readADCRaw@i_616,w
  4924  038D  1C03               	skipc
  4925  038E  2B90               	goto	u140_21
  4926  038F  2B91               	goto	u140_20
  4927  0390                     u140_21:
  4928  0390  2B87               	goto	i1l1742
  4929  0391                     u140_20:
  4930  0391                     i1l1746:
  4931                           
  4932                           ;ADC.c: 97:             return returnValue;
  4933  0391  0875               	movf	readADCRaw@returnValue+1,w
  4934  0392  00F1               	movwf	?_readADCRaw+1
  4935  0393  0874               	movf	readADCRaw@returnValue,w
  4936  0394  00F0               	movwf	?_readADCRaw
  4937  0395                     i1l223:
  4938  0395  0008               	return
  4939  0396                     __end_of_readADCRaw:
  4940                           
  4941                           	psect	text20
  4942  05DE                     __ptext20:	
  4943 ;; *************** function _currentTripRead *****************
  4944 ;; Defined at:
  4945 ;;		line 30 in file "CurrentSensor.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      _Bool 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2, status,0, pclath, cstack
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4959 ;;      Params:         0       0       0       0       0       0
  4960 ;;      Locals:         1       0       0       0       0       0
  4961 ;;      Temps:          1       0       0       0       0       0
  4962 ;;      Totals:         2       0       0       0       0       0
  4963 ;;Total ram usage:        2 bytes
  4964 ;; Hardware stack levels used: 1
  4965 ;; Hardware stack levels required when called: 1
  4966 ;; This function calls:
  4967 ;;		_readGPIO
  4968 ;; This function is called by:
  4969 ;;		_Tick980Hz
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973  05DE                     _currentTripRead:	
  4974                           ;psect for function _currentTripRead
  4975                           
  4976  05DE                     i1l1836:	
  4977                           ;incstack = 0
  4978                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4979                           
  4980                           
  4981                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  4982  05DE  3001               	movlw	1
  4983  05DF  3185  2566  3185   	fcall	_readGPIO
  4984  05E2  3A01               	xorlw	1
  4985  05E3  1D03               	skipz
  4986  05E4  2DE6               	goto	u161_21
  4987  05E5  2DE8               	goto	u161_20
  4988  05E6                     u161_21:
  4989  05E6  3001               	movlw	1
  4990  05E7  2DE9               	goto	u162_20
  4991  05E8                     u161_20:
  4992  05E8  3000               	movlw	0
  4993  05E9                     u162_20:
  4994  05E9  00F9               	movwf	??_currentTripRead
  4995  05EA  0879               	movf	??_currentTripRead,w
  4996  05EB  0020               	movlb	0	; select bank0
  4997  05EC  00D4               	movwf	_tripIDS
  4998                           
  4999                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  5000  05ED  3003               	movlw	3
  5001  05EE  3185  2566  3185   	fcall	_readGPIO
  5002  05F1  3A01               	xorlw	1
  5003  05F2  1D03               	skipz
  5004  05F3  2DF5               	goto	u163_21
  5005  05F4  2DF7               	goto	u163_20
  5006  05F5                     u163_21:
  5007  05F5  3001               	movlw	1
  5008  05F6  2DF8               	goto	u164_20
  5009  05F7                     u163_20:
  5010  05F7  3000               	movlw	0
  5011  05F8                     u164_20:
  5012  05F8  00F9               	movwf	??_currentTripRead
  5013  05F9  0879               	movf	??_currentTripRead,w
  5014  05FA  0020               	movlb	0	; select bank0
  5015  05FB  00D3               	movwf	_tripIL
  5016  05FC                     i1l1838:
  5017                           
  5018                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  5019  05FC  01FA               	clrf	_currentTripRead$747
  5020  05FD  0AFA               	incf	_currentTripRead$747,f
  5021  05FE                     i1l1840:
  5022  05FE  0853               	movf	_tripIL,w
  5023  05FF  1D03               	btfss	3,2
  5024  0600  2E02               	goto	u165_21
  5025  0601  2E03               	goto	u165_20
  5026  0602                     u165_21:
  5027  0602  2E09               	goto	i1l1846
  5028  0603                     u165_20:
  5029  0603                     i1l1842:
  5030  0603  0854               	movf	_tripIDS,w
  5031  0604  1D03               	btfss	3,2
  5032  0605  2E07               	goto	u166_21
  5033  0606  2E08               	goto	u166_20
  5034  0607                     u166_21:
  5035  0607  2E09               	goto	i1l1846
  5036  0608                     u166_20:
  5037  0608                     i1l1844:
  5038  0608  01FA               	clrf	_currentTripRead$747
  5039  0609                     i1l1846:
  5040  0609  087A               	movf	_currentTripRead$747,w
  5041  060A                     i1l383:
  5042  060A  0008               	return
  5043  060B                     __end_of_currentTripRead:
  5044                           
  5045                           	psect	text21
  5046  0566                     __ptext21:	
  5047 ;; *************** function _readGPIO *****************
  5048 ;; Defined at:
  5049 ;;		line 79 in file "GPIO.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;  gpioNumber      1    wreg     const enum E2798
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;  gpioNumber      1    8[COMMON] const enum E2798
  5054 ;;  returnValueB    1    5[COMMON] unsigned char 
  5055 ;;  readB           1    4[COMMON] unsigned char 
  5056 ;;  returnValueA    1    3[COMMON] unsigned char 
  5057 ;;  readA           1    2[COMMON] unsigned char 
  5058 ;;  portType        1    7[COMMON] unsigned char 
  5059 ;;  portNumber      1    6[COMMON] unsigned char 
  5060 ;; Return value:  Size  Location     Type
  5061 ;;                  1    wreg      _Bool 
  5062 ;; Registers used:
  5063 ;;		wreg, status,2, status,0
  5064 ;; Tracked objects:
  5065 ;;		On entry : 0/0
  5066 ;;		On exit  : 0/0
  5067 ;;		Unchanged: 0/0
  5068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5069 ;;      Params:         0       0       0       0       0       0
  5070 ;;      Locals:         7       0       0       0       0       0
  5071 ;;      Temps:          2       0       0       0       0       0
  5072 ;;      Totals:         9       0       0       0       0       0
  5073 ;;Total ram usage:        9 bytes
  5074 ;; Hardware stack levels used: 1
  5075 ;; This function calls:
  5076 ;;		Nothing
  5077 ;; This function is called by:
  5078 ;;		_currentTripRead
  5079 ;; This function uses a non-reentrant model
  5080 ;;
  5081                           
  5082  0566                     _readGPIO:	
  5083                           ;psect for function _readGPIO
  5084                           
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5088                           ;readGPIO@gpioNumber stored from wreg
  5089  0566  00F8               	movwf	readGPIO@gpioNumber
  5090  0567                     i1l1750:
  5091                           
  5092                           ;GPIO.c: 81:     uint8_t portType = 0;
  5093  0567  01F7               	clrf	readGPIO@portType
  5094  0568                     i1l1752:
  5095                           
  5096                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5097  0568  3008               	movlw	8
  5098  0569  0278               	subwf	readGPIO@gpioNumber,w
  5099  056A  1C03               	skipc
  5100  056B  2D6D               	goto	u141_21
  5101  056C  2D6E               	goto	u141_20
  5102  056D                     u141_21:
  5103  056D  2D76               	goto	i1l1758
  5104  056E                     u141_20:
  5105  056E                     i1l1754:
  5106                           
  5107                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5108  056E  0878               	movf	readGPIO@gpioNumber,w
  5109  056F  3EF8               	addlw	248
  5110  0570  00F0               	movwf	??_readGPIO
  5111  0571  0870               	movf	??_readGPIO,w
  5112  0572  00F6               	movwf	readGPIO@portNumber
  5113  0573                     i1l1756:
  5114                           
  5115                           ;GPIO.c: 84:         portType = 1;
  5116  0573  01F7               	clrf	readGPIO@portType
  5117  0574  0AF7               	incf	readGPIO@portType,f
  5118                           
  5119                           ;GPIO.c: 85:     }
  5120  0575  2D7B               	goto	i1l1762
  5121  0576                     i1l1758:
  5122                           
  5123                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5124  0576  0878               	movf	readGPIO@gpioNumber,w
  5125  0577  00F0               	movwf	??_readGPIO
  5126  0578  0870               	movf	??_readGPIO,w
  5127  0579  00F6               	movwf	readGPIO@portNumber
  5128  057A                     i1l1760:
  5129                           
  5130                           ;GPIO.c: 88:         portType = 0;
  5131  057A  01F7               	clrf	readGPIO@portType
  5132  057B                     i1l1762:
  5133                           
  5134                           ;GPIO.c: 91:     if(portType == 0){
  5135  057B  0877               	movf	readGPIO@portType,w
  5136  057C  1D03               	btfss	3,2
  5137  057D  2D7F               	goto	u142_21
  5138  057E  2D80               	goto	u142_20
  5139  057F                     u142_21:
  5140  057F  2D93               	goto	i1l1774
  5141  0580                     u142_20:
  5142  0580                     i1l1764:
  5143                           
  5144                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  5145  0580  0020               	movlb	0	; select bank0
  5146  0581  080C               	movf	12,w	;volatile
  5147  0582  00F0               	movwf	??_readGPIO
  5148  0583  0870               	movf	??_readGPIO,w
  5149  0584  00F2               	movwf	readGPIO@readA
  5150  0585                     i1l1766:
  5151                           
  5152                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  5153  0585  0872               	movf	readGPIO@readA,w
  5154  0586  00F0               	movwf	??_readGPIO
  5155  0587  0A76               	incf	readGPIO@portNumber,w
  5156  0588  2D8A               	goto	u143_24
  5157  0589                     u143_25:
  5158  0589  36F0               	lsrf	??_readGPIO,f
  5159  058A                     u143_24:
  5160  058A  0B89               	decfsz	9,f
  5161  058B  2D89               	goto	u143_25
  5162  058C  0870               	movf	??_readGPIO,w
  5163  058D  3901               	andlw	1
  5164  058E  00F1               	movwf	??_readGPIO+1
  5165  058F  0871               	movf	??_readGPIO+1,w
  5166  0590  00F3               	movwf	readGPIO@returnValueA
  5167  0591                     i1l1768:
  5168                           
  5169                           ;GPIO.c: 94:         return returnValueA;
  5170  0591  0873               	movf	readGPIO@returnValueA,w
  5171  0592  2DAA               	goto	i1l290
  5172  0593                     i1l1774:
  5173  0593  0377               	decf	readGPIO@portType,w
  5174  0594  1D03               	btfss	3,2
  5175  0595  2D97               	goto	u144_21
  5176  0596  2D98               	goto	u144_20
  5177  0597                     u144_21:
  5178  0597  2DAA               	goto	i1l290
  5179  0598                     u144_20:
  5180  0598                     i1l1776:
  5181                           
  5182                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  5183  0598  0020               	movlb	0	; select bank0
  5184  0599  080D               	movf	13,w	;volatile
  5185  059A  00F0               	movwf	??_readGPIO
  5186  059B  0870               	movf	??_readGPIO,w
  5187  059C  00F4               	movwf	readGPIO@readB
  5188  059D                     i1l1778:
  5189                           
  5190                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  5191  059D  0874               	movf	readGPIO@readB,w
  5192  059E  00F0               	movwf	??_readGPIO
  5193  059F  0A76               	incf	readGPIO@portNumber,w
  5194  05A0  2DA2               	goto	u145_24
  5195  05A1                     u145_25:
  5196  05A1  36F0               	lsrf	??_readGPIO,f
  5197  05A2                     u145_24:
  5198  05A2  0B89               	decfsz	9,f
  5199  05A3  2DA1               	goto	u145_25
  5200  05A4  0870               	movf	??_readGPIO,w
  5201  05A5  3901               	andlw	1
  5202  05A6  00F1               	movwf	??_readGPIO+1
  5203  05A7  0871               	movf	??_readGPIO+1,w
  5204  05A8  00F5               	movwf	readGPIO@returnValueB
  5205  05A9                     i1l1780:
  5206                           
  5207                           ;GPIO.c: 99:         return returnValueB;
  5208  05A9  0875               	movf	readGPIO@returnValueB,w
  5209  05AA                     i1l290:
  5210  05AA  0008               	return
  5211  05AB                     __end_of_readGPIO:
  5212  007E                     btemp	set	126	;btemp
  5213  007E                     int$flags	set	126
  5214  007E                     wtemp0	set	126
  5215                           
  5216                           	psect	idloc
  5217                           
  5218                           ;Config register IDLOC0 @ 0x8000
  5219                           ;	unspecified, using default values
  5220  8000                     	org	32768
  5221  8000  3FFF               	dw	16383
  5222                           
  5223                           ;Config register IDLOC1 @ 0x8001
  5224                           ;	unspecified, using default values
  5225  8001                     	org	32769
  5226  8001  3FFF               	dw	16383
  5227                           
  5228                           ;Config register IDLOC2 @ 0x8002
  5229                           ;	unspecified, using default values
  5230  8002                     	org	32770
  5231  8002  3FFF               	dw	16383
  5232                           
  5233                           ;Config register IDLOC3 @ 0x8003
  5234                           ;	unspecified, using default values
  5235  8003                     	org	32771
  5236  8003  3FFF               	dw	16383
  5237                           
  5238                           	psect	config
  5239                           
  5240                           ;Config register CONFIG1 @ 0x8007
  5241                           ;	Oscillator Selection
  5242                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5243                           ;	Watchdog Timer Enable
  5244                           ;	WDTE = OFF, WDT disabled
  5245                           ;	Power-up Timer Enable
  5246                           ;	PWRTE = OFF, PWRT disabled
  5247                           ;	MCLR Pin Function Select
  5248                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5249                           ;	Flash Program Memory Code Protection
  5250                           ;	CP = OFF, Program memory code protection is disabled
  5251                           ;	Data Memory Code Protection
  5252                           ;	CPD = OFF, Data memory code protection is disabled
  5253                           ;	Brown-out Reset Enable
  5254                           ;	BOREN = ON, Brown-out Reset enabled
  5255                           ;	Clock Out Enable
  5256                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5257                           ;	Internal/External Switchover
  5258                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5259                           ;	Fail-Safe Clock Monitor Enable
  5260                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5261  8007                     	org	32775
  5262  8007  0FA4               	dw	4004
  5263                           
  5264                           ;Config register CONFIG2 @ 0x8008
  5265                           ;	Flash Memory Self-Write Protection
  5266                           ;	WRT = OFF, Write protection off
  5267                           ;	PLL Enable
  5268                           ;	PLLEN = OFF, 4x PLL disabled
  5269                           ;	Stack Overflow/Underflow Reset Enable
  5270                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5271                           ;	Brown-out Reset Voltage Selection
  5272                           ;	BORV = 0x1, unprogrammed default
  5273                           ;	Low-Voltage Programming Enable
  5274                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5275  8008                     	org	32776
  5276  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         154
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      55
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _initialiseCurrentSensors->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3134
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1495
                   _initialiseADCPin
                     _initialiseGPIO
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (2) _writeGPIO                                            6     5      1     550
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3648
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (4) i1_writeGPIO                                          6     5      1     326
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
     _writeGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 14:58:53 2023

                                 l92 06AE                                   l93 06AE  
                ___wmul@multiplicand 0072                                  l111 024D  
                                l200 06EF                                  l204 02F1  
                                l144 0694                                  l209 0333  
                                l321 06DB                                  l270 02C9  
                                l169 06E3                                  l284 03F5  
                                l378 0658                                  _PR2 001B  
                                wreg 0009                  __end_ofi1_writeGPIO 0455  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2010 067D                                 l2020 0687  
                               l2012 067F                                 l2022 0689  
                               l2014 0681                                 l2006 0678  
                               l2030 06DC                                 l2110 06A2  
                               l2102 0695                                 l2024 068B  
                               l2016 0683                                 l2008 067B  
                               l2032 06E1                                 l2112 06A5  
                               l2104 0699                                 l2034 06EA  
                               l2202 022A                                 l2026 068C  
                               l2018 0684                                 l2114 06A8  
                               l2106 069C                                 l2036 0636  
                               l2028 068E                                 l2108 069F  
                               l2038 06D3                                 l1620 039F  
                               l1630 03B1                                 l1622 03A4  
                               l1640 03DB                                 l1632 03B6  
                               l1624 03A7                                 l1616 0398  
                               l1650 025C                                 l1642 03E8  
                               l1634 03C3                                 l1626 03AB  
                               l1618 0399                                 l1660 026E  
                               l1652 025F                                 l1644 0250  
                               l1636 03D1                                 l1628 03AC  
                               l1670 02BC                                 l1662 0289  
                               l1654 0263                                 l1646 0251  
                               l1638 03D6                                 l1680 02DA  
                               l1672 02CC                                 l1664 0297  
                               l1656 0264                                 l1648 0257  
                               l1690 02EF                                 l1682 02DC  
                               l1674 02CF                                 l1666 029C  
                               l1658 0269                                 l1930 0176  
                               l1692 02F6                                 l1684 02E2  
                               l1676 02D5                                 l1668 02A1  
                               l1940 018A                                 l1932 0179  
                               l1694 02FB                                 l1686 02E8  
                               l1678 02D9                                 l1950 01A9  
                               l1942 0194                                 l1934 017A  
                               l1696 0315                                 l1688 02ED  
                               l1960 01C4                                 l1952 01AA  
                               l1944 0199                                 l1936 0184  
                               l1928 0175                                 l1698 031A  
                               l1970 01DA                                 l1962 01C9  
                               l1954 01B4                                 l1946 019A  
                               l1938 0189                                 l1980 01F9  
                               l1972 01E4                                 l1964 01CA  
                               l1956 01B9                                 l1948 01A4  
                               l1990 0212                                 l1982 01FA  
                               l1974 01E9                                 l1966 01D4  
                               l1958 01BA                                 l1992 0217  
                               l1984 0204                                 l1976 01EA  
                               l1968 01D9                                 l1994 0218  
                               l1986 0207                                 l1978 01F4  
                               l1988 0208                                 l1998 0222  
                               STR_1 06B1                                 STR_3 06C3  
                               u1030 039F                                 u1031 039E  
                               u1120 0257                                 u1104 03E0  
                               u1040 03B1                                 u1121 0256  
                               u1105 03DF                                 u1041 03B0  
                               u1130 0269                                 u1114 03ED  
                               u1050 03B6                                 u1131 0268  
                               u1115 03EC                                 u1051 03B5  
                               u1300 031A                                 u1204 02A6  
                               u1140 026E                                 u1301 0319  
                               u1205 02A5                                 u1141 026D  
                               u1230 02D5                                 u1214 02B3  
                               u1231 02D4                                 u1215 02B2  
                               u1240 02E2                                 u1224 02C1  
                               u1080 03D6                                 u1064 03BB  
                               u1241 02E1                                 u1225 02C0  
                               u1081 03D5                                 u1065 03BA  
                               u1314 031F                                 u1250 02E8  
                               u1154 0273                                 u1090 03DB  
                               u1074 03C8                                 u1315 031E  
                               u1251 02E7                                 u1155 0272  
                               u1091 03DA                                 u1075 03C7  
                               u1324 032C                                 u1260 02F6  
                               u1180 029C                                 u1164 0280  
                               u1325 032B                                 u1261 02F5  
                               u1181 029B                                 u1165 027F  
                               _LATA 010C                                 u1270 02FB  
                               u1190 02A1                                 u1174 028E  
                               _LATB 010D                                 u1271 02FA  
                               u1191 02A0                                 u1175 028D  
                               u1284 0300                                 u1285 02FF  
                               u1294 030D                                 u1295 030C  
                               i1l82 0060                                 i1l87 0070  
                    _filteredFreqPot 0043                      _filteredDutyPot 0041  
                               _main 0695                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 fsr1l 0006  
                               btemp 007E                       ?_runPotScaling 0070  
                               start 0072            ??_setupInternalOscillator 0033  
                              ?_main 0039                      __end_of___lldiv 04B0  
                              i1l212 0343                                i1l213 0356  
                              i1l223 0395                                i1l217 0377  
                              i1l218 0379                                i1l147 0635  
                              i1l341 0172                                i1l335 050A  
                              i1l328 0565                                i1l290 05AA  
                              i1l339 0157                                i1l284 0454  
                              i1l550 0663                                i1l383 060A  
                              i1l552 0677                                i1l564 05DD  
                              i1l586 04AF                                _PORTA 000C  
                              _PORTB 000D                                _TRISA 008C  
                              _TRISB 008D                  ___lmul@multiplicand 0074  
                        readADCRaw@i 0078                 readFilteredFreqPot@i 0029  
           readFilteredDutyPot@i_702 0028                                status 0003  
                              wtemp0 007E               initialiseGPIO@portType 0036  
                _initialiseADCModule 06EA                 readFilteredDutyPot@i 0029  
         initialiseADCPin@gpioNumber 0038                      __initialization 0074  
                       __end_of_main 06B1                    ?_initialiseADCPin 0070  
                        i1_writeGPIO 03F6                               ??_main 003D  
                 ??_initialiseADCPin 0033                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0039      __end_of_setupInternalOscillator 024E  
setupInternalOscillator@selectedFreq 0035                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             u101_20 0633                               u101_21 0630  
                             u102_24 0635                               i1l2100 006F  
                             i1l2040 03F7                               i1l2050 040A  
                             i1l2042 03F8                               i1l2060 0430  
                             i1l2052 040B                               i1l2044 03FE  
                             i1l2062 0435                               i1l2054 0410  
                             i1l2046 0403                               i1l2070 000E  
                             i1l2064 043A                               i1l2056 0415  
                             i1l2048 0406                               i1l2080 002B  
                             i1l2072 0013                               i1l1610 060B  
                             i1l2066 0447                               i1l2058 0422  
                             i1l2090 0051                               i1l2082 0030  
                             i1l2074 001A                               i1l1700 0335  
                             i1l1612 060E                               i1l2092 0055  
                             i1l2084 003C                               i1l2076 0020  
                             i1l2068 0006                               i1l1710 034F  
                             i1l1702 0337                               i1l1614 0619  
                             i1l2086 0044                               i1l2094 0055  
                             i1l2078 0025                               i1l1720 036C  
                             i1l1712 0354                               i1l1704 033D  
                             i1l1800 05B3                               i1l2096 006A  
                             i1l2088 004C                               i1l1730 037D  
                             i1l1714 035B                               i1l1706 0341  
                             i1l1802 05B7                               i1l2098 006B  
                             i1l1732 0381                               i1l1716 035D  
                             i1l1708 0349                               i1l1820 0478  
                             i1l1812 0455                               i1l1804 05BF  
                             i1l1750 0567                               i1l1742 0387  
                             i1l1734 0385                               i1l1726 036D  
                             i1l1718 0361                               i1l1910 04F7  
                             i1l1830 04A1                               i1l1822 047F  
                             i1l1814 0466                               i1l1806 05C6  
                             i1l1760 057A                               i1l1752 0568  
                             i1l1840 05FE                               i1l1744 038B  
                             i1l1736 0386                               i1l1728 0371  
                             i1l1904 04DD                               i1l1824 0491  
                             i1l1816 0469                               i1l1832 04A7  
                             i1l1808 05D5                               i1l1920 0153  
                             i1l1762 057B                               i1l1754 056E  
                             i1l1842 0603                               i1l1746 0391  
                             i1l1850 050B                               i1l1906 04ED  
                             i1l1826 0499                               i1l1818 0474  
                             i1l1922 0161                               i1l1914 0090  
                             i1l1780 05A9                               i1l1764 0580  
                             i1l1756 0573                               i1l1844 0608  
                             i1l1836 05DE                               i1l1860 051F  
                             i1l1908 04F1                               i1l1828 049A  
                             i1l1924 0165                               i1l1916 009B  
                             i1l1766 0585                               i1l1774 0593  
                             i1l1758 0576                               i1l1846 0609  
                             i1l1838 05FC                               i1l1862 0525  
                             i1l1790 0668                               i1l1926 0170  
                             i1l1918 0149                               i1l1776 0598  
                             i1l1768 0591                               i1l1872 0538  
                             i1l1864 052E                               i1l1856 050D  
                             i1l1792 066D                               i1l1784 0659  
                             i1l1778 059D                               i1l1874 0548  
                             i1l1866 0537                               i1l1858 051B  
                             i1l1890 04C0                               i1l1882 04B0  
                             i1l1794 0673                               i1l1786 065B  
                             i1l1876 054C                               i1l1892 04C4  
                             i1l1788 065F                               i1l1878 0552  
                             i1l1894 04CA                               i1l1798 05AB  
                             u140_20 0391                               i1l1896 04D3  
                             i1l1888 04B2                               u140_21 0390  
                             i1l1898 04DC                               u141_20 056E  
                             u133_20 033D                               u141_21 056D  
                             u133_21 033C                               u142_20 0580  
                             u134_20 0349                               u150_20 05B7  
                             u142_21 057F                               u134_21 0348  
                             u150_21 05B6                               u135_20 034F  
                             u135_21 034E                               u143_24 058A  
                             u143_25 0589                               u151_25 05C0  
                             u144_20 0598                               u136_20 035B  
                             u160_20 04A7                               u144_21 0597  
                             u136_21 035A                               u160_21 04A6  
                             u152_25 05C7                               u161_20 05E8  
                             u153_20 05D5                               u161_21 05E6  
                             u153_21 05D4                               u145_24 05A2  
                             u145_25 05A1                               u137_25 0364  
                             u162_20 05E9                               u138_20 0377  
                             u170_20 04CA                               u154_20 0466  
                             u146_20 065F                               u138_21 0376  
                             u170_21 04C9                               u154_21 0465  
                             u146_21 065E                               u163_20 05F7  
                             u139_20 037D                               u171_20 04F7  
                             u163_21 05F5                               u139_21 037C  
                             u171_21 04F6                               u155_25 046A  
                             u147_25 0664                               u164_20 05F8  
                             u172_20 0504                               u156_20 0478  
                             u180_20 0415                               u156_21 0477  
                             u180_21 0414                               u172_25 0500  
                             u148_25 0669                               u165_20 0603  
                             u149_20 0673                               u173_20 009B  
                             u165_21 0602                               u149_21 0672  
                             u173_21 009A                               u181_24 041A  
                             u157_25 0479                               u181_25 0419  
                             u166_20 0608                               u158_20 0491  
                             u174_20 00BC                               u190_20 0030  
                             u166_21 0607                               u158_21 0490  
                             u190_21 002F                               u182_24 0427  
                             u158_25 048D                               u174_25 00B8  
                             u182_25 0426                               u167_20 0525  
                             u175_20 00E9                               u183_20 0435  
                             u191_20 0051                               u167_21 0524  
                             u183_21 0434                               u191_21 0050  
                             u159_25 049B                               u175_25 00E5  
                             u168_20 0552                               u176_20 0153  
                             u184_20 043A                               u192_20 005C  
                             u168_21 0551                               u176_21 0152  
                             u184_21 0439                               u192_21 005A  
                             u176_25 014F                               u169_20 055F  
                             u177_20 0161                               u193_20 005D  
                             u177_21 0160                               u185_24 043F  
                             u169_25 055B                               u177_25 015D  
                             u185_25 043E                               u178_20 03FE  
                             u194_20 0066                               u178_21 03FD  
                             u194_21 0064                               u186_24 044C  
                             u186_25 044B                               u179_20 0410  
                             u195_20 0067                               u187_20 000E  
                             u179_21 040F                               u187_21 000D  
                             u188_20 0020                               u188_21 001F  
                    ??_runPotScaling 0026                               u189_20 002B  
                             u189_21 002A              initialiseGPIO@direction 0033  
                   readGPIO@portType 0077                  readADCRaw@gpioValid 0077  
                             ___lmul 05AB                               ___wmul 0659  
                          ??___lldiv 0020                     __end_of_readGPIO 05AB  
                             _tripIL 0053            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 06D3  
         initialiseADCPin@portNumber 0037                     __end_of_setupPWM 0695  
                    _currentTripRead 05DE              __end_of__initialization 008C  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
              i1writeGPIO@gpioNumber 0074                        _currentILFIFO 00A0  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 0072  
                         __pbssBANK0 003D                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pmaintext 0695  
                            ?___lmul 0070                              ?___wmul 0070  
                         __pintentry 0004                              _CCP1CON 0293  
                     ___lmul@product 0078              __end_of_currentTripRead 060B  
        __end_of_setPWMDutyandPeriod 0636     __end_of_initialiseCurrentSensors 0659  
           initialiseADCPin@portType 0036                i1writeGPIO@portNumber 0075  
                         _filteredIL 0045                            ?_readGPIO 0070  
                         _readADCRaw 0334                  _readFilteredFreqPot 04B0  
                _readFilteredDutyPot 050B                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 0037  
                            ___lldiv 0455                         ?i1_writeGPIO 0070  
               ?_readFilteredFreqPot 007B                              __ptext1 06DC  
                            __ptext2 0678                              __ptext3 0173  
                            __ptext4 06D3                              __ptext5 0636  
                            __ptext6 0396                              __ptext7 024E  
                            __ptext8 02CA                              __ptext9 06EA  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                            _setDuty 004D                i1writeGPIO@writeValue 0070  
                            _tripIDS 0054                              clrloop0 06E5  
               end_of_initialization 008C                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
         ??_initialisePotentiometers 0039                           _prevPeriod 0055  
                  writeGPIO@portType 0036                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 03F6             initialiseGPIO@portNumber 0038  
                        ?_readADCRaw 0070                          _CCP1CONbits 0293  
                      readGPIO@readA 0072                        readGPIO@readB 0074  
              __end_of_runPotScaling 0173            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 05DE          __end_of_initialiseADCModule 06F0  
                     __end_of___wmul 0678                       _clockFrequency 003D  
                start_initialization 0074         __end_of_setupTimer0Interrupt 06E4  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                           ??___wmul 0074                            ___latbits 0001  
                      __pcstackBANK0 0020                           ?_Tick980Hz 0070  
                   _initialiseADCPin 02CA                   readGPIO@gpioNumber 0078  
                     _initialiseGPIO 024E     __end_of_initialisePotentiometers 06DC  
                           ?___lldiv 0076                      readADCRaw@i_616 0079  
                          _latestIL1 0049      readFilteredDutyPot@sumOfSamples 0024  
                     ___wmul@product 0074               __end_of_initialiseGPIO 02CA  
                          clear_ram0 06E4                            _setPeriod 0056  
                           _PIE1bits 0091                             _PIR1bits 0011  
       setPWMDutyandPeriod@dutyCycle 0070                 _setupTimer0Interrupt 06DC  
                _currentTripRead$747 007A                          _filteredIDS 0047  
                         _ADCON0bits 009D                    ___wmul@multiplier 0070  
                 readGPIO@portNumber 0076                          _freqPotFIFO 0140  
                          _writeGPIO 0396                          ??_Tick980Hz 0032  
                  ___lmul@multiplier 0070                  _readILCurrentADCRaw 0000  
                       ??_readADCRaw 0072                      ?_initialiseGPIO 0033  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 050B          __end_of_readFilteredDutyPot 0566  
               runPotScaling@maxDuty 002E                 runPotScaling@minDuty 0030  
                writeGPIO@gpioNumber 0037                   __end_of_readADCRaw 0396  
           readFilteredFreqPot@i_706 0028                           ?_writeGPIO 0033  
                           __ptext11 03F6                             __ptext20 05DE  
                           __ptext12 0090                             __ptext21 0566  
                           __ptext13 060B                             __ptext14 0659  
                           __ptext15 05AB                             __ptext16 0455  
                           __ptext17 04B0                             __ptext18 050B  
                           __ptext19 0334            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 0120                  i1writeGPIO@portType 0073  
                           _readGPIO 0566                        _timerSlotHalf 0051  
                       _PSTR1CONbits 0296                             _prevDuty 004B  
                           _setupPWM 0678                             int$flags 007E  
           __end_of_initialiseADCPin 0334                             main@argc 0039  
                           main@argv 003B      readFilteredFreqPot@sumOfSamples 0024  
                   _timerSlotQuarter 0050                           _INTCONbits 000B  
                writeGPIO@portNumber 0038                             intlevel1 0000  
           _initialiseCurrentSensors 0636                     ___lldiv@dividend 007A  
             ??_setupTimer0Interrupt 0033                           _OSCCONbits 0099  
                        _potSetCount 0052                  _setPWMDutyandPeriod 060B  
            _setupInternalOscillator 0173                        _emergencyStop 004F  
                      ??i1_writeGPIO 0071                        __pstringtext1 06B1  
                      __pstringtext2 06C3                        __pstringtext3 0000  
                         _OPTION_REG 0095                     ___lldiv@quotient 0021  
                writeGPIO@writeValue 0033                          ??_writeGPIO 0034  
               ?_setPWMDutyandPeriod 0070                readADCRaw@returnValue 0074  
                  ??_currentTripRead 0079                        _runPotScaling 0090  
               readGPIO@returnValueA 0073                 readGPIO@returnValueB 0075  
