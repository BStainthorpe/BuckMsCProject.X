

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Jan 30 17:58:43 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F1827 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0016                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001C                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  011A                     	;# 
   131  011B                     	;# 
   132  011D                     	;# 
   133  011E                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019C                     	;# 
   152  019C                     	;# 
   153  019D                     	;# 
   154  019E                     	;# 
   155  019F                     	;# 
   156  020C                     	;# 
   157  020D                     	;# 
   158  0211                     	;# 
   159  0211                     	;# 
   160  0212                     	;# 
   161  0212                     	;# 
   162  0213                     	;# 
   163  0213                     	;# 
   164  0214                     	;# 
   165  0214                     	;# 
   166  0215                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0216                     	;# 
   170  0216                     	;# 
   171  0217                     	;# 
   172  0217                     	;# 
   173  0219                     	;# 
   174  021A                     	;# 
   175  021B                     	;# 
   176  021C                     	;# 
   177  021D                     	;# 
   178  021E                     	;# 
   179  021F                     	;# 
   180  0291                     	;# 
   181  0291                     	;# 
   182  0292                     	;# 
   183  0293                     	;# 
   184  0294                     	;# 
   185  0295                     	;# 
   186  0295                     	;# 
   187  0296                     	;# 
   188  0298                     	;# 
   189  0298                     	;# 
   190  0299                     	;# 
   191  029A                     	;# 
   192  029B                     	;# 
   193  029C                     	;# 
   194  029C                     	;# 
   195  029D                     	;# 
   196  029E                     	;# 
   197  029E                     	;# 
   198  0311                     	;# 
   199  0311                     	;# 
   200  0312                     	;# 
   201  0313                     	;# 
   202  0318                     	;# 
   203  0318                     	;# 
   204  0319                     	;# 
   205  031A                     	;# 
   206  0394                     	;# 
   207  0395                     	;# 
   208  0396                     	;# 
   209  039A                     	;# 
   210  039C                     	;# 
   211  039D                     	;# 
   212  039E                     	;# 
   213  039F                     	;# 
   214  0415                     	;# 
   215  0416                     	;# 
   216  0417                     	;# 
   217  041C                     	;# 
   218  041D                     	;# 
   219  041E                     	;# 
   220  0FE4                     	;# 
   221  0FE5                     	;# 
   222  0FE6                     	;# 
   223  0FE7                     	;# 
   224  0FE8                     	;# 
   225  0FE9                     	;# 
   226  0FEA                     	;# 
   227  0FEB                     	;# 
   228  0FED                     	;# 
   229  0FEE                     	;# 
   230  0FEF                     	;# 
   231  0000                     	;# 
   232  0001                     	;# 
   233  0002                     	;# 
   234  0003                     	;# 
   235  0004                     	;# 
   236  0005                     	;# 
   237  0006                     	;# 
   238  0007                     	;# 
   239  0008                     	;# 
   240  0009                     	;# 
   241  000A                     	;# 
   242  000B                     	;# 
   243  000C                     	;# 
   244  000D                     	;# 
   245  0011                     	;# 
   246  0012                     	;# 
   247  0013                     	;# 
   248  0014                     	;# 
   249  0015                     	;# 
   250  0016                     	;# 
   251  0016                     	;# 
   252  0017                     	;# 
   253  0018                     	;# 
   254  0019                     	;# 
   255  001A                     	;# 
   256  001B                     	;# 
   257  001C                     	;# 
   258  001E                     	;# 
   259  001F                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0094                     	;# 
   266  0095                     	;# 
   267  0096                     	;# 
   268  0097                     	;# 
   269  0098                     	;# 
   270  0099                     	;# 
   271  009A                     	;# 
   272  009B                     	;# 
   273  009B                     	;# 
   274  009C                     	;# 
   275  009D                     	;# 
   276  009E                     	;# 
   277  010C                     	;# 
   278  010D                     	;# 
   279  0111                     	;# 
   280  0112                     	;# 
   281  0113                     	;# 
   282  0114                     	;# 
   283  0115                     	;# 
   284  0116                     	;# 
   285  0117                     	;# 
   286  0118                     	;# 
   287  0119                     	;# 
   288  011A                     	;# 
   289  011B                     	;# 
   290  011D                     	;# 
   291  011E                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0191                     	;# 
   295  0191                     	;# 
   296  0192                     	;# 
   297  0193                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0194                     	;# 
   301  0195                     	;# 
   302  0196                     	;# 
   303  0199                     	;# 
   304  019A                     	;# 
   305  019B                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019C                     	;# 
   310  019C                     	;# 
   311  019D                     	;# 
   312  019E                     	;# 
   313  019F                     	;# 
   314  020C                     	;# 
   315  020D                     	;# 
   316  0211                     	;# 
   317  0211                     	;# 
   318  0212                     	;# 
   319  0212                     	;# 
   320  0213                     	;# 
   321  0213                     	;# 
   322  0214                     	;# 
   323  0214                     	;# 
   324  0215                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0216                     	;# 
   328  0216                     	;# 
   329  0217                     	;# 
   330  0217                     	;# 
   331  0219                     	;# 
   332  021A                     	;# 
   333  021B                     	;# 
   334  021C                     	;# 
   335  021D                     	;# 
   336  021E                     	;# 
   337  021F                     	;# 
   338  0291                     	;# 
   339  0291                     	;# 
   340  0292                     	;# 
   341  0293                     	;# 
   342  0294                     	;# 
   343  0295                     	;# 
   344  0295                     	;# 
   345  0296                     	;# 
   346  0298                     	;# 
   347  0298                     	;# 
   348  0299                     	;# 
   349  029A                     	;# 
   350  029B                     	;# 
   351  029C                     	;# 
   352  029C                     	;# 
   353  029D                     	;# 
   354  029E                     	;# 
   355  029E                     	;# 
   356  0311                     	;# 
   357  0311                     	;# 
   358  0312                     	;# 
   359  0313                     	;# 
   360  0318                     	;# 
   361  0318                     	;# 
   362  0319                     	;# 
   363  031A                     	;# 
   364  0394                     	;# 
   365  0395                     	;# 
   366  0396                     	;# 
   367  039A                     	;# 
   368  039C                     	;# 
   369  039D                     	;# 
   370  039E                     	;# 
   371  039F                     	;# 
   372  0415                     	;# 
   373  0416                     	;# 
   374  0417                     	;# 
   375  041C                     	;# 
   376  041D                     	;# 
   377  041E                     	;# 
   378  0FE4                     	;# 
   379  0FE5                     	;# 
   380  0FE6                     	;# 
   381  0FE7                     	;# 
   382  0FE8                     	;# 
   383  0FE9                     	;# 
   384  0FEA                     	;# 
   385  0FEB                     	;# 
   386  0FED                     	;# 
   387  0FEE                     	;# 
   388  0FEF                     	;# 
   389  0000                     	;# 
   390  0001                     	;# 
   391  0002                     	;# 
   392  0003                     	;# 
   393  0004                     	;# 
   394  0005                     	;# 
   395  0006                     	;# 
   396  0007                     	;# 
   397  0008                     	;# 
   398  0009                     	;# 
   399  000A                     	;# 
   400  000B                     	;# 
   401  000C                     	;# 
   402  000D                     	;# 
   403  0011                     	;# 
   404  0012                     	;# 
   405  0013                     	;# 
   406  0014                     	;# 
   407  0015                     	;# 
   408  0016                     	;# 
   409  0016                     	;# 
   410  0017                     	;# 
   411  0018                     	;# 
   412  0019                     	;# 
   413  001A                     	;# 
   414  001B                     	;# 
   415  001C                     	;# 
   416  001E                     	;# 
   417  001F                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  010C                     	;# 
   436  010D                     	;# 
   437  0111                     	;# 
   438  0112                     	;# 
   439  0113                     	;# 
   440  0114                     	;# 
   441  0115                     	;# 
   442  0116                     	;# 
   443  0117                     	;# 
   444  0118                     	;# 
   445  0119                     	;# 
   446  011A                     	;# 
   447  011B                     	;# 
   448  011D                     	;# 
   449  011E                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0191                     	;# 
   453  0191                     	;# 
   454  0192                     	;# 
   455  0193                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0194                     	;# 
   459  0195                     	;# 
   460  0196                     	;# 
   461  0199                     	;# 
   462  019A                     	;# 
   463  019B                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019C                     	;# 
   468  019C                     	;# 
   469  019D                     	;# 
   470  019E                     	;# 
   471  019F                     	;# 
   472  020C                     	;# 
   473  020D                     	;# 
   474  0211                     	;# 
   475  0211                     	;# 
   476  0212                     	;# 
   477  0212                     	;# 
   478  0213                     	;# 
   479  0213                     	;# 
   480  0214                     	;# 
   481  0214                     	;# 
   482  0215                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0216                     	;# 
   486  0216                     	;# 
   487  0217                     	;# 
   488  0217                     	;# 
   489  0219                     	;# 
   490  021A                     	;# 
   491  021B                     	;# 
   492  021C                     	;# 
   493  021D                     	;# 
   494  021E                     	;# 
   495  021F                     	;# 
   496  0291                     	;# 
   497  0291                     	;# 
   498  0292                     	;# 
   499  0293                     	;# 
   500  0294                     	;# 
   501  0295                     	;# 
   502  0295                     	;# 
   503  0296                     	;# 
   504  0298                     	;# 
   505  0298                     	;# 
   506  0299                     	;# 
   507  029A                     	;# 
   508  029B                     	;# 
   509  029C                     	;# 
   510  029C                     	;# 
   511  029D                     	;# 
   512  029E                     	;# 
   513  029E                     	;# 
   514  0311                     	;# 
   515  0311                     	;# 
   516  0312                     	;# 
   517  0313                     	;# 
   518  0318                     	;# 
   519  0318                     	;# 
   520  0319                     	;# 
   521  031A                     	;# 
   522  0394                     	;# 
   523  0395                     	;# 
   524  0396                     	;# 
   525  039A                     	;# 
   526  039C                     	;# 
   527  039D                     	;# 
   528  039E                     	;# 
   529  039F                     	;# 
   530  0415                     	;# 
   531  0416                     	;# 
   532  0417                     	;# 
   533  041C                     	;# 
   534  041D                     	;# 
   535  041E                     	;# 
   536  0FE4                     	;# 
   537  0FE5                     	;# 
   538  0FE6                     	;# 
   539  0FE7                     	;# 
   540  0FE8                     	;# 
   541  0FE9                     	;# 
   542  0FEA                     	;# 
   543  0FEB                     	;# 
   544  0FED                     	;# 
   545  0FEE                     	;# 
   546  0FEF                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  0011                     	;# 
   562  0012                     	;# 
   563  0013                     	;# 
   564  0014                     	;# 
   565  0015                     	;# 
   566  0016                     	;# 
   567  0016                     	;# 
   568  0017                     	;# 
   569  0018                     	;# 
   570  0019                     	;# 
   571  001A                     	;# 
   572  001B                     	;# 
   573  001C                     	;# 
   574  001E                     	;# 
   575  001F                     	;# 
   576  008C                     	;# 
   577  008D                     	;# 
   578  0091                     	;# 
   579  0092                     	;# 
   580  0093                     	;# 
   581  0094                     	;# 
   582  0095                     	;# 
   583  0096                     	;# 
   584  0097                     	;# 
   585  0098                     	;# 
   586  0099                     	;# 
   587  009A                     	;# 
   588  009B                     	;# 
   589  009B                     	;# 
   590  009C                     	;# 
   591  009D                     	;# 
   592  009E                     	;# 
   593  010C                     	;# 
   594  010D                     	;# 
   595  0111                     	;# 
   596  0112                     	;# 
   597  0113                     	;# 
   598  0114                     	;# 
   599  0115                     	;# 
   600  0116                     	;# 
   601  0117                     	;# 
   602  0118                     	;# 
   603  0119                     	;# 
   604  011A                     	;# 
   605  011B                     	;# 
   606  011D                     	;# 
   607  011E                     	;# 
   608  018C                     	;# 
   609  018D                     	;# 
   610  0191                     	;# 
   611  0191                     	;# 
   612  0192                     	;# 
   613  0193                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0194                     	;# 
   617  0195                     	;# 
   618  0196                     	;# 
   619  0199                     	;# 
   620  019A                     	;# 
   621  019B                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019C                     	;# 
   626  019C                     	;# 
   627  019D                     	;# 
   628  019E                     	;# 
   629  019F                     	;# 
   630  020C                     	;# 
   631  020D                     	;# 
   632  0211                     	;# 
   633  0211                     	;# 
   634  0212                     	;# 
   635  0212                     	;# 
   636  0213                     	;# 
   637  0213                     	;# 
   638  0214                     	;# 
   639  0214                     	;# 
   640  0215                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0216                     	;# 
   644  0216                     	;# 
   645  0217                     	;# 
   646  0217                     	;# 
   647  0219                     	;# 
   648  021A                     	;# 
   649  021B                     	;# 
   650  021C                     	;# 
   651  021D                     	;# 
   652  021E                     	;# 
   653  021F                     	;# 
   654  0291                     	;# 
   655  0291                     	;# 
   656  0292                     	;# 
   657  0293                     	;# 
   658  0294                     	;# 
   659  0295                     	;# 
   660  0295                     	;# 
   661  0296                     	;# 
   662  0298                     	;# 
   663  0298                     	;# 
   664  0299                     	;# 
   665  029A                     	;# 
   666  029B                     	;# 
   667  029C                     	;# 
   668  029C                     	;# 
   669  029D                     	;# 
   670  029E                     	;# 
   671  029E                     	;# 
   672  0311                     	;# 
   673  0311                     	;# 
   674  0312                     	;# 
   675  0313                     	;# 
   676  0318                     	;# 
   677  0318                     	;# 
   678  0319                     	;# 
   679  031A                     	;# 
   680  0394                     	;# 
   681  0395                     	;# 
   682  0396                     	;# 
   683  039A                     	;# 
   684  039C                     	;# 
   685  039D                     	;# 
   686  039E                     	;# 
   687  039F                     	;# 
   688  0415                     	;# 
   689  0416                     	;# 
   690  0417                     	;# 
   691  041C                     	;# 
   692  041D                     	;# 
   693  041E                     	;# 
   694  0FE4                     	;# 
   695  0FE5                     	;# 
   696  0FE6                     	;# 
   697  0FE7                     	;# 
   698  0FE8                     	;# 
   699  0FE9                     	;# 
   700  0FEA                     	;# 
   701  0FEB                     	;# 
   702  0FED                     	;# 
   703  0FEE                     	;# 
   704  0FEF                     	;# 
   705  0000                     	;# 
   706  0001                     	;# 
   707  0002                     	;# 
   708  0003                     	;# 
   709  0004                     	;# 
   710  0005                     	;# 
   711  0006                     	;# 
   712  0007                     	;# 
   713  0008                     	;# 
   714  0009                     	;# 
   715  000A                     	;# 
   716  000B                     	;# 
   717  000C                     	;# 
   718  000D                     	;# 
   719  0011                     	;# 
   720  0012                     	;# 
   721  0013                     	;# 
   722  0014                     	;# 
   723  0015                     	;# 
   724  0016                     	;# 
   725  0016                     	;# 
   726  0017                     	;# 
   727  0018                     	;# 
   728  0019                     	;# 
   729  001A                     	;# 
   730  001B                     	;# 
   731  001C                     	;# 
   732  001E                     	;# 
   733  001F                     	;# 
   734  008C                     	;# 
   735  008D                     	;# 
   736  0091                     	;# 
   737  0092                     	;# 
   738  0093                     	;# 
   739  0094                     	;# 
   740  0095                     	;# 
   741  0096                     	;# 
   742  0097                     	;# 
   743  0098                     	;# 
   744  0099                     	;# 
   745  009A                     	;# 
   746  009B                     	;# 
   747  009B                     	;# 
   748  009C                     	;# 
   749  009D                     	;# 
   750  009E                     	;# 
   751  010C                     	;# 
   752  010D                     	;# 
   753  0111                     	;# 
   754  0112                     	;# 
   755  0113                     	;# 
   756  0114                     	;# 
   757  0115                     	;# 
   758  0116                     	;# 
   759  0117                     	;# 
   760  0118                     	;# 
   761  0119                     	;# 
   762  011A                     	;# 
   763  011B                     	;# 
   764  011D                     	;# 
   765  011E                     	;# 
   766  018C                     	;# 
   767  018D                     	;# 
   768  0191                     	;# 
   769  0191                     	;# 
   770  0192                     	;# 
   771  0193                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0194                     	;# 
   775  0195                     	;# 
   776  0196                     	;# 
   777  0199                     	;# 
   778  019A                     	;# 
   779  019B                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019C                     	;# 
   784  019C                     	;# 
   785  019D                     	;# 
   786  019E                     	;# 
   787  019F                     	;# 
   788  020C                     	;# 
   789  020D                     	;# 
   790  0211                     	;# 
   791  0211                     	;# 
   792  0212                     	;# 
   793  0212                     	;# 
   794  0213                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0214                     	;# 
   798  0215                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0216                     	;# 
   802  0216                     	;# 
   803  0217                     	;# 
   804  0217                     	;# 
   805  0219                     	;# 
   806  021A                     	;# 
   807  021B                     	;# 
   808  021C                     	;# 
   809  021D                     	;# 
   810  021E                     	;# 
   811  021F                     	;# 
   812  0291                     	;# 
   813  0291                     	;# 
   814  0292                     	;# 
   815  0293                     	;# 
   816  0294                     	;# 
   817  0295                     	;# 
   818  0295                     	;# 
   819  0296                     	;# 
   820  0298                     	;# 
   821  0298                     	;# 
   822  0299                     	;# 
   823  029A                     	;# 
   824  029B                     	;# 
   825  029C                     	;# 
   826  029C                     	;# 
   827  029D                     	;# 
   828  029E                     	;# 
   829  029E                     	;# 
   830  0311                     	;# 
   831  0311                     	;# 
   832  0312                     	;# 
   833  0313                     	;# 
   834  0318                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  0394                     	;# 
   839  0395                     	;# 
   840  0396                     	;# 
   841  039A                     	;# 
   842  039C                     	;# 
   843  039D                     	;# 
   844  039E                     	;# 
   845  039F                     	;# 
   846  0415                     	;# 
   847  0416                     	;# 
   848  0417                     	;# 
   849  041C                     	;# 
   850  041D                     	;# 
   851  041E                     	;# 
   852  0FE4                     	;# 
   853  0FE5                     	;# 
   854  0FE6                     	;# 
   855  0FE7                     	;# 
   856  0FE8                     	;# 
   857  0FE9                     	;# 
   858  0FEA                     	;# 
   859  0FEB                     	;# 
   860  0FED                     	;# 
   861  0FEE                     	;# 
   862  0FEF                     	;# 
   863  0000                     	;# 
   864  0001                     	;# 
   865  0002                     	;# 
   866  0003                     	;# 
   867  0004                     	;# 
   868  0005                     	;# 
   869  0006                     	;# 
   870  0007                     	;# 
   871  0008                     	;# 
   872  0009                     	;# 
   873  000A                     	;# 
   874  000B                     	;# 
   875  000C                     	;# 
   876  000D                     	;# 
   877  0011                     	;# 
   878  0012                     	;# 
   879  0013                     	;# 
   880  0014                     	;# 
   881  0015                     	;# 
   882  0016                     	;# 
   883  0016                     	;# 
   884  0017                     	;# 
   885  0018                     	;# 
   886  0019                     	;# 
   887  001A                     	;# 
   888  001B                     	;# 
   889  001C                     	;# 
   890  001E                     	;# 
   891  001F                     	;# 
   892  008C                     	;# 
   893  008D                     	;# 
   894  0091                     	;# 
   895  0092                     	;# 
   896  0093                     	;# 
   897  0094                     	;# 
   898  0095                     	;# 
   899  0096                     	;# 
   900  0097                     	;# 
   901  0098                     	;# 
   902  0099                     	;# 
   903  009A                     	;# 
   904  009B                     	;# 
   905  009B                     	;# 
   906  009C                     	;# 
   907  009D                     	;# 
   908  009E                     	;# 
   909  010C                     	;# 
   910  010D                     	;# 
   911  0111                     	;# 
   912  0112                     	;# 
   913  0113                     	;# 
   914  0114                     	;# 
   915  0115                     	;# 
   916  0116                     	;# 
   917  0117                     	;# 
   918  0118                     	;# 
   919  0119                     	;# 
   920  011A                     	;# 
   921  011B                     	;# 
   922  011D                     	;# 
   923  011E                     	;# 
   924  018C                     	;# 
   925  018D                     	;# 
   926  0191                     	;# 
   927  0191                     	;# 
   928  0192                     	;# 
   929  0193                     	;# 
   930  0193                     	;# 
   931  0193                     	;# 
   932  0194                     	;# 
   933  0195                     	;# 
   934  0196                     	;# 
   935  0199                     	;# 
   936  019A                     	;# 
   937  019B                     	;# 
   938  019B                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019C                     	;# 
   942  019C                     	;# 
   943  019D                     	;# 
   944  019E                     	;# 
   945  019F                     	;# 
   946  020C                     	;# 
   947  020D                     	;# 
   948  0211                     	;# 
   949  0211                     	;# 
   950  0212                     	;# 
   951  0212                     	;# 
   952  0213                     	;# 
   953  0213                     	;# 
   954  0214                     	;# 
   955  0214                     	;# 
   956  0215                     	;# 
   957  0215                     	;# 
   958  0215                     	;# 
   959  0216                     	;# 
   960  0216                     	;# 
   961  0217                     	;# 
   962  0217                     	;# 
   963  0219                     	;# 
   964  021A                     	;# 
   965  021B                     	;# 
   966  021C                     	;# 
   967  021D                     	;# 
   968  021E                     	;# 
   969  021F                     	;# 
   970  0291                     	;# 
   971  0291                     	;# 
   972  0292                     	;# 
   973  0293                     	;# 
   974  0294                     	;# 
   975  0295                     	;# 
   976  0295                     	;# 
   977  0296                     	;# 
   978  0298                     	;# 
   979  0298                     	;# 
   980  0299                     	;# 
   981  029A                     	;# 
   982  029B                     	;# 
   983  029C                     	;# 
   984  029C                     	;# 
   985  029D                     	;# 
   986  029E                     	;# 
   987  029E                     	;# 
   988  0311                     	;# 
   989  0311                     	;# 
   990  0312                     	;# 
   991  0313                     	;# 
   992  0318                     	;# 
   993  0318                     	;# 
   994  0319                     	;# 
   995  031A                     	;# 
   996  0394                     	;# 
   997  0395                     	;# 
   998  0396                     	;# 
   999  039A                     	;# 
  1000  039C                     	;# 
  1001  039D                     	;# 
  1002  039E                     	;# 
  1003  039F                     	;# 
  1004  0415                     	;# 
  1005  0416                     	;# 
  1006  0417                     	;# 
  1007  041C                     	;# 
  1008  041D                     	;# 
  1009  041E                     	;# 
  1010  0FE4                     	;# 
  1011  0FE5                     	;# 
  1012  0FE6                     	;# 
  1013  0FE7                     	;# 
  1014  0FE8                     	;# 
  1015  0FE9                     	;# 
  1016  0FEA                     	;# 
  1017  0FEB                     	;# 
  1018  0FED                     	;# 
  1019  0FEE                     	;# 
  1020  0FEF                     	;# 
  1021  0000                     	;# 
  1022  0001                     	;# 
  1023  0002                     	;# 
  1024  0003                     	;# 
  1025  0004                     	;# 
  1026  0005                     	;# 
  1027  0006                     	;# 
  1028  0007                     	;# 
  1029  0008                     	;# 
  1030  0009                     	;# 
  1031  000A                     	;# 
  1032  000B                     	;# 
  1033  000C                     	;# 
  1034  000D                     	;# 
  1035  0011                     	;# 
  1036  0012                     	;# 
  1037  0013                     	;# 
  1038  0014                     	;# 
  1039  0015                     	;# 
  1040  0016                     	;# 
  1041  0016                     	;# 
  1042  0017                     	;# 
  1043  0018                     	;# 
  1044  0019                     	;# 
  1045  001A                     	;# 
  1046  001B                     	;# 
  1047  001C                     	;# 
  1048  001E                     	;# 
  1049  001F                     	;# 
  1050  008C                     	;# 
  1051  008D                     	;# 
  1052  0091                     	;# 
  1053  0092                     	;# 
  1054  0093                     	;# 
  1055  0094                     	;# 
  1056  0095                     	;# 
  1057  0096                     	;# 
  1058  0097                     	;# 
  1059  0098                     	;# 
  1060  0099                     	;# 
  1061  009A                     	;# 
  1062  009B                     	;# 
  1063  009B                     	;# 
  1064  009C                     	;# 
  1065  009D                     	;# 
  1066  009E                     	;# 
  1067  010C                     	;# 
  1068  010D                     	;# 
  1069  0111                     	;# 
  1070  0112                     	;# 
  1071  0113                     	;# 
  1072  0114                     	;# 
  1073  0115                     	;# 
  1074  0116                     	;# 
  1075  0117                     	;# 
  1076  0118                     	;# 
  1077  0119                     	;# 
  1078  011A                     	;# 
  1079  011B                     	;# 
  1080  011D                     	;# 
  1081  011E                     	;# 
  1082  018C                     	;# 
  1083  018D                     	;# 
  1084  0191                     	;# 
  1085  0191                     	;# 
  1086  0192                     	;# 
  1087  0193                     	;# 
  1088  0193                     	;# 
  1089  0193                     	;# 
  1090  0194                     	;# 
  1091  0195                     	;# 
  1092  0196                     	;# 
  1093  0199                     	;# 
  1094  019A                     	;# 
  1095  019B                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019C                     	;# 
  1100  019C                     	;# 
  1101  019D                     	;# 
  1102  019E                     	;# 
  1103  019F                     	;# 
  1104  020C                     	;# 
  1105  020D                     	;# 
  1106  0211                     	;# 
  1107  0211                     	;# 
  1108  0212                     	;# 
  1109  0212                     	;# 
  1110  0213                     	;# 
  1111  0213                     	;# 
  1112  0214                     	;# 
  1113  0214                     	;# 
  1114  0215                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0216                     	;# 
  1118  0216                     	;# 
  1119  0217                     	;# 
  1120  0217                     	;# 
  1121  0219                     	;# 
  1122  021A                     	;# 
  1123  021B                     	;# 
  1124  021C                     	;# 
  1125  021D                     	;# 
  1126  021E                     	;# 
  1127  021F                     	;# 
  1128  0291                     	;# 
  1129  0291                     	;# 
  1130  0292                     	;# 
  1131  0293                     	;# 
  1132  0294                     	;# 
  1133  0295                     	;# 
  1134  0295                     	;# 
  1135  0296                     	;# 
  1136  0298                     	;# 
  1137  0298                     	;# 
  1138  0299                     	;# 
  1139  029A                     	;# 
  1140  029B                     	;# 
  1141  029C                     	;# 
  1142  029C                     	;# 
  1143  029D                     	;# 
  1144  029E                     	;# 
  1145  029E                     	;# 
  1146  0311                     	;# 
  1147  0311                     	;# 
  1148  0312                     	;# 
  1149  0313                     	;# 
  1150  0318                     	;# 
  1151  0318                     	;# 
  1152  0319                     	;# 
  1153  031A                     	;# 
  1154  0394                     	;# 
  1155  0395                     	;# 
  1156  0396                     	;# 
  1157  039A                     	;# 
  1158  039C                     	;# 
  1159  039D                     	;# 
  1160  039E                     	;# 
  1161  039F                     	;# 
  1162  0415                     	;# 
  1163  0416                     	;# 
  1164  0417                     	;# 
  1165  041C                     	;# 
  1166  041D                     	;# 
  1167  041E                     	;# 
  1168  0FE4                     	;# 
  1169  0FE5                     	;# 
  1170  0FE6                     	;# 
  1171  0FE7                     	;# 
  1172  0FE8                     	;# 
  1173  0FE9                     	;# 
  1174  0FEA                     	;# 
  1175  0FEB                     	;# 
  1176  0FED                     	;# 
  1177  0FEE                     	;# 
  1178  0FEF                     	;# 
  1179  0000                     	;# 
  1180  0001                     	;# 
  1181  0002                     	;# 
  1182  0003                     	;# 
  1183  0004                     	;# 
  1184  0005                     	;# 
  1185  0006                     	;# 
  1186  0007                     	;# 
  1187  0008                     	;# 
  1188  0009                     	;# 
  1189  000A                     	;# 
  1190  000B                     	;# 
  1191  000C                     	;# 
  1192  000D                     	;# 
  1193  0011                     	;# 
  1194  0012                     	;# 
  1195  0013                     	;# 
  1196  0014                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  001E                     	;# 
  1207  001F                     	;# 
  1208  008C                     	;# 
  1209  008D                     	;# 
  1210  0091                     	;# 
  1211  0092                     	;# 
  1212  0093                     	;# 
  1213  0094                     	;# 
  1214  0095                     	;# 
  1215  0096                     	;# 
  1216  0097                     	;# 
  1217  0098                     	;# 
  1218  0099                     	;# 
  1219  009A                     	;# 
  1220  009B                     	;# 
  1221  009B                     	;# 
  1222  009C                     	;# 
  1223  009D                     	;# 
  1224  009E                     	;# 
  1225  010C                     	;# 
  1226  010D                     	;# 
  1227  0111                     	;# 
  1228  0112                     	;# 
  1229  0113                     	;# 
  1230  0114                     	;# 
  1231  0115                     	;# 
  1232  0116                     	;# 
  1233  0117                     	;# 
  1234  0118                     	;# 
  1235  0119                     	;# 
  1236  011A                     	;# 
  1237  011B                     	;# 
  1238  011D                     	;# 
  1239  011E                     	;# 
  1240  018C                     	;# 
  1241  018D                     	;# 
  1242  0191                     	;# 
  1243  0191                     	;# 
  1244  0192                     	;# 
  1245  0193                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0194                     	;# 
  1249  0195                     	;# 
  1250  0196                     	;# 
  1251  0199                     	;# 
  1252  019A                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019C                     	;# 
  1258  019C                     	;# 
  1259  019D                     	;# 
  1260  019E                     	;# 
  1261  019F                     	;# 
  1262  020C                     	;# 
  1263  020D                     	;# 
  1264  0211                     	;# 
  1265  0211                     	;# 
  1266  0212                     	;# 
  1267  0212                     	;# 
  1268  0213                     	;# 
  1269  0213                     	;# 
  1270  0214                     	;# 
  1271  0214                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0219                     	;# 
  1280  021A                     	;# 
  1281  021B                     	;# 
  1282  021C                     	;# 
  1283  021D                     	;# 
  1284  021E                     	;# 
  1285  021F                     	;# 
  1286  0291                     	;# 
  1287  0291                     	;# 
  1288  0292                     	;# 
  1289  0293                     	;# 
  1290  0294                     	;# 
  1291  0295                     	;# 
  1292  0295                     	;# 
  1293  0296                     	;# 
  1294  0298                     	;# 
  1295  0298                     	;# 
  1296  0299                     	;# 
  1297  029A                     	;# 
  1298  029B                     	;# 
  1299  029C                     	;# 
  1300  029C                     	;# 
  1301  029D                     	;# 
  1302  029E                     	;# 
  1303  029E                     	;# 
  1304  0311                     	;# 
  1305  0311                     	;# 
  1306  0312                     	;# 
  1307  0313                     	;# 
  1308  0318                     	;# 
  1309  0318                     	;# 
  1310  0319                     	;# 
  1311  031A                     	;# 
  1312  0394                     	;# 
  1313  0395                     	;# 
  1314  0396                     	;# 
  1315  039A                     	;# 
  1316  039C                     	;# 
  1317  039D                     	;# 
  1318  039E                     	;# 
  1319  039F                     	;# 
  1320  0415                     	;# 
  1321  0416                     	;# 
  1322  0417                     	;# 
  1323  041C                     	;# 
  1324  041D                     	;# 
  1325  041E                     	;# 
  1326  0FE4                     	;# 
  1327  0FE5                     	;# 
  1328  0FE6                     	;# 
  1329  0FE7                     	;# 
  1330  0FE8                     	;# 
  1331  0FE9                     	;# 
  1332  0FEA                     	;# 
  1333  0FEB                     	;# 
  1334  0FED                     	;# 
  1335  0FEE                     	;# 
  1336  0FEF                     	;# 
  1337                           
  1338 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1339  000D                     _PORTB	set	13
  1340  000C                     _PORTA	set	12
  1341  001C                     _T2CONbits	set	28
  1342  001B                     _PR2	set	27
  1343  0011                     _PIR1bits	set	17
  1344  000B                     _INTCONbits	set	11
  1345  009B                     _ADRESL	set	155
  1346  009C                     _ADRESH	set	156
  1347  009D                     _ADCON0bits	set	157
  1348  008D                     _TRISB	set	141
  1349  008C                     _TRISA	set	140
  1350  009E                     _ADCON1	set	158
  1351  009D                     _ADCON0	set	157
  1352  0095                     _OPTION_REG	set	149
  1353  0095                     _OPTION_REGbits	set	149
  1354  0091                     _PIE1bits	set	145
  1355  0099                     _OSCCONbits	set	153
  1356  010D                     _LATB	set	269
  1357  010C                     _LATA	set	268
  1358  011D                     _APFCON0bits	set	285
  1359  018D                     _ANSELB	set	397
  1360  018C                     _ANSELA	set	396
  1361  0293                     _CCP1CONbits	set	659
  1362  0296                     _PSTR1CONbits	set	662
  1363  0291                     _CCPR1L	set	657
  1364  0293                     _CCP1CON	set	659
  1365                           
  1366                           	psect	stringtext1
  1367  0559                     __pstringtext1:
  1368  0559                     STR_1:
  1369  0559  3428               	retlw	40	;'('
  1370  055A  3428               	retlw	40	;'('
  1371  055B  3449               	retlw	73	;'I'
  1372  055C  344E               	retlw	78	;'N'
  1373  055D  3454               	retlw	84	;'T'
  1374  055E  3443               	retlw	67	;'C'
  1375  055F  344F               	retlw	79	;'O'
  1376  0560  344E               	retlw	78	;'N'
  1377  0561  3429               	retlw	41	;')'
  1378  0562  3426               	retlw	38	;'&'
  1379  0563  3430               	retlw	48	;'0'
  1380  0564  3437               	retlw	55	;'7'
  1381  0565  3446               	retlw	70	;'F'
  1382  0566  3468               	retlw	104	;'h'
  1383  0567  3429               	retlw	41	;')'
  1384  0568  342C               	retlw	44	;','
  1385  0569  3432               	retlw	50	;'2'
  1386  056A  3400               	retlw	0
  1387                           
  1388                           	psect	stringtext2
  1389  056B                     __pstringtext2:
  1390  056B                     STR_3:
  1391  056B  3428               	retlw	40	;'('
  1392  056C  3428               	retlw	40	;'('
  1393  056D  3450               	retlw	80	;'P'
  1394  056E  3449               	retlw	73	;'I'
  1395  056F  3452               	retlw	82	;'R'
  1396  0570  3431               	retlw	49	;'1'
  1397  0571  3429               	retlw	41	;')'
  1398  0572  3426               	retlw	38	;'&'
  1399  0573  3430               	retlw	48	;'0'
  1400  0574  3437               	retlw	55	;'7'
  1401  0575  3446               	retlw	70	;'F'
  1402  0576  3468               	retlw	104	;'h'
  1403  0577  3429               	retlw	41	;')'
  1404  0578  342C               	retlw	44	;','
  1405  0579  3432               	retlw	50	;'2'
  1406  057A  3400               	retlw	0
  1407                           
  1408                           	psect	stringtext3
  1409  0000                     __pstringtext3:
  1410  056B                     
  1411                           	psect	cinit
  1412  006E                     start_initialization:	
  1413                           ; #config settings
  1414                           
  1415  006E                     __initialization:
  1416                           
  1417                           ; Clear objects allocated to BANK0
  1418  006E  3020               	movlw	low __pbssBANK0
  1419  006F  0084               	movwf	4
  1420  0070  3000               	movlw	high __pbssBANK0
  1421  0071  0085               	movwf	5
  1422  0072  3038               	movlw	56
  1423  0073  3185  258C  3180   	fcall	clear_ram0
  1424                           
  1425                           ; Clear objects allocated to BANK1
  1426  0076  30A0               	movlw	low __pbssBANK1
  1427  0077  0084               	movwf	4
  1428  0078  3000               	movlw	high __pbssBANK1
  1429  0079  0085               	movwf	5
  1430  007A  3040               	movlw	64
  1431  007B  3185  258C  3180   	fcall	clear_ram0
  1432                           
  1433                           ; Clear objects allocated to BANK2
  1434  007E  3020               	movlw	low __pbssBANK2
  1435  007F  0084               	movwf	4
  1436  0080  3001               	movlw	high __pbssBANK2
  1437  0081  0085               	movwf	5
  1438  0082  3020               	movlw	32
  1439  0083  3185  258C  3180   	fcall	clear_ram0
  1440  0086                     end_of_initialization:	
  1441                           ;End of C runtime variable initialization code
  1442                           
  1443  0086                     __end_of__initialization:
  1444  0086  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1445  0087  0020               	movlb	0
  1446  0088  3184  2CF3         	ljmp	_main	;jump to C main() function
  1447                           
  1448                           	psect	bssBANK0
  1449  0020                     __pbssBANK0:
  1450  0020                     _currentIDSFIFO:
  1451  0020                     	ds	32
  1452  0040                     _clockFrequency:
  1453  0040                     	ds	4
  1454  0044                     _filteredDutyPot:
  1455  0044                     	ds	2
  1456  0046                     _filteredFreqPot:
  1457  0046                     	ds	2
  1458  0048                     _filteredIL:
  1459  0048                     	ds	2
  1460  004A                     _filteredIDS:
  1461  004A                     	ds	2
  1462  004C                     _latestIL1:
  1463  004C                     	ds	2
  1464  004E                     _prevDuty:
  1465  004E                     	ds	2
  1466  0050                     _setDuty:
  1467  0050                     	ds	2
  1468  0052                     _emergencyStop:
  1469  0052                     	ds	1
  1470  0053                     _timerSlotQuarter:
  1471  0053                     	ds	1
  1472  0054                     _timerSlotHalf:
  1473  0054                     	ds	1
  1474  0055                     _potSetCount:
  1475  0055                     	ds	1
  1476  0056                     _prevPeriod:
  1477  0056                     	ds	1
  1478  0057                     _setPeriod:
  1479  0057                     	ds	1
  1480                           
  1481                           	psect	bssBANK1
  1482  00A0                     __pbssBANK1:
  1483  00A0                     _freqPotFIFO:
  1484  00A0                     	ds	32
  1485  00C0                     _currentILFIFO:
  1486  00C0                     	ds	32
  1487                           
  1488                           	psect	bssBANK2
  1489  0120                     __pbssBANK2:
  1490  0120                     _dutyPotFIFO:
  1491  0120                     	ds	32
  1492                           
  1493                           	psect	clrtext
  1494  058C                     clear_ram0:	
  1495                           ;	Called with FSR0 containing the base address, and
  1496                           ;	WREG with the size to clear
  1497                           
  1498  058C  0064               	clrwdt	;clear the watchdog before getting into this loop
  1499  058D                     clrloop0:
  1500  058D  0180               	clrf	0	;clear RAM location pointed to by FSR
  1501  058E  3101               	addfsr 0,1
  1502  058F  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1503  0590  2D8D               	goto	clrloop0	;have we reached the end yet?
  1504  0591  3400               	retlw	0	;all done for this memory range, return
  1505                           
  1506                           	psect	cstackBANK1
  1507  00E0                     __pcstackBANK1:
  1508  00E0                     initialiseADCPin@gpioValid:
  1509  00E0                     initialiseGPIO@portType:	
  1510                           ; 1 bytes @ 0x0
  1511                           
  1512                           
  1513                           ; 1 bytes @ 0x0
  1514  00E0                     	ds	1
  1515  00E1                     initialiseADCPin@portType:
  1516  00E1                     initialiseGPIO@gpioNumber:	
  1517                           ; 1 bytes @ 0x1
  1518                           
  1519                           
  1520                           ; 1 bytes @ 0x1
  1521  00E1                     	ds	1
  1522  00E2                     initialiseADCPin@portNumber:
  1523  00E2                     initialiseGPIO@portNumber:	
  1524                           ; 1 bytes @ 0x2
  1525                           
  1526                           
  1527                           ; 1 bytes @ 0x2
  1528  00E2                     	ds	1
  1529  00E3                     initialiseADCPin@gpioNumber:
  1530                           
  1531                           ; 1 bytes @ 0x3
  1532  00E3                     	ds	1
  1533  00E4                     ?_main:
  1534  00E4                     main@argc:	
  1535                           ; 2 bytes @ 0x4
  1536                           
  1537                           
  1538                           ; 2 bytes @ 0x4
  1539  00E4                     	ds	2
  1540  00E6                     main@argv:
  1541                           
  1542                           ; 2 bytes @ 0x6
  1543  00E6                     	ds	2
  1544                           
  1545                           	psect	cstackCOMMON
  1546  0070                     __pcstackCOMMON:
  1547  0070                     ?_currentTripRead:
  1548  0070                     ?_setPWMDutyandPeriod:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?_writeGPIO:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_runPotScaling:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?_setupInternalOscillator:	
  1558                           ; 1 bytes @ 0x0
  1559                           
  1560  0070                     ?_setupPWM:	
  1561                           ; 1 bytes @ 0x0
  1562                           
  1563  0070                     ?_setupTimer0Interrupt:	
  1564                           ; 1 bytes @ 0x0
  1565                           
  1566  0070                     ?_initialiseADCModule:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ?_initialiseCurrentSensors:	
  1570                           ; 1 bytes @ 0x0
  1571                           
  1572  0070                     ?_initialisePotentiometers:	
  1573                           ; 1 bytes @ 0x0
  1574                           
  1575  0070                     ?_Tick980Hz:	
  1576                           ; 1 bytes @ 0x0
  1577                           
  1578  0070                     ?_initialiseADCPin:	
  1579                           ; 1 bytes @ 0x0
  1580                           
  1581  0070                     ?_readGPIO:	
  1582                           ; 1 bytes @ 0x0
  1583                           
  1584  0070                     ??_readGPIO:	
  1585                           ; 1 bytes @ 0x0
  1586                           
  1587  0070                     ?_readADCRaw:	
  1588                           ; 1 bytes @ 0x0
  1589                           
  1590  0070                     ?___lmul:	
  1591                           ; 2 bytes @ 0x0
  1592                           
  1593  0070                     writeGPIO@writeValue:	
  1594                           ; 4 bytes @ 0x0
  1595                           
  1596  0070                     setPWMDutyandPeriod@dutyCycle:	
  1597                           ; 1 bytes @ 0x0
  1598                           
  1599  0070                     ___lmul@multiplier:	
  1600                           ; 2 bytes @ 0x0
  1601                           
  1602                           
  1603                           ; 4 bytes @ 0x0
  1604  0070                     	ds	1
  1605  0071                     ??_writeGPIO:
  1606                           
  1607                           ; 1 bytes @ 0x1
  1608  0071                     	ds	1
  1609  0072                     ??_readADCRaw:
  1610  0072                     setPWMDutyandPeriod@period:	
  1611                           ; 1 bytes @ 0x2
  1612                           
  1613                           
  1614                           ; 1 bytes @ 0x2
  1615  0072                     	ds	1
  1616  0073                     ??_setPWMDutyandPeriod:
  1617  0073                     writeGPIO@portType:	
  1618                           ; 1 bytes @ 0x3
  1619                           
  1620  0073                     readGPIO@portType:	
  1621                           ; 1 bytes @ 0x3
  1622                           
  1623                           
  1624                           ; 1 bytes @ 0x3
  1625  0073                     	ds	1
  1626  0074                     writeGPIO@gpioNumber:
  1627  0074                     readGPIO@gpioNumber:	
  1628                           ; 1 bytes @ 0x4
  1629                           
  1630  0074                     readADCRaw@returnValue:	
  1631                           ; 1 bytes @ 0x4
  1632                           
  1633  0074                     ___lmul@multiplicand:	
  1634                           ; 2 bytes @ 0x4
  1635                           
  1636                           
  1637                           ; 4 bytes @ 0x4
  1638  0074                     	ds	1
  1639  0075                     writeGPIO@portNumber:
  1640  0075                     readGPIO@portNumber:	
  1641                           ; 1 bytes @ 0x5
  1642                           
  1643                           
  1644                           ; 1 bytes @ 0x5
  1645  0075                     	ds	1
  1646  0076                     ??_currentTripRead:
  1647  0076                     readADCRaw@channel:	
  1648                           ; 1 bytes @ 0x6
  1649                           
  1650  0076                     _currentTripRead$736:	
  1651                           ; 1 bytes @ 0x6
  1652                           
  1653                           
  1654                           ; 1 bytes @ 0x6
  1655  0076                     	ds	1
  1656  0077                     readADCRaw@gpioValid:
  1657                           
  1658                           ; 1 bytes @ 0x7
  1659  0077                     	ds	1
  1660  0078                     ??___lmul:
  1661  0078                     readADCRaw@i:	
  1662                           ; 1 bytes @ 0x8
  1663                           
  1664  0078                     ___lmul@product:	
  1665                           ; 1 bytes @ 0x8
  1666                           
  1667                           
  1668                           ; 4 bytes @ 0x8
  1669  0078                     	ds	1
  1670  0079                     readADCRaw@i_614:
  1671                           
  1672                           ; 1 bytes @ 0x9
  1673  0079                     	ds	1
  1674  007A                     readADCRaw@gpioNumber:
  1675                           
  1676                           ; 1 bytes @ 0xA
  1677  007A                     	ds	1
  1678  007B                     ?_readFilteredDutyPot:
  1679  007B                     ?_readFilteredFreqPot:	
  1680                           ; 2 bytes @ 0xB
  1681                           
  1682                           
  1683                           ; 2 bytes @ 0xB
  1684  007B                     	ds	2
  1685  007D                     ??_Tick980Hz:
  1686                           
  1687                           ; 1 bytes @ 0xD
  1688  007D                     	ds	1
  1689                           
  1690                           	psect	cstackBANK0
  1691  0058                     __pcstackBANK0:
  1692  0058                     ??_readFilteredDutyPot:
  1693  0058                     ??_readFilteredFreqPot:	
  1694                           ; 1 bytes @ 0x0
  1695                           
  1696  0058                     ??_runPotScaling:	
  1697                           ; 1 bytes @ 0x0
  1698                           
  1699                           
  1700                           ; 1 bytes @ 0x0
  1701  0058                     	ds	4
  1702  005C                     readFilteredDutyPot@sumOfSamples:
  1703  005C                     readFilteredFreqPot@sumOfSamples:	
  1704                           ; 4 bytes @ 0x4
  1705                           
  1706                           
  1707                           ; 4 bytes @ 0x4
  1708  005C                     	ds	4
  1709  0060                     readFilteredDutyPot@i_696:
  1710  0060                     readFilteredFreqPot@i_700:	
  1711                           ; 1 bytes @ 0x8
  1712                           
  1713                           
  1714                           ; 1 bytes @ 0x8
  1715  0060                     	ds	1
  1716  0061                     readFilteredDutyPot@i:
  1717  0061                     readFilteredFreqPot@i:	
  1718                           ; 1 bytes @ 0x9
  1719                           
  1720                           
  1721                           ; 1 bytes @ 0x9
  1722  0061                     	ds	1
  1723  0062                     ??_setupInternalOscillator:
  1724  0062                     ??_setupTimer0Interrupt:	
  1725                           ; 1 bytes @ 0xA
  1726                           
  1727  0062                     ??_initialiseADCModule:	
  1728                           ; 1 bytes @ 0xA
  1729                           
  1730  0062                     ?_initialiseGPIO:	
  1731                           ; 1 bytes @ 0xA
  1732                           
  1733  0062                     ??_initialiseADCPin:	
  1734                           ; 1 bytes @ 0xA
  1735                           
  1736  0062                     initialiseGPIO@direction:	
  1737                           ; 1 bytes @ 0xA
  1738                           
  1739                           
  1740                           ; 1 bytes @ 0xA
  1741  0062                     	ds	1
  1742  0063                     ??_initialiseGPIO:
  1743                           
  1744                           ; 1 bytes @ 0xB
  1745  0063                     	ds	1
  1746  0064                     ??_initialisePotentiometers:
  1747  0064                     setupInternalOscillator@selectedFreq:	
  1748                           ; 1 bytes @ 0xC
  1749                           
  1750                           
  1751                           ; 1 bytes @ 0xC
  1752  0064                     	ds	1
  1753  0065                     ??_setupPWM:
  1754  0065                     ??_initialiseCurrentSensors:	
  1755                           ; 1 bytes @ 0xD
  1756                           
  1757  0065                     ??_main:	
  1758                           ; 1 bytes @ 0xD
  1759                           
  1760                           
  1761                           	psect	maintext
  1762  04F3                     __pmaintext:	
  1763                           ; 1 bytes @ 0xD
  1764 ;;
  1765 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1766 ;;
  1767 ;; *************** function _main *****************
  1768 ;; Defined at:
  1769 ;;		line 102 in file "main.c"
  1770 ;; Parameters:    Size  Location     Type
  1771 ;;  argc            2    4[BANK1 ] int 
  1772 ;;  argv            2    6[BANK1 ] PTR PTR unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  2    4[BANK1 ] int 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : B1F/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1784 ;;      Params:         0       0       4       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0
  1787 ;;      Totals:         0       0       4       0       0       0
  1788 ;;Total ram usage:        4 bytes
  1789 ;; Hardware stack levels required when called: 5
  1790 ;; This function calls:
  1791 ;;		_initialiseADCModule
  1792 ;;		_initialiseCurrentSensors
  1793 ;;		_initialiseGPIO
  1794 ;;		_initialisePotentiometers
  1795 ;;		_setupInternalOscillator
  1796 ;;		_setupPWM
  1797 ;;		_setupTimer0Interrupt
  1798 ;; This function is called by:
  1799 ;;		Startup code after reset
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803  04F3                     _main:	
  1804                           ;psect for function _main
  1805                           
  1806  04F3                     l2093:	
  1807                           ;incstack = 0
  1808                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1809                           
  1810                           
  1811                           ;main.c: 104:     setupInternalOscillator(freq32M);
  1812  04F3  300A               	movlw	10
  1813  04F4  3180  208A  3184   	fcall	_setupInternalOscillator
  1814  04F7                     l2095:
  1815                           
  1816                           ;main.c: 106:     setupPWM();
  1817  04F7  3185  250F  3184   	fcall	_setupPWM
  1818  04FA                     l2097:
  1819                           
  1820                           ;main.c: 107:     setupTimer0Interrupt();
  1821  04FA  3185  2584  3184   	fcall	_setupTimer0Interrupt
  1822  04FD                     l2099:
  1823                           
  1824                           ;main.c: 108:     initialiseADCModule();
  1825  04FD  3185  2592  3184   	fcall	_initialiseADCModule
  1826  0500                     l2101:
  1827                           
  1828                           ;main.c: 109:     initialiseCurrentSensors();
  1829  0500  3185  252B  3184   	fcall	_initialiseCurrentSensors
  1830  0503                     l2103:
  1831                           
  1832                           ;main.c: 110:     initialisePotentiometers();
  1833  0503  3185  257B  3184   	fcall	_initialisePotentiometers
  1834  0506                     l2105:
  1835                           
  1836                           ;main.c: 111:     initialiseGPIO(pinRB4, 0);
  1837  0506  0020               	movlb	0	; select bank0
  1838  0507  01E2               	clrf	initialiseGPIO@direction
  1839  0508  300C               	movlw	12
  1840  0509  3181  2165  3184   	fcall	_initialiseGPIO
  1841  050C                     l88:	
  1842                           ;main.c: 113:     while(1){
  1843                           
  1844  050C                     l89:	
  1845                           ;main.c: 115:     }
  1846                           
  1847  050C  2D0C               	goto	l88
  1848  050D  3180  286C         	ljmp	start
  1849  050F                     __end_of_main:
  1850                           
  1851                           	psect	text1
  1852  0584                     __ptext1:	
  1853 ;; *************** function _setupTimer0Interrupt *****************
  1854 ;; Defined at:
  1855 ;;		line 17 in file "Timer0.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;		None
  1858 ;; Auto vars:     Size  Location     Type
  1859 ;;		None
  1860 ;; Return value:  Size  Location     Type
  1861 ;;                  1    wreg      void 
  1862 ;; Registers used:
  1863 ;;		wreg
  1864 ;; Tracked objects:
  1865 ;;		On entry : 0/0
  1866 ;;		On exit  : 0/0
  1867 ;;		Unchanged: 0/0
  1868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1869 ;;      Params:         0       0       0       0       0       0
  1870 ;;      Locals:         0       0       0       0       0       0
  1871 ;;      Temps:          0       0       0       0       0       0
  1872 ;;      Totals:         0       0       0       0       0       0
  1873 ;;Total ram usage:        0 bytes
  1874 ;; Hardware stack levels used: 1
  1875 ;; Hardware stack levels required when called: 3
  1876 ;; This function calls:
  1877 ;;		Nothing
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883  0584                     _setupTimer0Interrupt:	
  1884                           ;psect for function _setupTimer0Interrupt
  1885                           
  1886  0584                     l1869:	
  1887                           ;incstack = 0
  1888                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1889                           
  1890                           
  1891                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1892  0584  178B               	bsf	11,7	;volatile
  1893                           
  1894                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1895  0585  168B               	bsf	11,5	;volatile
  1896                           
  1897                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1898  0586  0021               	movlb	1	; select bank1
  1899  0587  1295               	bcf	21,5	;volatile
  1900                           
  1901                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1902  0588  1195               	bcf	21,3	;volatile
  1903  0589                     l1871:
  1904                           
  1905                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1906  0589  3004               	movlw	4
  1907  058A  0095               	movwf	21	;volatile
  1908  058B                     l165:
  1909  058B  0008               	return
  1910  058C                     __end_of_setupTimer0Interrupt:
  1911                           
  1912                           	psect	text2
  1913  050F                     __ptext2:	
  1914 ;; *************** function _setupPWM *****************
  1915 ;; Defined at:
  1916 ;;		line 16 in file "PWM.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;		None
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;		None
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0, pclath, cstack
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1930 ;;      Params:         0       0       0       0       0       0
  1931 ;;      Locals:         0       0       0       0       0       0
  1932 ;;      Temps:          0       0       0       0       0       0
  1933 ;;      Totals:         0       0       0       0       0       0
  1934 ;;Total ram usage:        0 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 4
  1937 ;; This function calls:
  1938 ;;		_initialiseGPIO
  1939 ;; This function is called by:
  1940 ;;		_main
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944  050F                     _setupPWM:	
  1945                           ;psect for function _setupPWM
  1946                           
  1947  050F                     l2067:	
  1948                           ;incstack = 0
  1949                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  1950                           
  1951                           
  1952                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  1953  050F  300C               	movlw	12
  1954  0510  0025               	movlb	5	; select bank5
  1955  0511  0093               	movwf	19	;volatile
  1956  0512                     l2069:
  1957                           
  1958                           ;PWM.c: 20:     PR2 = 0;
  1959  0512  0020               	movlb	0	; select bank0
  1960  0513  019B               	clrf	27	;volatile
  1961  0514                     l2071:
  1962                           
  1963                           ;PWM.c: 21:     CCPR1L = 0;
  1964  0514  0025               	movlb	5	; select bank5
  1965  0515  0191               	clrf	17	;volatile
  1966  0516                     l2073:
  1967                           
  1968                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  1969  0516  0022               	movlb	2	; select bank2
  1970  0517  151D               	bsf	29,2	;volatile
  1971  0518                     l2075:
  1972                           
  1973                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  1974  0518  0025               	movlb	5	; select bank5
  1975  0519  1596               	bsf	22,3	;volatile
  1976  051A                     l2077:
  1977                           
  1978                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  1979  051A  30FC               	movlw	-4
  1980  051B  0020               	movlb	0	; select bank0
  1981  051C  059C               	andwf	28,f	;volatile
  1982  051D                     l2079:
  1983                           
  1984                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  1985  051D  0021               	movlb	1	; select bank1
  1986  051E  1091               	bcf	17,1	;volatile
  1987  051F                     l2081:
  1988                           
  1989                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  1990  051F  0020               	movlb	0	; select bank0
  1991  0520  151C               	bsf	28,2	;volatile
  1992  0521                     l2083:
  1993                           
  1994                           ;PWM.c: 30:     INTCONbits.PEIE = 1;
  1995  0521  170B               	bsf	11,6	;volatile
  1996  0522                     l2085:
  1997                           
  1998                           ;PWM.c: 31:     PIE1bits.CCP1IE = 1;
  1999  0522  0021               	movlb	1	; select bank1
  2000  0523  1511               	bsf	17,2	;volatile
  2001  0524                     l2087:
  2002                           
  2003                           ;PWM.c: 35:     initialiseGPIO(pinRA6, 0);
  2004  0524  0020               	movlb	0	; select bank0
  2005  0525  01E2               	clrf	initialiseGPIO@direction
  2006  0526  3006               	movlw	6
  2007  0527  3181  2165  3185   	fcall	_initialiseGPIO
  2008  052A                     l140:
  2009  052A  0008               	return
  2010  052B                     __end_of_setupPWM:
  2011                           
  2012                           	psect	text3
  2013  008A                     __ptext3:	
  2014 ;; *************** function _setupInternalOscillator *****************
  2015 ;; Defined at:
  2016 ;;		line 124 in file "main.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;  selectedFreq    1    wreg     const enum E2830
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;  selectedFreq    1   12[BANK0 ] const enum E2830
  2021 ;; Return value:  Size  Location     Type
  2022 ;;                  1    wreg      void 
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2030 ;;      Params:         0       0       0       0       0       0
  2031 ;;      Locals:         0       1       0       0       0       0
  2032 ;;      Temps:          0       2       0       0       0       0
  2033 ;;      Totals:         0       3       0       0       0       0
  2034 ;;Total ram usage:        3 bytes
  2035 ;; Hardware stack levels used: 1
  2036 ;; Hardware stack levels required when called: 3
  2037 ;; This function calls:
  2038 ;;		Nothing
  2039 ;; This function is called by:
  2040 ;;		_main
  2041 ;; This function uses a non-reentrant model
  2042 ;;
  2043                           
  2044  008A                     _setupInternalOscillator:	
  2045                           ;psect for function _setupInternalOscillator
  2046                           
  2047                           
  2048                           ;incstack = 0
  2049                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2050                           ;setupInternalOscillator@selectedFreq stored from wreg
  2051  008A  0020               	movlb	0	; select bank0
  2052  008B  00E4               	movwf	setupInternalOscillator@selectedFreq
  2053  008C                     l1769:
  2054                           
  2055                           ;main.c: 128:     switch(selectedFreq){
  2056  008C  2939               	goto	l1839
  2057  008D                     l1771:
  2058  008D  3087               	movlw	-121
  2059  008E  0021               	movlb	1	; select bank1
  2060  008F  0599               	andwf	25,f	;volatile
  2061  0090                     l1773:
  2062  0090  1399               	bcf	25,7	;volatile
  2063  0091                     l1775:
  2064  0091  3000               	movlw	0
  2065  0092  0020               	movlb	0	; select bank0
  2066  0093  00C3               	movwf	_clockFrequency+3
  2067  0094  3000               	movlw	0
  2068  0095  00C2               	movwf	_clockFrequency+2
  2069  0096  3079               	movlw	121
  2070  0097  00C1               	movwf	_clockFrequency+1
  2071  0098  3018               	movlw	24
  2072  0099  00C0               	movwf	_clockFrequency
  2073  009A  2964               	goto	l107
  2074  009B                     l1777:
  2075  009B  0021               	movlb	1	; select bank1
  2076  009C  0819               	movf	25,w	;volatile
  2077  009D  3987               	andlw	-121
  2078  009E  3820               	iorlw	32
  2079  009F  0099               	movwf	25	;volatile
  2080  00A0                     l1779:
  2081  00A0  1399               	bcf	25,7	;volatile
  2082  00A1                     l1781:
  2083  00A1  3000               	movlw	0
  2084  00A2  0020               	movlb	0	; select bank0
  2085  00A3  00C3               	movwf	_clockFrequency+3
  2086  00A4  3000               	movlw	0
  2087  00A5  00C2               	movwf	_clockFrequency+2
  2088  00A6  30F4               	movlw	244
  2089  00A7  00C1               	movwf	_clockFrequency+1
  2090  00A8  3024               	movlw	36
  2091  00A9  00C0               	movwf	_clockFrequency
  2092  00AA  2964               	goto	l107
  2093  00AB                     l1783:
  2094  00AB  0021               	movlb	1	; select bank1
  2095  00AC  0819               	movf	25,w	;volatile
  2096  00AD  3987               	andlw	-121
  2097  00AE  3828               	iorlw	40
  2098  00AF  0099               	movwf	25	;volatile
  2099  00B0                     l1785:
  2100  00B0  1399               	bcf	25,7	;volatile
  2101  00B1                     l1787:
  2102  00B1  3000               	movlw	0
  2103  00B2  0020               	movlb	0	; select bank0
  2104  00B3  00C3               	movwf	_clockFrequency+3
  2105  00B4  3001               	movlw	1
  2106  00B5  00C2               	movwf	_clockFrequency+2
  2107  00B6  30E8               	movlw	232
  2108  00B7  00C1               	movwf	_clockFrequency+1
  2109  00B8  3048               	movlw	72
  2110  00B9  00C0               	movwf	_clockFrequency
  2111  00BA  2964               	goto	l107
  2112  00BB                     l1789:
  2113  00BB  0021               	movlb	1	; select bank1
  2114  00BC  0819               	movf	25,w	;volatile
  2115  00BD  3987               	andlw	-121
  2116  00BE  3830               	iorlw	48
  2117  00BF  0099               	movwf	25	;volatile
  2118  00C0                     l1791:
  2119  00C0  1399               	bcf	25,7	;volatile
  2120  00C1                     l1793:
  2121  00C1  3000               	movlw	0
  2122  00C2  0020               	movlb	0	; select bank0
  2123  00C3  00C3               	movwf	_clockFrequency+3
  2124  00C4  3003               	movlw	3
  2125  00C5  00C2               	movwf	_clockFrequency+2
  2126  00C6  30D0               	movlw	208
  2127  00C7  00C1               	movwf	_clockFrequency+1
  2128  00C8  3090               	movlw	144
  2129  00C9  00C0               	movwf	_clockFrequency
  2130  00CA  2964               	goto	l107
  2131  00CB                     l1795:
  2132  00CB  0021               	movlb	1	; select bank1
  2133  00CC  0819               	movf	25,w	;volatile
  2134  00CD  3987               	andlw	-121
  2135  00CE  3838               	iorlw	56
  2136  00CF  0099               	movwf	25	;volatile
  2137  00D0                     l1797:
  2138  00D0  1399               	bcf	25,7	;volatile
  2139  00D1                     l1799:
  2140  00D1  3000               	movlw	0
  2141  00D2  0020               	movlb	0	; select bank0
  2142  00D3  00C3               	movwf	_clockFrequency+3
  2143  00D4  3007               	movlw	7
  2144  00D5  00C2               	movwf	_clockFrequency+2
  2145  00D6  30A1               	movlw	161
  2146  00D7  00C1               	movwf	_clockFrequency+1
  2147  00D8  3020               	movlw	32
  2148  00D9  00C0               	movwf	_clockFrequency
  2149  00DA  2964               	goto	l107
  2150  00DB                     l1801:
  2151  00DB  0021               	movlb	1	; select bank1
  2152  00DC  0819               	movf	25,w	;volatile
  2153  00DD  3987               	andlw	-121
  2154  00DE  3858               	iorlw	88
  2155  00DF  0099               	movwf	25	;volatile
  2156  00E0                     l1803:
  2157  00E0  1399               	bcf	25,7	;volatile
  2158  00E1                     l1805:
  2159  00E1  3000               	movlw	0
  2160  00E2  0020               	movlb	0	; select bank0
  2161  00E3  00C3               	movwf	_clockFrequency+3
  2162  00E4  300F               	movlw	15
  2163  00E5  00C2               	movwf	_clockFrequency+2
  2164  00E6  3042               	movlw	66
  2165  00E7  00C1               	movwf	_clockFrequency+1
  2166  00E8  3040               	movlw	64
  2167  00E9  00C0               	movwf	_clockFrequency
  2168  00EA  2964               	goto	l107
  2169  00EB                     l1807:
  2170  00EB  0021               	movlb	1	; select bank1
  2171  00EC  0819               	movf	25,w	;volatile
  2172  00ED  3987               	andlw	-121
  2173  00EE  3860               	iorlw	96
  2174  00EF  0099               	movwf	25	;volatile
  2175  00F0                     l1809:
  2176  00F0  1399               	bcf	25,7	;volatile
  2177  00F1                     l1811:
  2178  00F1  3000               	movlw	0
  2179  00F2  0020               	movlb	0	; select bank0
  2180  00F3  00C3               	movwf	_clockFrequency+3
  2181  00F4  301E               	movlw	30
  2182  00F5  00C2               	movwf	_clockFrequency+2
  2183  00F6  3084               	movlw	132
  2184  00F7  00C1               	movwf	_clockFrequency+1
  2185  00F8  3080               	movlw	128
  2186  00F9  00C0               	movwf	_clockFrequency
  2187  00FA  2964               	goto	l107
  2188  00FB                     l1813:
  2189  00FB  0021               	movlb	1	; select bank1
  2190  00FC  0819               	movf	25,w	;volatile
  2191  00FD  3987               	andlw	-121
  2192  00FE  3868               	iorlw	104
  2193  00FF  0099               	movwf	25	;volatile
  2194  0100                     l1815:
  2195  0100  1399               	bcf	25,7	;volatile
  2196  0101                     l1817:
  2197  0101  3000               	movlw	0
  2198  0102  0020               	movlb	0	; select bank0
  2199  0103  00C3               	movwf	_clockFrequency+3
  2200  0104  303D               	movlw	61
  2201  0105  00C2               	movwf	_clockFrequency+2
  2202  0106  3009               	movlw	9
  2203  0107  00C1               	movwf	_clockFrequency+1
  2204  0108  3000               	movlw	0
  2205  0109  00C0               	movwf	_clockFrequency
  2206  010A  2964               	goto	l107
  2207  010B                     l1819:
  2208  010B  0021               	movlb	1	; select bank1
  2209  010C  0819               	movf	25,w	;volatile
  2210  010D  3987               	andlw	-121
  2211  010E  3870               	iorlw	112
  2212  010F  0099               	movwf	25	;volatile
  2213  0110                     l1821:
  2214  0110  1399               	bcf	25,7	;volatile
  2215  0111                     l1823:
  2216  0111  3000               	movlw	0
  2217  0112  0020               	movlb	0	; select bank0
  2218  0113  00C3               	movwf	_clockFrequency+3
  2219  0114  307A               	movlw	122
  2220  0115  00C2               	movwf	_clockFrequency+2
  2221  0116  3012               	movlw	18
  2222  0117  00C1               	movwf	_clockFrequency+1
  2223  0118  3000               	movlw	0
  2224  0119  00C0               	movwf	_clockFrequency
  2225  011A  2964               	goto	l107
  2226  011B                     l1825:
  2227  011B  3078               	movlw	120
  2228  011C  0021               	movlb	1	; select bank1
  2229  011D  0499               	iorwf	25,f	;volatile
  2230  011E                     l1827:
  2231  011E  1399               	bcf	25,7	;volatile
  2232  011F                     l1829:
  2233  011F  3000               	movlw	0
  2234  0120  0020               	movlb	0	; select bank0
  2235  0121  00C3               	movwf	_clockFrequency+3
  2236  0122  30F4               	movlw	244
  2237  0123  00C2               	movwf	_clockFrequency+2
  2238  0124  3024               	movlw	36
  2239  0125  00C1               	movwf	_clockFrequency+1
  2240  0126  3000               	movlw	0
  2241  0127  00C0               	movwf	_clockFrequency
  2242  0128  2964               	goto	l107
  2243  0129                     l1831:
  2244  0129  0021               	movlb	1	; select bank1
  2245  012A  0819               	movf	25,w	;volatile
  2246  012B  3987               	andlw	-121
  2247  012C  3870               	iorlw	112
  2248  012D  0099               	movwf	25	;volatile
  2249  012E                     l1833:
  2250  012E  1799               	bsf	25,7	;volatile
  2251  012F                     l1835:
  2252  012F  3001               	movlw	1
  2253  0130  0020               	movlb	0	; select bank0
  2254  0131  00C3               	movwf	_clockFrequency+3
  2255  0132  30E8               	movlw	232
  2256  0133  00C2               	movwf	_clockFrequency+2
  2257  0134  3048               	movlw	72
  2258  0135  00C1               	movwf	_clockFrequency+1
  2259  0136  3000               	movlw	0
  2260  0137  00C0               	movwf	_clockFrequency
  2261  0138  2964               	goto	l107
  2262  0139                     l1839:
  2263  0139  0864               	movf	setupInternalOscillator@selectedFreq,w
  2264  013A  00E2               	movwf	??_setupInternalOscillator
  2265  013B  01E3               	clrf	??_setupInternalOscillator+1
  2266                           
  2267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2268                           ; Switch size 1, requested type "simple"
  2269                           ; Number of cases is 1, Range of values is 0 to 0
  2270                           ; switch strategies available:
  2271                           ; Name         Instructions Cycles
  2272                           ; simple_byte            4     3 (average)
  2273                           ; direct_byte            8     6 (fixed)
  2274                           ; jumptable            260     6 (fixed)
  2275                           ;	Chosen strategy is simple_byte
  2276  013C  0863               	movf	??_setupInternalOscillator+1,w
  2277  013D  3A00               	xorlw	0	; case 0
  2278  013E  1903               	skipnz
  2279  013F  2941               	goto	l2137
  2280  0140  2964               	goto	l107
  2281  0141                     l2137:
  2282                           
  2283                           ; Switch size 1, requested type "simple"
  2284                           ; Number of cases is 11, Range of values is 0 to 10
  2285                           ; switch strategies available:
  2286                           ; Name         Instructions Cycles
  2287                           ; direct_byte           28     6 (fixed)
  2288                           ; simple_byte           34    18 (average)
  2289                           ; jumptable            260     6 (fixed)
  2290                           ;	Chosen strategy is simple_byte
  2291  0141  0862               	movf	??_setupInternalOscillator,w
  2292  0142  3A00               	xorlw	0	; case 0
  2293  0143  1903               	skipnz
  2294  0144  288D               	goto	l1771
  2295  0145  3A01               	xorlw	1	; case 1
  2296  0146  1903               	skipnz
  2297  0147  289B               	goto	l1777
  2298  0148  3A03               	xorlw	3	; case 2
  2299  0149  1903               	skipnz
  2300  014A  28AB               	goto	l1783
  2301  014B  3A01               	xorlw	1	; case 3
  2302  014C  1903               	skipnz
  2303  014D  28BB               	goto	l1789
  2304  014E  3A07               	xorlw	7	; case 4
  2305  014F  1903               	skipnz
  2306  0150  28CB               	goto	l1795
  2307  0151  3A01               	xorlw	1	; case 5
  2308  0152  1903               	skipnz
  2309  0153  28DB               	goto	l1801
  2310  0154  3A03               	xorlw	3	; case 6
  2311  0155  1903               	skipnz
  2312  0156  28EB               	goto	l1807
  2313  0157  3A01               	xorlw	1	; case 7
  2314  0158  1903               	skipnz
  2315  0159  28FB               	goto	l1813
  2316  015A  3A0F               	xorlw	15	; case 8
  2317  015B  1903               	skipnz
  2318  015C  290B               	goto	l1819
  2319  015D  3A01               	xorlw	1	; case 9
  2320  015E  1903               	skipnz
  2321  015F  291B               	goto	l1825
  2322  0160  3A03               	xorlw	3	; case 10
  2323  0161  1903               	skipnz
  2324  0162  2929               	goto	l1831
  2325  0163  2964               	goto	l107
  2326  0164                     l107:
  2327  0164  0008               	return
  2328  0165                     __end_of_setupInternalOscillator:
  2329                           
  2330                           	psect	text4
  2331  057B                     __ptext4:	
  2332 ;; *************** function _initialisePotentiometers *****************
  2333 ;; Defined at:
  2334 ;;		line 15 in file "Potentiometer.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;                  1    wreg      void 
  2341 ;; Registers used:
  2342 ;;		wreg, status,2, status,0, pclath, cstack
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2348 ;;      Params:         0       0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0       0
  2350 ;;      Temps:          0       0       0       0       0       0
  2351 ;;      Totals:         0       0       0       0       0       0
  2352 ;;Total ram usage:        0 bytes
  2353 ;; Hardware stack levels used: 1
  2354 ;; Hardware stack levels required when called: 4
  2355 ;; This function calls:
  2356 ;;		_initialiseADCPin
  2357 ;; This function is called by:
  2358 ;;		_main
  2359 ;; This function uses a non-reentrant model
  2360 ;;
  2361                           
  2362  057B                     _initialisePotentiometers:	
  2363                           ;psect for function _initialisePotentiometers
  2364                           
  2365  057B                     l2091:	
  2366                           ;incstack = 0
  2367                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2368                           
  2369                           
  2370                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2371  057B  3009               	movlw	9
  2372  057C  3181  21F3  3185   	fcall	_initialiseADCPin
  2373                           
  2374                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2375  057F  300A               	movlw	10
  2376  0580  3181  21F3  3185   	fcall	_initialiseADCPin
  2377  0583                     l317:
  2378  0583  0008               	return
  2379  0584                     __end_of_initialisePotentiometers:
  2380                           
  2381                           	psect	text5
  2382  052B                     __ptext5:	
  2383 ;; *************** function _initialiseCurrentSensors *****************
  2384 ;; Defined at:
  2385 ;;		line 14 in file "CurrentSensor.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;		None
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;		None
  2390 ;; Return value:  Size  Location     Type
  2391 ;;                  1    wreg      void 
  2392 ;; Registers used:
  2393 ;;		wreg, status,2, status,0, pclath, cstack
  2394 ;; Tracked objects:
  2395 ;;		On entry : 0/0
  2396 ;;		On exit  : 0/0
  2397 ;;		Unchanged: 0/0
  2398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2399 ;;      Params:         0       0       0       0       0       0
  2400 ;;      Locals:         0       0       0       0       0       0
  2401 ;;      Temps:          0       0       0       0       0       0
  2402 ;;      Totals:         0       0       0       0       0       0
  2403 ;;Total ram usage:        0 bytes
  2404 ;; Hardware stack levels used: 1
  2405 ;; Hardware stack levels required when called: 4
  2406 ;; This function calls:
  2407 ;;		_initialiseADCPin
  2408 ;;		_initialiseGPIO
  2409 ;; This function is called by:
  2410 ;;		_main
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414  052B                     _initialiseCurrentSensors:	
  2415                           ;psect for function _initialiseCurrentSensors
  2416                           
  2417  052B                     l2089:	
  2418                           ;incstack = 0
  2419                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2420                           
  2421                           
  2422                           ;CurrentSensor.c: 15:     initialiseGPIO(pinRA3, 1);
  2423  052B  0020               	movlb	0	; select bank0
  2424  052C  01E2               	clrf	initialiseGPIO@direction
  2425  052D  0AE2               	incf	initialiseGPIO@direction,f
  2426  052E  3003               	movlw	3
  2427  052F  3181  2165  3185   	fcall	_initialiseGPIO
  2428                           
  2429                           ;CurrentSensor.c: 16:     initialiseGPIO(pinRA1, 1);
  2430  0532  0020               	movlb	0	; select bank0
  2431  0533  01E2               	clrf	initialiseGPIO@direction
  2432  0534  0AE2               	incf	initialiseGPIO@direction,f
  2433  0535  3001               	movlw	1
  2434  0536  3181  2165  3185   	fcall	_initialiseGPIO
  2435                           
  2436                           ;CurrentSensor.c: 17:     initialiseADCPin(pinRA0);
  2437  0539  3000               	movlw	0
  2438  053A  3181  21F3  3185   	fcall	_initialiseADCPin
  2439                           
  2440                           ;CurrentSensor.c: 18:     initialiseADCPin(pinRA3);
  2441  053D  3003               	movlw	3
  2442  053E  3181  21F3  3185   	fcall	_initialiseADCPin
  2443  0541                     l366:
  2444  0541  0008               	return
  2445  0542                     __end_of_initialiseCurrentSensors:
  2446                           
  2447                           	psect	text6
  2448  0165                     __ptext6:	
  2449 ;; *************** function _initialiseGPIO *****************
  2450 ;; Defined at:
  2451 ;;		line 18 in file "GPIO.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  gpioNumber      1    wreg     const enum E2798
  2454 ;;  direction       1   10[BANK0 ] unsigned char 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  gpioNumber      1    1[BANK1 ] const enum E2798
  2457 ;;  portNumber      1    2[BANK1 ] unsigned char 
  2458 ;;  portType        1    0[BANK1 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2468 ;;      Params:         0       1       0       0       0       0
  2469 ;;      Locals:         0       0       3       0       0       0
  2470 ;;      Temps:          0       2       0       0       0       0
  2471 ;;      Totals:         0       3       3       0       0       0
  2472 ;;Total ram usage:        6 bytes
  2473 ;; Hardware stack levels used: 1
  2474 ;; Hardware stack levels required when called: 3
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_main
  2479 ;;		_setupPWM
  2480 ;;		_initialiseCurrentSensors
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484  0165                     _initialiseGPIO:	
  2485                           ;psect for function _initialiseGPIO
  2486                           
  2487                           
  2488                           ;incstack = 0
  2489                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2490                           ;initialiseGPIO@gpioNumber stored from wreg
  2491  0165  0021               	movlb	1	; select bank1
  2492  0166  00E1               	movwf	initialiseGPIO@gpioNumber^(0+128)
  2493  0167                     l2011:
  2494                           
  2495                           ;GPIO.c: 20:     uint8_t portType = 0;
  2496  0167  01E0               	clrf	initialiseGPIO@portType^(0+128)
  2497  0168                     l2013:
  2498                           
  2499                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2500  0168  3008               	movlw	8
  2501  0169  0261               	subwf	initialiseGPIO@gpioNumber^(0+128),w
  2502  016A  1C03               	skipc
  2503  016B  296D               	goto	u1521
  2504  016C  296E               	goto	u1520
  2505  016D                     u1521:
  2506  016D  2978               	goto	l2019
  2507  016E                     u1520:
  2508  016E                     l2015:
  2509                           
  2510                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2511  016E  0861               	movf	initialiseGPIO@gpioNumber^(0+128),w
  2512  016F  3EF8               	addlw	248
  2513  0170  0020               	movlb	0	; select bank0
  2514  0171  00E3               	movwf	??_initialiseGPIO
  2515  0172  0863               	movf	??_initialiseGPIO,w
  2516  0173  0021               	movlb	1	; select bank1
  2517  0174  00E2               	movwf	initialiseGPIO@portNumber^(0+128)
  2518  0175                     l2017:
  2519                           
  2520                           ;GPIO.c: 23:         portType = 1;
  2521  0175  01E0               	clrf	initialiseGPIO@portType^(0+128)
  2522  0176  0AE0               	incf	initialiseGPIO@portType^(0+128),f
  2523                           
  2524                           ;GPIO.c: 24:     }
  2525  0177  297F               	goto	l2023
  2526  0178                     l2019:
  2527                           
  2528                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2529  0178  0861               	movf	initialiseGPIO@gpioNumber^(0+128),w
  2530  0179  0020               	movlb	0	; select bank0
  2531  017A  00E3               	movwf	??_initialiseGPIO
  2532  017B  0863               	movf	??_initialiseGPIO,w
  2533  017C  0021               	movlb	1	; select bank1
  2534  017D  00E2               	movwf	initialiseGPIO@portNumber^(0+128)
  2535  017E                     l2021:
  2536                           
  2537                           ;GPIO.c: 27:         portType = 0;
  2538  017E  01E0               	clrf	initialiseGPIO@portType^(0+128)
  2539  017F                     l2023:
  2540                           
  2541                           ;GPIO.c: 30:     if(portType == 0){
  2542  017F  0860               	movf	initialiseGPIO@portType^(0+128),w
  2543  0180  1D03               	btfss	3,2
  2544  0181  2983               	goto	u1531
  2545  0182  2984               	goto	u1530
  2546  0183                     u1531:
  2547  0183  29B9               	goto	l2031
  2548  0184                     u1530:
  2549  0184                     l2025:
  2550                           
  2551                           ;GPIO.c: 31:         if(direction){
  2552  0184  0020               	movlb	0	; select bank0
  2553  0185  0862               	movf	initialiseGPIO@direction,w
  2554  0186  1903               	btfsc	3,2
  2555  0187  2989               	goto	u1541
  2556  0188  298A               	goto	u1540
  2557  0189                     u1541:
  2558  0189  29A9               	goto	l2029
  2559  018A                     u1540:
  2560  018A                     l2027:
  2561                           
  2562                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2563  018A  3001               	movlw	1
  2564  018B  00E3               	movwf	??_initialiseGPIO
  2565  018C  0021               	movlb	1	; select bank1
  2566  018D  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2567  018E  0020               	movlb	0	; select bank0
  2568  018F  2991               	goto	u1554
  2569  0190                     u1555:
  2570  0190  35E3               	lslf	??_initialiseGPIO,f
  2571  0191                     u1554:
  2572  0191  0B89               	decfsz	9,f
  2573  0192  2990               	goto	u1555
  2574  0193  0863               	movf	??_initialiseGPIO,w
  2575  0194  00E4               	movwf	??_initialiseGPIO+1
  2576  0195  0864               	movf	??_initialiseGPIO+1,w
  2577  0196  0021               	movlb	1	; select bank1
  2578  0197  048C               	iorwf	12,f	;volatile
  2579                           
  2580                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2581  0198  3001               	movlw	1
  2582  0199  0020               	movlb	0	; select bank0
  2583  019A  00E3               	movwf	??_initialiseGPIO
  2584  019B  0021               	movlb	1	; select bank1
  2585  019C  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2586  019D  0020               	movlb	0	; select bank0
  2587  019E  29A0               	goto	u1564
  2588  019F                     u1565:
  2589  019F  35E3               	lslf	??_initialiseGPIO,f
  2590  01A0                     u1564:
  2591  01A0  0B89               	decfsz	9,f
  2592  01A1  299F               	goto	u1565
  2593  01A2  0863               	movf	??_initialiseGPIO,w
  2594  01A3  3AFF               	xorlw	255
  2595  01A4  00E4               	movwf	??_initialiseGPIO+1
  2596  01A5  0864               	movf	??_initialiseGPIO+1,w
  2597  01A6  0023               	movlb	3	; select bank3
  2598  01A7  058C               	andwf	12,f	;volatile
  2599                           
  2600                           ;GPIO.c: 34:         }
  2601  01A8  29F2               	goto	l266
  2602  01A9                     l2029:
  2603  01A9  3001               	movlw	1
  2604  01AA  00E3               	movwf	??_initialiseGPIO
  2605  01AB  0021               	movlb	1	; select bank1
  2606  01AC  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2607  01AD  0020               	movlb	0	; select bank0
  2608  01AE  29B0               	goto	u1574
  2609  01AF                     u1575:
  2610  01AF  35E3               	lslf	??_initialiseGPIO,f
  2611  01B0                     u1574:
  2612  01B0  0B89               	decfsz	9,f
  2613  01B1  29AF               	goto	u1575
  2614  01B2  0863               	movf	??_initialiseGPIO,w
  2615  01B3  3AFF               	xorlw	255
  2616  01B4  00E4               	movwf	??_initialiseGPIO+1
  2617  01B5  0864               	movf	??_initialiseGPIO+1,w
  2618  01B6  0021               	movlb	1	; select bank1
  2619  01B7  058C               	andwf	12,f	;volatile
  2620  01B8  29F2               	goto	l266
  2621  01B9                     l2031:
  2622  01B9  0360               	decf	initialiseGPIO@portType^(0+128),w
  2623  01BA  1D03               	btfss	3,2
  2624  01BB  29BD               	goto	u1581
  2625  01BC  29BE               	goto	u1580
  2626  01BD                     u1581:
  2627  01BD  29F2               	goto	l266
  2628  01BE                     u1580:
  2629  01BE                     l2033:
  2630                           
  2631                           ;GPIO.c: 38:         if(direction){
  2632  01BE  0020               	movlb	0	; select bank0
  2633  01BF  0862               	movf	initialiseGPIO@direction,w
  2634  01C0  1903               	btfsc	3,2
  2635  01C1  29C3               	goto	u1591
  2636  01C2  29C4               	goto	u1590
  2637  01C3                     u1591:
  2638  01C3  29E3               	goto	l2037
  2639  01C4                     u1590:
  2640  01C4                     l2035:
  2641                           
  2642                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2643  01C4  3001               	movlw	1
  2644  01C5  00E3               	movwf	??_initialiseGPIO
  2645  01C6  0021               	movlb	1	; select bank1
  2646  01C7  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2647  01C8  0020               	movlb	0	; select bank0
  2648  01C9  29CB               	goto	u1604
  2649  01CA                     u1605:
  2650  01CA  35E3               	lslf	??_initialiseGPIO,f
  2651  01CB                     u1604:
  2652  01CB  0B89               	decfsz	9,f
  2653  01CC  29CA               	goto	u1605
  2654  01CD  0863               	movf	??_initialiseGPIO,w
  2655  01CE  00E4               	movwf	??_initialiseGPIO+1
  2656  01CF  0864               	movf	??_initialiseGPIO+1,w
  2657  01D0  0021               	movlb	1	; select bank1
  2658  01D1  048D               	iorwf	13,f	;volatile
  2659                           
  2660                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2661  01D2  3001               	movlw	1
  2662  01D3  0020               	movlb	0	; select bank0
  2663  01D4  00E3               	movwf	??_initialiseGPIO
  2664  01D5  0021               	movlb	1	; select bank1
  2665  01D6  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2666  01D7  0020               	movlb	0	; select bank0
  2667  01D8  29DA               	goto	u1614
  2668  01D9                     u1615:
  2669  01D9  35E3               	lslf	??_initialiseGPIO,f
  2670  01DA                     u1614:
  2671  01DA  0B89               	decfsz	9,f
  2672  01DB  29D9               	goto	u1615
  2673  01DC  0863               	movf	??_initialiseGPIO,w
  2674  01DD  3AFF               	xorlw	255
  2675  01DE  00E4               	movwf	??_initialiseGPIO+1
  2676  01DF  0864               	movf	??_initialiseGPIO+1,w
  2677  01E0  0023               	movlb	3	; select bank3
  2678  01E1  058D               	andwf	13,f	;volatile
  2679                           
  2680                           ;GPIO.c: 41:         }
  2681  01E2  29F2               	goto	l266
  2682  01E3                     l2037:
  2683  01E3  3001               	movlw	1
  2684  01E4  00E3               	movwf	??_initialiseGPIO
  2685  01E5  0021               	movlb	1	; select bank1
  2686  01E6  0A62               	incf	initialiseGPIO@portNumber^(0+128),w
  2687  01E7  0020               	movlb	0	; select bank0
  2688  01E8  29EA               	goto	u1624
  2689  01E9                     u1625:
  2690  01E9  35E3               	lslf	??_initialiseGPIO,f
  2691  01EA                     u1624:
  2692  01EA  0B89               	decfsz	9,f
  2693  01EB  29E9               	goto	u1625
  2694  01EC  0863               	movf	??_initialiseGPIO,w
  2695  01ED  3AFF               	xorlw	255
  2696  01EE  00E4               	movwf	??_initialiseGPIO+1
  2697  01EF  0864               	movf	??_initialiseGPIO+1,w
  2698  01F0  0021               	movlb	1	; select bank1
  2699  01F1  058D               	andwf	13,f	;volatile
  2700  01F2                     l266:
  2701  01F2  0008               	return
  2702  01F3                     __end_of_initialiseGPIO:
  2703                           
  2704                           	psect	text7
  2705  01F3                     __ptext7:	
  2706 ;; *************** function _initialiseADCPin *****************
  2707 ;; Defined at:
  2708 ;;		line 37 in file "ADC.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  gpioNumber      1    wreg     const enum E2798
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  gpioNumber      1    3[BANK1 ] const enum E2798
  2713 ;;  portNumber      1    2[BANK1 ] unsigned char 
  2714 ;;  portType        1    1[BANK1 ] unsigned char 
  2715 ;;  gpioValid       1    0[BANK1 ] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2725 ;;      Params:         0       0       0       0       0       0
  2726 ;;      Locals:         0       0       4       0       0       0
  2727 ;;      Temps:          0       2       0       0       0       0
  2728 ;;      Totals:         0       2       4       0       0       0
  2729 ;;Total ram usage:        6 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; Hardware stack levels required when called: 3
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_initialisePotentiometers
  2736 ;;		_initialiseCurrentSensors
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740  01F3                     _initialiseADCPin:	
  2741                           ;psect for function _initialiseADCPin
  2742                           
  2743                           
  2744                           ;incstack = 0
  2745                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  2746                           ;initialiseADCPin@gpioNumber stored from wreg
  2747  01F3  0021               	movlb	1	; select bank1
  2748  01F4  00E3               	movwf	initialiseADCPin@gpioNumber^(0+128)
  2749  01F5                     l2039:
  2750                           
  2751                           ;ADC.c: 39:     uint8_t portNumber = 0;
  2752  01F5  01E2               	clrf	initialiseADCPin@portNumber^(0+128)
  2753                           
  2754                           ;ADC.c: 40:     uint8_t portType = 0;
  2755  01F6  01E1               	clrf	initialiseADCPin@portType^(0+128)
  2756                           
  2757                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  2758  01F7  01E0               	clrf	initialiseADCPin@gpioValid^(0+128)
  2759  01F8                     l2041:
  2760                           
  2761                           ;ADC.c: 43:     if(gpioNumber < 4){
  2762  01F8  3004               	movlw	4
  2763  01F9  0263               	subwf	initialiseADCPin@gpioNumber^(0+128),w
  2764  01FA  1803               	skipnc
  2765  01FB  29FD               	goto	u1631
  2766  01FC  29FE               	goto	u1630
  2767  01FD                     u1631:
  2768  01FD  2A07               	goto	l2049
  2769  01FE                     u1630:
  2770  01FE                     l2043:
  2771                           
  2772                           ;ADC.c: 44:         portNumber = gpioNumber;
  2773  01FE  0863               	movf	initialiseADCPin@gpioNumber^(0+128),w
  2774  01FF  0020               	movlb	0	; select bank0
  2775  0200  00E2               	movwf	??_initialiseADCPin
  2776  0201  0862               	movf	??_initialiseADCPin,w
  2777  0202  0021               	movlb	1	; select bank1
  2778  0203  00E2               	movwf	initialiseADCPin@portNumber^(0+128)
  2779  0204                     l2045:
  2780                           
  2781                           ;ADC.c: 45:         portType = 0;
  2782  0204  01E1               	clrf	initialiseADCPin@portType^(0+128)
  2783  0205                     l2047:
  2784                           
  2785                           ;ADC.c: 46:         gpioValid = 1;
  2786  0205  01E0               	clrf	initialiseADCPin@gpioValid^(0+128)
  2787  0206  0AE0               	incf	initialiseADCPin@gpioValid^(0+128),f
  2788  0207                     l2049:
  2789                           
  2790                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  2791  0207  3009               	movlw	9
  2792  0208  0263               	subwf	initialiseADCPin@gpioNumber^(0+128),w
  2793  0209  1C03               	skipc
  2794  020A  2A0C               	goto	u1641
  2795  020B  2A0D               	goto	u1640
  2796  020C                     u1641:
  2797  020C  2A1E               	goto	l200
  2798  020D                     u1640:
  2799  020D                     l2051:
  2800  020D  3010               	movlw	16
  2801  020E  0263               	subwf	initialiseADCPin@gpioNumber^(0+128),w
  2802  020F  1803               	skipnc
  2803  0210  2A12               	goto	u1651
  2804  0211  2A13               	goto	u1650
  2805  0212                     u1651:
  2806  0212  2A1E               	goto	l200
  2807  0213                     u1650:
  2808  0213                     l2053:
  2809                           
  2810                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  2811  0213  0863               	movf	initialiseADCPin@gpioNumber^(0+128),w
  2812  0214  3EF8               	addlw	248
  2813  0215  0020               	movlb	0	; select bank0
  2814  0216  00E2               	movwf	??_initialiseADCPin
  2815  0217  0862               	movf	??_initialiseADCPin,w
  2816  0218  0021               	movlb	1	; select bank1
  2817  0219  00E2               	movwf	initialiseADCPin@portNumber^(0+128)
  2818  021A                     l2055:
  2819                           
  2820                           ;ADC.c: 51:         portType = 1;
  2821  021A  01E1               	clrf	initialiseADCPin@portType^(0+128)
  2822  021B  0AE1               	incf	initialiseADCPin@portType^(0+128),f
  2823  021C                     l2057:
  2824                           
  2825                           ;ADC.c: 52:         gpioValid = 1;
  2826  021C  01E0               	clrf	initialiseADCPin@gpioValid^(0+128)
  2827  021D  0AE0               	incf	initialiseADCPin@gpioValid^(0+128),f
  2828  021E                     l200:	
  2829                           ;ADC.c: 53:     }
  2830                           
  2831                           
  2832                           ;ADC.c: 55:     if(gpioValid){
  2833  021E  0860               	movf	initialiseADCPin@gpioValid^(0+128),w
  2834  021F  1903               	btfsc	3,2
  2835  0220  2A22               	goto	u1661
  2836  0221  2A23               	goto	u1660
  2837  0222                     u1661:
  2838  0222  2A6A               	goto	l205
  2839  0223                     u1660:
  2840  0223                     l2059:
  2841                           
  2842                           ;ADC.c: 56:         if(portType == 0){
  2843  0223  0861               	movf	initialiseADCPin@portType^(0+128),w
  2844  0224  1D03               	btfss	3,2
  2845  0225  2A27               	goto	u1671
  2846  0226  2A28               	goto	u1670
  2847  0227                     u1671:
  2848  0227  2A47               	goto	l2063
  2849  0228                     u1670:
  2850  0228                     l2061:
  2851                           
  2852                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  2853  0228  3001               	movlw	1
  2854  0229  0020               	movlb	0	; select bank0
  2855  022A  00E2               	movwf	??_initialiseADCPin
  2856  022B  0021               	movlb	1	; select bank1
  2857  022C  0A62               	incf	initialiseADCPin@portNumber^(0+128),w
  2858  022D  0020               	movlb	0	; select bank0
  2859  022E  2A30               	goto	u1684
  2860  022F                     u1685:
  2861  022F  35E2               	lslf	??_initialiseADCPin,f
  2862  0230                     u1684:
  2863  0230  0B89               	decfsz	9,f
  2864  0231  2A2F               	goto	u1685
  2865  0232  0862               	movf	??_initialiseADCPin,w
  2866  0233  00E3               	movwf	??_initialiseADCPin+1
  2867  0234  0863               	movf	??_initialiseADCPin+1,w
  2868  0235  0021               	movlb	1	; select bank1
  2869  0236  048C               	iorwf	12,f	;volatile
  2870                           
  2871                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  2872  0237  3001               	movlw	1
  2873  0238  0020               	movlb	0	; select bank0
  2874  0239  00E2               	movwf	??_initialiseADCPin
  2875  023A  0021               	movlb	1	; select bank1
  2876  023B  0A62               	incf	initialiseADCPin@portNumber^(0+128),w
  2877  023C  0020               	movlb	0	; select bank0
  2878  023D  2A3F               	goto	u1694
  2879  023E                     u1695:
  2880  023E  35E2               	lslf	??_initialiseADCPin,f
  2881  023F                     u1694:
  2882  023F  0B89               	decfsz	9,f
  2883  0240  2A3E               	goto	u1695
  2884  0241  0862               	movf	??_initialiseADCPin,w
  2885  0242  00E3               	movwf	??_initialiseADCPin+1
  2886  0243  0863               	movf	??_initialiseADCPin+1,w
  2887  0244  0023               	movlb	3	; select bank3
  2888  0245  048C               	iorwf	12,f	;volatile
  2889                           
  2890                           ;ADC.c: 59:         }
  2891  0246  2A6A               	goto	l205
  2892  0247                     l2063:
  2893  0247  0361               	decf	initialiseADCPin@portType^(0+128),w
  2894  0248  1D03               	btfss	3,2
  2895  0249  2A4B               	goto	u1701
  2896  024A  2A4C               	goto	u1700
  2897  024B                     u1701:
  2898  024B  2A6A               	goto	l205
  2899  024C                     u1700:
  2900  024C                     l2065:
  2901                           
  2902                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  2903  024C  3001               	movlw	1
  2904  024D  0020               	movlb	0	; select bank0
  2905  024E  00E2               	movwf	??_initialiseADCPin
  2906  024F  0021               	movlb	1	; select bank1
  2907  0250  0A62               	incf	initialiseADCPin@portNumber^(0+128),w
  2908  0251  0020               	movlb	0	; select bank0
  2909  0252  2A54               	goto	u1714
  2910  0253                     u1715:
  2911  0253  35E2               	lslf	??_initialiseADCPin,f
  2912  0254                     u1714:
  2913  0254  0B89               	decfsz	9,f
  2914  0255  2A53               	goto	u1715
  2915  0256  0862               	movf	??_initialiseADCPin,w
  2916  0257  00E3               	movwf	??_initialiseADCPin+1
  2917  0258  0863               	movf	??_initialiseADCPin+1,w
  2918  0259  0021               	movlb	1	; select bank1
  2919  025A  048D               	iorwf	13,f	;volatile
  2920                           
  2921                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  2922  025B  3001               	movlw	1
  2923  025C  0020               	movlb	0	; select bank0
  2924  025D  00E2               	movwf	??_initialiseADCPin
  2925  025E  0021               	movlb	1	; select bank1
  2926  025F  0A62               	incf	initialiseADCPin@portNumber^(0+128),w
  2927  0260  0020               	movlb	0	; select bank0
  2928  0261  2A63               	goto	u1724
  2929  0262                     u1725:
  2930  0262  35E2               	lslf	??_initialiseADCPin,f
  2931  0263                     u1724:
  2932  0263  0B89               	decfsz	9,f
  2933  0264  2A62               	goto	u1725
  2934  0265  0862               	movf	??_initialiseADCPin,w
  2935  0266  00E3               	movwf	??_initialiseADCPin+1
  2936  0267  0863               	movf	??_initialiseADCPin+1,w
  2937  0268  0023               	movlb	3	; select bank3
  2938  0269  048D               	iorwf	13,f	;volatile
  2939  026A                     l205:
  2940  026A  0008               	return
  2941  026B                     __end_of_initialiseADCPin:
  2942                           
  2943                           	psect	text8
  2944  0592                     __ptext8:	
  2945 ;; *************** function _initialiseADCModule *****************
  2946 ;; Defined at:
  2947 ;;		line 14 in file "ADC.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;		None
  2950 ;; Auto vars:     Size  Location     Type
  2951 ;;		None
  2952 ;; Return value:  Size  Location     Type
  2953 ;;                  1    wreg      void 
  2954 ;; Registers used:
  2955 ;;		wreg
  2956 ;; Tracked objects:
  2957 ;;		On entry : 0/0
  2958 ;;		On exit  : 0/0
  2959 ;;		Unchanged: 0/0
  2960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2961 ;;      Params:         0       0       0       0       0       0
  2962 ;;      Locals:         0       0       0       0       0       0
  2963 ;;      Temps:          0       0       0       0       0       0
  2964 ;;      Totals:         0       0       0       0       0       0
  2965 ;;Total ram usage:        0 bytes
  2966 ;; Hardware stack levels used: 1
  2967 ;; Hardware stack levels required when called: 3
  2968 ;; This function calls:
  2969 ;;		Nothing
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975  0592                     _initialiseADCModule:	
  2976                           ;psect for function _initialiseADCModule
  2977                           
  2978  0592                     l1873:	
  2979                           ;incstack = 0
  2980                           ; Regs used in _initialiseADCModule: [wreg]
  2981                           
  2982                           
  2983                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  2984  0592  3001               	movlw	1
  2985  0593  0021               	movlb	1	; select bank1
  2986  0594  009D               	movwf	29	;volatile
  2987                           
  2988                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  2989  0595  3080               	movlw	128
  2990  0596  009E               	movwf	30	;volatile
  2991  0597                     l196:
  2992  0597  0008               	return
  2993  0598                     __end_of_initialiseADCModule:
  2994                           
  2995                           	psect	intentry
  2996  0004                     __pintentry:	
  2997 ;; *************** function _Tick980Hz *****************
  2998 ;; Defined at:
  2999 ;;		line 41 in file "main.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;		None
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;		None
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  1    wreg      void 
  3006 ;; Registers used:
  3007 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3013 ;;      Params:         0       0       0       0       0       0
  3014 ;;      Locals:         0       0       0       0       0       0
  3015 ;;      Temps:          1       0       0       0       0       0
  3016 ;;      Totals:         1       0       0       0       0       0
  3017 ;;Total ram usage:        1 bytes
  3018 ;; Hardware stack levels used: 1
  3019 ;; Hardware stack levels required when called: 2
  3020 ;; This function calls:
  3021 ;;		_currentTripRead
  3022 ;;		_readFilteredDutyPot
  3023 ;;		_readFilteredFreqPot
  3024 ;;		_runPotScaling
  3025 ;;		_setPWMDutyandPeriod
  3026 ;;		_writeGPIO
  3027 ;; This function is called by:
  3028 ;;		Interrupt level 1
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032  0004                     _Tick980Hz:
  3033                           
  3034                           ;incstack = 0
  3035  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3036                           
  3037                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3038  0005  3180               	pagesel	$
  3039  0006                     i1l1879:
  3040                           
  3041                           ;main.c: 52:         if(currentTripRead() < 1){
  3042  0006  3185  2542  3180   	fcall	_currentTripRead
  3043  0009  3A00               	xorlw	0
  3044  000A  1D03               	skipz
  3045  000B  280D               	goto	u139_21
  3046  000C  280E               	goto	u139_20
  3047  000D                     u139_21:
  3048  000D  281A               	goto	i1l1885
  3049  000E                     u139_20:
  3050  000E                     i1l1881:
  3051                           
  3052                           ;main.c: 53:             emergencyStop = 1;
  3053  000E  3001               	movlw	1
  3054  000F  00FD               	movwf	??_Tick980Hz
  3055  0010  087D               	movf	??_Tick980Hz,w
  3056  0011  0020               	movlb	0	; select bank0
  3057  0012  00D2               	movwf	_emergencyStop	;volatile
  3058  0013                     i1l1883:
  3059                           
  3060                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3061  0013  3000               	movlw	0
  3062  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3063  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3064  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3065  0017  3184  24C8  3180   	fcall	_setPWMDutyandPeriod
  3066  001A                     i1l1885:
  3067                           
  3068                           ;main.c: 57:         if(timerSlotHalf == 0){
  3069  001A  0020               	movlb	0	; select bank0
  3070  001B  0854               	movf	_timerSlotHalf,w	;volatile
  3071  001C  1D03               	btfss	3,2
  3072  001D  281F               	goto	u140_21
  3073  001E  2820               	goto	u140_20
  3074  001F                     u140_21:
  3075  001F  2825               	goto	i1l1889
  3076  0020                     u140_20:
  3077  0020                     i1l1887:
  3078                           
  3079                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3080  0020  01F0               	clrf	writeGPIO@writeValue
  3081  0021  300C               	movlw	12
  3082  0022  3183  233A  3180   	fcall	_writeGPIO
  3083  0025                     i1l1889:
  3084                           
  3085                           ;main.c: 61:         if(timerSlotHalf == 1){
  3086  0025  0020               	movlb	0	; select bank0
  3087  0026  0354               	decf	_timerSlotHalf,w	;volatile
  3088  0027  1D03               	btfss	3,2
  3089  0028  282A               	goto	u141_21
  3090  0029  282B               	goto	u141_20
  3091  002A                     u141_21:
  3092  002A  285A               	goto	i1l78
  3093  002B                     u141_20:
  3094  002B                     i1l1891:
  3095                           
  3096                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3097  002B  0853               	movf	_timerSlotQuarter,w	;volatile
  3098  002C  1D03               	btfss	3,2
  3099  002D  282F               	goto	u142_21
  3100  002E  2830               	goto	u142_20
  3101  002F                     u142_21:
  3102  002F  284F               	goto	i1l1905
  3103  0030                     u142_20:
  3104  0030                     i1l1893:
  3105                           
  3106                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3107  0030  01F0               	clrf	writeGPIO@writeValue
  3108  0031  0AF0               	incf	writeGPIO@writeValue,f
  3109  0032  300C               	movlw	12
  3110  0033  3183  233A  3180   	fcall	_writeGPIO
  3111  0036                     i1l1895:
  3112                           
  3113                           ;main.c: 69:                 filteredDutyPot = readFilteredDutyPot();
  3114  0036  3183  2399  3180   	fcall	_readFilteredDutyPot
  3115  0039  087C               	movf	?_readFilteredDutyPot+1,w
  3116  003A  0020               	movlb	0	; select bank0
  3117  003B  00C5               	movwf	_filteredDutyPot+1
  3118  003C  087B               	movf	?_readFilteredDutyPot,w
  3119  003D  00C4               	movwf	_filteredDutyPot
  3120  003E                     i1l1897:
  3121                           
  3122                           ;main.c: 70:                 filteredFreqPot = readFilteredFreqPot();
  3123  003E  3183  23F4  3180   	fcall	_readFilteredFreqPot
  3124  0041  087C               	movf	?_readFilteredFreqPot+1,w
  3125  0042  0020               	movlb	0	; select bank0
  3126  0043  00C7               	movwf	_filteredFreqPot+1
  3127  0044  087B               	movf	?_readFilteredFreqPot,w
  3128  0045  00C6               	movwf	_filteredFreqPot
  3129  0046                     i1l1899:
  3130                           
  3131                           ;main.c: 72:                 if(~emergencyStop){
  3132  0046  0352               	decf	_emergencyStop,w	;volatile
  3133  0047  1903               	btfsc	3,2
  3134  0048  284A               	goto	u143_21
  3135  0049  284B               	goto	u143_20
  3136  004A                     u143_21:
  3137  004A  284F               	goto	i1l1903
  3138  004B                     u143_20:
  3139  004B                     i1l1901:
  3140                           
  3141                           ;main.c: 73:                     runPotScaling();
  3142  004B  3182  226B  3180   	fcall	_runPotScaling
  3143  004E  284F               	goto	i1l1905
  3144  004F                     i1l1903:
  3145  004F                     i1l1905:
  3146                           
  3147                           ;main.c: 81:             timerSlotQuarter = ~timerSlotQuarter;
  3148  004F  0020               	movlb	0	; select bank0
  3149  0050  0353               	decf	_timerSlotQuarter,w	;volatile
  3150  0051  1D03               	btfss	3,2
  3151  0052  2854               	goto	u144_21
  3152  0053  2856               	goto	u144_20
  3153  0054                     u144_21:
  3154  0054  3001               	movlw	1
  3155  0055  2857               	goto	u145_20
  3156  0056                     u144_20:
  3157  0056  3000               	movlw	0
  3158  0057                     u145_20:
  3159  0057  00FD               	movwf	??_Tick980Hz
  3160  0058  087D               	movf	??_Tick980Hz,w
  3161  0059  00D3               	movwf	_timerSlotQuarter	;volatile
  3162  005A                     i1l78:	
  3163                           ;main.c: 82:         }
  3164                           
  3165                           
  3166                           ;main.c: 84:         timerSlotHalf = ~timerSlotHalf;
  3167  005A  0354               	decf	_timerSlotHalf,w	;volatile
  3168  005B  1D03               	btfss	3,2
  3169  005C  285E               	goto	u146_21
  3170  005D  2860               	goto	u146_20
  3171  005E                     u146_21:
  3172  005E  3001               	movlw	1
  3173  005F  2861               	goto	u147_20
  3174  0060                     u146_20:
  3175  0060  3000               	movlw	0
  3176  0061                     u147_20:
  3177  0061  00FD               	movwf	??_Tick980Hz
  3178  0062  087D               	movf	??_Tick980Hz,w
  3179  0063  00D4               	movwf	_timerSlotHalf	;volatile
  3180  0064                     i1l1907:
  3181                           
  3182                           ;main.c: 85:         INTCONbits.TMR0IF = 0;
  3183  0064  110B               	bcf	11,2	;volatile
  3184  0065                     i1l1909:
  3185                           
  3186                           ;main.c: 90:         latestIL1 = readILCurrentADCRaw;
  3187  0065  3000               	movlw	0
  3188  0066  00CC               	movwf	_latestIL1	;volatile
  3189  0067  3000               	movlw	0
  3190  0068  00CD               	movwf	_latestIL1+1	;volatile
  3191  0069                     i1l1911:
  3192                           
  3193                           ;main.c: 91:         PIR1bits.CCP1IF = 0;
  3194  0069  1111               	bcf	17,2	;volatile
  3195  006A                     i1l83:
  3196  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3197  006B  0009               	retfie
  3198  006C                     __end_of_Tick980Hz:
  3199                           
  3200                           	psect	text10
  3201  033A                     __ptext10:	
  3202 ;; *************** function _writeGPIO *****************
  3203 ;; Defined at:
  3204 ;;		line 52 in file "GPIO.c"
  3205 ;; Parameters:    Size  Location     Type
  3206 ;;  gpioNumber      1    wreg     const enum E2798
  3207 ;;  writeValue      1    0[COMMON] unsigned char 
  3208 ;; Auto vars:     Size  Location     Type
  3209 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3210 ;;  portNumber      1    5[COMMON] unsigned char 
  3211 ;;  portType        1    3[COMMON] unsigned char 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  1    wreg      void 
  3214 ;; Registers used:
  3215 ;;		wreg, status,2, status,0
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3221 ;;      Params:         1       0       0       0       0       0
  3222 ;;      Locals:         3       0       0       0       0       0
  3223 ;;      Temps:          2       0       0       0       0       0
  3224 ;;      Totals:         6       0       0       0       0       0
  3225 ;;Total ram usage:        6 bytes
  3226 ;; Hardware stack levels used: 1
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_Tick980Hz
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234  033A                     _writeGPIO:	
  3235                           ;psect for function _writeGPIO
  3236                           
  3237                           
  3238                           ;incstack = 0
  3239                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3240                           ;writeGPIO@gpioNumber stored from wreg
  3241  033A  00F4               	movwf	writeGPIO@gpioNumber
  3242  033B                     i1l1671:
  3243                           
  3244                           ;GPIO.c: 54:     uint8_t portType = 0;
  3245  033B  01F3               	clrf	writeGPIO@portType
  3246  033C                     i1l1673:
  3247                           
  3248                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3249  033C  3008               	movlw	8
  3250  033D  0274               	subwf	writeGPIO@gpioNumber,w
  3251  033E  1C03               	skipc
  3252  033F  2B41               	goto	u121_21
  3253  0340  2B42               	goto	u121_20
  3254  0341                     u121_21:
  3255  0341  2B4A               	goto	i1l1679
  3256  0342                     u121_20:
  3257  0342                     i1l1675:
  3258                           
  3259                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3260  0342  0874               	movf	writeGPIO@gpioNumber,w
  3261  0343  3EF8               	addlw	248
  3262  0344  00F1               	movwf	??_writeGPIO
  3263  0345  0871               	movf	??_writeGPIO,w
  3264  0346  00F5               	movwf	writeGPIO@portNumber
  3265  0347                     i1l1677:
  3266                           
  3267                           ;GPIO.c: 57:         portType = 1;
  3268  0347  01F3               	clrf	writeGPIO@portType
  3269  0348  0AF3               	incf	writeGPIO@portType,f
  3270                           
  3271                           ;GPIO.c: 58:     }
  3272  0349  2B4F               	goto	i1l1683
  3273  034A                     i1l1679:
  3274                           
  3275                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3276  034A  0874               	movf	writeGPIO@gpioNumber,w
  3277  034B  00F1               	movwf	??_writeGPIO
  3278  034C  0871               	movf	??_writeGPIO,w
  3279  034D  00F5               	movwf	writeGPIO@portNumber
  3280  034E                     i1l1681:
  3281                           
  3282                           ;GPIO.c: 61:         portType = 0;
  3283  034E  01F3               	clrf	writeGPIO@portType
  3284  034F                     i1l1683:
  3285                           
  3286                           ;GPIO.c: 64:     if(portType == 0){
  3287  034F  0873               	movf	writeGPIO@portType,w
  3288  0350  1D03               	btfss	3,2
  3289  0351  2B53               	goto	u122_21
  3290  0352  2B54               	goto	u122_20
  3291  0353                     u122_21:
  3292  0353  2B74               	goto	i1l1691
  3293  0354                     u122_20:
  3294  0354                     i1l1685:
  3295                           
  3296                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3297  0354  0870               	movf	writeGPIO@writeValue,w
  3298  0355  1903               	btfsc	3,2
  3299  0356  2B58               	goto	u123_21
  3300  0357  2B59               	goto	u123_20
  3301  0358                     u123_21:
  3302  0358  2B66               	goto	i1l1689
  3303  0359                     u123_20:
  3304  0359                     i1l1687:
  3305  0359  3001               	movlw	1
  3306  035A  00F1               	movwf	??_writeGPIO
  3307  035B  0A75               	incf	writeGPIO@portNumber,w
  3308  035C  2B5E               	goto	u124_24
  3309  035D                     u124_25:
  3310  035D  35F1               	lslf	??_writeGPIO,f
  3311  035E                     u124_24:
  3312  035E  0B89               	decfsz	9,f
  3313  035F  2B5D               	goto	u124_25
  3314  0360  0871               	movf	??_writeGPIO,w
  3315  0361  00F2               	movwf	??_writeGPIO+1
  3316  0362  0872               	movf	??_writeGPIO+1,w
  3317  0363  0022               	movlb	2	; select bank2
  3318  0364  048C               	iorwf	12,f	;volatile
  3319  0365  2B98               	goto	i1l280
  3320  0366                     i1l1689:
  3321  0366  3001               	movlw	1
  3322  0367  00F1               	movwf	??_writeGPIO
  3323  0368  0A75               	incf	writeGPIO@portNumber,w
  3324  0369  2B6B               	goto	u125_24
  3325  036A                     u125_25:
  3326  036A  35F1               	lslf	??_writeGPIO,f
  3327  036B                     u125_24:
  3328  036B  0B89               	decfsz	9,f
  3329  036C  2B6A               	goto	u125_25
  3330  036D  0871               	movf	??_writeGPIO,w
  3331  036E  3AFF               	xorlw	255
  3332  036F  00F2               	movwf	??_writeGPIO+1
  3333  0370  0872               	movf	??_writeGPIO+1,w
  3334  0371  0022               	movlb	2	; select bank2
  3335  0372  058C               	andwf	12,f	;volatile
  3336  0373  2B98               	goto	i1l280
  3337  0374                     i1l1691:
  3338  0374  0373               	decf	writeGPIO@portType,w
  3339  0375  1D03               	btfss	3,2
  3340  0376  2B78               	goto	u126_21
  3341  0377  2B79               	goto	u126_20
  3342  0378                     u126_21:
  3343  0378  2B98               	goto	i1l280
  3344  0379                     u126_20:
  3345  0379                     i1l1693:
  3346                           
  3347                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3348  0379  0870               	movf	writeGPIO@writeValue,w
  3349  037A  1903               	btfsc	3,2
  3350  037B  2B7D               	goto	u127_21
  3351  037C  2B7E               	goto	u127_20
  3352  037D                     u127_21:
  3353  037D  2B8B               	goto	i1l1697
  3354  037E                     u127_20:
  3355  037E                     i1l1695:
  3356  037E  3001               	movlw	1
  3357  037F  00F1               	movwf	??_writeGPIO
  3358  0380  0A75               	incf	writeGPIO@portNumber,w
  3359  0381  2B83               	goto	u128_24
  3360  0382                     u128_25:
  3361  0382  35F1               	lslf	??_writeGPIO,f
  3362  0383                     u128_24:
  3363  0383  0B89               	decfsz	9,f
  3364  0384  2B82               	goto	u128_25
  3365  0385  0871               	movf	??_writeGPIO,w
  3366  0386  00F2               	movwf	??_writeGPIO+1
  3367  0387  0872               	movf	??_writeGPIO+1,w
  3368  0388  0022               	movlb	2	; select bank2
  3369  0389  048D               	iorwf	13,f	;volatile
  3370  038A  2B98               	goto	i1l280
  3371  038B                     i1l1697:
  3372  038B  3001               	movlw	1
  3373  038C  00F1               	movwf	??_writeGPIO
  3374  038D  0A75               	incf	writeGPIO@portNumber,w
  3375  038E  2B90               	goto	u129_24
  3376  038F                     u129_25:
  3377  038F  35F1               	lslf	??_writeGPIO,f
  3378  0390                     u129_24:
  3379  0390  0B89               	decfsz	9,f
  3380  0391  2B8F               	goto	u129_25
  3381  0392  0871               	movf	??_writeGPIO,w
  3382  0393  3AFF               	xorlw	255
  3383  0394  00F2               	movwf	??_writeGPIO+1
  3384  0395  0872               	movf	??_writeGPIO+1,w
  3385  0396  0022               	movlb	2	; select bank2
  3386  0397  058D               	andwf	13,f	;volatile
  3387  0398                     i1l280:
  3388  0398  0008               	return
  3389  0399                     __end_of_writeGPIO:
  3390                           
  3391                           	psect	text11
  3392  026B                     __ptext11:	
  3393 ;; *************** function _runPotScaling *****************
  3394 ;; Defined at:
  3395 ;;		line 55 in file "Potentiometer.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		wreg, status,2, status,0, pclath, cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3409 ;;      Params:         0       0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0
  3411 ;;      Temps:          0       8       0       0       0       0
  3412 ;;      Totals:         0       8       0       0       0       0
  3413 ;;Total ram usage:        8 bytes
  3414 ;; Hardware stack levels used: 1
  3415 ;; Hardware stack levels required when called: 1
  3416 ;; This function calls:
  3417 ;;		___lmul
  3418 ;;		_setPWMDutyandPeriod
  3419 ;; This function is called by:
  3420 ;;		_Tick980Hz
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424  026B                     _runPotScaling:	
  3425                           ;psect for function _runPotScaling
  3426                           
  3427  026B                     i1l1763:	
  3428                           ;incstack = 0
  3429                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3430                           
  3431                           
  3432                           ;Potentiometer.c: 57:     potSetCount++;
  3433  026B  3001               	movlw	1
  3434  026C  0020               	movlb	0	; select bank0
  3435  026D  00D8               	movwf	??_runPotScaling
  3436  026E  0858               	movf	??_runPotScaling,w
  3437  026F  07D5               	addwf	_potSetCount,f
  3438                           
  3439                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3440  0270  3020               	movlw	32
  3441  0271  0655               	xorwf	_potSetCount,w
  3442  0272  1D03               	btfss	3,2
  3443  0273  2A75               	goto	u136_21
  3444  0274  2A76               	goto	u136_20
  3445  0275                     u136_21:
  3446  0275  2AD7               	goto	i1l335
  3447  0276                     u136_20:
  3448  0276                     i1l1765:
  3449                           
  3450                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3451  0276  0846               	movf	_filteredFreqPot,w
  3452  0277  3ED3               	addlw	211
  3453  0278  00F0               	movwf	___lmul@multiplier
  3454  0279  30FF               	movlw	255
  3455  027A  3D47               	addwfc	_filteredFreqPot+1,w
  3456  027B  00F1               	movwf	___lmul@multiplier+1
  3457  027C  01F2               	clrf	___lmul@multiplier+2
  3458  027D  01F3               	clrf	___lmul@multiplier+3
  3459  027E  3000               	movlw	0
  3460  027F  00F7               	movwf	___lmul@multiplicand+3
  3461  0280  3000               	movlw	0
  3462  0281  00F6               	movwf	___lmul@multiplicand+2
  3463  0282  3000               	movlw	0
  3464  0283  00F5               	movwf	___lmul@multiplicand+1
  3465  0284  3090               	movlw	144
  3466  0285  00F4               	movwf	___lmul@multiplicand
  3467  0286  3184  2495  3182   	fcall	___lmul
  3468  0289  0870               	movf	?___lmul,w
  3469  028A  0020               	movlb	0	; select bank0
  3470  028B  00D8               	movwf	??_runPotScaling
  3471  028C  0871               	movf	?___lmul+1,w
  3472  028D  00D9               	movwf	??_runPotScaling+1
  3473  028E  0872               	movf	?___lmul+2,w
  3474  028F  00DA               	movwf	??_runPotScaling+2
  3475  0290  0873               	movf	?___lmul+3,w
  3476  0291  00DB               	movwf	??_runPotScaling+3
  3477  0292  300A               	movlw	10
  3478  0293                     u137_25:
  3479  0293  36DB               	lsrf	??_runPotScaling+3,f
  3480  0294  0CDA               	rrf	??_runPotScaling+2,f
  3481  0295  0CD9               	rrf	??_runPotScaling+1,f
  3482  0296  0CD8               	rrf	??_runPotScaling,f
  3483  0297                     u137_20:
  3484  0297  0B89               	decfsz	9,f
  3485  0298  2A93               	goto	u137_25
  3486  0299  0858               	movf	??_runPotScaling,w
  3487  029A  3E0F               	addlw	15
  3488  029B  00DC               	movwf	??_runPotScaling+4
  3489  029C  085C               	movf	??_runPotScaling+4,w
  3490  029D  00D7               	movwf	_setPeriod
  3491                           
  3492                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3493  029E  0844               	movf	_filteredDutyPot,w
  3494  029F  3ED3               	addlw	211
  3495  02A0  00F0               	movwf	___lmul@multiplier
  3496  02A1  30FF               	movlw	255
  3497  02A2  3D45               	addwfc	_filteredDutyPot+1,w
  3498  02A3  00F1               	movwf	___lmul@multiplier+1
  3499  02A4  01F2               	clrf	___lmul@multiplier+2
  3500  02A5  01F3               	clrf	___lmul@multiplier+3
  3501  02A6  0857               	movf	_setPeriod,w
  3502  02A7  00D8               	movwf	??_runPotScaling
  3503  02A8  01D9               	clrf	??_runPotScaling+1
  3504  02A9  01DA               	clrf	??_runPotScaling+2
  3505  02AA  01DB               	clrf	??_runPotScaling+3
  3506  02AB  085B               	movf	??_runPotScaling+3,w
  3507  02AC  00F7               	movwf	___lmul@multiplicand+3
  3508  02AD  085A               	movf	??_runPotScaling+2,w
  3509  02AE  00F6               	movwf	___lmul@multiplicand+2
  3510  02AF  0859               	movf	??_runPotScaling+1,w
  3511  02B0  00F5               	movwf	___lmul@multiplicand+1
  3512  02B1  0858               	movf	??_runPotScaling,w
  3513  02B2  00F4               	movwf	___lmul@multiplicand
  3514  02B3  3184  2495  3182   	fcall	___lmul
  3515  02B6  0870               	movf	?___lmul,w
  3516  02B7  0020               	movlb	0	; select bank0
  3517  02B8  00DC               	movwf	??_runPotScaling+4
  3518  02B9  0871               	movf	?___lmul+1,w
  3519  02BA  00DD               	movwf	??_runPotScaling+5
  3520  02BB  0872               	movf	?___lmul+2,w
  3521  02BC  00DE               	movwf	??_runPotScaling+6
  3522  02BD  0873               	movf	?___lmul+3,w
  3523  02BE  00DF               	movwf	??_runPotScaling+7
  3524  02BF  3008               	movlw	8
  3525  02C0                     u138_25:
  3526  02C0  36DF               	lsrf	??_runPotScaling+7,f
  3527  02C1  0CDE               	rrf	??_runPotScaling+6,f
  3528  02C2  0CDD               	rrf	??_runPotScaling+5,f
  3529  02C3  0CDC               	rrf	??_runPotScaling+4,f
  3530  02C4                     u138_20:
  3531  02C4  0B89               	decfsz	9,f
  3532  02C5  2AC0               	goto	u138_25
  3533  02C6  085D               	movf	??_runPotScaling+5,w
  3534  02C7  00D1               	movwf	_setDuty+1
  3535  02C8  085C               	movf	??_runPotScaling+4,w
  3536  02C9  00D0               	movwf	_setDuty
  3537                           
  3538                           ;Potentiometer.c: 64:         setPWMDutyandPeriod(setDuty, setPeriod);
  3539  02CA  0851               	movf	_setDuty+1,w
  3540  02CB  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3541  02CC  0850               	movf	_setDuty,w
  3542  02CD  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3543  02CE  0857               	movf	_setPeriod,w
  3544  02CF  00D8               	movwf	??_runPotScaling
  3545  02D0  0858               	movf	??_runPotScaling,w
  3546  02D1  00F2               	movwf	setPWMDutyandPeriod@period
  3547  02D2  3184  24C8  3182   	fcall	_setPWMDutyandPeriod
  3548  02D5                     i1l1767:
  3549                           
  3550                           ;Potentiometer.c: 65:         potSetCount = 0;
  3551  02D5  0020               	movlb	0	; select bank0
  3552  02D6  01D5               	clrf	_potSetCount
  3553  02D7                     i1l335:
  3554  02D7  0008               	return
  3555  02D8                     __end_of_runPotScaling:
  3556                           
  3557                           	psect	text12
  3558  04C8                     __ptext12:	
  3559 ;; *************** function _setPWMDutyandPeriod *****************
  3560 ;; Defined at:
  3561 ;;		line 48 in file "PWM.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3564 ;;  period          1    2[COMMON] unsigned char 
  3565 ;; Auto vars:     Size  Location     Type
  3566 ;;		None
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, status,2, status,0
  3571 ;; Tracked objects:
  3572 ;;		On entry : 0/0
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3576 ;;      Params:         3       0       0       0       0       0
  3577 ;;      Locals:         0       0       0       0       0       0
  3578 ;;      Temps:          2       0       0       0       0       0
  3579 ;;      Totals:         5       0       0       0       0       0
  3580 ;;Total ram usage:        5 bytes
  3581 ;; Hardware stack levels used: 1
  3582 ;; This function calls:
  3583 ;;		Nothing
  3584 ;; This function is called by:
  3585 ;;		_Tick980Hz
  3586 ;;		_runPotScaling
  3587 ;; This function uses a non-reentrant model
  3588 ;;
  3589                           
  3590  04C8                     _setPWMDutyandPeriod:	
  3591                           ;psect for function _setPWMDutyandPeriod
  3592                           
  3593  04C8                     i1l1507:	
  3594                           ;incstack = 0
  3595                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3596                           
  3597                           
  3598                           ;PWM.c: 49:     PR2 = period;
  3599  04C8  0872               	movf	setPWMDutyandPeriod@period,w
  3600  04C9  0020               	movlb	0	; select bank0
  3601  04CA  009B               	movwf	27	;volatile
  3602  04CB                     i1l1509:
  3603                           
  3604                           ;PWM.c: 50:     CCPR1L = dutyCycle >> 2;
  3605  04CB  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3606  04CC  00F4               	movwf	??_setPWMDutyandPeriod+1
  3607  04CD  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3608  04CE  00F3               	movwf	??_setPWMDutyandPeriod
  3609  04CF  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3610  04D0  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3611  04D1  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3612  04D2  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3613  04D3  0873               	movf	??_setPWMDutyandPeriod,w
  3614  04D4  0025               	movlb	5	; select bank5
  3615  04D5  0091               	movwf	17	;volatile
  3616  04D6                     i1l1511:
  3617                           
  3618                           ;PWM.c: 51:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  3619  04D6  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3620  04D7  3901               	andlw	1
  3621  04D8  00F3               	movwf	??_setPWMDutyandPeriod
  3622  04D9  0EF3               	swapf	??_setPWMDutyandPeriod,f
  3623  04DA  0813               	movf	19,w	;volatile
  3624  04DB  0673               	xorwf	??_setPWMDutyandPeriod,w
  3625  04DC  39EF               	andlw	-17
  3626  04DD  0673               	xorwf	??_setPWMDutyandPeriod,w
  3627  04DE  0093               	movwf	19	;volatile
  3628                           
  3629                           ;PWM.c: 52:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  3630  04DF  3002               	movlw	2
  3631  04E0  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  3632  04E1  00F3               	movwf	??_setPWMDutyandPeriod
  3633  04E2  3000               	movlw	0
  3634  04E3  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  3635  04E4  00F4               	movwf	??_setPWMDutyandPeriod+1
  3636  04E5  3000               	movlw	0
  3637  04E6  0274               	subwf	??_setPWMDutyandPeriod+1,w
  3638  04E7  3002               	movlw	2
  3639  04E8  1903               	skipnz
  3640  04E9  0273               	subwf	??_setPWMDutyandPeriod,w
  3641  04EA  1803               	skipnc
  3642  04EB  2CED               	goto	u77_21
  3643  04EC  2CF0               	goto	u77_20
  3644  04ED                     u77_21:
  3645  04ED  0025               	movlb	5	; select bank5
  3646  04EE  1693               	bsf	19,5	;volatile
  3647  04EF  2CF2               	goto	u78_24
  3648  04F0                     u77_20:
  3649  04F0  0025               	movlb	5	; select bank5
  3650  04F1  1293               	bcf	19,5	;volatile
  3651  04F2                     u78_24:
  3652  04F2                     i1l143:
  3653  04F2  0008               	return
  3654  04F3                     __end_of_setPWMDutyandPeriod:
  3655                           
  3656                           	psect	text13
  3657  0495                     __ptext13:	
  3658 ;; *************** function ___lmul *****************
  3659 ;; Defined at:
  3660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  multiplier      4    0[COMMON] unsigned long 
  3663 ;;  multiplicand    4    4[COMMON] unsigned long 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  product         4    8[COMMON] unsigned long 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  4    0[COMMON] unsigned long 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3675 ;;      Params:         8       0       0       0       0       0
  3676 ;;      Locals:         4       0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0
  3678 ;;      Totals:        12       0       0       0       0       0
  3679 ;;Total ram usage:       12 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_runPotScaling
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688  0495                     ___lmul:	
  3689                           ;psect for function ___lmul
  3690                           
  3691  0495                     i1l1645:	
  3692                           ;incstack = 0
  3693                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3694                           
  3695  0495  3000               	movlw	0
  3696  0496  00FB               	movwf	___lmul@product+3
  3697  0497  3000               	movlw	0
  3698  0498  00FA               	movwf	___lmul@product+2
  3699  0499  3000               	movlw	0
  3700  049A  00F9               	movwf	___lmul@product+1
  3701  049B  3000               	movlw	0
  3702  049C  00F8               	movwf	___lmul@product
  3703  049D                     i1l1647:
  3704  049D  1C70               	btfss	___lmul@multiplier,0
  3705  049E  2CA0               	goto	u115_21
  3706  049F  2CA1               	goto	u115_20
  3707  04A0                     u115_21:
  3708  04A0  2CA9               	goto	i1l1651
  3709  04A1                     u115_20:
  3710  04A1                     i1l1649:
  3711  04A1  0874               	movf	___lmul@multiplicand,w
  3712  04A2  07F8               	addwf	___lmul@product,f
  3713  04A3  0875               	movf	___lmul@multiplicand+1,w
  3714  04A4  3DF9               	addwfc	___lmul@product+1,f
  3715  04A5  0876               	movf	___lmul@multiplicand+2,w
  3716  04A6  3DFA               	addwfc	___lmul@product+2,f
  3717  04A7  0877               	movf	___lmul@multiplicand+3,w
  3718  04A8  3DFB               	addwfc	___lmul@product+3,f
  3719  04A9                     i1l1651:
  3720  04A9  3001               	movlw	1
  3721  04AA                     u116_25:
  3722  04AA  35F4               	lslf	___lmul@multiplicand,f
  3723  04AB  0DF5               	rlf	___lmul@multiplicand+1,f
  3724  04AC  0DF6               	rlf	___lmul@multiplicand+2,f
  3725  04AD  0DF7               	rlf	___lmul@multiplicand+3,f
  3726  04AE  0B89               	decfsz	9,f
  3727  04AF  2CAA               	goto	u116_25
  3728  04B0                     i1l1653:
  3729  04B0  3001               	movlw	1
  3730  04B1                     u117_25:
  3731  04B1  36F3               	lsrf	___lmul@multiplier+3,f
  3732  04B2  0CF2               	rrf	___lmul@multiplier+2,f
  3733  04B3  0CF1               	rrf	___lmul@multiplier+1,f
  3734  04B4  0CF0               	rrf	___lmul@multiplier,f
  3735  04B5  0B89               	decfsz	9,f
  3736  04B6  2CB1               	goto	u117_25
  3737  04B7  0873               	movf	___lmul@multiplier+3,w
  3738  04B8  0472               	iorwf	___lmul@multiplier+2,w
  3739  04B9  0471               	iorwf	___lmul@multiplier+1,w
  3740  04BA  0470               	iorwf	___lmul@multiplier,w
  3741  04BB  1D03               	skipz
  3742  04BC  2CBE               	goto	u118_21
  3743  04BD  2CBF               	goto	u118_20
  3744  04BE                     u118_21:
  3745  04BE  2C9D               	goto	i1l1647
  3746  04BF                     u118_20:
  3747  04BF                     i1l1655:
  3748  04BF  087B               	movf	___lmul@product+3,w
  3749  04C0  00F3               	movwf	?___lmul+3
  3750  04C1  087A               	movf	___lmul@product+2,w
  3751  04C2  00F2               	movwf	?___lmul+2
  3752  04C3  0879               	movf	___lmul@product+1,w
  3753  04C4  00F1               	movwf	?___lmul+1
  3754  04C5  0878               	movf	___lmul@product,w
  3755  04C6  00F0               	movwf	?___lmul
  3756  04C7                     i1l549:
  3757  04C7  0008               	return
  3758  04C8                     __end_of___lmul:
  3759                           
  3760                           	psect	text14
  3761  03F4                     __ptext14:	
  3762 ;; *************** function _readFilteredFreqPot *****************
  3763 ;; Defined at:
  3764 ;;		line 39 in file "Potentiometer.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;  i               1    8[BANK0 ] unsigned char 
  3769 ;;  i               1    9[BANK0 ] unsigned char 
  3770 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  2   11[COMMON] unsigned short 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3780 ;;      Params:         2       0       0       0       0       0
  3781 ;;      Locals:         0       6       0       0       0       0
  3782 ;;      Temps:          0       4       0       0       0       0
  3783 ;;      Totals:         2      10       0       0       0       0
  3784 ;;Total ram usage:       12 bytes
  3785 ;; Hardware stack levels used: 1
  3786 ;; Hardware stack levels required when called: 1
  3787 ;; This function calls:
  3788 ;;		_readADCRaw
  3789 ;; This function is called by:
  3790 ;;		_Tick980Hz
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794  03F4                     _readFilteredFreqPot:	
  3795                           ;psect for function _readFilteredFreqPot
  3796                           
  3797  03F4                     i1l1731:	
  3798                           ;incstack = 0
  3799                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3800                           
  3801                           
  3802                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  3803  03F4  0020               	movlb	0	; select bank0
  3804  03F5  01E1               	clrf	readFilteredFreqPot@i
  3805  03F6                     i1l1737:
  3806  03F6  3561               	lslf	readFilteredFreqPot@i,w
  3807  03F7  3EA2               	addlw	(low ((_freqPotFIFO| 0+2)))& (0+255)
  3808  03F8  0086               	movwf	6
  3809  03F9  0187               	clrf	7
  3810  03FA  3561               	lslf	readFilteredFreqPot@i,w
  3811  03FB  3EA0               	addlw	(low (_freqPotFIFO| 0))& (0+255)
  3812  03FC  0084               	movwf	4
  3813  03FD  0185               	clrf	5
  3814  03FE  3F40               	moviw [0]fsr1
  3815  03FF  3F80               	movwi [0]fsr0
  3816  0400  3F41               	moviw [1]fsr1
  3817  0401  3F81               	movwi [1]fsr0
  3818  0402                     i1l1739:
  3819  0402  3001               	movlw	1
  3820  0403  00D8               	movwf	??_readFilteredFreqPot
  3821  0404  0858               	movf	??_readFilteredFreqPot,w
  3822  0405  07E1               	addwf	readFilteredFreqPot@i,f
  3823  0406                     i1l1741:
  3824  0406  300F               	movlw	15
  3825  0407  0261               	subwf	readFilteredFreqPot@i,w
  3826  0408  1C03               	skipc
  3827  0409  2C0B               	goto	u133_21
  3828  040A  2C0C               	goto	u133_20
  3829  040B                     u133_21:
  3830  040B  2BF6               	goto	i1l1737
  3831  040C                     u133_20:
  3832  040C                     i1l1743:
  3833                           
  3834                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  3835  040C  300A               	movlw	10
  3836  040D  3182  22D8  3183   	fcall	_readADCRaw
  3837  0410  0871               	movf	?_readADCRaw+1,w
  3838  0411  0021               	movlb	1	; select bank1
  3839  0412  00BF               	movwf	((_freqPotFIFO+1)^(0+128)+30)
  3840  0413  0870               	movf	?_readADCRaw,w
  3841  0414  00BE               	movwf	(_freqPotFIFO^(0+128)+30)
  3842  0415                     i1l1745:
  3843                           
  3844                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  3845  0415  3000               	movlw	0
  3846  0416  0020               	movlb	0	; select bank0
  3847  0417  00DF               	movwf	readFilteredFreqPot@sumOfSamples+3
  3848  0418  3000               	movlw	0
  3849  0419  00DE               	movwf	readFilteredFreqPot@sumOfSamples+2
  3850  041A  3000               	movlw	0
  3851  041B  00DD               	movwf	readFilteredFreqPot@sumOfSamples+1
  3852  041C  3000               	movlw	0
  3853  041D  00DC               	movwf	readFilteredFreqPot@sumOfSamples
  3854  041E                     i1l1747:
  3855                           
  3856                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  3857  041E  01E0               	clrf	readFilteredFreqPot@i_700
  3858  041F                     i1l1753:
  3859  041F  3560               	lslf	readFilteredFreqPot@i_700,w
  3860  0420  3EA0               	addlw	(low (_freqPotFIFO| 0))& (0+255)
  3861  0421  0086               	movwf	6
  3862  0422  0187               	clrf	7
  3863  0423  3F40               	moviw [0]fsr1
  3864  0424  00D8               	movwf	??_readFilteredFreqPot
  3865  0425  3F41               	moviw [1]fsr1
  3866  0426  00D9               	movwf	??_readFilteredFreqPot+1
  3867  0427  0858               	movf	??_readFilteredFreqPot,w
  3868  0428  07DC               	addwf	readFilteredFreqPot@sumOfSamples,f
  3869  0429  0859               	movf	??_readFilteredFreqPot+1,w
  3870  042A  3DDD               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  3871  042B  3000               	movlw	0
  3872  042C  3DDE               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  3873  042D  3DDF               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  3874  042E                     i1l1755:
  3875  042E  3001               	movlw	1
  3876  042F  00D8               	movwf	??_readFilteredFreqPot
  3877  0430  0858               	movf	??_readFilteredFreqPot,w
  3878  0431  07E0               	addwf	readFilteredFreqPot@i_700,f
  3879  0432                     i1l1757:
  3880  0432  3010               	movlw	16
  3881  0433  0260               	subwf	readFilteredFreqPot@i_700,w
  3882  0434  1C03               	skipc
  3883  0435  2C37               	goto	u134_21
  3884  0436  2C38               	goto	u134_20
  3885  0437                     u134_21:
  3886  0437  2C1F               	goto	i1l1753
  3887  0438                     u134_20:
  3888  0438                     i1l1759:
  3889                           
  3890                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  3891  0438  085C               	movf	readFilteredFreqPot@sumOfSamples,w
  3892  0439  00D8               	movwf	??_readFilteredFreqPot
  3893  043A  085D               	movf	readFilteredFreqPot@sumOfSamples+1,w
  3894  043B  00D9               	movwf	??_readFilteredFreqPot+1
  3895  043C  085E               	movf	readFilteredFreqPot@sumOfSamples+2,w
  3896  043D  00DA               	movwf	??_readFilteredFreqPot+2
  3897  043E  085F               	movf	readFilteredFreqPot@sumOfSamples+3,w
  3898  043F  00DB               	movwf	??_readFilteredFreqPot+3
  3899  0440  3004               	movlw	4
  3900  0441                     u135_25:
  3901  0441  36DB               	lsrf	??_readFilteredFreqPot+3,f
  3902  0442  0CDA               	rrf	??_readFilteredFreqPot+2,f
  3903  0443  0CD9               	rrf	??_readFilteredFreqPot+1,f
  3904  0444  0CD8               	rrf	??_readFilteredFreqPot,f
  3905  0445                     u135_20:
  3906  0445  0B89               	decfsz	9,f
  3907  0446  2C41               	goto	u135_25
  3908  0447  0859               	movf	??_readFilteredFreqPot+1,w
  3909  0448  00FC               	movwf	?_readFilteredFreqPot+1
  3910  0449  0858               	movf	??_readFilteredFreqPot,w
  3911  044A  00FB               	movwf	?_readFilteredFreqPot
  3912  044B                     i1l331:
  3913  044B  0008               	return
  3914  044C                     __end_of_readFilteredFreqPot:
  3915                           
  3916                           	psect	text15
  3917  0399                     __ptext15:	
  3918 ;; *************** function _readFilteredDutyPot *****************
  3919 ;; Defined at:
  3920 ;;		line 25 in file "Potentiometer.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;  i               1    8[BANK0 ] unsigned char 
  3925 ;;  i               1    9[BANK0 ] unsigned char 
  3926 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  3927 ;; Return value:  Size  Location     Type
  3928 ;;                  2   11[COMMON] unsigned short 
  3929 ;; Registers used:
  3930 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3931 ;; Tracked objects:
  3932 ;;		On entry : 0/0
  3933 ;;		On exit  : 0/0
  3934 ;;		Unchanged: 0/0
  3935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3936 ;;      Params:         2       0       0       0       0       0
  3937 ;;      Locals:         0       6       0       0       0       0
  3938 ;;      Temps:          0       4       0       0       0       0
  3939 ;;      Totals:         2      10       0       0       0       0
  3940 ;;Total ram usage:       12 bytes
  3941 ;; Hardware stack levels used: 1
  3942 ;; Hardware stack levels required when called: 1
  3943 ;; This function calls:
  3944 ;;		_readADCRaw
  3945 ;; This function is called by:
  3946 ;;		_Tick980Hz
  3947 ;; This function uses a non-reentrant model
  3948 ;;
  3949                           
  3950  0399                     _readFilteredDutyPot:	
  3951                           ;psect for function _readFilteredDutyPot
  3952                           
  3953  0399                     i1l1699:	
  3954                           ;incstack = 0
  3955                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3956                           
  3957                           
  3958                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  3959  0399  0020               	movlb	0	; select bank0
  3960  039A  01E1               	clrf	readFilteredDutyPot@i
  3961  039B                     i1l1705:
  3962  039B  3561               	lslf	readFilteredDutyPot@i,w
  3963  039C  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  3964  039D  0086               	movwf	6
  3965  039E  3001               	movlw	1	; select bank2/3
  3966  039F  0087               	movwf	7
  3967  03A0  3561               	lslf	readFilteredDutyPot@i,w
  3968  03A1  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  3969  03A2  0084               	movwf	4
  3970  03A3  3001               	movlw	1	; select bank2/3
  3971  03A4  0085               	movwf	5
  3972  03A5  3F40               	moviw [0]fsr1
  3973  03A6  3F80               	movwi [0]fsr0
  3974  03A7  3F41               	moviw [1]fsr1
  3975  03A8  3F81               	movwi [1]fsr0
  3976  03A9                     i1l1707:
  3977  03A9  3001               	movlw	1
  3978  03AA  00D8               	movwf	??_readFilteredDutyPot
  3979  03AB  0858               	movf	??_readFilteredDutyPot,w
  3980  03AC  07E1               	addwf	readFilteredDutyPot@i,f
  3981  03AD                     i1l1709:
  3982  03AD  300F               	movlw	15
  3983  03AE  0261               	subwf	readFilteredDutyPot@i,w
  3984  03AF  1C03               	skipc
  3985  03B0  2BB2               	goto	u130_21
  3986  03B1  2BB3               	goto	u130_20
  3987  03B2                     u130_21:
  3988  03B2  2B9B               	goto	i1l1705
  3989  03B3                     u130_20:
  3990  03B3                     i1l1711:
  3991                           
  3992                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  3993  03B3  3009               	movlw	9
  3994  03B4  3182  22D8  3183   	fcall	_readADCRaw
  3995  03B7  0871               	movf	?_readADCRaw+1,w
  3996  03B8  0022               	movlb	2	; select bank2
  3997  03B9  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  3998  03BA  0870               	movf	?_readADCRaw,w
  3999  03BB  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4000  03BC                     i1l1713:
  4001                           
  4002                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4003  03BC  3000               	movlw	0
  4004  03BD  0020               	movlb	0	; select bank0
  4005  03BE  00DF               	movwf	readFilteredDutyPot@sumOfSamples+3
  4006  03BF  3000               	movlw	0
  4007  03C0  00DE               	movwf	readFilteredDutyPot@sumOfSamples+2
  4008  03C1  3000               	movlw	0
  4009  03C2  00DD               	movwf	readFilteredDutyPot@sumOfSamples+1
  4010  03C3  3000               	movlw	0
  4011  03C4  00DC               	movwf	readFilteredDutyPot@sumOfSamples
  4012  03C5                     i1l1715:
  4013                           
  4014                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4015  03C5  01E0               	clrf	readFilteredDutyPot@i_696
  4016  03C6                     i1l1721:
  4017  03C6  3560               	lslf	readFilteredDutyPot@i_696,w
  4018  03C7  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4019  03C8  0086               	movwf	6
  4020  03C9  3001               	movlw	1	; select bank2/3
  4021  03CA  0087               	movwf	7
  4022  03CB  3F40               	moviw [0]fsr1
  4023  03CC  00D8               	movwf	??_readFilteredDutyPot
  4024  03CD  3F41               	moviw [1]fsr1
  4025  03CE  00D9               	movwf	??_readFilteredDutyPot+1
  4026  03CF  0858               	movf	??_readFilteredDutyPot,w
  4027  03D0  07DC               	addwf	readFilteredDutyPot@sumOfSamples,f
  4028  03D1  0859               	movf	??_readFilteredDutyPot+1,w
  4029  03D2  3DDD               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4030  03D3  3000               	movlw	0
  4031  03D4  3DDE               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4032  03D5  3DDF               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4033  03D6                     i1l1723:
  4034  03D6  3001               	movlw	1
  4035  03D7  00D8               	movwf	??_readFilteredDutyPot
  4036  03D8  0858               	movf	??_readFilteredDutyPot,w
  4037  03D9  07E0               	addwf	readFilteredDutyPot@i_696,f
  4038  03DA                     i1l1725:
  4039  03DA  3010               	movlw	16
  4040  03DB  0260               	subwf	readFilteredDutyPot@i_696,w
  4041  03DC  1C03               	skipc
  4042  03DD  2BDF               	goto	u131_21
  4043  03DE  2BE0               	goto	u131_20
  4044  03DF                     u131_21:
  4045  03DF  2BC6               	goto	i1l1721
  4046  03E0                     u131_20:
  4047  03E0                     i1l1727:
  4048                           
  4049                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4050  03E0  085C               	movf	readFilteredDutyPot@sumOfSamples,w
  4051  03E1  00D8               	movwf	??_readFilteredDutyPot
  4052  03E2  085D               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4053  03E3  00D9               	movwf	??_readFilteredDutyPot+1
  4054  03E4  085E               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4055  03E5  00DA               	movwf	??_readFilteredDutyPot+2
  4056  03E6  085F               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4057  03E7  00DB               	movwf	??_readFilteredDutyPot+3
  4058  03E8  3004               	movlw	4
  4059  03E9                     u132_25:
  4060  03E9  36DB               	lsrf	??_readFilteredDutyPot+3,f
  4061  03EA  0CDA               	rrf	??_readFilteredDutyPot+2,f
  4062  03EB  0CD9               	rrf	??_readFilteredDutyPot+1,f
  4063  03EC  0CD8               	rrf	??_readFilteredDutyPot,f
  4064  03ED                     u132_20:
  4065  03ED  0B89               	decfsz	9,f
  4066  03EE  2BE9               	goto	u132_25
  4067  03EF  0859               	movf	??_readFilteredDutyPot+1,w
  4068  03F0  00FC               	movwf	?_readFilteredDutyPot+1
  4069  03F1  0858               	movf	??_readFilteredDutyPot,w
  4070  03F2  00FB               	movwf	?_readFilteredDutyPot
  4071  03F3                     i1l324:
  4072  03F3  0008               	return
  4073  03F4                     __end_of_readFilteredDutyPot:
  4074                           
  4075                           	psect	text16
  4076  02D8                     __ptext16:	
  4077 ;; *************** function _readADCRaw *****************
  4078 ;; Defined at:
  4079 ;;		line 71 in file "ADC.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;  gpioNumber      1    wreg     const enum E2798
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4084 ;;  i               1    9[COMMON] unsigned char 
  4085 ;;  i               1    8[COMMON] unsigned char 
  4086 ;;  returnValue     2    4[COMMON] unsigned int 
  4087 ;;  gpioValid       1    7[COMMON] unsigned char 
  4088 ;;  channel         1    6[COMMON] unsigned char 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  2    0[COMMON] unsigned short 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4098 ;;      Params:         2       0       0       0       0       0
  4099 ;;      Locals:         7       0       0       0       0       0
  4100 ;;      Temps:          2       0       0       0       0       0
  4101 ;;      Totals:        11       0       0       0       0       0
  4102 ;;Total ram usage:       11 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_readFilteredDutyPot
  4108 ;;		_readFilteredFreqPot
  4109 ;;		_readFilteredIDS
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113  02D8                     _readADCRaw:	
  4114                           ;psect for function _readADCRaw
  4115                           
  4116                           
  4117                           ;incstack = 0
  4118                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4119                           ;readADCRaw@gpioNumber stored from wreg
  4120  02D8  00FA               	movwf	readADCRaw@gpioNumber
  4121  02D9                     i1l1569:
  4122                           
  4123                           ;ADC.c: 72:     uint8_t channel = 0;
  4124  02D9  01F6               	clrf	readADCRaw@channel
  4125                           
  4126                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4127  02DA  01F7               	clrf	readADCRaw@gpioValid
  4128  02DB                     i1l1571:
  4129                           
  4130                           ;ADC.c: 75:     if(gpioNumber < 4){
  4131  02DB  3004               	movlw	4
  4132  02DC  027A               	subwf	readADCRaw@gpioNumber,w
  4133  02DD  1803               	skipnc
  4134  02DE  2AE0               	goto	u100_21
  4135  02DF  2AE1               	goto	u100_20
  4136  02E0                     u100_21:
  4137  02E0  2AE7               	goto	i1l208
  4138  02E1                     u100_20:
  4139  02E1                     i1l1573:
  4140                           
  4141                           ;ADC.c: 76:         channel = gpioNumber;
  4142  02E1  087A               	movf	readADCRaw@gpioNumber,w
  4143  02E2  00F2               	movwf	??_readADCRaw
  4144  02E3  0872               	movf	??_readADCRaw,w
  4145  02E4  00F6               	movwf	readADCRaw@channel
  4146  02E5                     i1l1575:
  4147                           
  4148                           ;ADC.c: 77:         gpioValid = 1;
  4149  02E5  01F7               	clrf	readADCRaw@gpioValid
  4150  02E6  0AF7               	incf	readADCRaw@gpioValid,f
  4151  02E7                     i1l208:	
  4152                           ;ADC.c: 78:     }
  4153                           
  4154                           
  4155                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4156  02E7  3009               	movlw	9
  4157  02E8  027A               	subwf	readADCRaw@gpioNumber,w
  4158  02E9  1C03               	skipc
  4159  02EA  2AEC               	goto	u101_21
  4160  02EB  2AED               	goto	u101_20
  4161  02EC                     u101_21:
  4162  02EC  2AFA               	goto	i1l209
  4163  02ED                     u101_20:
  4164  02ED                     i1l1577:
  4165  02ED  3010               	movlw	16
  4166  02EE  027A               	subwf	readADCRaw@gpioNumber,w
  4167  02EF  1803               	skipnc
  4168  02F0  2AF2               	goto	u102_21
  4169  02F1  2AF3               	goto	u102_20
  4170  02F2                     u102_21:
  4171  02F2  2AFA               	goto	i1l209
  4172  02F3                     u102_20:
  4173  02F3                     i1l1579:
  4174                           
  4175                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4176  02F3  087A               	movf	readADCRaw@gpioNumber,w
  4177  02F4  3C14               	sublw	20
  4178  02F5  00F2               	movwf	??_readADCRaw
  4179  02F6  0872               	movf	??_readADCRaw,w
  4180  02F7  00F6               	movwf	readADCRaw@channel
  4181  02F8                     i1l1581:
  4182                           
  4183                           ;ADC.c: 81:         gpioValid = 1;
  4184  02F8  01F7               	clrf	readADCRaw@gpioValid
  4185  02F9  0AF7               	incf	readADCRaw@gpioValid,f
  4186  02FA                     i1l209:	
  4187                           ;ADC.c: 82:     }
  4188                           
  4189                           
  4190                           ;ADC.c: 83:     if(gpioValid){
  4191  02FA  0877               	movf	readADCRaw@gpioValid,w
  4192  02FB  1903               	btfsc	3,2
  4193  02FC  2AFE               	goto	u103_21
  4194  02FD  2AFF               	goto	u103_20
  4195  02FE                     u103_21:
  4196  02FE  2B39               	goto	i1l219
  4197  02FF                     u103_20:
  4198  02FF                     i1l1583:
  4199                           
  4200                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4201  02FF  0021               	movlb	1	; select bank1
  4202  0300  081D               	movf	29,w	;volatile
  4203  0301                     i1l1585:
  4204                           
  4205                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4206  0301  3083               	movlw	131
  4207  0302  00F2               	movwf	??_readADCRaw
  4208  0303  0872               	movf	??_readADCRaw,w
  4209  0304  059D               	andwf	29,f	;volatile
  4210  0305                     i1l1587:
  4211                           
  4212                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4213  0305  0876               	movf	readADCRaw@channel,w	;volatile
  4214  0306  00F2               	movwf	??_readADCRaw
  4215  0307  3001               	movlw	1
  4216  0308                     u104_25:
  4217  0308  35F2               	lslf	??_readADCRaw,f
  4218  0309  3EFF               	addlw	-1
  4219  030A  1D03               	skipz
  4220  030B  2B08               	goto	u104_25
  4221  030C  3572               	lslf	??_readADCRaw,w
  4222  030D  00F3               	movwf	??_readADCRaw+1
  4223  030E  0873               	movf	??_readADCRaw+1,w
  4224  030F  049D               	iorwf	29,f	;volatile
  4225  0310                     i1l1589:
  4226                           
  4227                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4228  0310  01F8               	clrf	readADCRaw@i
  4229  0311                     i1l1595:
  4230  0311  3001               	movlw	1
  4231  0312  00F2               	movwf	??_readADCRaw
  4232  0313  0872               	movf	??_readADCRaw,w
  4233  0314  07F8               	addwf	readADCRaw@i,f
  4234  0315                     i1l1597:
  4235  0315  3008               	movlw	8
  4236  0316  0278               	subwf	readADCRaw@i,w
  4237  0317  1C03               	skipc
  4238  0318  2B1A               	goto	u105_21
  4239  0319  2B1B               	goto	u105_20
  4240  031A                     u105_21:
  4241  031A  2B11               	goto	i1l1595
  4242  031B                     u105_20:
  4243  031B                     i1l213:
  4244                           
  4245                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4246  031B  0021               	movlb	1	; select bank1
  4247  031C  149D               	bsf	29,1	;volatile
  4248  031D                     i1l214:	
  4249                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4250                           
  4251  031D  189D               	btfsc	29,1	;volatile
  4252  031E  2B20               	goto	u106_21
  4253  031F  2B21               	goto	u106_20
  4254  0320                     u106_21:
  4255  0320  2B1D               	goto	i1l214
  4256  0321                     u106_20:
  4257  0321                     i1l1599:
  4258                           
  4259                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4260  0321  081C               	movf	28,w	;volatile
  4261  0322  00F5               	movwf	readADCRaw@returnValue+1
  4262  0323  081B               	movf	27,w	;volatile
  4263  0324  00F4               	movwf	readADCRaw@returnValue
  4264  0325                     i1l1601:
  4265                           
  4266                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4267  0325  3083               	movlw	131
  4268  0326  00F2               	movwf	??_readADCRaw
  4269  0327  0872               	movf	??_readADCRaw,w
  4270  0328  059D               	andwf	29,f	;volatile
  4271  0329                     i1l1603:
  4272                           
  4273                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4274  0329  159D               	bsf	29,3	;volatile
  4275  032A                     i1l1605:
  4276                           
  4277                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4278  032A  01F9               	clrf	readADCRaw@i_614
  4279  032B                     i1l1611:
  4280  032B  3001               	movlw	1
  4281  032C  00F2               	movwf	??_readADCRaw
  4282  032D  0872               	movf	??_readADCRaw,w
  4283  032E  07F9               	addwf	readADCRaw@i_614,f
  4284  032F                     i1l1613:
  4285  032F  3008               	movlw	8
  4286  0330  0279               	subwf	readADCRaw@i_614,w
  4287  0331  1C03               	skipc
  4288  0332  2B34               	goto	u107_21
  4289  0333  2B35               	goto	u107_20
  4290  0334                     u107_21:
  4291  0334  2B2B               	goto	i1l1611
  4292  0335                     u107_20:
  4293  0335                     i1l1615:
  4294                           
  4295                           ;ADC.c: 97:             return returnValue;
  4296  0335  0875               	movf	readADCRaw@returnValue+1,w
  4297  0336  00F1               	movwf	?_readADCRaw+1
  4298  0337  0874               	movf	readADCRaw@returnValue,w
  4299  0338  00F0               	movwf	?_readADCRaw
  4300  0339                     i1l219:
  4301  0339  0008               	return
  4302  033A                     __end_of_readADCRaw:
  4303                           
  4304                           	psect	text17
  4305  0542                     __ptext17:	
  4306 ;; *************** function _currentTripRead *****************
  4307 ;; Defined at:
  4308 ;;		line 21 in file "CurrentSensor.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;		None
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;		None
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      unsigned char 
  4315 ;; Registers used:
  4316 ;;		wreg, status,2, status,0, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4322 ;;      Params:         0       0       0       0       0       0
  4323 ;;      Locals:         1       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0
  4325 ;;      Totals:         1       0       0       0       0       0
  4326 ;;Total ram usage:        1 bytes
  4327 ;; Hardware stack levels used: 1
  4328 ;; Hardware stack levels required when called: 1
  4329 ;; This function calls:
  4330 ;;		_readGPIO
  4331 ;; This function is called by:
  4332 ;;		_Tick980Hz
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336  0542                     _currentTripRead:	
  4337                           ;psect for function _currentTripRead
  4338                           
  4339  0542                     i1l1659:	
  4340                           ;incstack = 0
  4341                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4342                           
  4343                           
  4344                           ;CurrentSensor.c: 22:     return readGPIO(pinRA3) || readGPIO(pinRA1);
  4345  0542  01F6               	clrf	_currentTripRead$736
  4346  0543  0AF6               	incf	_currentTripRead$736,f
  4347  0544                     i1l1661:
  4348  0544  3003               	movlw	3
  4349  0545  3184  244C  3185   	fcall	_readGPIO
  4350  0548  3A00               	xorlw	0
  4351  0549  1D03               	skipz
  4352  054A  2D4C               	goto	u119_21
  4353  054B  2D4D               	goto	u119_20
  4354  054C                     u119_21:
  4355  054C  2D57               	goto	i1l1667
  4356  054D                     u119_20:
  4357  054D                     i1l1663:
  4358  054D  3001               	movlw	1
  4359  054E  3184  244C  3185   	fcall	_readGPIO
  4360  0551  3A00               	xorlw	0
  4361  0552  1D03               	skipz
  4362  0553  2D55               	goto	u120_21
  4363  0554  2D56               	goto	u120_20
  4364  0555                     u120_21:
  4365  0555  2D57               	goto	i1l1667
  4366  0556                     u120_20:
  4367  0556                     i1l1665:
  4368  0556  01F6               	clrf	_currentTripRead$736
  4369  0557                     i1l1667:
  4370  0557  0876               	movf	_currentTripRead$736,w
  4371  0558                     i1l371:
  4372  0558  0008               	return
  4373  0559                     __end_of_currentTripRead:
  4374                           
  4375                           	psect	text18
  4376  044C                     __ptext18:	
  4377 ;; *************** function _readGPIO *****************
  4378 ;; Defined at:
  4379 ;;		line 79 in file "GPIO.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  gpioNumber      1    wreg     const enum E2798
  4382 ;; Auto vars:     Size  Location     Type
  4383 ;;  gpioNumber      1    4[COMMON] const enum E2798
  4384 ;;  portNumber      1    5[COMMON] unsigned char 
  4385 ;;  portType        1    3[COMMON] unsigned char 
  4386 ;; Return value:  Size  Location     Type
  4387 ;;                  1    wreg      _Bool 
  4388 ;; Registers used:
  4389 ;;		wreg, status,2, status,0
  4390 ;; Tracked objects:
  4391 ;;		On entry : 0/0
  4392 ;;		On exit  : 0/0
  4393 ;;		Unchanged: 0/0
  4394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4395 ;;      Params:         0       0       0       0       0       0
  4396 ;;      Locals:         3       0       0       0       0       0
  4397 ;;      Temps:          3       0       0       0       0       0
  4398 ;;      Totals:         6       0       0       0       0       0
  4399 ;;Total ram usage:        6 bytes
  4400 ;; Hardware stack levels used: 1
  4401 ;; This function calls:
  4402 ;;		Nothing
  4403 ;; This function is called by:
  4404 ;;		_currentTripRead
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408  044C                     _readGPIO:	
  4409                           ;psect for function _readGPIO
  4410                           
  4411                           
  4412                           ;incstack = 0
  4413                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  4414                           ;readGPIO@gpioNumber stored from wreg
  4415  044C  00F4               	movwf	readGPIO@gpioNumber
  4416  044D                     i1l1619:
  4417                           
  4418                           ;GPIO.c: 81:     uint8_t portType = 0;
  4419  044D  01F3               	clrf	readGPIO@portType
  4420  044E                     i1l1621:
  4421                           
  4422                           ;GPIO.c: 82:     if(gpioNumber > 7){
  4423  044E  3008               	movlw	8
  4424  044F  0274               	subwf	readGPIO@gpioNumber,w
  4425  0450  1C03               	skipc
  4426  0451  2C53               	goto	u108_21
  4427  0452  2C54               	goto	u108_20
  4428  0453                     u108_21:
  4429  0453  2C5C               	goto	i1l1627
  4430  0454                     u108_20:
  4431  0454                     i1l1623:
  4432                           
  4433                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  4434  0454  0874               	movf	readGPIO@gpioNumber,w
  4435  0455  3EF8               	addlw	248
  4436  0456  00F0               	movwf	??_readGPIO
  4437  0457  0870               	movf	??_readGPIO,w
  4438  0458  00F5               	movwf	readGPIO@portNumber
  4439  0459                     i1l1625:
  4440                           
  4441                           ;GPIO.c: 84:         portType = 1;
  4442  0459  01F3               	clrf	readGPIO@portType
  4443  045A  0AF3               	incf	readGPIO@portType,f
  4444                           
  4445                           ;GPIO.c: 85:     }
  4446  045B  2C61               	goto	i1l1631
  4447  045C                     i1l1627:
  4448                           
  4449                           ;GPIO.c: 87:         portNumber = gpioNumber;
  4450  045C  0874               	movf	readGPIO@gpioNumber,w
  4451  045D  00F0               	movwf	??_readGPIO
  4452  045E  0870               	movf	??_readGPIO,w
  4453  045F  00F5               	movwf	readGPIO@portNumber
  4454  0460                     i1l1629:
  4455                           
  4456                           ;GPIO.c: 88:         portType = 0;
  4457  0460  01F3               	clrf	readGPIO@portType
  4458  0461                     i1l1631:
  4459                           
  4460                           ;GPIO.c: 91:     if(portType == 0){
  4461  0461  0873               	movf	readGPIO@portType,w
  4462  0462  1D03               	btfss	3,2
  4463  0463  2C65               	goto	u109_21
  4464  0464  2C66               	goto	u109_20
  4465  0465                     u109_21:
  4466  0465  2C7B               	goto	i1l1639
  4467  0466                     u109_20:
  4468  0466                     i1l1633:
  4469                           
  4470                           ;GPIO.c: 92:         return ((PORTA &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4471  0466  3001               	movlw	1
  4472  0467  00F0               	movwf	??_readGPIO
  4473  0468  0A75               	incf	readGPIO@portNumber,w
  4474  0469  2C6B               	goto	u110_24
  4475  046A                     u110_25:
  4476  046A  35F0               	lslf	??_readGPIO,f
  4477  046B                     u110_24:
  4478  046B  0B89               	decfsz	9,f
  4479  046C  2C6A               	goto	u110_25
  4480  046D  0870               	movf	??_readGPIO,w
  4481  046E  00F1               	movwf	??_readGPIO+1
  4482  046F  0871               	movf	??_readGPIO+1,w
  4483  0470  0020               	movlb	0	; select bank0
  4484  0471  058C               	andwf	12,f	;volatile
  4485  0472  080C               	movf	12,w	;volatile
  4486  0473  00F2               	movwf	??_readGPIO+2
  4487  0474  0A75               	incf	readGPIO@portNumber,w
  4488  0475  2C77               	goto	u111_24
  4489  0476                     u111_25:
  4490  0476  36F2               	lsrf	??_readGPIO+2,f
  4491  0477                     u111_24:
  4492  0477  0B89               	decfsz	9,f
  4493  0478  2C76               	goto	u111_25
  4494  0479  0872               	movf	??_readGPIO+2,w
  4495  047A  2C94               	goto	i1l286
  4496  047B                     i1l1639:
  4497  047B  0373               	decf	readGPIO@portType,w
  4498  047C  1D03               	btfss	3,2
  4499  047D  2C7F               	goto	u112_21
  4500  047E  2C80               	goto	u112_20
  4501  047F                     u112_21:
  4502  047F  2C94               	goto	i1l286
  4503  0480                     u112_20:
  4504  0480                     i1l1641:
  4505                           
  4506                           ;GPIO.c: 95:         return ((PORTB &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4507  0480  3001               	movlw	1
  4508  0481  00F0               	movwf	??_readGPIO
  4509  0482  0A75               	incf	readGPIO@portNumber,w
  4510  0483  2C85               	goto	u113_24
  4511  0484                     u113_25:
  4512  0484  35F0               	lslf	??_readGPIO,f
  4513  0485                     u113_24:
  4514  0485  0B89               	decfsz	9,f
  4515  0486  2C84               	goto	u113_25
  4516  0487  0870               	movf	??_readGPIO,w
  4517  0488  00F1               	movwf	??_readGPIO+1
  4518  0489  0871               	movf	??_readGPIO+1,w
  4519  048A  0020               	movlb	0	; select bank0
  4520  048B  058D               	andwf	13,f	;volatile
  4521  048C  080D               	movf	13,w	;volatile
  4522  048D  00F2               	movwf	??_readGPIO+2
  4523  048E  0A75               	incf	readGPIO@portNumber,w
  4524  048F  2C91               	goto	u114_24
  4525  0490                     u114_25:
  4526  0490  36F2               	lsrf	??_readGPIO+2,f
  4527  0491                     u114_24:
  4528  0491  0B89               	decfsz	9,f
  4529  0492  2C90               	goto	u114_25
  4530  0493  0872               	movf	??_readGPIO+2,w
  4531  0494                     i1l286:
  4532  0494  0008               	return
  4533  0495                     __end_of_readGPIO:
  4534  007E                     btemp	set	126	;btemp
  4535  007E                     int$flags	set	126
  4536  007E                     wtemp0	set	126
  4537                           
  4538                           	psect	idloc
  4539                           
  4540                           ;Config register IDLOC0 @ 0x8000
  4541                           ;	unspecified, using default values
  4542  8000                     	org	32768
  4543  8000  3FFF               	dw	16383
  4544                           
  4545                           ;Config register IDLOC1 @ 0x8001
  4546                           ;	unspecified, using default values
  4547  8001                     	org	32769
  4548  8001  3FFF               	dw	16383
  4549                           
  4550                           ;Config register IDLOC2 @ 0x8002
  4551                           ;	unspecified, using default values
  4552  8002                     	org	32770
  4553  8002  3FFF               	dw	16383
  4554                           
  4555                           ;Config register IDLOC3 @ 0x8003
  4556                           ;	unspecified, using default values
  4557  8003                     	org	32771
  4558  8003  3FFF               	dw	16383
  4559                           
  4560                           	psect	config
  4561                           
  4562                           ;Config register CONFIG1 @ 0x8007
  4563                           ;	Oscillator Selection
  4564                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4565                           ;	Watchdog Timer Enable
  4566                           ;	WDTE = OFF, WDT disabled
  4567                           ;	Power-up Timer Enable
  4568                           ;	PWRTE = OFF, PWRT disabled
  4569                           ;	MCLR Pin Function Select
  4570                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4571                           ;	Flash Program Memory Code Protection
  4572                           ;	CP = OFF, Program memory code protection is disabled
  4573                           ;	Data Memory Code Protection
  4574                           ;	CPD = OFF, Data memory code protection is disabled
  4575                           ;	Brown-out Reset Enable
  4576                           ;	BOREN = ON, Brown-out Reset enabled
  4577                           ;	Clock Out Enable
  4578                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4579                           ;	Internal/External Switchover
  4580                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4581                           ;	Fail-Safe Clock Monitor Enable
  4582                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4583  8007                     	org	32775
  4584  8007  0FA4               	dw	4004
  4585                           
  4586                           ;Config register CONFIG2 @ 0x8008
  4587                           ;	Flash Memory Self-Write Protection
  4588                           ;	WRT = OFF, Write protection off
  4589                           ;	PLL Enable
  4590                           ;	PLLEN = OFF, 4x PLL disabled
  4591                           ;	Stack Overflow/Underflow Reset Enable
  4592                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4593                           ;	Brown-out Reset Voltage Selection
  4594                           ;	BORV = 0x1, unprogrammed default
  4595                           ;	Low-Voltage Programming Enable
  4596                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4597  8008                     	org	32776
  4598  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     13      69
    BANK1            80      8      72
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _Tick980Hz->_readFilteredDutyPot
    _Tick980Hz->_readFilteredFreqPot
    _runPotScaling->___lmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _main->_setupInternalOscillator
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_readFilteredDutyPot
    _Tick980Hz->_readFilteredFreqPot

Critical Paths under _main in BANK1

    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3163
                                              4 BANK1      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     781
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             10 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     399
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1180
                   _initialiseADCPin
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     781
                                             10 BANK0      3     2      1
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     399
                                             10 BANK0      2     2      0
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    2722
                                             13 COMMON     1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (4) _writeGPIO                                            6     5      1     400
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                        8     8      0     788
                                              0 BANK0      8     8      0
                             ___lmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      1     1      0     228
                                              6 COMMON     1     1      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             6     6      0     204
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   _writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      BB       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      D      45       6       86.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      8      48       8       90.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      20      10       40.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      BB      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Jan 30 17:58:43 2023

                                 l88 050C                                   l89 050C  
                                l200 021E                                  l107 0164  
                                l140 052A                                  l205 026A  
                                l317 0583                                  l165 058B  
                                l266 01F2                                  l196 0597  
                                l366 0541                                  _PR2 001B  
                                wreg 0009                ??_setPWMDutyandPeriod 0073  
                   ??_initialiseGPIO 0063                                 l2011 0167  
                               l2021 017E                                 l2013 0168  
                               l2101 0500                                 l2031 01B9  
                               l2023 017F                                 l2015 016E  
                               l2103 0503                                 l2041 01F8  
                               l2033 01BE                                 l2025 0184  
                               l2017 0175                                 l2105 0506  
                               l2051 020D                                 l2043 01FE  
                               l2035 01C4                                 l2027 018A  
                               l2019 0178                                 l2061 0228  
                               l2053 0213                                 l2045 0204  
                               l2037 01E3                                 l2029 01A9  
                               l2063 0247                                 l2055 021A  
                               l2047 0205                                 l2039 01F5  
                               l2071 0514                                 l2065 024C  
                               l2057 021C                                 l2049 0207  
                               l2137 0141                                 l2081 051F  
                               l2073 0516                                 l2059 0223  
                               l2091 057B                                 l2083 0521  
                               l2075 0518                                 l2067 050F  
                               l2085 0522                                 l2077 051A  
                               l2069 0512                                 l2093 04F3  
                               l2087 0524                                 l2079 051D  
                               l2095 04F7                                 l2089 052B  
                               l1801 00DB                                 l2097 04FA  
                               l1811 00F1                                 l1803 00E0  
                               l2099 04FD                                 l1821 0110  
                               l1813 00FB                                 l1805 00E1  
                               l1831 0129                                 l1823 0111  
                               l1815 0100                                 l1807 00EB  
                               l1833 012E                                 l1825 011B  
                               l1817 0101                                 l1809 00F0  
                               l1835 012F                                 l1827 011E  
                               l1819 010B                                 l1771 008D  
                               l1829 011F                                 l1781 00A1  
                               l1773 0090                                 l1791 00C0  
                               l1783 00AB                                 l1775 0091  
                               l1839 0139                                 l1871 0589  
                               l1873 0592                                 l1793 00C1  
                               l1785 00B0                                 l1777 009B  
                               l1769 008C                                 l1795 00CB  
                               l1787 00B1                                 l1779 00A0  
                               l1797 00D0                                 l1789 00BB  
                               l1869 0584                                 l1799 00D1  
                               STR_1 0559                                 STR_3 056B  
                               _LATA 010C                                 _LATB 010D  
                               u1520 016E                                 u1521 016D  
                               u1530 0184                                 u1531 0183  
                               u1700 024C                                 u1604 01CB  
                               u1540 018A                                 u1701 024B  
                               u1605 01CA                                 u1541 0189  
                               u1630 01FE                                 u1614 01DA  
                               u1631 01FD                                 u1615 01D9  
                               u1640 020D                                 u1624 01EA  
                               u1641 020C                                 u1625 01E9  
                               u1714 0254                                 u1650 0213  
                               u1554 0191                                 u1715 0253  
                               u1651 0212                                 u1555 0190  
                               u1724 0263                                 u1660 0223  
                               u1580 01BE                                 u1564 01A0  
                               u1725 0262                                 u1661 0222  
                               u1581 01BD                                 u1565 019F  
                               u1670 0228                                 u1590 01C4  
                               u1574 01B0                                 u1671 0227  
                               u1591 01C3                                 u1575 01AF  
                               u1684 0230                                 u1685 022F  
                               u1694 023F                                 u1695 023E  
                               i1l83 006A                                 i1l78 005A  
                    _filteredFreqPot 0046                      _filteredDutyPot 0044  
                               _main 04F3                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 fsr1l 0006  
                               btemp 007E                       ?_runPotScaling 0070  
                               start 006C            ??_setupInternalOscillator 0062  
                              ?_main 00E4                                i1l213 031B  
                              i1l214 031D                                i1l143 04F2  
                              i1l208 02E7                                i1l209 02FA  
                              i1l219 0339                                i1l331 044B  
                              i1l324 03F3                                i1l335 02D7  
                              i1l280 0398                                i1l371 0558  
                              i1l286 0494                                i1l549 04C7  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                              u77_20 04F0                                u77_21 04ED  
                              u78_24 04F2                  ___lmul@multiplicand 0074  
                        readADCRaw@i 0078                 readFilteredFreqPot@i 0061  
           readFilteredDutyPot@i_696 0060                                status 0003  
                              wtemp0 007E               initialiseGPIO@portType 00E0  
                _initialiseADCModule 0592                 readFilteredDutyPot@i 0061  
         initialiseADCPin@gpioNumber 00E3                      __initialization 006E  
                       __end_of_main 050F                    ?_initialiseADCPin 0070  
                             ??_main 0065                   ??_initialiseADCPin 0062  
               ?_initialiseADCModule 0070           ??_initialiseCurrentSensors 0065  
    __end_of_setupInternalOscillator 0165  setupInternalOscillator@selectedFreq 0064  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADRESH 009C                               _ADRESL 009B  
                             _CCPR1L 0291                               _ANSELA 018C  
                             _ANSELB 018D                               u100_20 02E1  
                             u100_21 02E0                               u101_20 02ED  
                             u101_21 02EC                               u102_20 02F3  
                             u102_21 02F2                               u110_24 046B  
                             u110_25 046A                               u103_20 02FF  
                             u103_21 02FE                               u111_24 0477  
                             u111_25 0476                               i1l1511 04D6  
                             u112_20 0480                               u120_20 0556  
                             u112_21 047F                               u120_21 0555  
                             i1l1601 0325                               i1l1611 032B  
                             i1l1603 0329                               i1l1507 04C8  
                             i1l1621 044E                               i1l1613 032F  
                             i1l1605 032A                               u104_25 0308  
                             i1l1509 04CB                               i1l1631 0461  
                             i1l1623 0454                               i1l1615 0335  
                             i1l1711 03B3                               u105_20 031B  
                             u121_20 0342                               i1l1641 0480  
                             i1l1633 0466                               i1l1625 0459  
                             u105_21 031A                               i1l1721 03C6  
                             i1l1713 03BC                               i1l1705 039B  
                             u121_21 0341                               i1l1627 045C  
                             i1l1619 044D                               i1l1571 02DB  
                             i1l1723 03D6                               i1l1715 03C5  
                             i1l1707 03A9                               i1l1731 03F4  
                             i1l1651 04A9                               u113_24 0485  
                             u113_25 0484                               i1l1629 0460  
                             i1l1661 0544                               i1l1581 02F8  
                             i1l1573 02E1                               i1l1725 03DA  
                             i1l1709 03AD                               i1l1741 0406  
                             i1l1653 04B0                               i1l1645 0495  
                             i1l1901 004B                               i1l1639 047B  
                             i1l1663 054D                               i1l1583 02FF  
                             i1l1575 02E5                               i1l1727 03E0  
                             i1l1743 040C                               i1l1655 04BF  
                             i1l1647 049D                               i1l1671 033B  
                             i1l1911 0069                               i1l1903 004F  
                             u106_20 0321                               u130_20 03B3  
                             u122_20 0354                               i1l1665 0556  
                             u106_21 0320                               i1l1585 0301  
                             i1l1577 02ED                               i1l1569 02D9  
                             u130_21 03B2                               i1l1753 041F  
                             i1l1745 0415                               i1l1737 03F6  
                             i1l1649 04A1                               u122_21 0353  
                             i1l1681 034E                               i1l1673 033C  
                             i1l1905 004F                               i1l1667 0557  
                             i1l1659 0542                               i1l1595 0311  
                             i1l1587 0305                               i1l1579 02F3  
                             i1l1755 042E                               i1l1747 041E  
                             i1l1739 0402                               i1l1763 026B  
                             i1l1691 0374                               i1l1683 034F  
                             i1l1675 0342                               i1l1907 0064  
                             u114_24 0491                               u114_25 0490  
                             i1l1597 0315                               i1l1589 0310  
                             i1l1757 0432                               i1l1765 0276  
                             i1l1693 0379                               i1l1685 0354  
                             i1l1677 0347                               i1l1909 0065  
                             i1l1599 0321                               i1l1759 0438  
                             i1l1767 02D5                               i1l1695 037E  
                             i1l1687 0359                               i1l1679 034A  
                             u107_20 0335                               u131_20 03E0  
                             u115_20 04A1                               u123_20 0359  
                             u107_21 0334                               u131_21 03DF  
                             u115_21 04A0                               i1l1697 038B  
                             i1l1689 0366                               u123_21 0358  
                             i1l1881 000E                               i1l1699 0399  
                             i1l1891 002B                               i1l1883 0013  
                             i1l1893 0030                               i1l1885 001A  
                             i1l1895 0036                               i1l1887 0020  
                             i1l1879 0006                               u108_20 0454  
                             u132_20 03ED                               u140_20 0020  
                             u108_21 0453                               i1l1897 003E  
                             i1l1889 0025                               u140_21 001F  
                             i1l1899 0046                               u124_24 035E  
                             u132_25 03E9                               u116_25 04AA  
                             u124_25 035D                               u109_20 0466  
                             u133_20 040C                               u141_20 002B  
                             u109_21 0465                               u133_21 040B  
                             u141_21 002A                               u125_24 036B  
                             u117_25 04B1                               u125_25 036A  
                             u134_20 0438                               u118_20 04BF  
                             u126_20 0379                               u142_20 0030  
                             u134_21 0437                               u118_21 04BE  
                             u126_21 0378                               u142_21 002F  
                             u119_20 054D                               u135_20 0445  
                             u127_20 037E                               u143_20 004B  
                             u119_21 054C                               u127_21 037D  
                             u143_21 004A                               u135_25 0441  
                             u136_20 0276                               u144_20 0056  
                             u136_21 0275                               u144_21 0054  
                             u128_24 0383                               u128_25 0382  
                             u137_20 0297                               u145_20 0057  
                             u129_24 0390                               u137_25 0293  
                             u129_25 038F                               u138_20 02C4  
                             u146_20 0060                               u146_21 005E  
                             u138_25 02C0                               u147_20 0061  
                             u139_20 000E                               u139_21 000D  
                    ??_runPotScaling 0058              initialiseGPIO@direction 0062  
                   readGPIO@portType 0073                  readADCRaw@gpioValid 0077  
                             ___lmul 0495                     __end_of_readGPIO 0495  
          setPWMDutyandPeriod@period 0072                ??_initialiseADCModule 0062  
           _initialisePotentiometers 057B           initialiseADCPin@portNumber 00E2  
                   __end_of_setupPWM 052B                      _currentTripRead 0542  
            __end_of__initialization 0086                       __pcstackCOMMON 0070  
          initialiseADCPin@gpioValid 00E0                        _currentILFIFO 00C0  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 006C  
                         __pbssBANK0 0020                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pmaintext 04F3  
                            ?___lmul 0070                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 0559          __end_of_setPWMDutyandPeriod 04F3  
   __end_of_initialiseCurrentSensors 0542             initialiseADCPin@portType 00E1  
                         _filteredIL 0048                            ?_readGPIO 0070  
                         _readADCRaw 02D8                  _readFilteredFreqPot 03F4  
                _readFilteredDutyPot 0399                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 00E1  
               ?_readFilteredFreqPot 007B                              __ptext1 0584  
                            __ptext2 050F                              __ptext3 008A  
                            __ptext4 057B                              __ptext5 052B  
                            __ptext6 0165                              __ptext7 01F3  
                            __ptext8 0592                 ?_readFilteredDutyPot 007B  
                          _T2CONbits 001C                              _setDuty 0050  
                            clrloop0 058D                 end_of_initialization 0086  
                         ??_readGPIO 0070             ?_setupInternalOscillator 0070  
                         ??_setupPWM 0065           ??_initialisePotentiometers 0064  
                         _prevPeriod 0056                    writeGPIO@portType 0073  
              ??_readFilteredFreqPot 0058                ??_readFilteredDutyPot 0058  
                   ?_currentTripRead 0070                    __end_of_writeGPIO 0399  
           initialiseGPIO@portNumber 00E2                          ?_readADCRaw 0070  
                        _CCP1CONbits 0293                __end_of_runPotScaling 02D8  
          ?_initialiseCurrentSensors 0070                       __end_of___lmul 04C8  
        __end_of_initialiseADCModule 0598                       _clockFrequency 0040  
                start_initialization 006E         __end_of_setupTimer0Interrupt 058C  
                     _currentIDSFIFO 0020                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                          ___latbits 0001                        __pcstackBANK0 0058  
                      __pcstackBANK1 00E0                           ?_Tick980Hz 0070  
                   _initialiseADCPin 01F3                   readGPIO@gpioNumber 0074  
                     _initialiseGPIO 0165     __end_of_initialisePotentiometers 0584  
                    readADCRaw@i_614 0079                            _latestIL1 004C  
    readFilteredDutyPot@sumOfSamples 005C               __end_of_initialiseGPIO 01F3  
                          clear_ram0 058C                            _setPeriod 0057  
                           _PIE1bits 0091                             _PIR1bits 0011  
       setPWMDutyandPeriod@dutyCycle 0070                 _setupTimer0Interrupt 0584  
                _currentTripRead$736 0076                          _filteredIDS 004A  
                         _ADCON0bits 009D                   readGPIO@portNumber 0075  
                        _freqPotFIFO 00A0                            _writeGPIO 033A  
                        ??_Tick980Hz 007D                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 0000                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0062                    readADCRaw@channel 0076  
              ?_setupTimer0Interrupt 0070          __end_of_readFilteredFreqPot 044C  
        __end_of_readFilteredDutyPot 03F4                  writeGPIO@gpioNumber 0074  
                 __end_of_readADCRaw 033A             readFilteredFreqPot@i_700 0060  
                         ?_writeGPIO 0070                             __ptext10 033A  
                           __ptext11 026B                             __ptext12 04C8  
                           __ptext13 0495                             __ptext14 03F4  
                           __ptext15 0399                             __ptext16 02D8  
                           __ptext17 0542                             __ptext18 044C  
          ?_initialisePotentiometers 0070                          _dutyPotFIFO 0120  
                           _readGPIO 044C                        _timerSlotHalf 0054  
                       _PSTR1CONbits 0296                             _prevDuty 004E  
                           _setupPWM 050F                             int$flags 007E  
           __end_of_initialiseADCPin 026B                             main@argc 00E4  
                           main@argv 00E6      readFilteredFreqPot@sumOfSamples 005C  
                   _timerSlotQuarter 0053                           _INTCONbits 000B  
                writeGPIO@portNumber 0075                             intlevel1 0000  
           _initialiseCurrentSensors 052B               ??_setupTimer0Interrupt 0062  
                         _OSCCONbits 0099                          _potSetCount 0055  
                _setPWMDutyandPeriod 04C8              _setupInternalOscillator 008A  
                      _emergencyStop 0052                        __pstringtext1 0559  
                      __pstringtext2 056B                        __pstringtext3 0000  
                         _OPTION_REG 0095                  writeGPIO@writeValue 0070  
                        ??_writeGPIO 0071                 ?_setPWMDutyandPeriod 0070  
              readADCRaw@returnValue 0074                    ??_currentTripRead 0076  
                      _runPotScaling 026B  
