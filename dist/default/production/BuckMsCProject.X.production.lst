

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 14:37:47 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1827 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021C                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  029E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0219                     	;# 
   334  021A                     	;# 
   335  021B                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021E                     	;# 
   339  021F                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  039A                     	;# 
   370  039C                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0219                     	;# 
   492  021A                     	;# 
   493  021B                     	;# 
   494  021C                     	;# 
   495  021D                     	;# 
   496  021E                     	;# 
   497  021F                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0294                     	;# 
   503  0295                     	;# 
   504  0295                     	;# 
   505  0296                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  029B                     	;# 
   511  029C                     	;# 
   512  029C                     	;# 
   513  029D                     	;# 
   514  029E                     	;# 
   515  029E                     	;# 
   516  0311                     	;# 
   517  0311                     	;# 
   518  0312                     	;# 
   519  0313                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  039A                     	;# 
   528  039C                     	;# 
   529  039D                     	;# 
   530  039E                     	;# 
   531  039F                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  041C                     	;# 
   536  041D                     	;# 
   537  041E                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011A                     	;# 
   607  011B                     	;# 
   608  011D                     	;# 
   609  011E                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0216                     	;# 
   646  0216                     	;# 
   647  0217                     	;# 
   648  0217                     	;# 
   649  0219                     	;# 
   650  021A                     	;# 
   651  021B                     	;# 
   652  021C                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029B                     	;# 
   669  029C                     	;# 
   670  029C                     	;# 
   671  029D                     	;# 
   672  029E                     	;# 
   673  029E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0318                     	;# 
   679  0318                     	;# 
   680  0319                     	;# 
   681  031A                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0013                     	;# 
   724  0014                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  029E                     	;# 
   831  029E                     	;# 
   832  0311                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0318                     	;# 
   837  0318                     	;# 
   838  0319                     	;# 
   839  031A                     	;# 
   840  0394                     	;# 
   841  0395                     	;# 
   842  0396                     	;# 
   843  039A                     	;# 
   844  039C                     	;# 
   845  039D                     	;# 
   846  039E                     	;# 
   847  039F                     	;# 
   848  0415                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  0FE4                     	;# 
   855  0FE5                     	;# 
   856  0FE6                     	;# 
   857  0FE7                     	;# 
   858  0FE8                     	;# 
   859  0FE9                     	;# 
   860  0FEA                     	;# 
   861  0FEB                     	;# 
   862  0FED                     	;# 
   863  0FEE                     	;# 
   864  0FEF                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0014                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0016                     	;# 
   886  0017                     	;# 
   887  0018                     	;# 
   888  0019                     	;# 
   889  001A                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001E                     	;# 
   893  001F                     	;# 
   894  008C                     	;# 
   895  008D                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0097                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0194                     	;# 
   935  0195                     	;# 
   936  0196                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019C                     	;# 
   944  019C                     	;# 
   945  019D                     	;# 
   946  019E                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0219                     	;# 
   966  021A                     	;# 
   967  021B                     	;# 
   968  021C                     	;# 
   969  021D                     	;# 
   970  021E                     	;# 
   971  021F                     	;# 
   972  0291                     	;# 
   973  0291                     	;# 
   974  0292                     	;# 
   975  0293                     	;# 
   976  0294                     	;# 
   977  0295                     	;# 
   978  0295                     	;# 
   979  0296                     	;# 
   980  0298                     	;# 
   981  0298                     	;# 
   982  0299                     	;# 
   983  029A                     	;# 
   984  029B                     	;# 
   985  029C                     	;# 
   986  029C                     	;# 
   987  029D                     	;# 
   988  029E                     	;# 
   989  029E                     	;# 
   990  0311                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0318                     	;# 
   995  0318                     	;# 
   996  0319                     	;# 
   997  031A                     	;# 
   998  0394                     	;# 
   999  0395                     	;# 
  1000  0396                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0415                     	;# 
  1007  0416                     	;# 
  1008  0417                     	;# 
  1009  041C                     	;# 
  1010  041D                     	;# 
  1011  041E                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0014                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  001E                     	;# 
  1051  001F                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0098                     	;# 
  1062  0099                     	;# 
  1063  009A                     	;# 
  1064  009B                     	;# 
  1065  009B                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011B                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0194                     	;# 
  1093  0195                     	;# 
  1094  0196                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0219                     	;# 
  1124  021A                     	;# 
  1125  021B                     	;# 
  1126  021C                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0295                     	;# 
  1136  0295                     	;# 
  1137  0296                     	;# 
  1138  0298                     	;# 
  1139  0298                     	;# 
  1140  0299                     	;# 
  1141  029A                     	;# 
  1142  029B                     	;# 
  1143  029C                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  0394                     	;# 
  1157  0395                     	;# 
  1158  0396                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0095                     	;# 
  1217  0096                     	;# 
  1218  0097                     	;# 
  1219  0098                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011D                     	;# 
  1241  011E                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0194                     	;# 
  1251  0195                     	;# 
  1252  0196                     	;# 
  1253  0199                     	;# 
  1254  019A                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  020C                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  0291                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0294                     	;# 
  1293  0295                     	;# 
  1294  0295                     	;# 
  1295  0296                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  029E                     	;# 
  1305  029E                     	;# 
  1306  0311                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0318                     	;# 
  1311  0318                     	;# 
  1312  0319                     	;# 
  1313  031A                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039C                     	;# 
  1319  039D                     	;# 
  1320  039E                     	;# 
  1321  039F                     	;# 
  1322  0415                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  0FE4                     	;# 
  1329  0FE5                     	;# 
  1330  0FE6                     	;# 
  1331  0FE7                     	;# 
  1332  0FE8                     	;# 
  1333  0FE9                     	;# 
  1334  0FEA                     	;# 
  1335  0FEB                     	;# 
  1336  0FED                     	;# 
  1337  0FEE                     	;# 
  1338  0FEF                     	;# 
  1339                           
  1340 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1341  000D                     _PORTB	set	13
  1342  000C                     _PORTA	set	12
  1343  001C                     _T2CONbits	set	28
  1344  001B                     _PR2	set	27
  1345  0011                     _PIR1bits	set	17
  1346  000B                     _INTCONbits	set	11
  1347  009B                     _ADRESL	set	155
  1348  009C                     _ADRESH	set	156
  1349  009D                     _ADCON0bits	set	157
  1350  008D                     _TRISB	set	141
  1351  008C                     _TRISA	set	140
  1352  009E                     _ADCON1	set	158
  1353  009D                     _ADCON0	set	157
  1354  0095                     _OPTION_REG	set	149
  1355  0095                     _OPTION_REGbits	set	149
  1356  0091                     _PIE1bits	set	145
  1357  0099                     _OSCCONbits	set	153
  1358  010D                     _LATB	set	269
  1359  010C                     _LATA	set	268
  1360  011D                     _APFCON0bits	set	285
  1361  018D                     _ANSELB	set	397
  1362  018C                     _ANSELA	set	396
  1363  0293                     _CCP1CONbits	set	659
  1364  0296                     _PSTR1CONbits	set	662
  1365  0291                     _CCPR1L	set	657
  1366  0293                     _CCP1CON	set	659
  1367                           
  1368                           	psect	stringtext1
  1369  06B0                     __pstringtext1:
  1370  06B0                     STR_1:
  1371  06B0  3428               	retlw	40	;'('
  1372  06B1  3428               	retlw	40	;'('
  1373  06B2  3449               	retlw	73	;'I'
  1374  06B3  344E               	retlw	78	;'N'
  1375  06B4  3454               	retlw	84	;'T'
  1376  06B5  3443               	retlw	67	;'C'
  1377  06B6  344F               	retlw	79	;'O'
  1378  06B7  344E               	retlw	78	;'N'
  1379  06B8  3429               	retlw	41	;')'
  1380  06B9  3426               	retlw	38	;'&'
  1381  06BA  3430               	retlw	48	;'0'
  1382  06BB  3437               	retlw	55	;'7'
  1383  06BC  3446               	retlw	70	;'F'
  1384  06BD  3468               	retlw	104	;'h'
  1385  06BE  3429               	retlw	41	;')'
  1386  06BF  342C               	retlw	44	;','
  1387  06C0  3432               	retlw	50	;'2'
  1388  06C1  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext2
  1391  06C2                     __pstringtext2:
  1392  06C2                     STR_3:
  1393  06C2  3428               	retlw	40	;'('
  1394  06C3  3428               	retlw	40	;'('
  1395  06C4  3450               	retlw	80	;'P'
  1396  06C5  3449               	retlw	73	;'I'
  1397  06C6  3452               	retlw	82	;'R'
  1398  06C7  3431               	retlw	49	;'1'
  1399  06C8  3429               	retlw	41	;')'
  1400  06C9  3426               	retlw	38	;'&'
  1401  06CA  3430               	retlw	48	;'0'
  1402  06CB  3437               	retlw	55	;'7'
  1403  06CC  3446               	retlw	70	;'F'
  1404  06CD  3468               	retlw	104	;'h'
  1405  06CE  3429               	retlw	41	;')'
  1406  06CF  342C               	retlw	44	;','
  1407  06D0  3432               	retlw	50	;'2'
  1408  06D1  3400               	retlw	0
  1409                           
  1410                           	psect	stringtext3
  1411  0000                     __pstringtext3:
  1412  06C2                     
  1413                           	psect	cinit
  1414  0074                     start_initialization:	
  1415                           ; #config settings
  1416                           
  1417  0074                     __initialization:
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  0074  303D               	movlw	low __pbssBANK0
  1421  0075  0084               	movwf	4
  1422  0076  3000               	movlw	high __pbssBANK0
  1423  0077  0085               	movwf	5
  1424  0078  301A               	movlw	26
  1425  0079  3186  26E3  3180   	fcall	clear_ram0
  1426                           
  1427                           ; Clear objects allocated to BANK1
  1428  007C  30A0               	movlw	low __pbssBANK1
  1429  007D  0084               	movwf	4
  1430  007E  3000               	movlw	high __pbssBANK1
  1431  007F  0085               	movwf	5
  1432  0080  3040               	movlw	64
  1433  0081  3186  26E3  3180   	fcall	clear_ram0
  1434                           
  1435                           ; Clear objects allocated to BANK2
  1436  0084  3020               	movlw	low __pbssBANK2
  1437  0085  0084               	movwf	4
  1438  0086  3001               	movlw	high __pbssBANK2
  1439  0087  0085               	movwf	5
  1440  0088  3040               	movlw	64
  1441  0089  3186  26E3  3180   	fcall	clear_ram0
  1442  008C                     end_of_initialization:	
  1443                           ;End of C runtime variable initialization code
  1444                           
  1445  008C                     __end_of__initialization:
  1446  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1447  008D  0020               	movlb	0
  1448  008E  3186  2E78         	ljmp	_main	;jump to C main() function
  1449                           
  1450                           	psect	bssBANK0
  1451  003D                     __pbssBANK0:
  1452  003D                     _clockFrequency:
  1453  003D                     	ds	4
  1454  0041                     _filteredDutyPot:
  1455  0041                     	ds	2
  1456  0043                     _filteredFreqPot:
  1457  0043                     	ds	2
  1458  0045                     _filteredIL:
  1459  0045                     	ds	2
  1460  0047                     _filteredIDS:
  1461  0047                     	ds	2
  1462  0049                     _latestIL1:
  1463  0049                     	ds	2
  1464  004B                     _prevDuty:
  1465  004B                     	ds	2
  1466  004D                     _setDuty:
  1467  004D                     	ds	2
  1468  004F                     _emergencyStop:
  1469  004F                     	ds	1
  1470  0050                     _timerSlotQuarter:
  1471  0050                     	ds	1
  1472  0051                     _timerSlotHalf:
  1473  0051                     	ds	1
  1474  0052                     _potSetCount:
  1475  0052                     	ds	1
  1476  0053                     _tripIL:
  1477  0053                     	ds	1
  1478  0054                     _tripIDS:
  1479  0054                     	ds	1
  1480  0055                     _prevPeriod:
  1481  0055                     	ds	1
  1482  0056                     _setPeriod:
  1483  0056                     	ds	1
  1484                           
  1485                           	psect	bssBANK1
  1486  00A0                     __pbssBANK1:
  1487  00A0                     _currentILFIFO:
  1488  00A0                     	ds	32
  1489  00C0                     _currentIDSFIFO:
  1490  00C0                     	ds	32
  1491                           
  1492                           	psect	bssBANK2
  1493  0120                     __pbssBANK2:
  1494  0120                     _dutyPotFIFO:
  1495  0120                     	ds	32
  1496  0140                     _freqPotFIFO:
  1497  0140                     	ds	32
  1498                           
  1499                           	psect	clrtext
  1500  06E3                     clear_ram0:	
  1501                           ;	Called with FSR0 containing the base address, and
  1502                           ;	WREG with the size to clear
  1503                           
  1504  06E3  0064               	clrwdt	;clear the watchdog before getting into this loop
  1505  06E4                     clrloop0:
  1506  06E4  0180               	clrf	0	;clear RAM location pointed to by FSR
  1507  06E5  3101               	addfsr 0,1
  1508  06E6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1509  06E7  2EE4               	goto	clrloop0	;have we reached the end yet?
  1510  06E8  3400               	retlw	0	;all done for this memory range, return
  1511                           
  1512                           	psect	cstackCOMMON
  1513  0070                     __pcstackCOMMON:
  1514  0070                     ?_currentTripRead:
  1515  0070                     ?_setPWMDutyandPeriod:	
  1516                           ; 1 bytes @ 0x0
  1517                           
  1518  0070                     ?_runPotScaling:	
  1519                           ; 1 bytes @ 0x0
  1520                           
  1521  0070                     ?_setupInternalOscillator:	
  1522                           ; 1 bytes @ 0x0
  1523                           
  1524  0070                     ?_setupPWM:	
  1525                           ; 1 bytes @ 0x0
  1526                           
  1527  0070                     ?_setupTimer0Interrupt:	
  1528                           ; 1 bytes @ 0x0
  1529                           
  1530  0070                     ?_initialiseADCModule:	
  1531                           ; 1 bytes @ 0x0
  1532                           
  1533  0070                     ?_initialiseCurrentSensors:	
  1534                           ; 1 bytes @ 0x0
  1535                           
  1536  0070                     ?_initialisePotentiometers:	
  1537                           ; 1 bytes @ 0x0
  1538                           
  1539  0070                     ?_Tick980Hz:	
  1540                           ; 1 bytes @ 0x0
  1541                           
  1542  0070                     ?_initialiseADCPin:	
  1543                           ; 1 bytes @ 0x0
  1544                           
  1545  0070                     ?_readGPIO:	
  1546                           ; 1 bytes @ 0x0
  1547                           
  1548  0070                     ??_readGPIO:	
  1549                           ; 1 bytes @ 0x0
  1550                           
  1551  0070                     ?i1_writeGPIO:	
  1552                           ; 1 bytes @ 0x0
  1553                           
  1554  0070                     ?_readADCRaw:	
  1555                           ; 1 bytes @ 0x0
  1556                           
  1557  0070                     ?___wmul:	
  1558                           ; 2 bytes @ 0x0
  1559                           
  1560  0070                     ?___lmul:	
  1561                           ; 2 bytes @ 0x0
  1562                           
  1563  0070                     i1writeGPIO@writeValue:	
  1564                           ; 4 bytes @ 0x0
  1565                           
  1566  0070                     setPWMDutyandPeriod@dutyCycle:	
  1567                           ; 1 bytes @ 0x0
  1568                           
  1569  0070                     ___wmul@multiplier:	
  1570                           ; 2 bytes @ 0x0
  1571                           
  1572  0070                     ___lmul@multiplier:	
  1573                           ; 2 bytes @ 0x0
  1574                           
  1575                           
  1576                           ; 4 bytes @ 0x0
  1577  0070                     	ds	1
  1578  0071                     ??i1_writeGPIO:
  1579                           
  1580                           ; 1 bytes @ 0x1
  1581  0071                     	ds	1
  1582  0072                     ??_readADCRaw:
  1583  0072                     setPWMDutyandPeriod@period:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586  0072                     readGPIO@readA:	
  1587                           ; 1 bytes @ 0x2
  1588                           
  1589  0072                     ___wmul@multiplicand:	
  1590                           ; 1 bytes @ 0x2
  1591                           
  1592                           
  1593                           ; 2 bytes @ 0x2
  1594  0072                     	ds	1
  1595  0073                     ??_setPWMDutyandPeriod:
  1596  0073                     readGPIO@returnValueA:	
  1597                           ; 1 bytes @ 0x3
  1598                           
  1599  0073                     i1writeGPIO@portType:	
  1600                           ; 1 bytes @ 0x3
  1601                           
  1602                           
  1603                           ; 1 bytes @ 0x3
  1604  0073                     	ds	1
  1605  0074                     ??___wmul:
  1606  0074                     readGPIO@readB:	
  1607                           ; 1 bytes @ 0x4
  1608                           
  1609  0074                     i1writeGPIO@gpioNumber:	
  1610                           ; 1 bytes @ 0x4
  1611                           
  1612  0074                     readADCRaw@returnValue:	
  1613                           ; 1 bytes @ 0x4
  1614                           
  1615  0074                     ___wmul@product:	
  1616                           ; 2 bytes @ 0x4
  1617                           
  1618  0074                     ___lmul@multiplicand:	
  1619                           ; 2 bytes @ 0x4
  1620                           
  1621                           
  1622                           ; 4 bytes @ 0x4
  1623  0074                     	ds	1
  1624  0075                     readGPIO@returnValueB:
  1625  0075                     i1writeGPIO@portNumber:	
  1626                           ; 1 bytes @ 0x5
  1627                           
  1628                           
  1629                           ; 1 bytes @ 0x5
  1630  0075                     	ds	1
  1631  0076                     ?___lldiv:
  1632  0076                     readADCRaw@channel:	
  1633                           ; 4 bytes @ 0x6
  1634                           
  1635  0076                     readGPIO@portNumber:	
  1636                           ; 1 bytes @ 0x6
  1637                           
  1638  0076                     ___lldiv@divisor:	
  1639                           ; 1 bytes @ 0x6
  1640                           
  1641                           
  1642                           ; 4 bytes @ 0x6
  1643  0076                     	ds	1
  1644  0077                     readADCRaw@gpioValid:
  1645  0077                     readGPIO@portType:	
  1646                           ; 1 bytes @ 0x7
  1647                           
  1648                           
  1649                           ; 1 bytes @ 0x7
  1650  0077                     	ds	1
  1651  0078                     ??___lmul:
  1652  0078                     readADCRaw@i:	
  1653                           ; 1 bytes @ 0x8
  1654                           
  1655  0078                     readGPIO@gpioNumber:	
  1656                           ; 1 bytes @ 0x8
  1657                           
  1658  0078                     ___lmul@product:	
  1659                           ; 1 bytes @ 0x8
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0x8
  1663  0078                     	ds	1
  1664  0079                     ??_currentTripRead:
  1665  0079                     readADCRaw@i_616:	
  1666                           ; 1 bytes @ 0x9
  1667                           
  1668                           
  1669                           ; 1 bytes @ 0x9
  1670  0079                     	ds	1
  1671  007A                     readADCRaw@gpioNumber:
  1672  007A                     _currentTripRead$747:	
  1673                           ; 1 bytes @ 0xA
  1674                           
  1675  007A                     ___lldiv@dividend:	
  1676                           ; 1 bytes @ 0xA
  1677                           
  1678                           
  1679                           ; 4 bytes @ 0xA
  1680  007A                     	ds	1
  1681  007B                     ?_readFilteredDutyPot:
  1682  007B                     ?_readFilteredFreqPot:	
  1683                           ; 2 bytes @ 0xB
  1684                           
  1685                           
  1686                           ; 2 bytes @ 0xB
  1687  007B                     	ds	3
  1688                           
  1689                           	psect	cstackBANK0
  1690  0020                     __pcstackBANK0:
  1691  0020                     ??_readFilteredDutyPot:
  1692  0020                     ??_readFilteredFreqPot:	
  1693                           ; 1 bytes @ 0x0
  1694                           
  1695  0020                     ??___lldiv:	
  1696                           ; 1 bytes @ 0x0
  1697                           
  1698                           
  1699                           ; 1 bytes @ 0x0
  1700  0020                     	ds	1
  1701  0021                     ___lldiv@quotient:
  1702                           
  1703                           ; 4 bytes @ 0x1
  1704  0021                     	ds	3
  1705  0024                     readFilteredDutyPot@sumOfSamples:
  1706  0024                     readFilteredFreqPot@sumOfSamples:	
  1707                           ; 4 bytes @ 0x4
  1708                           
  1709                           
  1710                           ; 4 bytes @ 0x4
  1711  0024                     	ds	1
  1712  0025                     ___lldiv@counter:
  1713                           
  1714                           ; 1 bytes @ 0x5
  1715  0025                     	ds	1
  1716  0026                     ??_runPotScaling:
  1717                           
  1718                           ; 1 bytes @ 0x6
  1719  0026                     	ds	2
  1720  0028                     readFilteredDutyPot@i_702:
  1721  0028                     readFilteredFreqPot@i_706:	
  1722                           ; 1 bytes @ 0x8
  1723                           
  1724                           
  1725                           ; 1 bytes @ 0x8
  1726  0028                     	ds	1
  1727  0029                     readFilteredDutyPot@i:
  1728  0029                     readFilteredFreqPot@i:	
  1729                           ; 1 bytes @ 0x9
  1730                           
  1731                           
  1732                           ; 1 bytes @ 0x9
  1733  0029                     	ds	5
  1734  002E                     runPotScaling@maxDuty:
  1735                           
  1736                           ; 2 bytes @ 0xE
  1737  002E                     	ds	2
  1738  0030                     runPotScaling@minDuty:
  1739                           
  1740                           ; 2 bytes @ 0x10
  1741  0030                     	ds	2
  1742  0032                     ??_Tick980Hz:
  1743                           
  1744                           ; 1 bytes @ 0x12
  1745  0032                     	ds	1
  1746  0033                     ?_writeGPIO:
  1747  0033                     ??_setupInternalOscillator:	
  1748                           ; 1 bytes @ 0x13
  1749                           
  1750  0033                     ??_setupTimer0Interrupt:	
  1751                           ; 1 bytes @ 0x13
  1752                           
  1753  0033                     ??_initialiseADCModule:	
  1754                           ; 1 bytes @ 0x13
  1755                           
  1756  0033                     ?_initialiseGPIO:	
  1757                           ; 1 bytes @ 0x13
  1758                           
  1759  0033                     ??_initialiseADCPin:	
  1760                           ; 1 bytes @ 0x13
  1761                           
  1762  0033                     initialiseGPIO@direction:	
  1763                           ; 1 bytes @ 0x13
  1764                           
  1765  0033                     writeGPIO@writeValue:	
  1766                           ; 1 bytes @ 0x13
  1767                           
  1768                           
  1769                           ; 1 bytes @ 0x13
  1770  0033                     	ds	1
  1771  0034                     ??_writeGPIO:
  1772  0034                     ??_initialiseGPIO:	
  1773                           ; 1 bytes @ 0x14
  1774                           
  1775                           
  1776                           ; 1 bytes @ 0x14
  1777  0034                     	ds	1
  1778  0035                     setupInternalOscillator@selectedFreq:
  1779  0035                     initialiseADCPin@gpioValid:	
  1780                           ; 1 bytes @ 0x15
  1781                           
  1782                           
  1783                           ; 1 bytes @ 0x15
  1784  0035                     	ds	1
  1785  0036                     initialiseADCPin@portType:
  1786  0036                     initialiseGPIO@portType:	
  1787                           ; 1 bytes @ 0x16
  1788                           
  1789  0036                     writeGPIO@portType:	
  1790                           ; 1 bytes @ 0x16
  1791                           
  1792                           
  1793                           ; 1 bytes @ 0x16
  1794  0036                     	ds	1
  1795  0037                     initialiseADCPin@portNumber:
  1796  0037                     initialiseGPIO@gpioNumber:	
  1797                           ; 1 bytes @ 0x17
  1798                           
  1799  0037                     writeGPIO@gpioNumber:	
  1800                           ; 1 bytes @ 0x17
  1801                           
  1802                           
  1803                           ; 1 bytes @ 0x17
  1804  0037                     	ds	1
  1805  0038                     initialiseADCPin@gpioNumber:
  1806  0038                     initialiseGPIO@portNumber:	
  1807                           ; 1 bytes @ 0x18
  1808                           
  1809  0038                     writeGPIO@portNumber:	
  1810                           ; 1 bytes @ 0x18
  1811                           
  1812                           
  1813                           ; 1 bytes @ 0x18
  1814  0038                     	ds	1
  1815  0039                     ??_setupPWM:
  1816  0039                     ??_initialiseCurrentSensors:	
  1817                           ; 1 bytes @ 0x19
  1818                           
  1819  0039                     ??_initialisePotentiometers:	
  1820                           ; 1 bytes @ 0x19
  1821                           
  1822  0039                     ?_main:	
  1823                           ; 1 bytes @ 0x19
  1824                           
  1825  0039                     main@argc:	
  1826                           ; 2 bytes @ 0x19
  1827                           
  1828                           
  1829                           ; 2 bytes @ 0x19
  1830  0039                     	ds	2
  1831  003B                     main@argv:
  1832                           
  1833                           ; 2 bytes @ 0x1B
  1834  003B                     	ds	2
  1835  003D                     ??_main:
  1836                           
  1837                           	psect	maintext
  1838  0678                     __pmaintext:	
  1839                           ; 1 bytes @ 0x1D
  1840 ;;
  1841 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1842 ;;
  1843 ;; *************** function _main *****************
  1844 ;; Defined at:
  1845 ;;		line 103 in file "main.c"
  1846 ;; Parameters:    Size  Location     Type
  1847 ;;  argc            2   25[BANK0 ] int 
  1848 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1849 ;; Auto vars:     Size  Location     Type
  1850 ;;		None
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2   25[BANK0 ] int 
  1853 ;; Registers used:
  1854 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1855 ;; Tracked objects:
  1856 ;;		On entry : B1F/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1860 ;;      Params:         0       4       0       0       0       0
  1861 ;;      Locals:         0       0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0
  1863 ;;      Totals:         0       4       0       0       0       0
  1864 ;;Total ram usage:        4 bytes
  1865 ;; Hardware stack levels required when called: 5
  1866 ;; This function calls:
  1867 ;;		_initialiseADCModule
  1868 ;;		_initialiseCurrentSensors
  1869 ;;		_initialiseGPIO
  1870 ;;		_initialisePotentiometers
  1871 ;;		_setupInternalOscillator
  1872 ;;		_setupPWM
  1873 ;;		_setupTimer0Interrupt
  1874 ;; This function is called by:
  1875 ;;		Startup code after reset
  1876 ;; This function uses a non-reentrant model
  1877 ;;
  1878                           
  1879  0678                     _main:	
  1880                           ;psect for function _main
  1881                           
  1882  0678                     l2098:	
  1883                           ;incstack = 0
  1884                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1885                           
  1886                           
  1887                           ;main.c: 105:     setupInternalOscillator(freq32M);
  1888  0678  300A               	movlw	10
  1889  0679  3181  2173  3186   	fcall	_setupInternalOscillator
  1890  067C                     l2100:
  1891                           
  1892                           ;main.c: 107:     setupPWM();
  1893  067C  3186  2694  3186   	fcall	_setupPWM
  1894  067F                     l2102:
  1895                           
  1896                           ;main.c: 108:     setupTimer0Interrupt();
  1897  067F  3186  26DB  3186   	fcall	_setupTimer0Interrupt
  1898  0682                     l2104:
  1899                           
  1900                           ;main.c: 109:     initialiseADCModule();
  1901  0682  3186  26E9  3186   	fcall	_initialiseADCModule
  1902  0685                     l2106:
  1903                           
  1904                           ;main.c: 110:     initialiseCurrentSensors();
  1905  0685  3186  2636  3186   	fcall	_initialiseCurrentSensors
  1906  0688                     l2108:
  1907                           
  1908                           ;main.c: 111:     initialisePotentiometers();
  1909  0688  3186  26D2  3186   	fcall	_initialisePotentiometers
  1910  068B                     l2110:
  1911                           
  1912                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  1913  068B  0020               	movlb	0	; select bank0
  1914  068C  01B3               	clrf	initialiseGPIO@direction
  1915  068D  300C               	movlw	12
  1916  068E  3182  224E  3186   	fcall	_initialiseGPIO
  1917  0691                     l92:	
  1918                           ;main.c: 114:     while(1){
  1919                           
  1920  0691                     l93:	
  1921                           ;main.c: 116:     }
  1922                           
  1923  0691  2E91               	goto	l92
  1924  0692  3180  2872         	ljmp	start
  1925  0694                     __end_of_main:
  1926                           
  1927                           	psect	text1
  1928  06DB                     __ptext1:	
  1929 ;; *************** function _setupTimer0Interrupt *****************
  1930 ;; Defined at:
  1931 ;;		line 17 in file "Timer0.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;		None
  1936 ;; Return value:  Size  Location     Type
  1937 ;;                  1    wreg      void 
  1938 ;; Registers used:
  1939 ;;		wreg
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1945 ;;      Params:         0       0       0       0       0       0
  1946 ;;      Locals:         0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0
  1948 ;;      Totals:         0       0       0       0       0       0
  1949 ;;Total ram usage:        0 bytes
  1950 ;; Hardware stack levels used: 1
  1951 ;; Hardware stack levels required when called: 3
  1952 ;; This function calls:
  1953 ;;		Nothing
  1954 ;; This function is called by:
  1955 ;;		_main
  1956 ;; This function uses a non-reentrant model
  1957 ;;
  1958                           
  1959  06DB                     _setupTimer0Interrupt:	
  1960                           ;psect for function _setupTimer0Interrupt
  1961                           
  1962  06DB                     l2026:	
  1963                           ;incstack = 0
  1964                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1965                           
  1966                           
  1967                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1968  06DB  178B               	bsf	11,7	;volatile
  1969                           
  1970                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1971  06DC  168B               	bsf	11,5	;volatile
  1972                           
  1973                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1974  06DD  0021               	movlb	1	; select bank1
  1975  06DE  1295               	bcf	21,5	;volatile
  1976                           
  1977                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1978  06DF  1195               	bcf	21,3	;volatile
  1979  06E0                     l2028:
  1980                           
  1981                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1982  06E0  3004               	movlw	4
  1983  06E1  0095               	movwf	21	;volatile
  1984  06E2                     l169:
  1985  06E2  0008               	return
  1986  06E3                     __end_of_setupTimer0Interrupt:
  1987                           
  1988                           	psect	text2
  1989  0694                     __ptext2:	
  1990 ;; *************** function _setupPWM *****************
  1991 ;; Defined at:
  1992 ;;		line 16 in file "PWM.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;		None
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;		None
  1997 ;; Return value:  Size  Location     Type
  1998 ;;                  1    wreg      void 
  1999 ;; Registers used:
  2000 ;;		wreg, status,2, status,0, pclath, cstack
  2001 ;; Tracked objects:
  2002 ;;		On entry : 0/0
  2003 ;;		On exit  : 0/0
  2004 ;;		Unchanged: 0/0
  2005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2006 ;;      Params:         0       0       0       0       0       0
  2007 ;;      Locals:         0       0       0       0       0       0
  2008 ;;      Temps:          0       0       0       0       0       0
  2009 ;;      Totals:         0       0       0       0       0       0
  2010 ;;Total ram usage:        0 bytes
  2011 ;; Hardware stack levels used: 1
  2012 ;; Hardware stack levels required when called: 4
  2013 ;; This function calls:
  2014 ;;		_initialiseGPIO
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020  0694                     _setupPWM:	
  2021                           ;psect for function _setupPWM
  2022                           
  2023  0694                     l2004:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2026                           
  2027                           
  2028                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2029  0694  300C               	movlw	12
  2030  0695  0025               	movlb	5	; select bank5
  2031  0696  0093               	movwf	19	;volatile
  2032  0697                     l2006:
  2033                           
  2034                           ;PWM.c: 20:     PR2 = 0;
  2035  0697  0020               	movlb	0	; select bank0
  2036  0698  019B               	clrf	27	;volatile
  2037  0699                     l2008:
  2038                           
  2039                           ;PWM.c: 21:     CCPR1L = 0;
  2040  0699  0025               	movlb	5	; select bank5
  2041  069A  0191               	clrf	17	;volatile
  2042  069B                     l2010:
  2043                           
  2044                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2045  069B  0022               	movlb	2	; select bank2
  2046  069C  151D               	bsf	29,2	;volatile
  2047  069D                     l2012:
  2048                           
  2049                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2050  069D  0025               	movlb	5	; select bank5
  2051  069E  1596               	bsf	22,3	;volatile
  2052  069F                     l2014:
  2053                           
  2054                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  2055  069F  30FC               	movlw	-4
  2056  06A0  0020               	movlb	0	; select bank0
  2057  06A1  059C               	andwf	28,f	;volatile
  2058  06A2                     l2016:
  2059                           
  2060                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  2061  06A2  0021               	movlb	1	; select bank1
  2062  06A3  1091               	bcf	17,1	;volatile
  2063  06A4                     l2018:
  2064                           
  2065                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  2066  06A4  0020               	movlb	0	; select bank0
  2067  06A5  151C               	bsf	28,2	;volatile
  2068  06A6                     l2020:
  2069                           
  2070                           ;PWM.c: 30:     INTCONbits.PEIE = 1;
  2071  06A6  170B               	bsf	11,6	;volatile
  2072  06A7                     l2022:
  2073                           
  2074                           ;PWM.c: 31:     PIE1bits.CCP1IE = 1;
  2075  06A7  0021               	movlb	1	; select bank1
  2076  06A8  1511               	bsf	17,2	;volatile
  2077  06A9                     l2024:
  2078                           
  2079                           ;PWM.c: 35:     initialiseGPIO(pinRA6, 0);
  2080  06A9  0020               	movlb	0	; select bank0
  2081  06AA  01B3               	clrf	initialiseGPIO@direction
  2082  06AB  3006               	movlw	6
  2083  06AC  3182  224E  3186   	fcall	_initialiseGPIO
  2084  06AF                     l144:
  2085  06AF  0008               	return
  2086  06B0                     __end_of_setupPWM:
  2087                           
  2088                           	psect	text3
  2089  0173                     __ptext3:	
  2090 ;; *************** function _setupInternalOscillator *****************
  2091 ;; Defined at:
  2092 ;;		line 125 in file "main.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;  selectedFreq    1    wreg     const enum E2830
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2106 ;;      Params:         0       0       0       0       0       0
  2107 ;;      Locals:         0       1       0       0       0       0
  2108 ;;      Temps:          0       2       0       0       0       0
  2109 ;;      Totals:         0       3       0       0       0       0
  2110 ;;Total ram usage:        3 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 3
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120  0173                     _setupInternalOscillator:	
  2121                           ;psect for function _setupInternalOscillator
  2122                           
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2126                           ;setupInternalOscillator@selectedFreq stored from wreg
  2127  0173  0020               	movlb	0	; select bank0
  2128  0174  00B5               	movwf	setupInternalOscillator@selectedFreq
  2129  0175                     l1926:
  2130                           
  2131                           ;main.c: 129:     switch(selectedFreq){
  2132  0175  2A22               	goto	l1996
  2133  0176                     l1928:
  2134  0176  3087               	movlw	-121
  2135  0177  0021               	movlb	1	; select bank1
  2136  0178  0599               	andwf	25,f	;volatile
  2137  0179                     l1930:
  2138  0179  1399               	bcf	25,7	;volatile
  2139  017A                     l1932:
  2140  017A  3000               	movlw	0
  2141  017B  0020               	movlb	0	; select bank0
  2142  017C  00C0               	movwf	_clockFrequency+3
  2143  017D  3000               	movlw	0
  2144  017E  00BF               	movwf	_clockFrequency+2
  2145  017F  3079               	movlw	121
  2146  0180  00BE               	movwf	_clockFrequency+1
  2147  0181  3018               	movlw	24
  2148  0182  00BD               	movwf	_clockFrequency
  2149  0183  2A4D               	goto	l111
  2150  0184                     l1934:
  2151  0184  0021               	movlb	1	; select bank1
  2152  0185  0819               	movf	25,w	;volatile
  2153  0186  3987               	andlw	-121
  2154  0187  3820               	iorlw	32
  2155  0188  0099               	movwf	25	;volatile
  2156  0189                     l1936:
  2157  0189  1399               	bcf	25,7	;volatile
  2158  018A                     l1938:
  2159  018A  3000               	movlw	0
  2160  018B  0020               	movlb	0	; select bank0
  2161  018C  00C0               	movwf	_clockFrequency+3
  2162  018D  3000               	movlw	0
  2163  018E  00BF               	movwf	_clockFrequency+2
  2164  018F  30F4               	movlw	244
  2165  0190  00BE               	movwf	_clockFrequency+1
  2166  0191  3024               	movlw	36
  2167  0192  00BD               	movwf	_clockFrequency
  2168  0193  2A4D               	goto	l111
  2169  0194                     l1940:
  2170  0194  0021               	movlb	1	; select bank1
  2171  0195  0819               	movf	25,w	;volatile
  2172  0196  3987               	andlw	-121
  2173  0197  3828               	iorlw	40
  2174  0198  0099               	movwf	25	;volatile
  2175  0199                     l1942:
  2176  0199  1399               	bcf	25,7	;volatile
  2177  019A                     l1944:
  2178  019A  3000               	movlw	0
  2179  019B  0020               	movlb	0	; select bank0
  2180  019C  00C0               	movwf	_clockFrequency+3
  2181  019D  3001               	movlw	1
  2182  019E  00BF               	movwf	_clockFrequency+2
  2183  019F  30E8               	movlw	232
  2184  01A0  00BE               	movwf	_clockFrequency+1
  2185  01A1  3048               	movlw	72
  2186  01A2  00BD               	movwf	_clockFrequency
  2187  01A3  2A4D               	goto	l111
  2188  01A4                     l1946:
  2189  01A4  0021               	movlb	1	; select bank1
  2190  01A5  0819               	movf	25,w	;volatile
  2191  01A6  3987               	andlw	-121
  2192  01A7  3830               	iorlw	48
  2193  01A8  0099               	movwf	25	;volatile
  2194  01A9                     l1948:
  2195  01A9  1399               	bcf	25,7	;volatile
  2196  01AA                     l1950:
  2197  01AA  3000               	movlw	0
  2198  01AB  0020               	movlb	0	; select bank0
  2199  01AC  00C0               	movwf	_clockFrequency+3
  2200  01AD  3003               	movlw	3
  2201  01AE  00BF               	movwf	_clockFrequency+2
  2202  01AF  30D0               	movlw	208
  2203  01B0  00BE               	movwf	_clockFrequency+1
  2204  01B1  3090               	movlw	144
  2205  01B2  00BD               	movwf	_clockFrequency
  2206  01B3  2A4D               	goto	l111
  2207  01B4                     l1952:
  2208  01B4  0021               	movlb	1	; select bank1
  2209  01B5  0819               	movf	25,w	;volatile
  2210  01B6  3987               	andlw	-121
  2211  01B7  3838               	iorlw	56
  2212  01B8  0099               	movwf	25	;volatile
  2213  01B9                     l1954:
  2214  01B9  1399               	bcf	25,7	;volatile
  2215  01BA                     l1956:
  2216  01BA  3000               	movlw	0
  2217  01BB  0020               	movlb	0	; select bank0
  2218  01BC  00C0               	movwf	_clockFrequency+3
  2219  01BD  3007               	movlw	7
  2220  01BE  00BF               	movwf	_clockFrequency+2
  2221  01BF  30A1               	movlw	161
  2222  01C0  00BE               	movwf	_clockFrequency+1
  2223  01C1  3020               	movlw	32
  2224  01C2  00BD               	movwf	_clockFrequency
  2225  01C3  2A4D               	goto	l111
  2226  01C4                     l1958:
  2227  01C4  0021               	movlb	1	; select bank1
  2228  01C5  0819               	movf	25,w	;volatile
  2229  01C6  3987               	andlw	-121
  2230  01C7  3858               	iorlw	88
  2231  01C8  0099               	movwf	25	;volatile
  2232  01C9                     l1960:
  2233  01C9  1399               	bcf	25,7	;volatile
  2234  01CA                     l1962:
  2235  01CA  3000               	movlw	0
  2236  01CB  0020               	movlb	0	; select bank0
  2237  01CC  00C0               	movwf	_clockFrequency+3
  2238  01CD  300F               	movlw	15
  2239  01CE  00BF               	movwf	_clockFrequency+2
  2240  01CF  3042               	movlw	66
  2241  01D0  00BE               	movwf	_clockFrequency+1
  2242  01D1  3040               	movlw	64
  2243  01D2  00BD               	movwf	_clockFrequency
  2244  01D3  2A4D               	goto	l111
  2245  01D4                     l1964:
  2246  01D4  0021               	movlb	1	; select bank1
  2247  01D5  0819               	movf	25,w	;volatile
  2248  01D6  3987               	andlw	-121
  2249  01D7  3860               	iorlw	96
  2250  01D8  0099               	movwf	25	;volatile
  2251  01D9                     l1966:
  2252  01D9  1399               	bcf	25,7	;volatile
  2253  01DA                     l1968:
  2254  01DA  3000               	movlw	0
  2255  01DB  0020               	movlb	0	; select bank0
  2256  01DC  00C0               	movwf	_clockFrequency+3
  2257  01DD  301E               	movlw	30
  2258  01DE  00BF               	movwf	_clockFrequency+2
  2259  01DF  3084               	movlw	132
  2260  01E0  00BE               	movwf	_clockFrequency+1
  2261  01E1  3080               	movlw	128
  2262  01E2  00BD               	movwf	_clockFrequency
  2263  01E3  2A4D               	goto	l111
  2264  01E4                     l1970:
  2265  01E4  0021               	movlb	1	; select bank1
  2266  01E5  0819               	movf	25,w	;volatile
  2267  01E6  3987               	andlw	-121
  2268  01E7  3868               	iorlw	104
  2269  01E8  0099               	movwf	25	;volatile
  2270  01E9                     l1972:
  2271  01E9  1399               	bcf	25,7	;volatile
  2272  01EA                     l1974:
  2273  01EA  3000               	movlw	0
  2274  01EB  0020               	movlb	0	; select bank0
  2275  01EC  00C0               	movwf	_clockFrequency+3
  2276  01ED  303D               	movlw	61
  2277  01EE  00BF               	movwf	_clockFrequency+2
  2278  01EF  3009               	movlw	9
  2279  01F0  00BE               	movwf	_clockFrequency+1
  2280  01F1  3000               	movlw	0
  2281  01F2  00BD               	movwf	_clockFrequency
  2282  01F3  2A4D               	goto	l111
  2283  01F4                     l1976:
  2284  01F4  0021               	movlb	1	; select bank1
  2285  01F5  0819               	movf	25,w	;volatile
  2286  01F6  3987               	andlw	-121
  2287  01F7  3870               	iorlw	112
  2288  01F8  0099               	movwf	25	;volatile
  2289  01F9                     l1978:
  2290  01F9  1399               	bcf	25,7	;volatile
  2291  01FA                     l1980:
  2292  01FA  3000               	movlw	0
  2293  01FB  0020               	movlb	0	; select bank0
  2294  01FC  00C0               	movwf	_clockFrequency+3
  2295  01FD  307A               	movlw	122
  2296  01FE  00BF               	movwf	_clockFrequency+2
  2297  01FF  3012               	movlw	18
  2298  0200  00BE               	movwf	_clockFrequency+1
  2299  0201  3000               	movlw	0
  2300  0202  00BD               	movwf	_clockFrequency
  2301  0203  2A4D               	goto	l111
  2302  0204                     l1982:
  2303  0204  3078               	movlw	120
  2304  0205  0021               	movlb	1	; select bank1
  2305  0206  0499               	iorwf	25,f	;volatile
  2306  0207                     l1984:
  2307  0207  1399               	bcf	25,7	;volatile
  2308  0208                     l1986:
  2309  0208  3000               	movlw	0
  2310  0209  0020               	movlb	0	; select bank0
  2311  020A  00C0               	movwf	_clockFrequency+3
  2312  020B  30F4               	movlw	244
  2313  020C  00BF               	movwf	_clockFrequency+2
  2314  020D  3024               	movlw	36
  2315  020E  00BE               	movwf	_clockFrequency+1
  2316  020F  3000               	movlw	0
  2317  0210  00BD               	movwf	_clockFrequency
  2318  0211  2A4D               	goto	l111
  2319  0212                     l1988:
  2320  0212  0021               	movlb	1	; select bank1
  2321  0213  0819               	movf	25,w	;volatile
  2322  0214  3987               	andlw	-121
  2323  0215  3870               	iorlw	112
  2324  0216  0099               	movwf	25	;volatile
  2325  0217                     l1990:
  2326  0217  1799               	bsf	25,7	;volatile
  2327  0218                     l1992:
  2328  0218  3001               	movlw	1
  2329  0219  0020               	movlb	0	; select bank0
  2330  021A  00C0               	movwf	_clockFrequency+3
  2331  021B  30E8               	movlw	232
  2332  021C  00BF               	movwf	_clockFrequency+2
  2333  021D  3048               	movlw	72
  2334  021E  00BE               	movwf	_clockFrequency+1
  2335  021F  3000               	movlw	0
  2336  0220  00BD               	movwf	_clockFrequency
  2337  0221  2A4D               	goto	l111
  2338  0222                     l1996:
  2339  0222  0835               	movf	setupInternalOscillator@selectedFreq,w
  2340  0223  00B3               	movwf	??_setupInternalOscillator
  2341  0224  01B4               	clrf	??_setupInternalOscillator+1
  2342                           
  2343                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2344                           ; Switch size 1, requested type "simple"
  2345                           ; Number of cases is 1, Range of values is 0 to 0
  2346                           ; switch strategies available:
  2347                           ; Name         Instructions Cycles
  2348                           ; simple_byte            4     3 (average)
  2349                           ; direct_byte            8     6 (fixed)
  2350                           ; jumptable            260     6 (fixed)
  2351                           ;	Chosen strategy is simple_byte
  2352  0225  0834               	movf	??_setupInternalOscillator+1,w
  2353  0226  3A00               	xorlw	0	; case 0
  2354  0227  1903               	skipnz
  2355  0228  2A2A               	goto	l2198
  2356  0229  2A4D               	goto	l111
  2357  022A                     l2198:
  2358                           
  2359                           ; Switch size 1, requested type "simple"
  2360                           ; Number of cases is 11, Range of values is 0 to 10
  2361                           ; switch strategies available:
  2362                           ; Name         Instructions Cycles
  2363                           ; direct_byte           28     6 (fixed)
  2364                           ; simple_byte           34    18 (average)
  2365                           ; jumptable            260     6 (fixed)
  2366                           ;	Chosen strategy is simple_byte
  2367  022A  0833               	movf	??_setupInternalOscillator,w
  2368  022B  3A00               	xorlw	0	; case 0
  2369  022C  1903               	skipnz
  2370  022D  2976               	goto	l1928
  2371  022E  3A01               	xorlw	1	; case 1
  2372  022F  1903               	skipnz
  2373  0230  2984               	goto	l1934
  2374  0231  3A03               	xorlw	3	; case 2
  2375  0232  1903               	skipnz
  2376  0233  2994               	goto	l1940
  2377  0234  3A01               	xorlw	1	; case 3
  2378  0235  1903               	skipnz
  2379  0236  29A4               	goto	l1946
  2380  0237  3A07               	xorlw	7	; case 4
  2381  0238  1903               	skipnz
  2382  0239  29B4               	goto	l1952
  2383  023A  3A01               	xorlw	1	; case 5
  2384  023B  1903               	skipnz
  2385  023C  29C4               	goto	l1958
  2386  023D  3A03               	xorlw	3	; case 6
  2387  023E  1903               	skipnz
  2388  023F  29D4               	goto	l1964
  2389  0240  3A01               	xorlw	1	; case 7
  2390  0241  1903               	skipnz
  2391  0242  29E4               	goto	l1970
  2392  0243  3A0F               	xorlw	15	; case 8
  2393  0244  1903               	skipnz
  2394  0245  29F4               	goto	l1976
  2395  0246  3A01               	xorlw	1	; case 9
  2396  0247  1903               	skipnz
  2397  0248  2A04               	goto	l1982
  2398  0249  3A03               	xorlw	3	; case 10
  2399  024A  1903               	skipnz
  2400  024B  2A12               	goto	l1988
  2401  024C  2A4D               	goto	l111
  2402  024D                     l111:
  2403  024D  0008               	return
  2404  024E                     __end_of_setupInternalOscillator:
  2405                           
  2406                           	psect	text4
  2407  06D2                     __ptext4:	
  2408 ;; *************** function _initialisePotentiometers *****************
  2409 ;; Defined at:
  2410 ;;		line 15 in file "Potentiometer.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2424 ;;      Params:         0       0       0       0       0       0
  2425 ;;      Locals:         0       0       0       0       0       0
  2426 ;;      Temps:          0       0       0       0       0       0
  2427 ;;      Totals:         0       0       0       0       0       0
  2428 ;;Total ram usage:        0 bytes
  2429 ;; Hardware stack levels used: 1
  2430 ;; Hardware stack levels required when called: 4
  2431 ;; This function calls:
  2432 ;;		_initialiseADCPin
  2433 ;; This function is called by:
  2434 ;;		_main
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438  06D2                     _initialisePotentiometers:	
  2439                           ;psect for function _initialisePotentiometers
  2440                           
  2441  06D2                     l2034:	
  2442                           ;incstack = 0
  2443                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2444                           
  2445                           
  2446                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2447  06D2  3009               	movlw	9
  2448  06D3  3182  22CA  3186   	fcall	_initialiseADCPin
  2449                           
  2450                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2451  06D6  300A               	movlw	10
  2452  06D7  3182  22CA  3186   	fcall	_initialiseADCPin
  2453  06DA                     l321:
  2454  06DA  0008               	return
  2455  06DB                     __end_of_initialisePotentiometers:
  2456                           
  2457                           	psect	text5
  2458  0636                     __ptext5:	
  2459 ;; *************** function _initialiseCurrentSensors *****************
  2460 ;; Defined at:
  2461 ;;		line 17 in file "CurrentSensor.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;		None
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;		None
  2466 ;; Return value:  Size  Location     Type
  2467 ;;                  1    wreg      void 
  2468 ;; Registers used:
  2469 ;;		wreg, status,2, status,0, pclath, cstack
  2470 ;; Tracked objects:
  2471 ;;		On entry : 0/0
  2472 ;;		On exit  : 0/0
  2473 ;;		Unchanged: 0/0
  2474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2475 ;;      Params:         0       0       0       0       0       0
  2476 ;;      Locals:         0       0       0       0       0       0
  2477 ;;      Temps:          0       0       0       0       0       0
  2478 ;;      Totals:         0       0       0       0       0       0
  2479 ;;Total ram usage:        0 bytes
  2480 ;; Hardware stack levels used: 1
  2481 ;; Hardware stack levels required when called: 4
  2482 ;; This function calls:
  2483 ;;		_initialiseADCPin
  2484 ;;		_initialiseGPIO
  2485 ;;		_writeGPIO
  2486 ;; This function is called by:
  2487 ;;		_main
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491  0636                     _initialiseCurrentSensors:	
  2492                           ;psect for function _initialiseCurrentSensors
  2493                           
  2494  0636                     l2032:	
  2495                           ;incstack = 0
  2496                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2497                           
  2498                           
  2499                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2500  0636  0020               	movlb	0	; select bank0
  2501  0637  01B3               	clrf	initialiseGPIO@direction
  2502  0638  0AB3               	incf	initialiseGPIO@direction,f
  2503  0639  3003               	movlw	3
  2504  063A  3182  224E  3186   	fcall	_initialiseGPIO
  2505                           
  2506                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2507  063D  0020               	movlb	0	; select bank0
  2508  063E  01B3               	clrf	initialiseGPIO@direction
  2509  063F  0AB3               	incf	initialiseGPIO@direction,f
  2510  0640  3001               	movlw	1
  2511  0641  3182  224E  3186   	fcall	_initialiseGPIO
  2512                           
  2513                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2514  0644  3000               	movlw	0
  2515  0645  3182  22CA  3186   	fcall	_initialiseADCPin
  2516                           
  2517                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  2518  0648  3002               	movlw	2
  2519  0649  3182  22CA  3186   	fcall	_initialiseADCPin
  2520                           
  2521                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2522  064C  0020               	movlb	0	; select bank0
  2523  064D  01B3               	clrf	initialiseGPIO@direction
  2524  064E  300B               	movlw	11
  2525  064F  3182  224E  3186   	fcall	_initialiseGPIO
  2526                           
  2527                           ;CurrentSensor.c: 23:     writeGPIO(9, 0);
  2528  0652  0020               	movlb	0	; select bank0
  2529  0653  01B3               	clrf	writeGPIO@writeValue
  2530  0654  3009               	movlw	9
  2531  0655  3183  2396  3186   	fcall	_writeGPIO
  2532  0658                     l378:
  2533  0658  0008               	return
  2534  0659                     __end_of_initialiseCurrentSensors:
  2535                           
  2536                           	psect	text6
  2537  0396                     __ptext6:	
  2538 ;; *************** function _writeGPIO *****************
  2539 ;; Defined at:
  2540 ;;		line 52 in file "GPIO.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;  gpioNumber      1    wreg     const enum E2798
  2543 ;;  writeValue      1   19[BANK0 ] unsigned char 
  2544 ;; Auto vars:     Size  Location     Type
  2545 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2546 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2547 ;;  portType        1   22[BANK0 ] unsigned char 
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2557 ;;      Params:         0       1       0       0       0       0
  2558 ;;      Locals:         0       3       0       0       0       0
  2559 ;;      Temps:          0       2       0       0       0       0
  2560 ;;      Totals:         0       6       0       0       0       0
  2561 ;;Total ram usage:        6 bytes
  2562 ;; Hardware stack levels used: 1
  2563 ;; Hardware stack levels required when called: 3
  2564 ;; This function calls:
  2565 ;;		Nothing
  2566 ;; This function is called by:
  2567 ;;		_initialiseCurrentSensors
  2568 ;;		_currentTripReset
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           
  2572  0396                     _writeGPIO:	
  2573                           ;psect for function _writeGPIO
  2574                           
  2575                           
  2576                           ;incstack = 0
  2577                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  2578                           ;writeGPIO@gpioNumber stored from wreg
  2579  0396  0020               	movlb	0	; select bank0
  2580  0397  00B7               	movwf	writeGPIO@gpioNumber
  2581  0398                     l1614:
  2582                           
  2583                           ;GPIO.c: 54:     uint8_t portType = 0;
  2584  0398  01B6               	clrf	writeGPIO@portType
  2585  0399                     l1616:
  2586                           
  2587                           ;GPIO.c: 55:     if(gpioNumber > 7){
  2588  0399  3008               	movlw	8
  2589  039A  0237               	subwf	writeGPIO@gpioNumber,w
  2590  039B  1C03               	skipc
  2591  039C  2B9E               	goto	u1031
  2592  039D  2B9F               	goto	u1030
  2593  039E                     u1031:
  2594  039E  2BA7               	goto	l1622
  2595  039F                     u1030:
  2596  039F                     l1618:
  2597                           
  2598                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  2599  039F  0837               	movf	writeGPIO@gpioNumber,w
  2600  03A0  3EF8               	addlw	248
  2601  03A1  00B4               	movwf	??_writeGPIO
  2602  03A2  0834               	movf	??_writeGPIO,w
  2603  03A3  00B8               	movwf	writeGPIO@portNumber
  2604  03A4                     l1620:
  2605                           
  2606                           ;GPIO.c: 57:         portType = 1;
  2607  03A4  01B6               	clrf	writeGPIO@portType
  2608  03A5  0AB6               	incf	writeGPIO@portType,f
  2609                           
  2610                           ;GPIO.c: 58:     }
  2611  03A6  2BAC               	goto	l1626
  2612  03A7                     l1622:
  2613                           
  2614                           ;GPIO.c: 60:         portNumber = gpioNumber;
  2615  03A7  0837               	movf	writeGPIO@gpioNumber,w
  2616  03A8  00B4               	movwf	??_writeGPIO
  2617  03A9  0834               	movf	??_writeGPIO,w
  2618  03AA  00B8               	movwf	writeGPIO@portNumber
  2619  03AB                     l1624:
  2620                           
  2621                           ;GPIO.c: 61:         portType = 0;
  2622  03AB  01B6               	clrf	writeGPIO@portType
  2623  03AC                     l1626:
  2624                           
  2625                           ;GPIO.c: 64:     if(portType == 0){
  2626  03AC  0836               	movf	writeGPIO@portType,w
  2627  03AD  1D03               	btfss	3,2
  2628  03AE  2BB0               	goto	u1041
  2629  03AF  2BB1               	goto	u1040
  2630  03B0                     u1041:
  2631  03B0  2BD1               	goto	l1634
  2632  03B1                     u1040:
  2633  03B1                     l1628:
  2634                           
  2635                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  2636  03B1  0833               	movf	writeGPIO@writeValue,w
  2637  03B2  1903               	btfsc	3,2
  2638  03B3  2BB5               	goto	u1051
  2639  03B4  2BB6               	goto	u1050
  2640  03B5                     u1051:
  2641  03B5  2BC3               	goto	l1632
  2642  03B6                     u1050:
  2643  03B6                     l1630:
  2644  03B6  3001               	movlw	1
  2645  03B7  00B4               	movwf	??_writeGPIO
  2646  03B8  0A38               	incf	writeGPIO@portNumber,w
  2647  03B9  2BBB               	goto	u1064
  2648  03BA                     u1065:
  2649  03BA  35B4               	lslf	??_writeGPIO,f
  2650  03BB                     u1064:
  2651  03BB  0B89               	decfsz	9,f
  2652  03BC  2BBA               	goto	u1065
  2653  03BD  0834               	movf	??_writeGPIO,w
  2654  03BE  00B5               	movwf	??_writeGPIO+1
  2655  03BF  0835               	movf	??_writeGPIO+1,w
  2656  03C0  0022               	movlb	2	; select bank2
  2657  03C1  048C               	iorwf	12,f	;volatile
  2658  03C2  2BF5               	goto	l284
  2659  03C3                     l1632:
  2660  03C3  3001               	movlw	1
  2661  03C4  00B4               	movwf	??_writeGPIO
  2662  03C5  0A38               	incf	writeGPIO@portNumber,w
  2663  03C6  2BC8               	goto	u1074
  2664  03C7                     u1075:
  2665  03C7  35B4               	lslf	??_writeGPIO,f
  2666  03C8                     u1074:
  2667  03C8  0B89               	decfsz	9,f
  2668  03C9  2BC7               	goto	u1075
  2669  03CA  0834               	movf	??_writeGPIO,w
  2670  03CB  3AFF               	xorlw	255
  2671  03CC  00B5               	movwf	??_writeGPIO+1
  2672  03CD  0835               	movf	??_writeGPIO+1,w
  2673  03CE  0022               	movlb	2	; select bank2
  2674  03CF  058C               	andwf	12,f	;volatile
  2675  03D0  2BF5               	goto	l284
  2676  03D1                     l1634:
  2677  03D1  0336               	decf	writeGPIO@portType,w
  2678  03D2  1D03               	btfss	3,2
  2679  03D3  2BD5               	goto	u1081
  2680  03D4  2BD6               	goto	u1080
  2681  03D5                     u1081:
  2682  03D5  2BF5               	goto	l284
  2683  03D6                     u1080:
  2684  03D6                     l1636:
  2685                           
  2686                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  2687  03D6  0833               	movf	writeGPIO@writeValue,w
  2688  03D7  1903               	btfsc	3,2
  2689  03D8  2BDA               	goto	u1091
  2690  03D9  2BDB               	goto	u1090
  2691  03DA                     u1091:
  2692  03DA  2BE8               	goto	l1640
  2693  03DB                     u1090:
  2694  03DB                     l1638:
  2695  03DB  3001               	movlw	1
  2696  03DC  00B4               	movwf	??_writeGPIO
  2697  03DD  0A38               	incf	writeGPIO@portNumber,w
  2698  03DE  2BE0               	goto	u1104
  2699  03DF                     u1105:
  2700  03DF  35B4               	lslf	??_writeGPIO,f
  2701  03E0                     u1104:
  2702  03E0  0B89               	decfsz	9,f
  2703  03E1  2BDF               	goto	u1105
  2704  03E2  0834               	movf	??_writeGPIO,w
  2705  03E3  00B5               	movwf	??_writeGPIO+1
  2706  03E4  0835               	movf	??_writeGPIO+1,w
  2707  03E5  0022               	movlb	2	; select bank2
  2708  03E6  048D               	iorwf	13,f	;volatile
  2709  03E7  2BF5               	goto	l284
  2710  03E8                     l1640:
  2711  03E8  3001               	movlw	1
  2712  03E9  00B4               	movwf	??_writeGPIO
  2713  03EA  0A38               	incf	writeGPIO@portNumber,w
  2714  03EB  2BED               	goto	u1114
  2715  03EC                     u1115:
  2716  03EC  35B4               	lslf	??_writeGPIO,f
  2717  03ED                     u1114:
  2718  03ED  0B89               	decfsz	9,f
  2719  03EE  2BEC               	goto	u1115
  2720  03EF  0834               	movf	??_writeGPIO,w
  2721  03F0  3AFF               	xorlw	255
  2722  03F1  00B5               	movwf	??_writeGPIO+1
  2723  03F2  0835               	movf	??_writeGPIO+1,w
  2724  03F3  0022               	movlb	2	; select bank2
  2725  03F4  058D               	andwf	13,f	;volatile
  2726  03F5                     l284:
  2727  03F5  0008               	return
  2728  03F6                     __end_of_writeGPIO:
  2729                           
  2730                           	psect	text7
  2731  024E                     __ptext7:	
  2732 ;; *************** function _initialiseGPIO *****************
  2733 ;; Defined at:
  2734 ;;		line 18 in file "GPIO.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;  gpioNumber      1    wreg     const enum E2798
  2737 ;;  direction       1   19[BANK0 ] unsigned char 
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2740 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2741 ;;  portType        1   22[BANK0 ] unsigned char 
  2742 ;; Return value:  Size  Location     Type
  2743 ;;                  1    wreg      void 
  2744 ;; Registers used:
  2745 ;;		wreg, status,2, status,0
  2746 ;; Tracked objects:
  2747 ;;		On entry : 0/0
  2748 ;;		On exit  : 0/0
  2749 ;;		Unchanged: 0/0
  2750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2751 ;;      Params:         0       1       0       0       0       0
  2752 ;;      Locals:         0       3       0       0       0       0
  2753 ;;      Temps:          0       2       0       0       0       0
  2754 ;;      Totals:         0       6       0       0       0       0
  2755 ;;Total ram usage:        6 bytes
  2756 ;; Hardware stack levels used: 1
  2757 ;; Hardware stack levels required when called: 3
  2758 ;; This function calls:
  2759 ;;		Nothing
  2760 ;; This function is called by:
  2761 ;;		_main
  2762 ;;		_setupPWM
  2763 ;;		_initialiseCurrentSensors
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767  024E                     _initialiseGPIO:	
  2768                           ;psect for function _initialiseGPIO
  2769                           
  2770                           
  2771                           ;incstack = 0
  2772                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2773                           ;initialiseGPIO@gpioNumber stored from wreg
  2774  024E  0020               	movlb	0	; select bank0
  2775  024F  00B7               	movwf	initialiseGPIO@gpioNumber
  2776  0250                     l1642:
  2777                           
  2778                           ;GPIO.c: 20:     uint8_t portType = 0;
  2779  0250  01B6               	clrf	initialiseGPIO@portType
  2780  0251                     l1644:
  2781                           
  2782                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2783  0251  3008               	movlw	8
  2784  0252  0237               	subwf	initialiseGPIO@gpioNumber,w
  2785  0253  1C03               	skipc
  2786  0254  2A56               	goto	u1121
  2787  0255  2A57               	goto	u1120
  2788  0256                     u1121:
  2789  0256  2A5F               	goto	l1650
  2790  0257                     u1120:
  2791  0257                     l1646:
  2792                           
  2793                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2794  0257  0837               	movf	initialiseGPIO@gpioNumber,w
  2795  0258  3EF8               	addlw	248
  2796  0259  00B4               	movwf	??_initialiseGPIO
  2797  025A  0834               	movf	??_initialiseGPIO,w
  2798  025B  00B8               	movwf	initialiseGPIO@portNumber
  2799  025C                     l1648:
  2800                           
  2801                           ;GPIO.c: 23:         portType = 1;
  2802  025C  01B6               	clrf	initialiseGPIO@portType
  2803  025D  0AB6               	incf	initialiseGPIO@portType,f
  2804                           
  2805                           ;GPIO.c: 24:     }
  2806  025E  2A64               	goto	l1654
  2807  025F                     l1650:
  2808                           
  2809                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2810  025F  0837               	movf	initialiseGPIO@gpioNumber,w
  2811  0260  00B4               	movwf	??_initialiseGPIO
  2812  0261  0834               	movf	??_initialiseGPIO,w
  2813  0262  00B8               	movwf	initialiseGPIO@portNumber
  2814  0263                     l1652:
  2815                           
  2816                           ;GPIO.c: 27:         portType = 0;
  2817  0263  01B6               	clrf	initialiseGPIO@portType
  2818  0264                     l1654:
  2819                           
  2820                           ;GPIO.c: 30:     if(portType == 0){
  2821  0264  0836               	movf	initialiseGPIO@portType,w
  2822  0265  1D03               	btfss	3,2
  2823  0266  2A68               	goto	u1131
  2824  0267  2A69               	goto	u1130
  2825  0268                     u1131:
  2826  0268  2A97               	goto	l1662
  2827  0269                     u1130:
  2828  0269                     l1656:
  2829                           
  2830                           ;GPIO.c: 31:         if(direction){
  2831  0269  0833               	movf	initialiseGPIO@direction,w
  2832  026A  1903               	btfsc	3,2
  2833  026B  2A6D               	goto	u1141
  2834  026C  2A6E               	goto	u1140
  2835  026D                     u1141:
  2836  026D  2A89               	goto	l1660
  2837  026E                     u1140:
  2838  026E                     l1658:
  2839                           
  2840                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2841  026E  3001               	movlw	1
  2842  026F  00B4               	movwf	??_initialiseGPIO
  2843  0270  0A38               	incf	initialiseGPIO@portNumber,w
  2844  0271  2A73               	goto	u1154
  2845  0272                     u1155:
  2846  0272  35B4               	lslf	??_initialiseGPIO,f
  2847  0273                     u1154:
  2848  0273  0B89               	decfsz	9,f
  2849  0274  2A72               	goto	u1155
  2850  0275  0834               	movf	??_initialiseGPIO,w
  2851  0276  00B5               	movwf	??_initialiseGPIO+1
  2852  0277  0835               	movf	??_initialiseGPIO+1,w
  2853  0278  0021               	movlb	1	; select bank1
  2854  0279  048C               	iorwf	12,f	;volatile
  2855                           
  2856                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2857  027A  3001               	movlw	1
  2858  027B  0020               	movlb	0	; select bank0
  2859  027C  00B4               	movwf	??_initialiseGPIO
  2860  027D  0A38               	incf	initialiseGPIO@portNumber,w
  2861  027E  2A80               	goto	u1164
  2862  027F                     u1165:
  2863  027F  35B4               	lslf	??_initialiseGPIO,f
  2864  0280                     u1164:
  2865  0280  0B89               	decfsz	9,f
  2866  0281  2A7F               	goto	u1165
  2867  0282  0834               	movf	??_initialiseGPIO,w
  2868  0283  3AFF               	xorlw	255
  2869  0284  00B5               	movwf	??_initialiseGPIO+1
  2870  0285  0835               	movf	??_initialiseGPIO+1,w
  2871  0286  0023               	movlb	3	; select bank3
  2872  0287  058C               	andwf	12,f	;volatile
  2873                           
  2874                           ;GPIO.c: 34:         }
  2875  0288  2AC9               	goto	l270
  2876  0289                     l1660:
  2877  0289  3001               	movlw	1
  2878  028A  00B4               	movwf	??_initialiseGPIO
  2879  028B  0A38               	incf	initialiseGPIO@portNumber,w
  2880  028C  2A8E               	goto	u1174
  2881  028D                     u1175:
  2882  028D  35B4               	lslf	??_initialiseGPIO,f
  2883  028E                     u1174:
  2884  028E  0B89               	decfsz	9,f
  2885  028F  2A8D               	goto	u1175
  2886  0290  0834               	movf	??_initialiseGPIO,w
  2887  0291  3AFF               	xorlw	255
  2888  0292  00B5               	movwf	??_initialiseGPIO+1
  2889  0293  0835               	movf	??_initialiseGPIO+1,w
  2890  0294  0021               	movlb	1	; select bank1
  2891  0295  058C               	andwf	12,f	;volatile
  2892  0296  2AC9               	goto	l270
  2893  0297                     l1662:
  2894  0297  0336               	decf	initialiseGPIO@portType,w
  2895  0298  1D03               	btfss	3,2
  2896  0299  2A9B               	goto	u1181
  2897  029A  2A9C               	goto	u1180
  2898  029B                     u1181:
  2899  029B  2AC9               	goto	l270
  2900  029C                     u1180:
  2901  029C                     l1664:
  2902                           
  2903                           ;GPIO.c: 38:         if(direction){
  2904  029C  0833               	movf	initialiseGPIO@direction,w
  2905  029D  1903               	btfsc	3,2
  2906  029E  2AA0               	goto	u1191
  2907  029F  2AA1               	goto	u1190
  2908  02A0                     u1191:
  2909  02A0  2ABC               	goto	l1668
  2910  02A1                     u1190:
  2911  02A1                     l1666:
  2912                           
  2913                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2914  02A1  3001               	movlw	1
  2915  02A2  00B4               	movwf	??_initialiseGPIO
  2916  02A3  0A38               	incf	initialiseGPIO@portNumber,w
  2917  02A4  2AA6               	goto	u1204
  2918  02A5                     u1205:
  2919  02A5  35B4               	lslf	??_initialiseGPIO,f
  2920  02A6                     u1204:
  2921  02A6  0B89               	decfsz	9,f
  2922  02A7  2AA5               	goto	u1205
  2923  02A8  0834               	movf	??_initialiseGPIO,w
  2924  02A9  00B5               	movwf	??_initialiseGPIO+1
  2925  02AA  0835               	movf	??_initialiseGPIO+1,w
  2926  02AB  0021               	movlb	1	; select bank1
  2927  02AC  048D               	iorwf	13,f	;volatile
  2928                           
  2929                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2930  02AD  3001               	movlw	1
  2931  02AE  0020               	movlb	0	; select bank0
  2932  02AF  00B4               	movwf	??_initialiseGPIO
  2933  02B0  0A38               	incf	initialiseGPIO@portNumber,w
  2934  02B1  2AB3               	goto	u1214
  2935  02B2                     u1215:
  2936  02B2  35B4               	lslf	??_initialiseGPIO,f
  2937  02B3                     u1214:
  2938  02B3  0B89               	decfsz	9,f
  2939  02B4  2AB2               	goto	u1215
  2940  02B5  0834               	movf	??_initialiseGPIO,w
  2941  02B6  3AFF               	xorlw	255
  2942  02B7  00B5               	movwf	??_initialiseGPIO+1
  2943  02B8  0835               	movf	??_initialiseGPIO+1,w
  2944  02B9  0023               	movlb	3	; select bank3
  2945  02BA  058D               	andwf	13,f	;volatile
  2946                           
  2947                           ;GPIO.c: 41:         }
  2948  02BB  2AC9               	goto	l270
  2949  02BC                     l1668:
  2950  02BC  3001               	movlw	1
  2951  02BD  00B4               	movwf	??_initialiseGPIO
  2952  02BE  0A38               	incf	initialiseGPIO@portNumber,w
  2953  02BF  2AC1               	goto	u1224
  2954  02C0                     u1225:
  2955  02C0  35B4               	lslf	??_initialiseGPIO,f
  2956  02C1                     u1224:
  2957  02C1  0B89               	decfsz	9,f
  2958  02C2  2AC0               	goto	u1225
  2959  02C3  0834               	movf	??_initialiseGPIO,w
  2960  02C4  3AFF               	xorlw	255
  2961  02C5  00B5               	movwf	??_initialiseGPIO+1
  2962  02C6  0835               	movf	??_initialiseGPIO+1,w
  2963  02C7  0021               	movlb	1	; select bank1
  2964  02C8  058D               	andwf	13,f	;volatile
  2965  02C9                     l270:
  2966  02C9  0008               	return
  2967  02CA                     __end_of_initialiseGPIO:
  2968                           
  2969                           	psect	text8
  2970  02CA                     __ptext8:	
  2971 ;; *************** function _initialiseADCPin *****************
  2972 ;; Defined at:
  2973 ;;		line 37 in file "ADC.c"
  2974 ;; Parameters:    Size  Location     Type
  2975 ;;  gpioNumber      1    wreg     const enum E2798
  2976 ;; Auto vars:     Size  Location     Type
  2977 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2978 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2979 ;;  portType        1   22[BANK0 ] unsigned char 
  2980 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, status,2, status,0
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2990 ;;      Params:         0       0       0       0       0       0
  2991 ;;      Locals:         0       4       0       0       0       0
  2992 ;;      Temps:          0       2       0       0       0       0
  2993 ;;      Totals:         0       6       0       0       0       0
  2994 ;;Total ram usage:        6 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 3
  2997 ;; This function calls:
  2998 ;;		Nothing
  2999 ;; This function is called by:
  3000 ;;		_initialisePotentiometers
  3001 ;;		_initialiseCurrentSensors
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005  02CA                     _initialiseADCPin:	
  3006                           ;psect for function _initialiseADCPin
  3007                           
  3008                           
  3009                           ;incstack = 0
  3010                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3011                           ;initialiseADCPin@gpioNumber stored from wreg
  3012  02CA  0020               	movlb	0	; select bank0
  3013  02CB  00B8               	movwf	initialiseADCPin@gpioNumber
  3014  02CC                     l1670:
  3015                           
  3016                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3017  02CC  01B7               	clrf	initialiseADCPin@portNumber
  3018                           
  3019                           ;ADC.c: 40:     uint8_t portType = 0;
  3020  02CD  01B6               	clrf	initialiseADCPin@portType
  3021                           
  3022                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3023  02CE  01B5               	clrf	initialiseADCPin@gpioValid
  3024  02CF                     l1672:
  3025                           
  3026                           ;ADC.c: 43:     if(gpioNumber < 4){
  3027  02CF  3004               	movlw	4
  3028  02D0  0238               	subwf	initialiseADCPin@gpioNumber,w
  3029  02D1  1803               	skipnc
  3030  02D2  2AD4               	goto	u1231
  3031  02D3  2AD5               	goto	u1230
  3032  02D4                     u1231:
  3033  02D4  2ADC               	goto	l1680
  3034  02D5                     u1230:
  3035  02D5                     l1674:
  3036                           
  3037                           ;ADC.c: 44:         portNumber = gpioNumber;
  3038  02D5  0838               	movf	initialiseADCPin@gpioNumber,w
  3039  02D6  00B3               	movwf	??_initialiseADCPin
  3040  02D7  0833               	movf	??_initialiseADCPin,w
  3041  02D8  00B7               	movwf	initialiseADCPin@portNumber
  3042  02D9                     l1676:
  3043                           
  3044                           ;ADC.c: 45:         portType = 0;
  3045  02D9  01B6               	clrf	initialiseADCPin@portType
  3046  02DA                     l1678:
  3047                           
  3048                           ;ADC.c: 46:         gpioValid = 1;
  3049  02DA  01B5               	clrf	initialiseADCPin@gpioValid
  3050  02DB  0AB5               	incf	initialiseADCPin@gpioValid,f
  3051  02DC                     l1680:
  3052                           
  3053                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3054  02DC  3009               	movlw	9
  3055  02DD  0238               	subwf	initialiseADCPin@gpioNumber,w
  3056  02DE  1C03               	skipc
  3057  02DF  2AE1               	goto	u1241
  3058  02E0  2AE2               	goto	u1240
  3059  02E1                     u1241:
  3060  02E1  2AF1               	goto	l204
  3061  02E2                     u1240:
  3062  02E2                     l1682:
  3063  02E2  3010               	movlw	16
  3064  02E3  0238               	subwf	initialiseADCPin@gpioNumber,w
  3065  02E4  1803               	skipnc
  3066  02E5  2AE7               	goto	u1251
  3067  02E6  2AE8               	goto	u1250
  3068  02E7                     u1251:
  3069  02E7  2AF1               	goto	l204
  3070  02E8                     u1250:
  3071  02E8                     l1684:
  3072                           
  3073                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3074  02E8  0838               	movf	initialiseADCPin@gpioNumber,w
  3075  02E9  3EF8               	addlw	248
  3076  02EA  00B3               	movwf	??_initialiseADCPin
  3077  02EB  0833               	movf	??_initialiseADCPin,w
  3078  02EC  00B7               	movwf	initialiseADCPin@portNumber
  3079  02ED                     l1686:
  3080                           
  3081                           ;ADC.c: 51:         portType = 1;
  3082  02ED  01B6               	clrf	initialiseADCPin@portType
  3083  02EE  0AB6               	incf	initialiseADCPin@portType,f
  3084  02EF                     l1688:
  3085                           
  3086                           ;ADC.c: 52:         gpioValid = 1;
  3087  02EF  01B5               	clrf	initialiseADCPin@gpioValid
  3088  02F0  0AB5               	incf	initialiseADCPin@gpioValid,f
  3089  02F1                     l204:	
  3090                           ;ADC.c: 53:     }
  3091                           
  3092                           
  3093                           ;ADC.c: 55:     if(gpioValid){
  3094  02F1  0835               	movf	initialiseADCPin@gpioValid,w
  3095  02F2  1903               	btfsc	3,2
  3096  02F3  2AF5               	goto	u1261
  3097  02F4  2AF6               	goto	u1260
  3098  02F5                     u1261:
  3099  02F5  2B33               	goto	l209
  3100  02F6                     u1260:
  3101  02F6                     l1690:
  3102                           
  3103                           ;ADC.c: 56:         if(portType == 0){
  3104  02F6  0836               	movf	initialiseADCPin@portType,w
  3105  02F7  1D03               	btfss	3,2
  3106  02F8  2AFA               	goto	u1271
  3107  02F9  2AFB               	goto	u1270
  3108  02FA                     u1271:
  3109  02FA  2B15               	goto	l1694
  3110  02FB                     u1270:
  3111  02FB                     l1692:
  3112                           
  3113                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3114  02FB  3001               	movlw	1
  3115  02FC  00B3               	movwf	??_initialiseADCPin
  3116  02FD  0A37               	incf	initialiseADCPin@portNumber,w
  3117  02FE  2B00               	goto	u1284
  3118  02FF                     u1285:
  3119  02FF  35B3               	lslf	??_initialiseADCPin,f
  3120  0300                     u1284:
  3121  0300  0B89               	decfsz	9,f
  3122  0301  2AFF               	goto	u1285
  3123  0302  0833               	movf	??_initialiseADCPin,w
  3124  0303  00B4               	movwf	??_initialiseADCPin+1
  3125  0304  0834               	movf	??_initialiseADCPin+1,w
  3126  0305  0021               	movlb	1	; select bank1
  3127  0306  048C               	iorwf	12,f	;volatile
  3128                           
  3129                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3130  0307  3001               	movlw	1
  3131  0308  0020               	movlb	0	; select bank0
  3132  0309  00B3               	movwf	??_initialiseADCPin
  3133  030A  0A37               	incf	initialiseADCPin@portNumber,w
  3134  030B  2B0D               	goto	u1294
  3135  030C                     u1295:
  3136  030C  35B3               	lslf	??_initialiseADCPin,f
  3137  030D                     u1294:
  3138  030D  0B89               	decfsz	9,f
  3139  030E  2B0C               	goto	u1295
  3140  030F  0833               	movf	??_initialiseADCPin,w
  3141  0310  00B4               	movwf	??_initialiseADCPin+1
  3142  0311  0834               	movf	??_initialiseADCPin+1,w
  3143  0312  0023               	movlb	3	; select bank3
  3144  0313  048C               	iorwf	12,f	;volatile
  3145                           
  3146                           ;ADC.c: 59:         }
  3147  0314  2B33               	goto	l209
  3148  0315                     l1694:
  3149  0315  0336               	decf	initialiseADCPin@portType,w
  3150  0316  1D03               	btfss	3,2
  3151  0317  2B19               	goto	u1301
  3152  0318  2B1A               	goto	u1300
  3153  0319                     u1301:
  3154  0319  2B33               	goto	l209
  3155  031A                     u1300:
  3156  031A                     l1696:
  3157                           
  3158                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3159  031A  3001               	movlw	1
  3160  031B  00B3               	movwf	??_initialiseADCPin
  3161  031C  0A37               	incf	initialiseADCPin@portNumber,w
  3162  031D  2B1F               	goto	u1314
  3163  031E                     u1315:
  3164  031E  35B3               	lslf	??_initialiseADCPin,f
  3165  031F                     u1314:
  3166  031F  0B89               	decfsz	9,f
  3167  0320  2B1E               	goto	u1315
  3168  0321  0833               	movf	??_initialiseADCPin,w
  3169  0322  00B4               	movwf	??_initialiseADCPin+1
  3170  0323  0834               	movf	??_initialiseADCPin+1,w
  3171  0324  0021               	movlb	1	; select bank1
  3172  0325  048D               	iorwf	13,f	;volatile
  3173                           
  3174                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3175  0326  3001               	movlw	1
  3176  0327  0020               	movlb	0	; select bank0
  3177  0328  00B3               	movwf	??_initialiseADCPin
  3178  0329  0A37               	incf	initialiseADCPin@portNumber,w
  3179  032A  2B2C               	goto	u1324
  3180  032B                     u1325:
  3181  032B  35B3               	lslf	??_initialiseADCPin,f
  3182  032C                     u1324:
  3183  032C  0B89               	decfsz	9,f
  3184  032D  2B2B               	goto	u1325
  3185  032E  0833               	movf	??_initialiseADCPin,w
  3186  032F  00B4               	movwf	??_initialiseADCPin+1
  3187  0330  0834               	movf	??_initialiseADCPin+1,w
  3188  0331  0023               	movlb	3	; select bank3
  3189  0332  048D               	iorwf	13,f	;volatile
  3190  0333                     l209:
  3191  0333  0008               	return
  3192  0334                     __end_of_initialiseADCPin:
  3193                           
  3194                           	psect	text9
  3195  06E9                     __ptext9:	
  3196 ;; *************** function _initialiseADCModule *****************
  3197 ;; Defined at:
  3198 ;;		line 14 in file "ADC.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;		None
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;		None
  3203 ;; Return value:  Size  Location     Type
  3204 ;;                  1    wreg      void 
  3205 ;; Registers used:
  3206 ;;		wreg
  3207 ;; Tracked objects:
  3208 ;;		On entry : 0/0
  3209 ;;		On exit  : 0/0
  3210 ;;		Unchanged: 0/0
  3211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3212 ;;      Params:         0       0       0       0       0       0
  3213 ;;      Locals:         0       0       0       0       0       0
  3214 ;;      Temps:          0       0       0       0       0       0
  3215 ;;      Totals:         0       0       0       0       0       0
  3216 ;;Total ram usage:        0 bytes
  3217 ;; Hardware stack levels used: 1
  3218 ;; Hardware stack levels required when called: 3
  3219 ;; This function calls:
  3220 ;;		Nothing
  3221 ;; This function is called by:
  3222 ;;		_main
  3223 ;; This function uses a non-reentrant model
  3224 ;;
  3225                           
  3226  06E9                     _initialiseADCModule:	
  3227                           ;psect for function _initialiseADCModule
  3228                           
  3229  06E9                     l2030:	
  3230                           ;incstack = 0
  3231                           ; Regs used in _initialiseADCModule: [wreg]
  3232                           
  3233                           
  3234                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3235  06E9  3001               	movlw	1
  3236  06EA  0021               	movlb	1	; select bank1
  3237  06EB  009D               	movwf	29	;volatile
  3238                           
  3239                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3240  06EC  3080               	movlw	128
  3241  06ED  009E               	movwf	30	;volatile
  3242  06EE                     l200:
  3243  06EE  0008               	return
  3244  06EF                     __end_of_initialiseADCModule:
  3245                           
  3246                           	psect	intentry
  3247  0004                     __pintentry:	
  3248 ;; *************** function _Tick980Hz *****************
  3249 ;; Defined at:
  3250 ;;		line 41 in file "main.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;		None
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3264 ;;      Params:         0       0       0       0       0       0
  3265 ;;      Locals:         0       0       0       0       0       0
  3266 ;;      Temps:          0       1       0       0       0       0
  3267 ;;      Totals:         0       1       0       0       0       0
  3268 ;;Total ram usage:        1 bytes
  3269 ;; Hardware stack levels used: 1
  3270 ;; Hardware stack levels required when called: 2
  3271 ;; This function calls:
  3272 ;;		_currentTripRead
  3273 ;;		_readFilteredDutyPot
  3274 ;;		_readFilteredFreqPot
  3275 ;;		_runPotScaling
  3276 ;;		_setPWMDutyandPeriod
  3277 ;;		i1_writeGPIO
  3278 ;; This function is called by:
  3279 ;;		Interrupt level 1
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283  0004                     _Tick980Hz:
  3284                           
  3285                           ;incstack = 0
  3286  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3287                           
  3288                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3289  0005  3180               	pagesel	$
  3290  0006                     i1l2064:
  3291                           
  3292                           ;main.c: 52:         if(currentTripRead() == 1){
  3293  0006  3185  25DE  3180   	fcall	_currentTripRead
  3294  0009  3A01               	xorlw	1
  3295  000A  1D03               	skipz
  3296  000B  280D               	goto	u187_21
  3297  000C  280E               	goto	u187_20
  3298  000D                     u187_21:
  3299  000D  281A               	goto	i1l2070
  3300  000E                     u187_20:
  3301  000E                     i1l2066:
  3302                           
  3303                           ;main.c: 53:             emergencyStop = 1;
  3304  000E  3001               	movlw	1
  3305  000F  0020               	movlb	0	; select bank0
  3306  0010  00B2               	movwf	??_Tick980Hz
  3307  0011  0832               	movf	??_Tick980Hz,w
  3308  0012  00CF               	movwf	_emergencyStop	;volatile
  3309  0013                     i1l2068:
  3310                           
  3311                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3312  0013  3000               	movlw	0
  3313  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3314  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3315  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3316  0017  3186  260B  3180   	fcall	_setPWMDutyandPeriod
  3317  001A                     i1l2070:
  3318                           
  3319                           ;main.c: 57:         if(timerSlotHalf == 0){
  3320  001A  0020               	movlb	0	; select bank0
  3321  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3322  001C  1D03               	btfss	3,2
  3323  001D  281F               	goto	u188_21
  3324  001E  2820               	goto	u188_20
  3325  001F                     u188_21:
  3326  001F  2825               	goto	i1l2074
  3327  0020                     u188_20:
  3328  0020                     i1l2072:
  3329                           
  3330                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3331  0020  01F0               	clrf	i1writeGPIO@writeValue
  3332  0021  300C               	movlw	12
  3333  0022  3183  23F6  3180   	fcall	i1_writeGPIO
  3334  0025                     i1l2074:
  3335                           
  3336                           ;main.c: 61:         if(timerSlotHalf == 1){
  3337  0025  0020               	movlb	0	; select bank0
  3338  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3339  0027  1D03               	btfss	3,2
  3340  0028  282A               	goto	u189_21
  3341  0029  282B               	goto	u189_20
  3342  002A                     u189_21:
  3343  002A  2860               	goto	i1l82
  3344  002B                     u189_20:
  3345  002B                     i1l2076:
  3346                           
  3347                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3348  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3349  002C  1D03               	btfss	3,2
  3350  002D  282F               	goto	u190_21
  3351  002E  2830               	goto	u190_20
  3352  002F                     u190_21:
  3353  002F  2855               	goto	i1l2090
  3354  0030                     u190_20:
  3355  0030                     i1l2078:
  3356                           
  3357                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3358  0030  01F0               	clrf	i1writeGPIO@writeValue
  3359  0031  0AF0               	incf	i1writeGPIO@writeValue,f
  3360  0032  300C               	movlw	12
  3361  0033  3183  23F6  3180   	fcall	i1_writeGPIO
  3362                           
  3363                           ;main.c: 68:                 writeGPIO(9, 1);
  3364  0036  01F0               	clrf	i1writeGPIO@writeValue
  3365  0037  0AF0               	incf	i1writeGPIO@writeValue,f
  3366  0038  3009               	movlw	9
  3367  0039  3183  23F6  3180   	fcall	i1_writeGPIO
  3368  003C                     i1l2080:
  3369                           
  3370                           ;main.c: 70:                 filteredDutyPot = readFilteredDutyPot();
  3371  003C  3185  250B  3180   	fcall	_readFilteredDutyPot
  3372  003F  087C               	movf	?_readFilteredDutyPot+1,w
  3373  0040  0020               	movlb	0	; select bank0
  3374  0041  00C2               	movwf	_filteredDutyPot+1
  3375  0042  087B               	movf	?_readFilteredDutyPot,w
  3376  0043  00C1               	movwf	_filteredDutyPot
  3377  0044                     i1l2082:
  3378                           
  3379                           ;main.c: 71:                 filteredFreqPot = readFilteredFreqPot();
  3380  0044  3184  24B0  3180   	fcall	_readFilteredFreqPot
  3381  0047  087C               	movf	?_readFilteredFreqPot+1,w
  3382  0048  0020               	movlb	0	; select bank0
  3383  0049  00C4               	movwf	_filteredFreqPot+1
  3384  004A  087B               	movf	?_readFilteredFreqPot,w
  3385  004B  00C3               	movwf	_filteredFreqPot
  3386  004C                     i1l2084:
  3387                           
  3388                           ;main.c: 73:                 if(~emergencyStop){
  3389  004C  034F               	decf	_emergencyStop,w	;volatile
  3390  004D  1903               	btfsc	3,2
  3391  004E  2850               	goto	u191_21
  3392  004F  2851               	goto	u191_20
  3393  0050                     u191_21:
  3394  0050  2855               	goto	i1l2088
  3395  0051                     u191_20:
  3396  0051                     i1l2086:
  3397                           
  3398                           ;main.c: 74:                     runPotScaling();
  3399  0051  3180  2090  3180   	fcall	_runPotScaling
  3400  0054  2855               	goto	i1l2090
  3401  0055                     i1l2088:
  3402  0055                     i1l2090:
  3403                           
  3404                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  3405  0055  0020               	movlb	0	; select bank0
  3406  0056  0350               	decf	_timerSlotQuarter,w	;volatile
  3407  0057  1D03               	btfss	3,2
  3408  0058  285A               	goto	u192_21
  3409  0059  285C               	goto	u192_20
  3410  005A                     u192_21:
  3411  005A  3001               	movlw	1
  3412  005B  285D               	goto	u193_20
  3413  005C                     u192_20:
  3414  005C  3000               	movlw	0
  3415  005D                     u193_20:
  3416  005D  00B2               	movwf	??_Tick980Hz
  3417  005E  0832               	movf	??_Tick980Hz,w
  3418  005F  00D0               	movwf	_timerSlotQuarter	;volatile
  3419  0060                     i1l82:	
  3420                           ;main.c: 83:         }
  3421                           
  3422                           
  3423                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  3424  0060  0351               	decf	_timerSlotHalf,w	;volatile
  3425  0061  1D03               	btfss	3,2
  3426  0062  2864               	goto	u194_21
  3427  0063  2866               	goto	u194_20
  3428  0064                     u194_21:
  3429  0064  3001               	movlw	1
  3430  0065  2867               	goto	u195_20
  3431  0066                     u194_20:
  3432  0066  3000               	movlw	0
  3433  0067                     u195_20:
  3434  0067  00B2               	movwf	??_Tick980Hz
  3435  0068  0832               	movf	??_Tick980Hz,w
  3436  0069  00D1               	movwf	_timerSlotHalf	;volatile
  3437  006A                     i1l2092:
  3438                           
  3439                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  3440  006A  110B               	bcf	11,2	;volatile
  3441  006B                     i1l2094:
  3442                           
  3443                           ;main.c: 91:         latestIL1 = readILCurrentADCRaw;
  3444  006B  3000               	movlw	0
  3445  006C  00C9               	movwf	_latestIL1	;volatile
  3446  006D  3000               	movlw	0
  3447  006E  00CA               	movwf	_latestIL1+1	;volatile
  3448  006F                     i1l2096:
  3449                           
  3450                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  3451  006F  1111               	bcf	17,2	;volatile
  3452  0070                     i1l87:
  3453  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3454  0071  0009               	retfie
  3455  0072                     __end_of_Tick980Hz:
  3456                           
  3457                           	psect	text11
  3458  03F6                     __ptext11:	
  3459 ;; *************** function i1_writeGPIO *****************
  3460 ;; Defined at:
  3461 ;;		line 52 in file "GPIO.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  gpioNumber      1    wreg     const enum E2798
  3464 ;;  writeValue      1    0[COMMON] unsigned char 
  3465 ;; Auto vars:     Size  Location     Type
  3466 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3467 ;;  portNumber      1    5[COMMON] unsigned char 
  3468 ;;  portType        1    3[COMMON] unsigned char 
  3469 ;; Return value:  Size  Location     Type
  3470 ;;                  1    wreg      void 
  3471 ;; Registers used:
  3472 ;;		wreg, status,2, status,0
  3473 ;; Tracked objects:
  3474 ;;		On entry : 0/0
  3475 ;;		On exit  : 0/0
  3476 ;;		Unchanged: 0/0
  3477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3478 ;;      Params:         1       0       0       0       0       0
  3479 ;;      Locals:         3       0       0       0       0       0
  3480 ;;      Temps:          2       0       0       0       0       0
  3481 ;;      Totals:         6       0       0       0       0       0
  3482 ;;Total ram usage:        6 bytes
  3483 ;; Hardware stack levels used: 1
  3484 ;; This function calls:
  3485 ;;		Nothing
  3486 ;; This function is called by:
  3487 ;;		_Tick980Hz
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491  03F6                     i1_writeGPIO:	
  3492                           ;psect for function i1_writeGPIO
  3493                           
  3494                           
  3495                           ;incstack = 0
  3496                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3497                           ;i1writeGPIO@gpioNumber stored from wreg
  3498  03F6  00F4               	movwf	i1writeGPIO@gpioNumber
  3499  03F7                     i1l2036:
  3500                           
  3501                           ;GPIO.c: 54:     uint8_t portType = 0;
  3502  03F7  01F3               	clrf	i1writeGPIO@portType
  3503  03F8                     i1l2038:
  3504                           
  3505                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3506  03F8  3008               	movlw	8
  3507  03F9  0274               	subwf	i1writeGPIO@gpioNumber,w
  3508  03FA  1C03               	skipc
  3509  03FB  2BFD               	goto	u178_21
  3510  03FC  2BFE               	goto	u178_20
  3511  03FD                     u178_21:
  3512  03FD  2C06               	goto	i1l2044
  3513  03FE                     u178_20:
  3514  03FE                     i1l2040:
  3515                           
  3516                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3517  03FE  0874               	movf	i1writeGPIO@gpioNumber,w
  3518  03FF  3EF8               	addlw	248
  3519  0400  00F1               	movwf	??i1_writeGPIO
  3520  0401  0871               	movf	??i1_writeGPIO,w
  3521  0402  00F5               	movwf	i1writeGPIO@portNumber
  3522  0403                     i1l2042:
  3523                           
  3524                           ;GPIO.c: 57:         portType = 1;
  3525  0403  01F3               	clrf	i1writeGPIO@portType
  3526  0404  0AF3               	incf	i1writeGPIO@portType,f
  3527                           
  3528                           ;GPIO.c: 58:     }
  3529  0405  2C0B               	goto	i1l2048
  3530  0406                     i1l2044:
  3531                           
  3532                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3533  0406  0874               	movf	i1writeGPIO@gpioNumber,w
  3534  0407  00F1               	movwf	??i1_writeGPIO
  3535  0408  0871               	movf	??i1_writeGPIO,w
  3536  0409  00F5               	movwf	i1writeGPIO@portNumber
  3537  040A                     i1l2046:
  3538                           
  3539                           ;GPIO.c: 61:         portType = 0;
  3540  040A  01F3               	clrf	i1writeGPIO@portType
  3541  040B                     i1l2048:
  3542                           
  3543                           ;GPIO.c: 64:     if(portType == 0){
  3544  040B  0873               	movf	i1writeGPIO@portType,w
  3545  040C  1D03               	btfss	3,2
  3546  040D  2C0F               	goto	u179_21
  3547  040E  2C10               	goto	u179_20
  3548  040F                     u179_21:
  3549  040F  2C30               	goto	i1l2056
  3550  0410                     u179_20:
  3551  0410                     i1l2050:
  3552                           
  3553                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3554  0410  0870               	movf	i1writeGPIO@writeValue,w
  3555  0411  1903               	btfsc	3,2
  3556  0412  2C14               	goto	u180_21
  3557  0413  2C15               	goto	u180_20
  3558  0414                     u180_21:
  3559  0414  2C22               	goto	i1l2054
  3560  0415                     u180_20:
  3561  0415                     i1l2052:
  3562  0415  3001               	movlw	1
  3563  0416  00F1               	movwf	??i1_writeGPIO
  3564  0417  0A75               	incf	i1writeGPIO@portNumber,w
  3565  0418  2C1A               	goto	u181_24
  3566  0419                     u181_25:
  3567  0419  35F1               	lslf	??i1_writeGPIO,f
  3568  041A                     u181_24:
  3569  041A  0B89               	decfsz	9,f
  3570  041B  2C19               	goto	u181_25
  3571  041C  0871               	movf	??i1_writeGPIO,w
  3572  041D  00F2               	movwf	??i1_writeGPIO+1
  3573  041E  0872               	movf	??i1_writeGPIO+1,w
  3574  041F  0022               	movlb	2	; select bank2
  3575  0420  048C               	iorwf	12,f	;volatile
  3576  0421  2C54               	goto	i1l284
  3577  0422                     i1l2054:
  3578  0422  3001               	movlw	1
  3579  0423  00F1               	movwf	??i1_writeGPIO
  3580  0424  0A75               	incf	i1writeGPIO@portNumber,w
  3581  0425  2C27               	goto	u182_24
  3582  0426                     u182_25:
  3583  0426  35F1               	lslf	??i1_writeGPIO,f
  3584  0427                     u182_24:
  3585  0427  0B89               	decfsz	9,f
  3586  0428  2C26               	goto	u182_25
  3587  0429  0871               	movf	??i1_writeGPIO,w
  3588  042A  3AFF               	xorlw	255
  3589  042B  00F2               	movwf	??i1_writeGPIO+1
  3590  042C  0872               	movf	??i1_writeGPIO+1,w
  3591  042D  0022               	movlb	2	; select bank2
  3592  042E  058C               	andwf	12,f	;volatile
  3593  042F  2C54               	goto	i1l284
  3594  0430                     i1l2056:
  3595  0430  0373               	decf	i1writeGPIO@portType,w
  3596  0431  1D03               	btfss	3,2
  3597  0432  2C34               	goto	u183_21
  3598  0433  2C35               	goto	u183_20
  3599  0434                     u183_21:
  3600  0434  2C54               	goto	i1l284
  3601  0435                     u183_20:
  3602  0435                     i1l2058:
  3603                           
  3604                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3605  0435  0870               	movf	i1writeGPIO@writeValue,w
  3606  0436  1903               	btfsc	3,2
  3607  0437  2C39               	goto	u184_21
  3608  0438  2C3A               	goto	u184_20
  3609  0439                     u184_21:
  3610  0439  2C47               	goto	i1l2062
  3611  043A                     u184_20:
  3612  043A                     i1l2060:
  3613  043A  3001               	movlw	1
  3614  043B  00F1               	movwf	??i1_writeGPIO
  3615  043C  0A75               	incf	i1writeGPIO@portNumber,w
  3616  043D  2C3F               	goto	u185_24
  3617  043E                     u185_25:
  3618  043E  35F1               	lslf	??i1_writeGPIO,f
  3619  043F                     u185_24:
  3620  043F  0B89               	decfsz	9,f
  3621  0440  2C3E               	goto	u185_25
  3622  0441  0871               	movf	??i1_writeGPIO,w
  3623  0442  00F2               	movwf	??i1_writeGPIO+1
  3624  0443  0872               	movf	??i1_writeGPIO+1,w
  3625  0444  0022               	movlb	2	; select bank2
  3626  0445  048D               	iorwf	13,f	;volatile
  3627  0446  2C54               	goto	i1l284
  3628  0447                     i1l2062:
  3629  0447  3001               	movlw	1
  3630  0448  00F1               	movwf	??i1_writeGPIO
  3631  0449  0A75               	incf	i1writeGPIO@portNumber,w
  3632  044A  2C4C               	goto	u186_24
  3633  044B                     u186_25:
  3634  044B  35F1               	lslf	??i1_writeGPIO,f
  3635  044C                     u186_24:
  3636  044C  0B89               	decfsz	9,f
  3637  044D  2C4B               	goto	u186_25
  3638  044E  0871               	movf	??i1_writeGPIO,w
  3639  044F  3AFF               	xorlw	255
  3640  0450  00F2               	movwf	??i1_writeGPIO+1
  3641  0451  0872               	movf	??i1_writeGPIO+1,w
  3642  0452  0022               	movlb	2	; select bank2
  3643  0453  058D               	andwf	13,f	;volatile
  3644  0454                     i1l284:
  3645  0454  0008               	return
  3646  0455                     __end_ofi1_writeGPIO:
  3647                           
  3648                           	psect	text12
  3649  0090                     __ptext12:	
  3650 ;; *************** function _runPotScaling *****************
  3651 ;; Defined at:
  3652 ;;		line 55 in file "Potentiometer.c"
  3653 ;; Parameters:    Size  Location     Type
  3654 ;;		None
  3655 ;; Auto vars:     Size  Location     Type
  3656 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3657 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3658 ;; Return value:  Size  Location     Type
  3659 ;;                  1    wreg      void 
  3660 ;; Registers used:
  3661 ;;		wreg, status,2, status,0, pclath, cstack
  3662 ;; Tracked objects:
  3663 ;;		On entry : 0/0
  3664 ;;		On exit  : 0/0
  3665 ;;		Unchanged: 0/0
  3666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3667 ;;      Params:         0       0       0       0       0       0
  3668 ;;      Locals:         0       4       0       0       0       0
  3669 ;;      Temps:          0       8       0       0       0       0
  3670 ;;      Totals:         0      12       0       0       0       0
  3671 ;;Total ram usage:       12 bytes
  3672 ;; Hardware stack levels used: 1
  3673 ;; Hardware stack levels required when called: 1
  3674 ;; This function calls:
  3675 ;;		___lldiv
  3676 ;;		___lmul
  3677 ;;		___wmul
  3678 ;;		_setPWMDutyandPeriod
  3679 ;; This function is called by:
  3680 ;;		_Tick980Hz
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684  0090                     _runPotScaling:	
  3685                           ;psect for function _runPotScaling
  3686                           
  3687  0090                     i1l1912:	
  3688                           ;incstack = 0
  3689                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3690                           
  3691                           
  3692                           ;Potentiometer.c: 57:     potSetCount++;
  3693  0090  3001               	movlw	1
  3694  0091  0020               	movlb	0	; select bank0
  3695  0092  00A6               	movwf	??_runPotScaling
  3696  0093  0826               	movf	??_runPotScaling,w
  3697  0094  07D2               	addwf	_potSetCount,f
  3698                           
  3699                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3700  0095  3020               	movlw	32
  3701  0096  0652               	xorwf	_potSetCount,w
  3702  0097  1D03               	btfss	3,2
  3703  0098  289A               	goto	u173_21
  3704  0099  289B               	goto	u173_20
  3705  009A                     u173_21:
  3706  009A  2972               	goto	i1l341
  3707  009B                     u173_20:
  3708  009B                     i1l1914:
  3709                           
  3710                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3711  009B  0843               	movf	_filteredFreqPot,w
  3712  009C  3ED3               	addlw	211
  3713  009D  00F0               	movwf	___lmul@multiplier
  3714  009E  30FF               	movlw	255
  3715  009F  3D44               	addwfc	_filteredFreqPot+1,w
  3716  00A0  00F1               	movwf	___lmul@multiplier+1
  3717  00A1  01F2               	clrf	___lmul@multiplier+2
  3718  00A2  01F3               	clrf	___lmul@multiplier+3
  3719  00A3  3000               	movlw	0
  3720  00A4  00F7               	movwf	___lmul@multiplicand+3
  3721  00A5  3000               	movlw	0
  3722  00A6  00F6               	movwf	___lmul@multiplicand+2
  3723  00A7  3000               	movlw	0
  3724  00A8  00F5               	movwf	___lmul@multiplicand+1
  3725  00A9  3090               	movlw	144
  3726  00AA  00F4               	movwf	___lmul@multiplicand
  3727  00AB  3185  25AB  3180   	fcall	___lmul
  3728  00AE  0870               	movf	?___lmul,w
  3729  00AF  0020               	movlb	0	; select bank0
  3730  00B0  00A6               	movwf	??_runPotScaling
  3731  00B1  0871               	movf	?___lmul+1,w
  3732  00B2  00A7               	movwf	??_runPotScaling+1
  3733  00B3  0872               	movf	?___lmul+2,w
  3734  00B4  00A8               	movwf	??_runPotScaling+2
  3735  00B5  0873               	movf	?___lmul+3,w
  3736  00B6  00A9               	movwf	??_runPotScaling+3
  3737  00B7  300A               	movlw	10
  3738  00B8                     u174_25:
  3739  00B8  36A9               	lsrf	??_runPotScaling+3,f
  3740  00B9  0CA8               	rrf	??_runPotScaling+2,f
  3741  00BA  0CA7               	rrf	??_runPotScaling+1,f
  3742  00BB  0CA6               	rrf	??_runPotScaling,f
  3743  00BC                     u174_20:
  3744  00BC  0B89               	decfsz	9,f
  3745  00BD  28B8               	goto	u174_25
  3746  00BE  0826               	movf	??_runPotScaling,w
  3747  00BF  3E0F               	addlw	15
  3748  00C0  00AA               	movwf	??_runPotScaling+4
  3749  00C1  082A               	movf	??_runPotScaling+4,w
  3750  00C2  00D6               	movwf	_setPeriod
  3751                           
  3752                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3753  00C3  0841               	movf	_filteredDutyPot,w
  3754  00C4  3ED3               	addlw	211
  3755  00C5  00F0               	movwf	___lmul@multiplier
  3756  00C6  30FF               	movlw	255
  3757  00C7  3D42               	addwfc	_filteredDutyPot+1,w
  3758  00C8  00F1               	movwf	___lmul@multiplier+1
  3759  00C9  01F2               	clrf	___lmul@multiplier+2
  3760  00CA  01F3               	clrf	___lmul@multiplier+3
  3761  00CB  0856               	movf	_setPeriod,w
  3762  00CC  00A6               	movwf	??_runPotScaling
  3763  00CD  01A7               	clrf	??_runPotScaling+1
  3764  00CE  01A8               	clrf	??_runPotScaling+2
  3765  00CF  01A9               	clrf	??_runPotScaling+3
  3766  00D0  0829               	movf	??_runPotScaling+3,w
  3767  00D1  00F7               	movwf	___lmul@multiplicand+3
  3768  00D2  0828               	movf	??_runPotScaling+2,w
  3769  00D3  00F6               	movwf	___lmul@multiplicand+2
  3770  00D4  0827               	movf	??_runPotScaling+1,w
  3771  00D5  00F5               	movwf	___lmul@multiplicand+1
  3772  00D6  0826               	movf	??_runPotScaling,w
  3773  00D7  00F4               	movwf	___lmul@multiplicand
  3774  00D8  3185  25AB  3180   	fcall	___lmul
  3775  00DB  0870               	movf	?___lmul,w
  3776  00DC  0020               	movlb	0	; select bank0
  3777  00DD  00AA               	movwf	??_runPotScaling+4
  3778  00DE  0871               	movf	?___lmul+1,w
  3779  00DF  00AB               	movwf	??_runPotScaling+5
  3780  00E0  0872               	movf	?___lmul+2,w
  3781  00E1  00AC               	movwf	??_runPotScaling+6
  3782  00E2  0873               	movf	?___lmul+3,w
  3783  00E3  00AD               	movwf	??_runPotScaling+7
  3784  00E4  3008               	movlw	8
  3785  00E5                     u175_25:
  3786  00E5  36AD               	lsrf	??_runPotScaling+7,f
  3787  00E6  0CAC               	rrf	??_runPotScaling+6,f
  3788  00E7  0CAB               	rrf	??_runPotScaling+5,f
  3789  00E8  0CAA               	rrf	??_runPotScaling+4,f
  3790  00E9                     u175_20:
  3791  00E9  0B89               	decfsz	9,f
  3792  00EA  28E5               	goto	u175_25
  3793  00EB  082B               	movf	??_runPotScaling+5,w
  3794  00EC  00CE               	movwf	_setDuty+1
  3795  00ED  082A               	movf	??_runPotScaling+4,w
  3796  00EE  00CD               	movwf	_setDuty
  3797                           
  3798                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3799  00EF  3000               	movlw	0
  3800  00F0  00F9               	movwf	___lldiv@divisor+3
  3801  00F1  3000               	movlw	0
  3802  00F2  00F8               	movwf	___lldiv@divisor+2
  3803  00F3  3000               	movlw	0
  3804  00F4  00F7               	movwf	___lldiv@divisor+1
  3805  00F5  3019               	movlw	25
  3806  00F6  00F6               	movwf	___lldiv@divisor
  3807  00F7  305A               	movlw	90
  3808  00F8  00F2               	movwf	___wmul@multiplicand
  3809  00F9  3000               	movlw	0
  3810  00FA  00F3               	movwf	___wmul@multiplicand+1
  3811  00FB  0856               	movf	_setPeriod,w
  3812  00FC  00A6               	movwf	??_runPotScaling
  3813  00FD  01A7               	clrf	??_runPotScaling+1
  3814  00FE  0826               	movf	??_runPotScaling,w
  3815  00FF  00F0               	movwf	___wmul@multiplier
  3816  0100  0827               	movf	??_runPotScaling+1,w
  3817  0101  00F1               	movwf	___wmul@multiplier+1
  3818  0102  3186  2659  3180   	fcall	___wmul
  3819  0105  0870               	movf	?___wmul,w
  3820  0106  0020               	movlb	0	; select bank0
  3821  0107  00A8               	movwf	??_runPotScaling+2
  3822  0108  0871               	movf	?___wmul+1,w
  3823  0109  00A9               	movwf	??_runPotScaling+3
  3824  010A  01AA               	clrf	??_runPotScaling+4
  3825  010B  01AB               	clrf	??_runPotScaling+5
  3826  010C  082B               	movf	??_runPotScaling+5,w
  3827  010D  00FD               	movwf	___lldiv@dividend+3
  3828  010E  082A               	movf	??_runPotScaling+4,w
  3829  010F  00FC               	movwf	___lldiv@dividend+2
  3830  0110  0829               	movf	??_runPotScaling+3,w
  3831  0111  00FB               	movwf	___lldiv@dividend+1
  3832  0112  0828               	movf	??_runPotScaling+2,w
  3833  0113  00FA               	movwf	___lldiv@dividend
  3834  0114  3184  2455  3180   	fcall	___lldiv
  3835  0117  0877               	movf	?___lldiv+1,w
  3836  0118  0020               	movlb	0	; select bank0
  3837  0119  00AF               	movwf	runPotScaling@maxDuty+1
  3838  011A  0876               	movf	?___lldiv,w
  3839  011B  00AE               	movwf	runPotScaling@maxDuty
  3840                           
  3841                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3842  011C  3000               	movlw	0
  3843  011D  00F9               	movwf	___lldiv@divisor+3
  3844  011E  3000               	movlw	0
  3845  011F  00F8               	movwf	___lldiv@divisor+2
  3846  0120  3000               	movlw	0
  3847  0121  00F7               	movwf	___lldiv@divisor+1
  3848  0122  3019               	movlw	25
  3849  0123  00F6               	movwf	___lldiv@divisor
  3850  0124  300A               	movlw	10
  3851  0125  00F2               	movwf	___wmul@multiplicand
  3852  0126  3000               	movlw	0
  3853  0127  00F3               	movwf	___wmul@multiplicand+1
  3854  0128  0856               	movf	_setPeriod,w
  3855  0129  00A6               	movwf	??_runPotScaling
  3856  012A  01A7               	clrf	??_runPotScaling+1
  3857  012B  0826               	movf	??_runPotScaling,w
  3858  012C  00F0               	movwf	___wmul@multiplier
  3859  012D  0827               	movf	??_runPotScaling+1,w
  3860  012E  00F1               	movwf	___wmul@multiplier+1
  3861  012F  3186  2659  3180   	fcall	___wmul
  3862  0132  0870               	movf	?___wmul,w
  3863  0133  0020               	movlb	0	; select bank0
  3864  0134  00A8               	movwf	??_runPotScaling+2
  3865  0135  0871               	movf	?___wmul+1,w
  3866  0136  00A9               	movwf	??_runPotScaling+3
  3867  0137  01AA               	clrf	??_runPotScaling+4
  3868  0138  01AB               	clrf	??_runPotScaling+5
  3869  0139  082B               	movf	??_runPotScaling+5,w
  3870  013A  00FD               	movwf	___lldiv@dividend+3
  3871  013B  082A               	movf	??_runPotScaling+4,w
  3872  013C  00FC               	movwf	___lldiv@dividend+2
  3873  013D  0829               	movf	??_runPotScaling+3,w
  3874  013E  00FB               	movwf	___lldiv@dividend+1
  3875  013F  0828               	movf	??_runPotScaling+2,w
  3876  0140  00FA               	movwf	___lldiv@dividend
  3877  0141  3184  2455  3180   	fcall	___lldiv
  3878  0144  0877               	movf	?___lldiv+1,w
  3879  0145  0020               	movlb	0	; select bank0
  3880  0146  00B1               	movwf	runPotScaling@minDuty+1
  3881  0147  0876               	movf	?___lldiv,w
  3882  0148  00B0               	movwf	runPotScaling@minDuty
  3883  0149                     i1l1916:
  3884                           
  3885                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3886  0149  084E               	movf	_setDuty+1,w
  3887  014A  022F               	subwf	runPotScaling@maxDuty+1,w
  3888  014B  1D03               	skipz
  3889  014C  294F               	goto	u176_25
  3890  014D  084D               	movf	_setDuty,w
  3891  014E  022E               	subwf	runPotScaling@maxDuty,w
  3892  014F                     u176_25:
  3893  014F  1803               	skipnc
  3894  0150  2952               	goto	u176_21
  3895  0151  2953               	goto	u176_20
  3896  0152                     u176_21:
  3897  0152  2957               	goto	i1l339
  3898  0153                     u176_20:
  3899  0153                     i1l1918:
  3900  0153  082F               	movf	runPotScaling@maxDuty+1,w
  3901  0154  00CE               	movwf	_setDuty+1
  3902  0155  082E               	movf	runPotScaling@maxDuty,w
  3903  0156  00CD               	movwf	_setDuty
  3904  0157                     i1l339:
  3905                           
  3906                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3907  0157  0831               	movf	runPotScaling@minDuty+1,w
  3908  0158  024E               	subwf	_setDuty+1,w
  3909  0159  1D03               	skipz
  3910  015A  295D               	goto	u177_25
  3911  015B  0830               	movf	runPotScaling@minDuty,w
  3912  015C  024D               	subwf	_setDuty,w
  3913  015D                     u177_25:
  3914  015D  1803               	skipnc
  3915  015E  2960               	goto	u177_21
  3916  015F  2961               	goto	u177_20
  3917  0160                     u177_21:
  3918  0160  2965               	goto	i1l1922
  3919  0161                     u177_20:
  3920  0161                     i1l1920:
  3921  0161  0831               	movf	runPotScaling@minDuty+1,w
  3922  0162  00CE               	movwf	_setDuty+1
  3923  0163  0830               	movf	runPotScaling@minDuty,w
  3924  0164  00CD               	movwf	_setDuty
  3925  0165                     i1l1922:
  3926                           
  3927                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3928  0165  084E               	movf	_setDuty+1,w
  3929  0166  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3930  0167  084D               	movf	_setDuty,w
  3931  0168  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3932  0169  0856               	movf	_setPeriod,w
  3933  016A  00A6               	movwf	??_runPotScaling
  3934  016B  0826               	movf	??_runPotScaling,w
  3935  016C  00F2               	movwf	setPWMDutyandPeriod@period
  3936  016D  3186  260B  3180   	fcall	_setPWMDutyandPeriod
  3937  0170                     i1l1924:
  3938                           
  3939                           ;Potentiometer.c: 72:         potSetCount = 0;
  3940  0170  0020               	movlb	0	; select bank0
  3941  0171  01D2               	clrf	_potSetCount
  3942  0172                     i1l341:
  3943  0172  0008               	return
  3944  0173                     __end_of_runPotScaling:
  3945                           
  3946                           	psect	text13
  3947  060B                     __ptext13:	
  3948 ;; *************** function _setPWMDutyandPeriod *****************
  3949 ;; Defined at:
  3950 ;;		line 48 in file "PWM.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3953 ;;  period          1    2[COMMON] unsigned char 
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3965 ;;      Params:         3       0       0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0
  3967 ;;      Temps:          2       0       0       0       0       0
  3968 ;;      Totals:         5       0       0       0       0       0
  3969 ;;Total ram usage:        5 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_Tick980Hz
  3975 ;;		_runPotScaling
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979  060B                     _setPWMDutyandPeriod:	
  3980                           ;psect for function _setPWMDutyandPeriod
  3981                           
  3982  060B                     i1l1608:	
  3983                           ;incstack = 0
  3984                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3985                           
  3986                           
  3987                           ;PWM.c: 49:     PR2 = period;
  3988  060B  0872               	movf	setPWMDutyandPeriod@period,w
  3989  060C  0020               	movlb	0	; select bank0
  3990  060D  009B               	movwf	27	;volatile
  3991  060E                     i1l1610:
  3992                           
  3993                           ;PWM.c: 50:     CCPR1L = dutyCycle >> 2;
  3994  060E  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3995  060F  00F4               	movwf	??_setPWMDutyandPeriod+1
  3996  0610  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3997  0611  00F3               	movwf	??_setPWMDutyandPeriod
  3998  0612  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3999  0613  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4000  0614  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4001  0615  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4002  0616  0873               	movf	??_setPWMDutyandPeriod,w
  4003  0617  0025               	movlb	5	; select bank5
  4004  0618  0091               	movwf	17	;volatile
  4005  0619                     i1l1612:
  4006                           
  4007                           ;PWM.c: 51:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4008  0619  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4009  061A  3901               	andlw	1
  4010  061B  00F3               	movwf	??_setPWMDutyandPeriod
  4011  061C  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4012  061D  0813               	movf	19,w	;volatile
  4013  061E  0673               	xorwf	??_setPWMDutyandPeriod,w
  4014  061F  39EF               	andlw	-17
  4015  0620  0673               	xorwf	??_setPWMDutyandPeriod,w
  4016  0621  0093               	movwf	19	;volatile
  4017                           
  4018                           ;PWM.c: 52:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4019  0622  3002               	movlw	2
  4020  0623  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4021  0624  00F3               	movwf	??_setPWMDutyandPeriod
  4022  0625  3000               	movlw	0
  4023  0626  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4024  0627  00F4               	movwf	??_setPWMDutyandPeriod+1
  4025  0628  3000               	movlw	0
  4026  0629  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4027  062A  3002               	movlw	2
  4028  062B  1903               	skipnz
  4029  062C  0273               	subwf	??_setPWMDutyandPeriod,w
  4030  062D  1803               	skipnc
  4031  062E  2E30               	goto	u101_21
  4032  062F  2E33               	goto	u101_20
  4033  0630                     u101_21:
  4034  0630  0025               	movlb	5	; select bank5
  4035  0631  1693               	bsf	19,5	;volatile
  4036  0632  2E35               	goto	u102_24
  4037  0633                     u101_20:
  4038  0633  0025               	movlb	5	; select bank5
  4039  0634  1293               	bcf	19,5	;volatile
  4040  0635                     u102_24:
  4041  0635                     i1l147:
  4042  0635  0008               	return
  4043  0636                     __end_of_setPWMDutyandPeriod:
  4044                           
  4045                           	psect	text14
  4046  0659                     __ptext14:	
  4047 ;; *************** function ___wmul *****************
  4048 ;; Defined at:
  4049 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4050 ;; Parameters:    Size  Location     Type
  4051 ;;  multiplier      2    0[COMMON] unsigned int 
  4052 ;;  multiplicand    2    2[COMMON] unsigned int 
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;  product         2    4[COMMON] unsigned int 
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  2    0[COMMON] unsigned int 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4064 ;;      Params:         4       0       0       0       0       0
  4065 ;;      Locals:         2       0       0       0       0       0
  4066 ;;      Temps:          0       0       0       0       0       0
  4067 ;;      Totals:         6       0       0       0       0       0
  4068 ;;Total ram usage:        6 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; This function calls:
  4071 ;;		Nothing
  4072 ;; This function is called by:
  4073 ;;		_runPotScaling
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077  0659                     ___wmul:	
  4078                           ;psect for function ___wmul
  4079                           
  4080  0659                     i1l1782:	
  4081                           ;incstack = 0
  4082                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4083                           
  4084  0659  01F4               	clrf	___wmul@product
  4085  065A  01F5               	clrf	___wmul@product+1
  4086  065B                     i1l1784:
  4087  065B  1C70               	btfss	___wmul@multiplier,0
  4088  065C  2E5E               	goto	u146_21
  4089  065D  2E5F               	goto	u146_20
  4090  065E                     u146_21:
  4091  065E  2E63               	goto	i1l550
  4092  065F                     u146_20:
  4093  065F                     i1l1786:
  4094  065F  0872               	movf	___wmul@multiplicand,w
  4095  0660  07F4               	addwf	___wmul@product,f
  4096  0661  0873               	movf	___wmul@multiplicand+1,w
  4097  0662  3DF5               	addwfc	___wmul@product+1,f
  4098  0663                     i1l550:
  4099  0663  3001               	movlw	1
  4100  0664                     u147_25:
  4101  0664  35F2               	lslf	___wmul@multiplicand,f
  4102  0665  0DF3               	rlf	___wmul@multiplicand+1,f
  4103  0666  0B89               	decfsz	9,f
  4104  0667  2E64               	goto	u147_25
  4105  0668                     i1l1788:
  4106  0668  3001               	movlw	1
  4107  0669                     u148_25:
  4108  0669  36F1               	lsrf	___wmul@multiplier+1,f
  4109  066A  0CF0               	rrf	___wmul@multiplier,f
  4110  066B  0B89               	decfsz	9,f
  4111  066C  2E69               	goto	u148_25
  4112  066D                     i1l1790:
  4113  066D  0870               	movf	___wmul@multiplier,w
  4114  066E  0471               	iorwf	___wmul@multiplier+1,w
  4115  066F  1D03               	btfss	3,2
  4116  0670  2E72               	goto	u149_21
  4117  0671  2E73               	goto	u149_20
  4118  0672                     u149_21:
  4119  0672  2E5B               	goto	i1l1784
  4120  0673                     u149_20:
  4121  0673                     i1l1792:
  4122  0673  0875               	movf	___wmul@product+1,w
  4123  0674  00F1               	movwf	?___wmul+1
  4124  0675  0874               	movf	___wmul@product,w
  4125  0676  00F0               	movwf	?___wmul
  4126  0677                     i1l552:
  4127  0677  0008               	return
  4128  0678                     __end_of___wmul:
  4129                           
  4130                           	psect	text15
  4131  05AB                     __ptext15:	
  4132 ;; *************** function ___lmul *****************
  4133 ;; Defined at:
  4134 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  multiplier      4    0[COMMON] unsigned long 
  4137 ;;  multiplicand    4    4[COMMON] unsigned long 
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  product         4    8[COMMON] unsigned long 
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  4    0[COMMON] unsigned long 
  4142 ;; Registers used:
  4143 ;;		wreg, status,2, status,0
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4149 ;;      Params:         8       0       0       0       0       0
  4150 ;;      Locals:         4       0       0       0       0       0
  4151 ;;      Temps:          0       0       0       0       0       0
  4152 ;;      Totals:        12       0       0       0       0       0
  4153 ;;Total ram usage:       12 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; This function calls:
  4156 ;;		Nothing
  4157 ;; This function is called by:
  4158 ;;		_runPotScaling
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162  05AB                     ___lmul:	
  4163                           ;psect for function ___lmul
  4164                           
  4165  05AB                     i1l1796:	
  4166                           ;incstack = 0
  4167                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4168                           
  4169  05AB  3000               	movlw	0
  4170  05AC  00FB               	movwf	___lmul@product+3
  4171  05AD  3000               	movlw	0
  4172  05AE  00FA               	movwf	___lmul@product+2
  4173  05AF  3000               	movlw	0
  4174  05B0  00F9               	movwf	___lmul@product+1
  4175  05B1  3000               	movlw	0
  4176  05B2  00F8               	movwf	___lmul@product
  4177  05B3                     i1l1798:
  4178  05B3  1C70               	btfss	___lmul@multiplier,0
  4179  05B4  2DB6               	goto	u150_21
  4180  05B5  2DB7               	goto	u150_20
  4181  05B6                     u150_21:
  4182  05B6  2DBF               	goto	i1l1802
  4183  05B7                     u150_20:
  4184  05B7                     i1l1800:
  4185  05B7  0874               	movf	___lmul@multiplicand,w
  4186  05B8  07F8               	addwf	___lmul@product,f
  4187  05B9  0875               	movf	___lmul@multiplicand+1,w
  4188  05BA  3DF9               	addwfc	___lmul@product+1,f
  4189  05BB  0876               	movf	___lmul@multiplicand+2,w
  4190  05BC  3DFA               	addwfc	___lmul@product+2,f
  4191  05BD  0877               	movf	___lmul@multiplicand+3,w
  4192  05BE  3DFB               	addwfc	___lmul@product+3,f
  4193  05BF                     i1l1802:
  4194  05BF  3001               	movlw	1
  4195  05C0                     u151_25:
  4196  05C0  35F4               	lslf	___lmul@multiplicand,f
  4197  05C1  0DF5               	rlf	___lmul@multiplicand+1,f
  4198  05C2  0DF6               	rlf	___lmul@multiplicand+2,f
  4199  05C3  0DF7               	rlf	___lmul@multiplicand+3,f
  4200  05C4  0B89               	decfsz	9,f
  4201  05C5  2DC0               	goto	u151_25
  4202  05C6                     i1l1804:
  4203  05C6  3001               	movlw	1
  4204  05C7                     u152_25:
  4205  05C7  36F3               	lsrf	___lmul@multiplier+3,f
  4206  05C8  0CF2               	rrf	___lmul@multiplier+2,f
  4207  05C9  0CF1               	rrf	___lmul@multiplier+1,f
  4208  05CA  0CF0               	rrf	___lmul@multiplier,f
  4209  05CB  0B89               	decfsz	9,f
  4210  05CC  2DC7               	goto	u152_25
  4211  05CD  0873               	movf	___lmul@multiplier+3,w
  4212  05CE  0472               	iorwf	___lmul@multiplier+2,w
  4213  05CF  0471               	iorwf	___lmul@multiplier+1,w
  4214  05D0  0470               	iorwf	___lmul@multiplier,w
  4215  05D1  1D03               	skipz
  4216  05D2  2DD4               	goto	u153_21
  4217  05D3  2DD5               	goto	u153_20
  4218  05D4                     u153_21:
  4219  05D4  2DB3               	goto	i1l1798
  4220  05D5                     u153_20:
  4221  05D5                     i1l1806:
  4222  05D5  087B               	movf	___lmul@product+3,w
  4223  05D6  00F3               	movwf	?___lmul+3
  4224  05D7  087A               	movf	___lmul@product+2,w
  4225  05D8  00F2               	movwf	?___lmul+2
  4226  05D9  0879               	movf	___lmul@product+1,w
  4227  05DA  00F1               	movwf	?___lmul+1
  4228  05DB  0878               	movf	___lmul@product,w
  4229  05DC  00F0               	movwf	?___lmul
  4230  05DD                     i1l564:
  4231  05DD  0008               	return
  4232  05DE                     __end_of___lmul:
  4233                           
  4234                           	psect	text16
  4235  0455                     __ptext16:	
  4236 ;; *************** function ___lldiv *****************
  4237 ;; Defined at:
  4238 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  divisor         4    6[COMMON] unsigned long 
  4241 ;;  dividend        4   10[COMMON] unsigned long 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  quotient        4    1[BANK0 ] unsigned long 
  4244 ;;  counter         1    5[BANK0 ] unsigned char 
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  4    6[COMMON] unsigned long 
  4247 ;; Registers used:
  4248 ;;		wreg, status,2, status,0
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4254 ;;      Params:         8       0       0       0       0       0
  4255 ;;      Locals:         0       5       0       0       0       0
  4256 ;;      Temps:          0       1       0       0       0       0
  4257 ;;      Totals:         8       6       0       0       0       0
  4258 ;;Total ram usage:       14 bytes
  4259 ;; Hardware stack levels used: 1
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_runPotScaling
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267  0455                     ___lldiv:	
  4268                           ;psect for function ___lldiv
  4269                           
  4270  0455                     i1l1810:	
  4271                           ;incstack = 0
  4272                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4273                           
  4274  0455  3000               	movlw	0
  4275  0456  0020               	movlb	0	; select bank0
  4276  0457  00A4               	movwf	___lldiv@quotient+3
  4277  0458  3000               	movlw	0
  4278  0459  00A3               	movwf	___lldiv@quotient+2
  4279  045A  3000               	movlw	0
  4280  045B  00A2               	movwf	___lldiv@quotient+1
  4281  045C  3000               	movlw	0
  4282  045D  00A1               	movwf	___lldiv@quotient
  4283  045E  0879               	movf	___lldiv@divisor+3,w
  4284  045F  0478               	iorwf	___lldiv@divisor+2,w
  4285  0460  0477               	iorwf	___lldiv@divisor+1,w
  4286  0461  0476               	iorwf	___lldiv@divisor,w
  4287  0462  1903               	skipnz
  4288  0463  2C65               	goto	u154_21
  4289  0464  2C66               	goto	u154_20
  4290  0465                     u154_21:
  4291  0465  2CA7               	goto	i1l1830
  4292  0466                     u154_20:
  4293  0466                     i1l1812:
  4294  0466  01A5               	clrf	___lldiv@counter
  4295  0467  0AA5               	incf	___lldiv@counter,f
  4296  0468  2C74               	goto	i1l1816
  4297  0469                     i1l1814:
  4298  0469  3001               	movlw	1
  4299  046A                     u155_25:
  4300  046A  35F6               	lslf	___lldiv@divisor,f
  4301  046B  0DF7               	rlf	___lldiv@divisor+1,f
  4302  046C  0DF8               	rlf	___lldiv@divisor+2,f
  4303  046D  0DF9               	rlf	___lldiv@divisor+3,f
  4304  046E  0B89               	decfsz	9,f
  4305  046F  2C6A               	goto	u155_25
  4306  0470  3001               	movlw	1
  4307  0471  00A0               	movwf	??___lldiv
  4308  0472  0820               	movf	??___lldiv,w
  4309  0473  07A5               	addwf	___lldiv@counter,f
  4310  0474                     i1l1816:
  4311  0474  1FF9               	btfss	___lldiv@divisor+3,7
  4312  0475  2C77               	goto	u156_21
  4313  0476  2C78               	goto	u156_20
  4314  0477                     u156_21:
  4315  0477  2C69               	goto	i1l1814
  4316  0478                     u156_20:
  4317  0478                     i1l1818:
  4318  0478  3001               	movlw	1
  4319  0479                     u157_25:
  4320  0479  35A1               	lslf	___lldiv@quotient,f
  4321  047A  0DA2               	rlf	___lldiv@quotient+1,f
  4322  047B  0DA3               	rlf	___lldiv@quotient+2,f
  4323  047C  0DA4               	rlf	___lldiv@quotient+3,f
  4324  047D  0B89               	decfsz	9,f
  4325  047E  2C79               	goto	u157_25
  4326  047F                     i1l1820:
  4327  047F  0879               	movf	___lldiv@divisor+3,w
  4328  0480  027D               	subwf	___lldiv@dividend+3,w
  4329  0481  1D03               	skipz
  4330  0482  2C8D               	goto	u158_25
  4331  0483  0878               	movf	___lldiv@divisor+2,w
  4332  0484  027C               	subwf	___lldiv@dividend+2,w
  4333  0485  1D03               	skipz
  4334  0486  2C8D               	goto	u158_25
  4335  0487  0877               	movf	___lldiv@divisor+1,w
  4336  0488  027B               	subwf	___lldiv@dividend+1,w
  4337  0489  1D03               	skipz
  4338  048A  2C8D               	goto	u158_25
  4339  048B  0876               	movf	___lldiv@divisor,w
  4340  048C  027A               	subwf	___lldiv@dividend,w
  4341  048D                     u158_25:
  4342  048D  1C03               	skipc
  4343  048E  2C90               	goto	u158_21
  4344  048F  2C91               	goto	u158_20
  4345  0490                     u158_21:
  4346  0490  2C9A               	goto	i1l1826
  4347  0491                     u158_20:
  4348  0491                     i1l1822:
  4349  0491  0876               	movf	___lldiv@divisor,w
  4350  0492  02FA               	subwf	___lldiv@dividend,f
  4351  0493  0877               	movf	___lldiv@divisor+1,w
  4352  0494  3BFB               	subwfb	___lldiv@dividend+1,f
  4353  0495  0878               	movf	___lldiv@divisor+2,w
  4354  0496  3BFC               	subwfb	___lldiv@dividend+2,f
  4355  0497  0879               	movf	___lldiv@divisor+3,w
  4356  0498  3BFD               	subwfb	___lldiv@dividend+3,f
  4357  0499                     i1l1824:
  4358  0499  1421               	bsf	___lldiv@quotient,0
  4359  049A                     i1l1826:
  4360  049A  3001               	movlw	1
  4361  049B                     u159_25:
  4362  049B  36F9               	lsrf	___lldiv@divisor+3,f
  4363  049C  0CF8               	rrf	___lldiv@divisor+2,f
  4364  049D  0CF7               	rrf	___lldiv@divisor+1,f
  4365  049E  0CF6               	rrf	___lldiv@divisor,f
  4366  049F  0B89               	decfsz	9,f
  4367  04A0  2C9B               	goto	u159_25
  4368  04A1                     i1l1828:
  4369  04A1  3001               	movlw	1
  4370  04A2  02A5               	subwf	___lldiv@counter,f
  4371  04A3  1D03               	btfss	3,2
  4372  04A4  2CA6               	goto	u160_21
  4373  04A5  2CA7               	goto	u160_20
  4374  04A6                     u160_21:
  4375  04A6  2C78               	goto	i1l1818
  4376  04A7                     u160_20:
  4377  04A7                     i1l1830:
  4378  04A7  0824               	movf	___lldiv@quotient+3,w
  4379  04A8  00F9               	movwf	?___lldiv+3
  4380  04A9  0823               	movf	___lldiv@quotient+2,w
  4381  04AA  00F8               	movwf	?___lldiv+2
  4382  04AB  0822               	movf	___lldiv@quotient+1,w
  4383  04AC  00F7               	movwf	?___lldiv+1
  4384  04AD  0821               	movf	___lldiv@quotient,w
  4385  04AE  00F6               	movwf	?___lldiv
  4386  04AF                     i1l586:
  4387  04AF  0008               	return
  4388  04B0                     __end_of___lldiv:
  4389                           
  4390                           	psect	text17
  4391  04B0                     __ptext17:	
  4392 ;; *************** function _readFilteredFreqPot *****************
  4393 ;; Defined at:
  4394 ;;		line 39 in file "Potentiometer.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;		None
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  i               1    8[BANK0 ] unsigned char 
  4399 ;;  i               1    9[BANK0 ] unsigned char 
  4400 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  2   11[COMMON] unsigned short 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4410 ;;      Params:         2       0       0       0       0       0
  4411 ;;      Locals:         0       6       0       0       0       0
  4412 ;;      Temps:          0       4       0       0       0       0
  4413 ;;      Totals:         2      10       0       0       0       0
  4414 ;;Total ram usage:       12 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 1
  4417 ;; This function calls:
  4418 ;;		_readADCRaw
  4419 ;; This function is called by:
  4420 ;;		_Tick980Hz
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424  04B0                     _readFilteredFreqPot:	
  4425                           ;psect for function _readFilteredFreqPot
  4426                           
  4427  04B0                     i1l1880:	
  4428                           ;incstack = 0
  4429                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4430                           
  4431                           
  4432                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4433  04B0  0020               	movlb	0	; select bank0
  4434  04B1  01A9               	clrf	readFilteredFreqPot@i
  4435  04B2                     i1l1886:
  4436  04B2  3529               	lslf	readFilteredFreqPot@i,w
  4437  04B3  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4438  04B4  0086               	movwf	6
  4439  04B5  3001               	movlw	1	; select bank2/3
  4440  04B6  0087               	movwf	7
  4441  04B7  3529               	lslf	readFilteredFreqPot@i,w
  4442  04B8  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4443  04B9  0084               	movwf	4
  4444  04BA  3001               	movlw	1	; select bank2/3
  4445  04BB  0085               	movwf	5
  4446  04BC  3F40               	moviw [0]fsr1
  4447  04BD  3F80               	movwi [0]fsr0
  4448  04BE  3F41               	moviw [1]fsr1
  4449  04BF  3F81               	movwi [1]fsr0
  4450  04C0                     i1l1888:
  4451  04C0  3001               	movlw	1
  4452  04C1  00A0               	movwf	??_readFilteredFreqPot
  4453  04C2  0820               	movf	??_readFilteredFreqPot,w
  4454  04C3  07A9               	addwf	readFilteredFreqPot@i,f
  4455  04C4                     i1l1890:
  4456  04C4  300F               	movlw	15
  4457  04C5  0229               	subwf	readFilteredFreqPot@i,w
  4458  04C6  1C03               	skipc
  4459  04C7  2CC9               	goto	u170_21
  4460  04C8  2CCA               	goto	u170_20
  4461  04C9                     u170_21:
  4462  04C9  2CB2               	goto	i1l1886
  4463  04CA                     u170_20:
  4464  04CA                     i1l1892:
  4465                           
  4466                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4467  04CA  300A               	movlw	10
  4468  04CB  3183  2334  3184   	fcall	_readADCRaw
  4469  04CE  0871               	movf	?_readADCRaw+1,w
  4470  04CF  0022               	movlb	2	; select bank2
  4471  04D0  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4472  04D1  0870               	movf	?_readADCRaw,w
  4473  04D2  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4474  04D3                     i1l1894:
  4475                           
  4476                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4477  04D3  3000               	movlw	0
  4478  04D4  0020               	movlb	0	; select bank0
  4479  04D5  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4480  04D6  3000               	movlw	0
  4481  04D7  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4482  04D8  3000               	movlw	0
  4483  04D9  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4484  04DA  3000               	movlw	0
  4485  04DB  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4486  04DC                     i1l1896:
  4487                           
  4488                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4489  04DC  01A8               	clrf	readFilteredFreqPot@i_706
  4490  04DD                     i1l1902:
  4491  04DD  3528               	lslf	readFilteredFreqPot@i_706,w
  4492  04DE  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4493  04DF  0086               	movwf	6
  4494  04E0  3001               	movlw	1	; select bank2/3
  4495  04E1  0087               	movwf	7
  4496  04E2  3F40               	moviw [0]fsr1
  4497  04E3  00A0               	movwf	??_readFilteredFreqPot
  4498  04E4  3F41               	moviw [1]fsr1
  4499  04E5  00A1               	movwf	??_readFilteredFreqPot+1
  4500  04E6  0820               	movf	??_readFilteredFreqPot,w
  4501  04E7  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4502  04E8  0821               	movf	??_readFilteredFreqPot+1,w
  4503  04E9  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4504  04EA  3000               	movlw	0
  4505  04EB  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4506  04EC  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4507  04ED                     i1l1904:
  4508  04ED  3001               	movlw	1
  4509  04EE  00A0               	movwf	??_readFilteredFreqPot
  4510  04EF  0820               	movf	??_readFilteredFreqPot,w
  4511  04F0  07A8               	addwf	readFilteredFreqPot@i_706,f
  4512  04F1                     i1l1906:
  4513  04F1  3010               	movlw	16
  4514  04F2  0228               	subwf	readFilteredFreqPot@i_706,w
  4515  04F3  1C03               	skipc
  4516  04F4  2CF6               	goto	u171_21
  4517  04F5  2CF7               	goto	u171_20
  4518  04F6                     u171_21:
  4519  04F6  2CDD               	goto	i1l1902
  4520  04F7                     u171_20:
  4521  04F7                     i1l1908:
  4522                           
  4523                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4524  04F7  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4525  04F8  00A0               	movwf	??_readFilteredFreqPot
  4526  04F9  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4527  04FA  00A1               	movwf	??_readFilteredFreqPot+1
  4528  04FB  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4529  04FC  00A2               	movwf	??_readFilteredFreqPot+2
  4530  04FD  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4531  04FE  00A3               	movwf	??_readFilteredFreqPot+3
  4532  04FF  3004               	movlw	4
  4533  0500                     u172_25:
  4534  0500  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4535  0501  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4536  0502  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4537  0503  0CA0               	rrf	??_readFilteredFreqPot,f
  4538  0504                     u172_20:
  4539  0504  0B89               	decfsz	9,f
  4540  0505  2D00               	goto	u172_25
  4541  0506  0821               	movf	??_readFilteredFreqPot+1,w
  4542  0507  00FC               	movwf	?_readFilteredFreqPot+1
  4543  0508  0820               	movf	??_readFilteredFreqPot,w
  4544  0509  00FB               	movwf	?_readFilteredFreqPot
  4545  050A                     i1l335:
  4546  050A  0008               	return
  4547  050B                     __end_of_readFilteredFreqPot:
  4548                           
  4549                           	psect	text18
  4550  050B                     __ptext18:	
  4551 ;; *************** function _readFilteredDutyPot *****************
  4552 ;; Defined at:
  4553 ;;		line 25 in file "Potentiometer.c"
  4554 ;; Parameters:    Size  Location     Type
  4555 ;;		None
  4556 ;; Auto vars:     Size  Location     Type
  4557 ;;  i               1    8[BANK0 ] unsigned char 
  4558 ;;  i               1    9[BANK0 ] unsigned char 
  4559 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2   11[COMMON] unsigned short 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4569 ;;      Params:         2       0       0       0       0       0
  4570 ;;      Locals:         0       6       0       0       0       0
  4571 ;;      Temps:          0       4       0       0       0       0
  4572 ;;      Totals:         2      10       0       0       0       0
  4573 ;;Total ram usage:       12 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; Hardware stack levels required when called: 1
  4576 ;; This function calls:
  4577 ;;		_readADCRaw
  4578 ;; This function is called by:
  4579 ;;		_Tick980Hz
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583  050B                     _readFilteredDutyPot:	
  4584                           ;psect for function _readFilteredDutyPot
  4585                           
  4586  050B                     i1l1848:	
  4587                           ;incstack = 0
  4588                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4589                           
  4590                           
  4591                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4592  050B  0020               	movlb	0	; select bank0
  4593  050C  01A9               	clrf	readFilteredDutyPot@i
  4594  050D                     i1l1854:
  4595  050D  3529               	lslf	readFilteredDutyPot@i,w
  4596  050E  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4597  050F  0086               	movwf	6
  4598  0510  3001               	movlw	1	; select bank2/3
  4599  0511  0087               	movwf	7
  4600  0512  3529               	lslf	readFilteredDutyPot@i,w
  4601  0513  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4602  0514  0084               	movwf	4
  4603  0515  3001               	movlw	1	; select bank2/3
  4604  0516  0085               	movwf	5
  4605  0517  3F40               	moviw [0]fsr1
  4606  0518  3F80               	movwi [0]fsr0
  4607  0519  3F41               	moviw [1]fsr1
  4608  051A  3F81               	movwi [1]fsr0
  4609  051B                     i1l1856:
  4610  051B  3001               	movlw	1
  4611  051C  00A0               	movwf	??_readFilteredDutyPot
  4612  051D  0820               	movf	??_readFilteredDutyPot,w
  4613  051E  07A9               	addwf	readFilteredDutyPot@i,f
  4614  051F                     i1l1858:
  4615  051F  300F               	movlw	15
  4616  0520  0229               	subwf	readFilteredDutyPot@i,w
  4617  0521  1C03               	skipc
  4618  0522  2D24               	goto	u167_21
  4619  0523  2D25               	goto	u167_20
  4620  0524                     u167_21:
  4621  0524  2D0D               	goto	i1l1854
  4622  0525                     u167_20:
  4623  0525                     i1l1860:
  4624                           
  4625                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4626  0525  3009               	movlw	9
  4627  0526  3183  2334  3185   	fcall	_readADCRaw
  4628  0529  0871               	movf	?_readADCRaw+1,w
  4629  052A  0022               	movlb	2	; select bank2
  4630  052B  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4631  052C  0870               	movf	?_readADCRaw,w
  4632  052D  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4633  052E                     i1l1862:
  4634                           
  4635                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4636  052E  3000               	movlw	0
  4637  052F  0020               	movlb	0	; select bank0
  4638  0530  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4639  0531  3000               	movlw	0
  4640  0532  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4641  0533  3000               	movlw	0
  4642  0534  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4643  0535  3000               	movlw	0
  4644  0536  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4645  0537                     i1l1864:
  4646                           
  4647                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4648  0537  01A8               	clrf	readFilteredDutyPot@i_702
  4649  0538                     i1l1870:
  4650  0538  3528               	lslf	readFilteredDutyPot@i_702,w
  4651  0539  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4652  053A  0086               	movwf	6
  4653  053B  3001               	movlw	1	; select bank2/3
  4654  053C  0087               	movwf	7
  4655  053D  3F40               	moviw [0]fsr1
  4656  053E  00A0               	movwf	??_readFilteredDutyPot
  4657  053F  3F41               	moviw [1]fsr1
  4658  0540  00A1               	movwf	??_readFilteredDutyPot+1
  4659  0541  0820               	movf	??_readFilteredDutyPot,w
  4660  0542  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4661  0543  0821               	movf	??_readFilteredDutyPot+1,w
  4662  0544  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4663  0545  3000               	movlw	0
  4664  0546  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4665  0547  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4666  0548                     i1l1872:
  4667  0548  3001               	movlw	1
  4668  0549  00A0               	movwf	??_readFilteredDutyPot
  4669  054A  0820               	movf	??_readFilteredDutyPot,w
  4670  054B  07A8               	addwf	readFilteredDutyPot@i_702,f
  4671  054C                     i1l1874:
  4672  054C  3010               	movlw	16
  4673  054D  0228               	subwf	readFilteredDutyPot@i_702,w
  4674  054E  1C03               	skipc
  4675  054F  2D51               	goto	u168_21
  4676  0550  2D52               	goto	u168_20
  4677  0551                     u168_21:
  4678  0551  2D38               	goto	i1l1870
  4679  0552                     u168_20:
  4680  0552                     i1l1876:
  4681                           
  4682                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4683  0552  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4684  0553  00A0               	movwf	??_readFilteredDutyPot
  4685  0554  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4686  0555  00A1               	movwf	??_readFilteredDutyPot+1
  4687  0556  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4688  0557  00A2               	movwf	??_readFilteredDutyPot+2
  4689  0558  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4690  0559  00A3               	movwf	??_readFilteredDutyPot+3
  4691  055A  3004               	movlw	4
  4692  055B                     u169_25:
  4693  055B  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4694  055C  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4695  055D  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4696  055E  0CA0               	rrf	??_readFilteredDutyPot,f
  4697  055F                     u169_20:
  4698  055F  0B89               	decfsz	9,f
  4699  0560  2D5B               	goto	u169_25
  4700  0561  0821               	movf	??_readFilteredDutyPot+1,w
  4701  0562  00FC               	movwf	?_readFilteredDutyPot+1
  4702  0563  0820               	movf	??_readFilteredDutyPot,w
  4703  0564  00FB               	movwf	?_readFilteredDutyPot
  4704  0565                     i1l328:
  4705  0565  0008               	return
  4706  0566                     __end_of_readFilteredDutyPot:
  4707                           
  4708                           	psect	text19
  4709  0334                     __ptext19:	
  4710 ;; *************** function _readADCRaw *****************
  4711 ;; Defined at:
  4712 ;;		line 71 in file "ADC.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  gpioNumber      1    wreg     const enum E2798
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4717 ;;  i               1    9[COMMON] unsigned char 
  4718 ;;  i               1    8[COMMON] unsigned char 
  4719 ;;  returnValue     2    4[COMMON] unsigned int 
  4720 ;;  gpioValid       1    7[COMMON] unsigned char 
  4721 ;;  channel         1    6[COMMON] unsigned char 
  4722 ;; Return value:  Size  Location     Type
  4723 ;;                  2    0[COMMON] unsigned short 
  4724 ;; Registers used:
  4725 ;;		wreg, status,2, status,0
  4726 ;; Tracked objects:
  4727 ;;		On entry : 0/0
  4728 ;;		On exit  : 0/0
  4729 ;;		Unchanged: 0/0
  4730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4731 ;;      Params:         2       0       0       0       0       0
  4732 ;;      Locals:         7       0       0       0       0       0
  4733 ;;      Temps:          2       0       0       0       0       0
  4734 ;;      Totals:        11       0       0       0       0       0
  4735 ;;Total ram usage:       11 bytes
  4736 ;; Hardware stack levels used: 1
  4737 ;; This function calls:
  4738 ;;		Nothing
  4739 ;; This function is called by:
  4740 ;;		_readFilteredDutyPot
  4741 ;;		_readFilteredFreqPot
  4742 ;;		_readFilteredIDS
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746  0334                     _readADCRaw:	
  4747                           ;psect for function _readADCRaw
  4748                           
  4749                           
  4750                           ;incstack = 0
  4751                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4752                           ;readADCRaw@gpioNumber stored from wreg
  4753  0334  00FA               	movwf	readADCRaw@gpioNumber
  4754  0335                     i1l1698:
  4755                           
  4756                           ;ADC.c: 72:     uint8_t channel = 0;
  4757  0335  01F6               	clrf	readADCRaw@channel
  4758                           
  4759                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4760  0336  01F7               	clrf	readADCRaw@gpioValid
  4761  0337                     i1l1700:
  4762                           
  4763                           ;ADC.c: 75:     if(gpioNumber < 4){
  4764  0337  3004               	movlw	4
  4765  0338  027A               	subwf	readADCRaw@gpioNumber,w
  4766  0339  1803               	skipnc
  4767  033A  2B3C               	goto	u133_21
  4768  033B  2B3D               	goto	u133_20
  4769  033C                     u133_21:
  4770  033C  2B43               	goto	i1l212
  4771  033D                     u133_20:
  4772  033D                     i1l1702:
  4773                           
  4774                           ;ADC.c: 76:         channel = gpioNumber;
  4775  033D  087A               	movf	readADCRaw@gpioNumber,w
  4776  033E  00F2               	movwf	??_readADCRaw
  4777  033F  0872               	movf	??_readADCRaw,w
  4778  0340  00F6               	movwf	readADCRaw@channel
  4779  0341                     i1l1704:
  4780                           
  4781                           ;ADC.c: 77:         gpioValid = 1;
  4782  0341  01F7               	clrf	readADCRaw@gpioValid
  4783  0342  0AF7               	incf	readADCRaw@gpioValid,f
  4784  0343                     i1l212:	
  4785                           ;ADC.c: 78:     }
  4786                           
  4787                           
  4788                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4789  0343  3009               	movlw	9
  4790  0344  027A               	subwf	readADCRaw@gpioNumber,w
  4791  0345  1C03               	skipc
  4792  0346  2B48               	goto	u134_21
  4793  0347  2B49               	goto	u134_20
  4794  0348                     u134_21:
  4795  0348  2B56               	goto	i1l213
  4796  0349                     u134_20:
  4797  0349                     i1l1706:
  4798  0349  3010               	movlw	16
  4799  034A  027A               	subwf	readADCRaw@gpioNumber,w
  4800  034B  1803               	skipnc
  4801  034C  2B4E               	goto	u135_21
  4802  034D  2B4F               	goto	u135_20
  4803  034E                     u135_21:
  4804  034E  2B56               	goto	i1l213
  4805  034F                     u135_20:
  4806  034F                     i1l1708:
  4807                           
  4808                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4809  034F  087A               	movf	readADCRaw@gpioNumber,w
  4810  0350  3C14               	sublw	20
  4811  0351  00F2               	movwf	??_readADCRaw
  4812  0352  0872               	movf	??_readADCRaw,w
  4813  0353  00F6               	movwf	readADCRaw@channel
  4814  0354                     i1l1710:
  4815                           
  4816                           ;ADC.c: 81:         gpioValid = 1;
  4817  0354  01F7               	clrf	readADCRaw@gpioValid
  4818  0355  0AF7               	incf	readADCRaw@gpioValid,f
  4819  0356                     i1l213:	
  4820                           ;ADC.c: 82:     }
  4821                           
  4822                           
  4823                           ;ADC.c: 83:     if(gpioValid){
  4824  0356  0877               	movf	readADCRaw@gpioValid,w
  4825  0357  1903               	btfsc	3,2
  4826  0358  2B5A               	goto	u136_21
  4827  0359  2B5B               	goto	u136_20
  4828  035A                     u136_21:
  4829  035A  2B95               	goto	i1l223
  4830  035B                     u136_20:
  4831  035B                     i1l1712:
  4832                           
  4833                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4834  035B  0021               	movlb	1	; select bank1
  4835  035C  081D               	movf	29,w	;volatile
  4836  035D                     i1l1714:
  4837                           
  4838                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4839  035D  3083               	movlw	131
  4840  035E  00F2               	movwf	??_readADCRaw
  4841  035F  0872               	movf	??_readADCRaw,w
  4842  0360  059D               	andwf	29,f	;volatile
  4843  0361                     i1l1716:
  4844                           
  4845                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4846  0361  0876               	movf	readADCRaw@channel,w	;volatile
  4847  0362  00F2               	movwf	??_readADCRaw
  4848  0363  3001               	movlw	1
  4849  0364                     u137_25:
  4850  0364  35F2               	lslf	??_readADCRaw,f
  4851  0365  3EFF               	addlw	-1
  4852  0366  1D03               	skipz
  4853  0367  2B64               	goto	u137_25
  4854  0368  3572               	lslf	??_readADCRaw,w
  4855  0369  00F3               	movwf	??_readADCRaw+1
  4856  036A  0873               	movf	??_readADCRaw+1,w
  4857  036B  049D               	iorwf	29,f	;volatile
  4858  036C                     i1l1718:
  4859                           
  4860                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4861  036C  01F8               	clrf	readADCRaw@i
  4862  036D                     i1l1724:
  4863  036D  3001               	movlw	1
  4864  036E  00F2               	movwf	??_readADCRaw
  4865  036F  0872               	movf	??_readADCRaw,w
  4866  0370  07F8               	addwf	readADCRaw@i,f
  4867  0371                     i1l1726:
  4868  0371  3008               	movlw	8
  4869  0372  0278               	subwf	readADCRaw@i,w
  4870  0373  1C03               	skipc
  4871  0374  2B76               	goto	u138_21
  4872  0375  2B77               	goto	u138_20
  4873  0376                     u138_21:
  4874  0376  2B6D               	goto	i1l1724
  4875  0377                     u138_20:
  4876  0377                     i1l217:
  4877                           
  4878                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4879  0377  0021               	movlb	1	; select bank1
  4880  0378  149D               	bsf	29,1	;volatile
  4881  0379                     i1l218:	
  4882                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4883                           
  4884  0379  189D               	btfsc	29,1	;volatile
  4885  037A  2B7C               	goto	u139_21
  4886  037B  2B7D               	goto	u139_20
  4887  037C                     u139_21:
  4888  037C  2B79               	goto	i1l218
  4889  037D                     u139_20:
  4890  037D                     i1l1728:
  4891                           
  4892                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4893  037D  081C               	movf	28,w	;volatile
  4894  037E  00F5               	movwf	readADCRaw@returnValue+1
  4895  037F  081B               	movf	27,w	;volatile
  4896  0380  00F4               	movwf	readADCRaw@returnValue
  4897  0381                     i1l1730:
  4898                           
  4899                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4900  0381  3083               	movlw	131
  4901  0382  00F2               	movwf	??_readADCRaw
  4902  0383  0872               	movf	??_readADCRaw,w
  4903  0384  059D               	andwf	29,f	;volatile
  4904  0385                     i1l1732:
  4905                           
  4906                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4907  0385  159D               	bsf	29,3	;volatile
  4908  0386                     i1l1734:
  4909                           
  4910                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4911  0386  01F9               	clrf	readADCRaw@i_616
  4912  0387                     i1l1740:
  4913  0387  3001               	movlw	1
  4914  0388  00F2               	movwf	??_readADCRaw
  4915  0389  0872               	movf	??_readADCRaw,w
  4916  038A  07F9               	addwf	readADCRaw@i_616,f
  4917  038B                     i1l1742:
  4918  038B  3008               	movlw	8
  4919  038C  0279               	subwf	readADCRaw@i_616,w
  4920  038D  1C03               	skipc
  4921  038E  2B90               	goto	u140_21
  4922  038F  2B91               	goto	u140_20
  4923  0390                     u140_21:
  4924  0390  2B87               	goto	i1l1740
  4925  0391                     u140_20:
  4926  0391                     i1l1744:
  4927                           
  4928                           ;ADC.c: 97:             return returnValue;
  4929  0391  0875               	movf	readADCRaw@returnValue+1,w
  4930  0392  00F1               	movwf	?_readADCRaw+1
  4931  0393  0874               	movf	readADCRaw@returnValue,w
  4932  0394  00F0               	movwf	?_readADCRaw
  4933  0395                     i1l223:
  4934  0395  0008               	return
  4935  0396                     __end_of_readADCRaw:
  4936                           
  4937                           	psect	text20
  4938  05DE                     __ptext20:	
  4939 ;; *************** function _currentTripRead *****************
  4940 ;; Defined at:
  4941 ;;		line 30 in file "CurrentSensor.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      _Bool 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, pclath, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4955 ;;      Params:         0       0       0       0       0       0
  4956 ;;      Locals:         1       0       0       0       0       0
  4957 ;;      Temps:          1       0       0       0       0       0
  4958 ;;      Totals:         2       0       0       0       0       0
  4959 ;;Total ram usage:        2 bytes
  4960 ;; Hardware stack levels used: 1
  4961 ;; Hardware stack levels required when called: 1
  4962 ;; This function calls:
  4963 ;;		_readGPIO
  4964 ;; This function is called by:
  4965 ;;		_Tick980Hz
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969  05DE                     _currentTripRead:	
  4970                           ;psect for function _currentTripRead
  4971                           
  4972  05DE                     i1l1834:	
  4973                           ;incstack = 0
  4974                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4975                           
  4976                           
  4977                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  4978  05DE  3001               	movlw	1
  4979  05DF  3185  2566  3185   	fcall	_readGPIO
  4980  05E2  3A01               	xorlw	1
  4981  05E3  1D03               	skipz
  4982  05E4  2DE6               	goto	u161_21
  4983  05E5  2DE8               	goto	u161_20
  4984  05E6                     u161_21:
  4985  05E6  3001               	movlw	1
  4986  05E7  2DE9               	goto	u162_20
  4987  05E8                     u161_20:
  4988  05E8  3000               	movlw	0
  4989  05E9                     u162_20:
  4990  05E9  00F9               	movwf	??_currentTripRead
  4991  05EA  0879               	movf	??_currentTripRead,w
  4992  05EB  0020               	movlb	0	; select bank0
  4993  05EC  00D4               	movwf	_tripIDS
  4994                           
  4995                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  4996  05ED  3003               	movlw	3
  4997  05EE  3185  2566  3185   	fcall	_readGPIO
  4998  05F1  3A01               	xorlw	1
  4999  05F2  1D03               	skipz
  5000  05F3  2DF5               	goto	u163_21
  5001  05F4  2DF7               	goto	u163_20
  5002  05F5                     u163_21:
  5003  05F5  3001               	movlw	1
  5004  05F6  2DF8               	goto	u164_20
  5005  05F7                     u163_20:
  5006  05F7  3000               	movlw	0
  5007  05F8                     u164_20:
  5008  05F8  00F9               	movwf	??_currentTripRead
  5009  05F9  0879               	movf	??_currentTripRead,w
  5010  05FA  0020               	movlb	0	; select bank0
  5011  05FB  00D3               	movwf	_tripIL
  5012  05FC                     i1l1836:
  5013                           
  5014                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  5015  05FC  01FA               	clrf	_currentTripRead$747
  5016  05FD  0AFA               	incf	_currentTripRead$747,f
  5017  05FE                     i1l1838:
  5018  05FE  0853               	movf	_tripIL,w
  5019  05FF  1D03               	btfss	3,2
  5020  0600  2E02               	goto	u165_21
  5021  0601  2E03               	goto	u165_20
  5022  0602                     u165_21:
  5023  0602  2E09               	goto	i1l1844
  5024  0603                     u165_20:
  5025  0603                     i1l1840:
  5026  0603  0854               	movf	_tripIDS,w
  5027  0604  1D03               	btfss	3,2
  5028  0605  2E07               	goto	u166_21
  5029  0606  2E08               	goto	u166_20
  5030  0607                     u166_21:
  5031  0607  2E09               	goto	i1l1844
  5032  0608                     u166_20:
  5033  0608                     i1l1842:
  5034  0608  01FA               	clrf	_currentTripRead$747
  5035  0609                     i1l1844:
  5036  0609  087A               	movf	_currentTripRead$747,w
  5037  060A                     i1l383:
  5038  060A  0008               	return
  5039  060B                     __end_of_currentTripRead:
  5040                           
  5041                           	psect	text21
  5042  0566                     __ptext21:	
  5043 ;; *************** function _readGPIO *****************
  5044 ;; Defined at:
  5045 ;;		line 79 in file "GPIO.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  gpioNumber      1    wreg     const enum E2798
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  gpioNumber      1    8[COMMON] const enum E2798
  5050 ;;  returnValueB    1    5[COMMON] unsigned char 
  5051 ;;  readB           1    4[COMMON] unsigned char 
  5052 ;;  returnValueA    1    3[COMMON] unsigned char 
  5053 ;;  readA           1    2[COMMON] unsigned char 
  5054 ;;  portType        1    7[COMMON] unsigned char 
  5055 ;;  portNumber      1    6[COMMON] unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  1    wreg      _Bool 
  5058 ;; Registers used:
  5059 ;;		wreg, status,2, status,0
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5065 ;;      Params:         0       0       0       0       0       0
  5066 ;;      Locals:         7       0       0       0       0       0
  5067 ;;      Temps:          2       0       0       0       0       0
  5068 ;;      Totals:         9       0       0       0       0       0
  5069 ;;Total ram usage:        9 bytes
  5070 ;; Hardware stack levels used: 1
  5071 ;; This function calls:
  5072 ;;		Nothing
  5073 ;; This function is called by:
  5074 ;;		_currentTripRead
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078  0566                     _readGPIO:	
  5079                           ;psect for function _readGPIO
  5080                           
  5081                           
  5082                           ;incstack = 0
  5083                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5084                           ;readGPIO@gpioNumber stored from wreg
  5085  0566  00F8               	movwf	readGPIO@gpioNumber
  5086  0567                     i1l1748:
  5087                           
  5088                           ;GPIO.c: 81:     uint8_t portType = 0;
  5089  0567  01F7               	clrf	readGPIO@portType
  5090  0568                     i1l1750:
  5091                           
  5092                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5093  0568  3008               	movlw	8
  5094  0569  0278               	subwf	readGPIO@gpioNumber,w
  5095  056A  1C03               	skipc
  5096  056B  2D6D               	goto	u141_21
  5097  056C  2D6E               	goto	u141_20
  5098  056D                     u141_21:
  5099  056D  2D76               	goto	i1l1756
  5100  056E                     u141_20:
  5101  056E                     i1l1752:
  5102                           
  5103                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5104  056E  0878               	movf	readGPIO@gpioNumber,w
  5105  056F  3EF8               	addlw	248
  5106  0570  00F0               	movwf	??_readGPIO
  5107  0571  0870               	movf	??_readGPIO,w
  5108  0572  00F6               	movwf	readGPIO@portNumber
  5109  0573                     i1l1754:
  5110                           
  5111                           ;GPIO.c: 84:         portType = 1;
  5112  0573  01F7               	clrf	readGPIO@portType
  5113  0574  0AF7               	incf	readGPIO@portType,f
  5114                           
  5115                           ;GPIO.c: 85:     }
  5116  0575  2D7B               	goto	i1l1760
  5117  0576                     i1l1756:
  5118                           
  5119                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5120  0576  0878               	movf	readGPIO@gpioNumber,w
  5121  0577  00F0               	movwf	??_readGPIO
  5122  0578  0870               	movf	??_readGPIO,w
  5123  0579  00F6               	movwf	readGPIO@portNumber
  5124  057A                     i1l1758:
  5125                           
  5126                           ;GPIO.c: 88:         portType = 0;
  5127  057A  01F7               	clrf	readGPIO@portType
  5128  057B                     i1l1760:
  5129                           
  5130                           ;GPIO.c: 91:     if(portType == 0){
  5131  057B  0877               	movf	readGPIO@portType,w
  5132  057C  1D03               	btfss	3,2
  5133  057D  2D7F               	goto	u142_21
  5134  057E  2D80               	goto	u142_20
  5135  057F                     u142_21:
  5136  057F  2D93               	goto	i1l1772
  5137  0580                     u142_20:
  5138  0580                     i1l1762:
  5139                           
  5140                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  5141  0580  0020               	movlb	0	; select bank0
  5142  0581  080C               	movf	12,w	;volatile
  5143  0582  00F0               	movwf	??_readGPIO
  5144  0583  0870               	movf	??_readGPIO,w
  5145  0584  00F2               	movwf	readGPIO@readA
  5146  0585                     i1l1764:
  5147                           
  5148                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  5149  0585  0872               	movf	readGPIO@readA,w
  5150  0586  00F0               	movwf	??_readGPIO
  5151  0587  0A76               	incf	readGPIO@portNumber,w
  5152  0588  2D8A               	goto	u143_24
  5153  0589                     u143_25:
  5154  0589  36F0               	lsrf	??_readGPIO,f
  5155  058A                     u143_24:
  5156  058A  0B89               	decfsz	9,f
  5157  058B  2D89               	goto	u143_25
  5158  058C  0870               	movf	??_readGPIO,w
  5159  058D  3901               	andlw	1
  5160  058E  00F1               	movwf	??_readGPIO+1
  5161  058F  0871               	movf	??_readGPIO+1,w
  5162  0590  00F3               	movwf	readGPIO@returnValueA
  5163  0591                     i1l1766:
  5164                           
  5165                           ;GPIO.c: 94:         return returnValueA;
  5166  0591  0873               	movf	readGPIO@returnValueA,w
  5167  0592  2DAA               	goto	i1l290
  5168  0593                     i1l1772:
  5169  0593  0377               	decf	readGPIO@portType,w
  5170  0594  1D03               	btfss	3,2
  5171  0595  2D97               	goto	u144_21
  5172  0596  2D98               	goto	u144_20
  5173  0597                     u144_21:
  5174  0597  2DAA               	goto	i1l290
  5175  0598                     u144_20:
  5176  0598                     i1l1774:
  5177                           
  5178                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  5179  0598  0020               	movlb	0	; select bank0
  5180  0599  080D               	movf	13,w	;volatile
  5181  059A  00F0               	movwf	??_readGPIO
  5182  059B  0870               	movf	??_readGPIO,w
  5183  059C  00F4               	movwf	readGPIO@readB
  5184  059D                     i1l1776:
  5185                           
  5186                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  5187  059D  0874               	movf	readGPIO@readB,w
  5188  059E  00F0               	movwf	??_readGPIO
  5189  059F  0A76               	incf	readGPIO@portNumber,w
  5190  05A0  2DA2               	goto	u145_24
  5191  05A1                     u145_25:
  5192  05A1  36F0               	lsrf	??_readGPIO,f
  5193  05A2                     u145_24:
  5194  05A2  0B89               	decfsz	9,f
  5195  05A3  2DA1               	goto	u145_25
  5196  05A4  0870               	movf	??_readGPIO,w
  5197  05A5  3901               	andlw	1
  5198  05A6  00F1               	movwf	??_readGPIO+1
  5199  05A7  0871               	movf	??_readGPIO+1,w
  5200  05A8  00F5               	movwf	readGPIO@returnValueB
  5201  05A9                     i1l1778:
  5202                           
  5203                           ;GPIO.c: 99:         return returnValueB;
  5204  05A9  0875               	movf	readGPIO@returnValueB,w
  5205  05AA                     i1l290:
  5206  05AA  0008               	return
  5207  05AB                     __end_of_readGPIO:
  5208  007E                     btemp	set	126	;btemp
  5209  007E                     int$flags	set	126
  5210  007E                     wtemp0	set	126
  5211                           
  5212                           	psect	idloc
  5213                           
  5214                           ;Config register IDLOC0 @ 0x8000
  5215                           ;	unspecified, using default values
  5216  8000                     	org	32768
  5217  8000  3FFF               	dw	16383
  5218                           
  5219                           ;Config register IDLOC1 @ 0x8001
  5220                           ;	unspecified, using default values
  5221  8001                     	org	32769
  5222  8001  3FFF               	dw	16383
  5223                           
  5224                           ;Config register IDLOC2 @ 0x8002
  5225                           ;	unspecified, using default values
  5226  8002                     	org	32770
  5227  8002  3FFF               	dw	16383
  5228                           
  5229                           ;Config register IDLOC3 @ 0x8003
  5230                           ;	unspecified, using default values
  5231  8003                     	org	32771
  5232  8003  3FFF               	dw	16383
  5233                           
  5234                           	psect	config
  5235                           
  5236                           ;Config register CONFIG1 @ 0x8007
  5237                           ;	Oscillator Selection
  5238                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5239                           ;	Watchdog Timer Enable
  5240                           ;	WDTE = OFF, WDT disabled
  5241                           ;	Power-up Timer Enable
  5242                           ;	PWRTE = OFF, PWRT disabled
  5243                           ;	MCLR Pin Function Select
  5244                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5245                           ;	Flash Program Memory Code Protection
  5246                           ;	CP = OFF, Program memory code protection is disabled
  5247                           ;	Data Memory Code Protection
  5248                           ;	CPD = OFF, Data memory code protection is disabled
  5249                           ;	Brown-out Reset Enable
  5250                           ;	BOREN = ON, Brown-out Reset enabled
  5251                           ;	Clock Out Enable
  5252                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5253                           ;	Internal/External Switchover
  5254                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5255                           ;	Fail-Safe Clock Monitor Enable
  5256                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5257  8007                     	org	32775
  5258  8007  0FA4               	dw	4004
  5259                           
  5260                           ;Config register CONFIG2 @ 0x8008
  5261                           ;	Flash Memory Self-Write Protection
  5262                           ;	WRT = OFF, Write protection off
  5263                           ;	PLL Enable
  5264                           ;	PLLEN = OFF, 4x PLL disabled
  5265                           ;	Stack Overflow/Underflow Reset Enable
  5266                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5267                           ;	Brown-out Reset Voltage Selection
  5268                           ;	BORV = 0x1, unprogrammed default
  5269                           ;	Low-Voltage Programming Enable
  5270                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5271  8008                     	org	32776
  5272  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         154
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      55
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _initialiseCurrentSensors->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3134
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1495
                   _initialiseADCPin
                     _initialiseGPIO
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (2) _writeGPIO                                            6     5      1     550
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3648
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (4) i1_writeGPIO                                          6     5      1     326
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
     _writeGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C5       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      37       6       68.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C5      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 14:37:47 2023

                                 l92 0691                                   l93 0691  
                ___wmul@multiplicand 0072                                  l111 024D  
                                l200 06EE                                  l204 02F1  
                                l144 06AF                                  l209 0333  
                                l321 06DA                                  l270 02C9  
                                l169 06E2                                  l284 03F5  
                                l378 0658                                  _PR2 001B  
                                wreg 0009                  __end_ofi1_writeGPIO 0455  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2010 069B                                 l2020 06A6  
                               l2012 069D                                 l2004 0694  
                               l2100 067C                                 l2030 06E9  
                               l2022 06A7                                 l2014 069F  
                               l2006 0697                                 l2110 068B  
                               l2102 067F                                 l2032 0636  
                               l2024 06A9                                 l2016 06A2  
                               l2008 0699                                 l2104 0682  
                               l2034 06D2                                 l2018 06A4  
                               l2026 06DB                                 l2106 0685  
                               l2028 06E0                                 l2108 0688  
                               l1620 03A4                                 l1630 03B6  
                               l1622 03A7                                 l1614 0398  
                               l1640 03E8                                 l1632 03C3  
                               l1624 03AB                                 l1616 0399  
                               l1650 025F                                 l1642 0250  
                               l1634 03D1                                 l1626 03AC  
                               l1618 039F                                 l2098 0678  
                               l1660 0289                                 l1652 0263  
                               l1644 0251                                 l1636 03D6  
                               l1628 03B1                                 l1670 02CC  
                               l1662 0297                                 l1654 0264  
                               l1646 0257                                 l1638 03DB  
                               l2198 022A                                 l1680 02DC  
                               l1672 02CF                                 l1664 029C  
                               l1656 0269                                 l1648 025C  
                               l1690 02F6                                 l1682 02E2  
                               l1674 02D5                                 l1666 02A1  
                               l1658 026E                                 l1930 0179  
                               l1692 02FB                                 l1684 02E8  
                               l1676 02D9                                 l1668 02BC  
                               l1940 0194                                 l1932 017A  
                               l1694 0315                                 l1686 02ED  
                               l1678 02DA                                 l1950 01AA  
                               l1942 0199                                 l1934 0184  
                               l1926 0175                                 l1696 031A  
                               l1688 02EF                                 l1960 01C9  
                               l1952 01B4                                 l1944 019A  
                               l1936 0189                                 l1928 0176  
                               l1970 01E4                                 l1962 01CA  
                               l1954 01B9                                 l1946 01A4  
                               l1938 018A                                 l1980 01FA  
                               l1972 01E9                                 l1964 01D4  
                               l1956 01BA                                 l1948 01A9  
                               l1990 0217                                 l1982 0204  
                               l1974 01EA                                 l1966 01D9  
                               l1958 01C4                                 l1992 0218  
                               l1984 0207                                 l1976 01F4  
                               l1968 01DA                                 l1986 0208  
                               l1978 01F9                                 l1988 0212  
                               l1996 0222                                 STR_1 06B0  
                               STR_3 06C2                                 u1030 039F  
                               u1031 039E                                 u1120 0257  
                               u1104 03E0                                 u1040 03B1  
                               u1121 0256                                 u1105 03DF  
                               u1041 03B0                                 u1130 0269  
                               u1114 03ED                                 u1050 03B6  
                               u1131 0268                                 u1115 03EC  
                               u1051 03B5                                 u1300 031A  
                               u1204 02A6                                 u1140 026E  
                               u1301 0319                                 u1205 02A5  
                               u1141 026D                                 u1230 02D5  
                               u1214 02B3                                 u1231 02D4  
                               u1215 02B2                                 u1240 02E2  
                               u1224 02C1                                 u1080 03D6  
                               u1064 03BB                                 u1241 02E1  
                               u1225 02C0                                 u1081 03D5  
                               u1065 03BA                                 u1314 031F  
                               u1250 02E8                                 u1154 0273  
                               u1090 03DB                                 u1074 03C8  
                               u1315 031E                                 u1251 02E7  
                               u1155 0272                                 u1091 03DA  
                               u1075 03C7                                 u1324 032C  
                               u1260 02F6                                 u1180 029C  
                               u1164 0280                                 u1325 032B  
                               u1261 02F5                                 u1181 029B  
                               u1165 027F                                 _LATA 010C  
                               u1270 02FB                                 u1190 02A1  
                               u1174 028E                                 _LATB 010D  
                               u1271 02FA                                 u1191 02A0  
                               u1175 028D                                 u1284 0300  
                               u1285 02FF                                 u1294 030D  
                               u1295 030C                                 i1l82 0060  
                               i1l87 0070                      _filteredFreqPot 0043  
                    _filteredDutyPot 0041                                 _main 0678  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 0072  
          ??_setupInternalOscillator 0033                                ?_main 0039  
                    __end_of___lldiv 04B0                                i1l212 0343  
                              i1l213 0356                                i1l223 0395  
                              i1l217 0377                                i1l218 0379  
                              i1l147 0635                                i1l341 0172  
                              i1l335 050A                                i1l328 0565  
                              i1l290 05AA                                i1l339 0157  
                              i1l284 0454                                i1l550 0663  
                              i1l383 060A                                i1l552 0677  
                              i1l564 05DD                                i1l586 04AF  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
               readFilteredFreqPot@i 0029             readFilteredDutyPot@i_702 0028  
                              status 0003                                wtemp0 007E  
             initialiseGPIO@portType 0036                  _initialiseADCModule 06E9  
               readFilteredDutyPot@i 0029           initialiseADCPin@gpioNumber 0038  
                    __initialization 0074                         __end_of_main 0694  
                  ?_initialiseADCPin 0070                          i1_writeGPIO 03F6  
                             ??_main 003D                   ??_initialiseADCPin 0033  
               ?_initialiseADCModule 0070           ??_initialiseCurrentSensors 0039  
    __end_of_setupInternalOscillator 024E  setupInternalOscillator@selectedFreq 0035  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADRESH 009C                               _ADRESL 009B  
                             _CCPR1L 0291                               _ANSELA 018C  
                             _ANSELB 018D                               u101_20 0633  
                             u101_21 0630                               u102_24 0635  
                             i1l2040 03FE                               i1l2050 0410  
                             i1l2042 0403                               i1l2060 043A  
                             i1l2052 0415                               i1l2044 0406  
                             i1l2036 03F7                               i1l2062 0447  
                             i1l2054 0422                               i1l2046 040A  
                             i1l2038 03F8                               i1l2070 001A  
                             i1l2056 0430                               i1l2048 040B  
                             i1l2080 003C                               i1l2072 0020  
                             i1l2064 0006                               i1l1610 060E  
                             i1l2058 0435                               i1l2082 0044  
                             i1l2090 0055                               i1l2074 0025  
                             i1l2066 000E                               i1l1700 0337  
                             i1l1612 0619                               i1l2092 006A  
                             i1l2084 004C                               i1l2076 002B  
                             i1l2068 0013                               i1l1710 0354  
                             i1l1702 033D                               i1l2094 006B  
                             i1l2086 0051                               i1l2078 0030  
                             i1l1712 035B                               i1l1704 0341  
                             i1l1800 05B7                               i1l1608 060B  
                             i1l2096 006F                               i1l2088 0055  
                             i1l1730 0381                               i1l1714 035D  
                             i1l1706 0349                               i1l1810 0455  
                             i1l1802 05BF                               i1l1740 0387  
                             i1l1732 0385                               i1l1724 036D  
                             i1l1716 0361                               i1l1708 034F  
                             i1l1820 047F                               i1l1812 0466  
                             i1l1804 05C6                               i1l1750 0568  
                             i1l1742 038B                               i1l1734 0386  
                             i1l1726 0371                               i1l1718 036C  
                             i1l1902 04DD                               i1l1822 0491  
                             i1l1814 0469                               i1l1830 04A7  
                             i1l1806 05D5                               i1l1760 057B  
                             i1l1752 056E                               i1l1840 0603  
                             i1l1744 0391                               i1l1728 037D  
                             i1l1904 04ED                               i1l1824 0499  
                             i1l1816 0474                               i1l1920 0161  
                             i1l1912 0090                               i1l1762 0580  
                             i1l1754 0573                               i1l1842 0608  
                             i1l1834 05DE                               i1l1906 04F1  
                             i1l1826 049A                               i1l1818 0478  
                             i1l1922 0165                               i1l1914 009B  
                             i1l1764 0585                               i1l1772 0593  
                             i1l1756 0576                               i1l1748 0567  
                             i1l1844 0609                               i1l1836 05FC  
                             i1l1860 0525                               i1l1908 04F7  
                             i1l1828 04A1                               i1l1924 0170  
                             i1l1916 0149                               i1l1774 0598  
                             i1l1766 0591                               i1l1758 057A  
                             i1l1838 05FE                               i1l1870 0538  
                             i1l1862 052E                               i1l1854 050D  
                             i1l1790 066D                               i1l1782 0659  
                             i1l1918 0153                               i1l1776 059D  
                             i1l1872 0548                               i1l1864 0537  
                             i1l1856 051B                               i1l1848 050B  
                             i1l1880 04B0                               i1l1792 0673  
                             i1l1784 065B                               i1l1778 05A9  
                             i1l1698 0335                               i1l1874 054C  
                             i1l1858 051F                               i1l1890 04C4  
                             i1l1786 065F                               i1l1876 0552  
                             i1l1892 04CA                               i1l1796 05AB  
                             i1l1788 0668                               i1l1894 04D3  
                             i1l1886 04B2                               i1l1798 05B3  
                             u140_20 0391                               i1l1896 04DC  
                             i1l1888 04C0                               u140_21 0390  
                             u141_20 056E                               u133_20 033D  
                             u141_21 056D                               u133_21 033C  
                             u142_20 0580                               u134_20 0349  
                             u150_20 05B7                               u142_21 057F  
                             u134_21 0348                               u150_21 05B6  
                             u135_20 034F                               u135_21 034E  
                             u143_24 058A                               u143_25 0589  
                             u151_25 05C0                               u144_20 0598  
                             u136_20 035B                               u160_20 04A7  
                             u144_21 0597                               u136_21 035A  
                             u160_21 04A6                               u152_25 05C7  
                             u161_20 05E8                               u153_20 05D5  
                             u161_21 05E6                               u153_21 05D4  
                             u145_24 05A2                               u145_25 05A1  
                             u137_25 0364                               u162_20 05E9  
                             u138_20 0377                               u170_20 04CA  
                             u154_20 0466                               u146_20 065F  
                             u138_21 0376                               u170_21 04C9  
                             u154_21 0465                               u146_21 065E  
                             u163_20 05F7                               u139_20 037D  
                             u171_20 04F7                               u163_21 05F5  
                             u139_21 037C                               u171_21 04F6  
                             u155_25 046A                               u147_25 0664  
                             u164_20 05F8                               u172_20 0504  
                             u156_20 0478                               u180_20 0415  
                             u156_21 0477                               u180_21 0414  
                             u172_25 0500                               u148_25 0669  
                             u165_20 0603                               u149_20 0673  
                             u173_20 009B                               u165_21 0602  
                             u149_21 0672                               u173_21 009A  
                             u181_24 041A                               u157_25 0479  
                             u181_25 0419                               u166_20 0608  
                             u158_20 0491                               u174_20 00BC  
                             u190_20 0030                               u166_21 0607  
                             u158_21 0490                               u190_21 002F  
                             u182_24 0427                               u158_25 048D  
                             u174_25 00B8                               u182_25 0426  
                             u167_20 0525                               u175_20 00E9  
                             u183_20 0435                               u191_20 0051  
                             u167_21 0524                               u183_21 0434  
                             u191_21 0050                               u159_25 049B  
                             u175_25 00E5                               u168_20 0552  
                             u176_20 0153                               u184_20 043A  
                             u192_20 005C                               u168_21 0551  
                             u176_21 0152                               u184_21 0439  
                             u192_21 005A                               u176_25 014F  
                             u169_20 055F                               u177_20 0161  
                             u193_20 005D                               u177_21 0160  
                             u185_24 043F                               u169_25 055B  
                             u177_25 015D                               u185_25 043E  
                             u178_20 03FE                               u194_20 0066  
                             u178_21 03FD                               u194_21 0064  
                             u186_24 044C                               u186_25 044B  
                             u179_20 0410                               u195_20 0067  
                             u187_20 000E                               u179_21 040F  
                             u187_21 000D                               u188_20 0020  
                             u188_21 001F                      ??_runPotScaling 0026  
                             u189_20 002B                               u189_21 002A  
            initialiseGPIO@direction 0033                     readGPIO@portType 0077  
                readADCRaw@gpioValid 0077                               ___lmul 05AB  
                             ___wmul 0659                            ??___lldiv 0020  
                   __end_of_readGPIO 05AB                               _tripIL 0053  
          setPWMDutyandPeriod@period 0072                ??_initialiseADCModule 0033  
           _initialisePotentiometers 06D2           initialiseADCPin@portNumber 0037  
                   __end_of_setupPWM 06B0                      _currentTripRead 05DE  
            __end_of__initialization 008C                       __pcstackCOMMON 0070  
          initialiseADCPin@gpioValid 0035                i1writeGPIO@gpioNumber 0074  
                      _currentILFIFO 00A0                       _OPTION_REGbits 0095  
                  __end_of_Tick980Hz 0072                           __pbssBANK0 003D  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                         __pmaintext 0678                              ?___lmul 0070  
                            ?___wmul 0070                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 060B          __end_of_setPWMDutyandPeriod 0636  
   __end_of_initialiseCurrentSensors 0659             initialiseADCPin@portType 0036  
              i1writeGPIO@portNumber 0075                           _filteredIL 0045  
                          ?_readGPIO 0070                           _readADCRaw 0334  
                _readFilteredFreqPot 04B0                  _readFilteredDutyPot 050B  
                          ?_setupPWM 0070                 readADCRaw@gpioNumber 007A  
           initialiseGPIO@gpioNumber 0037                              ___lldiv 0455  
                       ?i1_writeGPIO 0070                 ?_readFilteredFreqPot 007B  
                            __ptext1 06DB                              __ptext2 0694  
                            __ptext3 0173                              __ptext4 06D2  
                            __ptext5 0636                              __ptext6 0396  
                            __ptext7 024E                              __ptext8 02CA  
                            __ptext9 06E9                 ?_readFilteredDutyPot 007B  
                          _T2CONbits 001C                              _setDuty 004D  
              i1writeGPIO@writeValue 0070                              _tripIDS 0054  
                            clrloop0 06E4                 end_of_initialization 008C  
                         ??_readGPIO 0070             ?_setupInternalOscillator 0070  
                    ___lldiv@divisor 0076                      ___lldiv@counter 0025  
                         ??_setupPWM 0039           ??_initialisePotentiometers 0039  
                         _prevPeriod 0055                    writeGPIO@portType 0036  
              ??_readFilteredFreqPot 0020                ??_readFilteredDutyPot 0020  
                   ?_currentTripRead 0070                    __end_of_writeGPIO 03F6  
           initialiseGPIO@portNumber 0038                          ?_readADCRaw 0070  
                        _CCP1CONbits 0293                        readGPIO@readA 0072  
                      readGPIO@readB 0074                __end_of_runPotScaling 0173  
          ?_initialiseCurrentSensors 0070                       __end_of___lmul 05DE  
        __end_of_initialiseADCModule 06EF                       __end_of___wmul 0678  
                     _clockFrequency 003D                  start_initialization 0074  
       __end_of_setupTimer0Interrupt 06E3                       _currentIDSFIFO 00C0  
                          _Tick980Hz 0004                          _APFCON0bits 011D  
                           ??___lmul 0078                             ??___wmul 0074  
                          ___latbits 0001                        __pcstackBANK0 0020  
                         ?_Tick980Hz 0070                     _initialiseADCPin 02CA  
                 readGPIO@gpioNumber 0078                       _initialiseGPIO 024E  
   __end_of_initialisePotentiometers 06DB                             ?___lldiv 0076  
                    readADCRaw@i_616 0079                            _latestIL1 0049  
    readFilteredDutyPot@sumOfSamples 0024                       ___wmul@product 0074  
             __end_of_initialiseGPIO 02CA                            clear_ram0 06E3  
                          _setPeriod 0056                             _PIE1bits 0091  
                           _PIR1bits 0011         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 06DB                  _currentTripRead$747 007A  
                        _filteredIDS 0047                           _ADCON0bits 009D  
                  ___wmul@multiplier 0070                   readGPIO@portNumber 0076  
                        _freqPotFIFO 0140                            _writeGPIO 0396  
                        ??_Tick980Hz 0032                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 0000                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0033                    readADCRaw@channel 0076  
              ?_setupTimer0Interrupt 0070          __end_of_readFilteredFreqPot 050B  
        __end_of_readFilteredDutyPot 0566                 runPotScaling@maxDuty 002E  
               runPotScaling@minDuty 0030                  writeGPIO@gpioNumber 0037  
                 __end_of_readADCRaw 0396             readFilteredFreqPot@i_706 0028  
                         ?_writeGPIO 0033                             __ptext11 03F6  
                           __ptext20 05DE                             __ptext12 0090  
                           __ptext21 0566                             __ptext13 060B  
                           __ptext14 0659                             __ptext15 05AB  
                           __ptext16 0455                             __ptext17 04B0  
                           __ptext18 050B                             __ptext19 0334  
          ?_initialisePotentiometers 0070                          _dutyPotFIFO 0120  
                i1writeGPIO@portType 0073                             _readGPIO 0566  
                      _timerSlotHalf 0051                         _PSTR1CONbits 0296  
                           _prevDuty 004B                             _setupPWM 0694  
                           int$flags 007E             __end_of_initialiseADCPin 0334  
                           main@argc 0039                             main@argv 003B  
    readFilteredFreqPot@sumOfSamples 0024                     _timerSlotQuarter 0050  
                         _INTCONbits 000B                  writeGPIO@portNumber 0038  
                           intlevel1 0000             _initialiseCurrentSensors 0636  
                   ___lldiv@dividend 007A               ??_setupTimer0Interrupt 0033  
                         _OSCCONbits 0099                          _potSetCount 0052  
                _setPWMDutyandPeriod 060B              _setupInternalOscillator 0173  
                      _emergencyStop 004F                        ??i1_writeGPIO 0071  
                      __pstringtext1 06B0                        __pstringtext2 06C2  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                   ___lldiv@quotient 0021                  writeGPIO@writeValue 0033  
                        ??_writeGPIO 0034                 ?_setPWMDutyandPeriod 0070  
              readADCRaw@returnValue 0074                    ??_currentTripRead 0079  
                      _runPotScaling 0090                 readGPIO@returnValueA 0073  
               readGPIO@returnValueB 0075  
