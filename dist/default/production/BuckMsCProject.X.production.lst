

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 16:22:39 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    42                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    43                           	dabs	1,0x7E,2
    44  0000                     
    45                           ; Version 2.40
    46                           ; Generated 17/11/2021 GMT
    47                           ; 
    48                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC16F1827 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80  0000                     	;# 
    81  0001                     	;# 
    82  0002                     	;# 
    83  0003                     	;# 
    84  0004                     	;# 
    85  0005                     	;# 
    86  0006                     	;# 
    87  0007                     	;# 
    88  0008                     	;# 
    89  0009                     	;# 
    90  000A                     	;# 
    91  000B                     	;# 
    92  000C                     	;# 
    93  000D                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0016                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001C                     	;# 
   107  001E                     	;# 
   108  001F                     	;# 
   109  008C                     	;# 
   110  008D                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  010C                     	;# 
   127  010D                     	;# 
   128  0111                     	;# 
   129  0112                     	;# 
   130  0113                     	;# 
   131  0114                     	;# 
   132  0115                     	;# 
   133  0116                     	;# 
   134  0117                     	;# 
   135  0118                     	;# 
   136  0119                     	;# 
   137  011A                     	;# 
   138  011B                     	;# 
   139  011D                     	;# 
   140  011E                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0191                     	;# 
   144  0191                     	;# 
   145  0192                     	;# 
   146  0193                     	;# 
   147  0193                     	;# 
   148  0193                     	;# 
   149  0194                     	;# 
   150  0195                     	;# 
   151  0196                     	;# 
   152  0199                     	;# 
   153  019A                     	;# 
   154  019B                     	;# 
   155  019B                     	;# 
   156  019B                     	;# 
   157  019B                     	;# 
   158  019C                     	;# 
   159  019C                     	;# 
   160  019D                     	;# 
   161  019E                     	;# 
   162  019F                     	;# 
   163  020C                     	;# 
   164  020D                     	;# 
   165  0211                     	;# 
   166  0211                     	;# 
   167  0212                     	;# 
   168  0212                     	;# 
   169  0213                     	;# 
   170  0213                     	;# 
   171  0214                     	;# 
   172  0214                     	;# 
   173  0215                     	;# 
   174  0215                     	;# 
   175  0215                     	;# 
   176  0216                     	;# 
   177  0216                     	;# 
   178  0217                     	;# 
   179  0217                     	;# 
   180  0219                     	;# 
   181  021A                     	;# 
   182  021B                     	;# 
   183  021C                     	;# 
   184  021D                     	;# 
   185  021E                     	;# 
   186  021F                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0298                     	;# 
   196  0298                     	;# 
   197  0299                     	;# 
   198  029A                     	;# 
   199  029B                     	;# 
   200  029C                     	;# 
   201  029C                     	;# 
   202  029D                     	;# 
   203  029E                     	;# 
   204  029E                     	;# 
   205  0311                     	;# 
   206  0311                     	;# 
   207  0312                     	;# 
   208  0313                     	;# 
   209  0318                     	;# 
   210  0318                     	;# 
   211  0319                     	;# 
   212  031A                     	;# 
   213  0394                     	;# 
   214  0395                     	;# 
   215  0396                     	;# 
   216  039A                     	;# 
   217  039C                     	;# 
   218  039D                     	;# 
   219  039E                     	;# 
   220  039F                     	;# 
   221  0415                     	;# 
   222  0416                     	;# 
   223  0417                     	;# 
   224  041C                     	;# 
   225  041D                     	;# 
   226  041E                     	;# 
   227  0FE4                     	;# 
   228  0FE5                     	;# 
   229  0FE6                     	;# 
   230  0FE7                     	;# 
   231  0FE8                     	;# 
   232  0FE9                     	;# 
   233  0FEA                     	;# 
   234  0FEB                     	;# 
   235  0FED                     	;# 
   236  0FEE                     	;# 
   237  0FEF                     	;# 
   238  0000                     	;# 
   239  0001                     	;# 
   240  0002                     	;# 
   241  0003                     	;# 
   242  0004                     	;# 
   243  0005                     	;# 
   244  0006                     	;# 
   245  0007                     	;# 
   246  0008                     	;# 
   247  0009                     	;# 
   248  000A                     	;# 
   249  000B                     	;# 
   250  000C                     	;# 
   251  000D                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0016                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001C                     	;# 
   265  001E                     	;# 
   266  001F                     	;# 
   267  008C                     	;# 
   268  008D                     	;# 
   269  0091                     	;# 
   270  0092                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  0111                     	;# 
   287  0112                     	;# 
   288  0113                     	;# 
   289  0114                     	;# 
   290  0115                     	;# 
   291  0116                     	;# 
   292  0117                     	;# 
   293  0118                     	;# 
   294  0119                     	;# 
   295  011A                     	;# 
   296  011B                     	;# 
   297  011D                     	;# 
   298  011E                     	;# 
   299  018C                     	;# 
   300  018D                     	;# 
   301  0191                     	;# 
   302  0191                     	;# 
   303  0192                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0193                     	;# 
   307  0194                     	;# 
   308  0195                     	;# 
   309  0196                     	;# 
   310  0199                     	;# 
   311  019A                     	;# 
   312  019B                     	;# 
   313  019B                     	;# 
   314  019B                     	;# 
   315  019B                     	;# 
   316  019C                     	;# 
   317  019C                     	;# 
   318  019D                     	;# 
   319  019E                     	;# 
   320  019F                     	;# 
   321  020C                     	;# 
   322  020D                     	;# 
   323  0211                     	;# 
   324  0211                     	;# 
   325  0212                     	;# 
   326  0212                     	;# 
   327  0213                     	;# 
   328  0213                     	;# 
   329  0214                     	;# 
   330  0214                     	;# 
   331  0215                     	;# 
   332  0215                     	;# 
   333  0215                     	;# 
   334  0216                     	;# 
   335  0216                     	;# 
   336  0217                     	;# 
   337  0217                     	;# 
   338  0219                     	;# 
   339  021A                     	;# 
   340  021B                     	;# 
   341  021C                     	;# 
   342  021D                     	;# 
   343  021E                     	;# 
   344  021F                     	;# 
   345  0291                     	;# 
   346  0291                     	;# 
   347  0292                     	;# 
   348  0293                     	;# 
   349  0294                     	;# 
   350  0295                     	;# 
   351  0295                     	;# 
   352  0296                     	;# 
   353  0298                     	;# 
   354  0298                     	;# 
   355  0299                     	;# 
   356  029A                     	;# 
   357  029B                     	;# 
   358  029C                     	;# 
   359  029C                     	;# 
   360  029D                     	;# 
   361  029E                     	;# 
   362  029E                     	;# 
   363  0311                     	;# 
   364  0311                     	;# 
   365  0312                     	;# 
   366  0313                     	;# 
   367  0318                     	;# 
   368  0318                     	;# 
   369  0319                     	;# 
   370  031A                     	;# 
   371  0394                     	;# 
   372  0395                     	;# 
   373  0396                     	;# 
   374  039A                     	;# 
   375  039C                     	;# 
   376  039D                     	;# 
   377  039E                     	;# 
   378  039F                     	;# 
   379  0415                     	;# 
   380  0416                     	;# 
   381  0417                     	;# 
   382  041C                     	;# 
   383  041D                     	;# 
   384  041E                     	;# 
   385  0FE4                     	;# 
   386  0FE5                     	;# 
   387  0FE6                     	;# 
   388  0FE7                     	;# 
   389  0FE8                     	;# 
   390  0FE9                     	;# 
   391  0FEA                     	;# 
   392  0FEB                     	;# 
   393  0FED                     	;# 
   394  0FEE                     	;# 
   395  0FEF                     	;# 
   396  0000                     	;# 
   397  0001                     	;# 
   398  0002                     	;# 
   399  0003                     	;# 
   400  0004                     	;# 
   401  0005                     	;# 
   402  0006                     	;# 
   403  0007                     	;# 
   404  0008                     	;# 
   405  0009                     	;# 
   406  000A                     	;# 
   407  000B                     	;# 
   408  000C                     	;# 
   409  000D                     	;# 
   410  0011                     	;# 
   411  0012                     	;# 
   412  0013                     	;# 
   413  0014                     	;# 
   414  0015                     	;# 
   415  0016                     	;# 
   416  0016                     	;# 
   417  0017                     	;# 
   418  0018                     	;# 
   419  0019                     	;# 
   420  001A                     	;# 
   421  001B                     	;# 
   422  001C                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  008C                     	;# 
   426  008D                     	;# 
   427  0091                     	;# 
   428  0092                     	;# 
   429  0093                     	;# 
   430  0094                     	;# 
   431  0095                     	;# 
   432  0096                     	;# 
   433  0097                     	;# 
   434  0098                     	;# 
   435  0099                     	;# 
   436  009A                     	;# 
   437  009B                     	;# 
   438  009B                     	;# 
   439  009C                     	;# 
   440  009D                     	;# 
   441  009E                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  0111                     	;# 
   445  0112                     	;# 
   446  0113                     	;# 
   447  0114                     	;# 
   448  0115                     	;# 
   449  0116                     	;# 
   450  0117                     	;# 
   451  0118                     	;# 
   452  0119                     	;# 
   453  011A                     	;# 
   454  011B                     	;# 
   455  011D                     	;# 
   456  011E                     	;# 
   457  018C                     	;# 
   458  018D                     	;# 
   459  0191                     	;# 
   460  0191                     	;# 
   461  0192                     	;# 
   462  0193                     	;# 
   463  0193                     	;# 
   464  0193                     	;# 
   465  0194                     	;# 
   466  0195                     	;# 
   467  0196                     	;# 
   468  0199                     	;# 
   469  019A                     	;# 
   470  019B                     	;# 
   471  019B                     	;# 
   472  019B                     	;# 
   473  019B                     	;# 
   474  019C                     	;# 
   475  019C                     	;# 
   476  019D                     	;# 
   477  019E                     	;# 
   478  019F                     	;# 
   479  020C                     	;# 
   480  020D                     	;# 
   481  0211                     	;# 
   482  0211                     	;# 
   483  0212                     	;# 
   484  0212                     	;# 
   485  0213                     	;# 
   486  0213                     	;# 
   487  0214                     	;# 
   488  0214                     	;# 
   489  0215                     	;# 
   490  0215                     	;# 
   491  0215                     	;# 
   492  0216                     	;# 
   493  0216                     	;# 
   494  0217                     	;# 
   495  0217                     	;# 
   496  0219                     	;# 
   497  021A                     	;# 
   498  021B                     	;# 
   499  021C                     	;# 
   500  021D                     	;# 
   501  021E                     	;# 
   502  021F                     	;# 
   503  0291                     	;# 
   504  0291                     	;# 
   505  0292                     	;# 
   506  0293                     	;# 
   507  0294                     	;# 
   508  0295                     	;# 
   509  0295                     	;# 
   510  0296                     	;# 
   511  0298                     	;# 
   512  0298                     	;# 
   513  0299                     	;# 
   514  029A                     	;# 
   515  029B                     	;# 
   516  029C                     	;# 
   517  029C                     	;# 
   518  029D                     	;# 
   519  029E                     	;# 
   520  029E                     	;# 
   521  0311                     	;# 
   522  0311                     	;# 
   523  0312                     	;# 
   524  0313                     	;# 
   525  0318                     	;# 
   526  0318                     	;# 
   527  0319                     	;# 
   528  031A                     	;# 
   529  0394                     	;# 
   530  0395                     	;# 
   531  0396                     	;# 
   532  039A                     	;# 
   533  039C                     	;# 
   534  039D                     	;# 
   535  039E                     	;# 
   536  039F                     	;# 
   537  0415                     	;# 
   538  0416                     	;# 
   539  0417                     	;# 
   540  041C                     	;# 
   541  041D                     	;# 
   542  041E                     	;# 
   543  0FE4                     	;# 
   544  0FE5                     	;# 
   545  0FE6                     	;# 
   546  0FE7                     	;# 
   547  0FE8                     	;# 
   548  0FE9                     	;# 
   549  0FEA                     	;# 
   550  0FEB                     	;# 
   551  0FED                     	;# 
   552  0FEE                     	;# 
   553  0FEF                     	;# 
   554  0000                     	;# 
   555  0001                     	;# 
   556  0002                     	;# 
   557  0003                     	;# 
   558  0004                     	;# 
   559  0005                     	;# 
   560  0006                     	;# 
   561  0007                     	;# 
   562  0008                     	;# 
   563  0009                     	;# 
   564  000A                     	;# 
   565  000B                     	;# 
   566  000C                     	;# 
   567  000D                     	;# 
   568  0011                     	;# 
   569  0012                     	;# 
   570  0013                     	;# 
   571  0014                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0016                     	;# 
   575  0017                     	;# 
   576  0018                     	;# 
   577  0019                     	;# 
   578  001A                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001E                     	;# 
   582  001F                     	;# 
   583  008C                     	;# 
   584  008D                     	;# 
   585  0091                     	;# 
   586  0092                     	;# 
   587  0093                     	;# 
   588  0094                     	;# 
   589  0095                     	;# 
   590  0096                     	;# 
   591  0097                     	;# 
   592  0098                     	;# 
   593  0099                     	;# 
   594  009A                     	;# 
   595  009B                     	;# 
   596  009B                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  0111                     	;# 
   603  0112                     	;# 
   604  0113                     	;# 
   605  0114                     	;# 
   606  0115                     	;# 
   607  0116                     	;# 
   608  0117                     	;# 
   609  0118                     	;# 
   610  0119                     	;# 
   611  011A                     	;# 
   612  011B                     	;# 
   613  011D                     	;# 
   614  011E                     	;# 
   615  018C                     	;# 
   616  018D                     	;# 
   617  0191                     	;# 
   618  0191                     	;# 
   619  0192                     	;# 
   620  0193                     	;# 
   621  0193                     	;# 
   622  0193                     	;# 
   623  0194                     	;# 
   624  0195                     	;# 
   625  0196                     	;# 
   626  0199                     	;# 
   627  019A                     	;# 
   628  019B                     	;# 
   629  019B                     	;# 
   630  019B                     	;# 
   631  019B                     	;# 
   632  019C                     	;# 
   633  019C                     	;# 
   634  019D                     	;# 
   635  019E                     	;# 
   636  019F                     	;# 
   637  020C                     	;# 
   638  020D                     	;# 
   639  0211                     	;# 
   640  0211                     	;# 
   641  0212                     	;# 
   642  0212                     	;# 
   643  0213                     	;# 
   644  0213                     	;# 
   645  0214                     	;# 
   646  0214                     	;# 
   647  0215                     	;# 
   648  0215                     	;# 
   649  0215                     	;# 
   650  0216                     	;# 
   651  0216                     	;# 
   652  0217                     	;# 
   653  0217                     	;# 
   654  0219                     	;# 
   655  021A                     	;# 
   656  021B                     	;# 
   657  021C                     	;# 
   658  021D                     	;# 
   659  021E                     	;# 
   660  021F                     	;# 
   661  0291                     	;# 
   662  0291                     	;# 
   663  0292                     	;# 
   664  0293                     	;# 
   665  0294                     	;# 
   666  0295                     	;# 
   667  0295                     	;# 
   668  0296                     	;# 
   669  0298                     	;# 
   670  0298                     	;# 
   671  0299                     	;# 
   672  029A                     	;# 
   673  029B                     	;# 
   674  029C                     	;# 
   675  029C                     	;# 
   676  029D                     	;# 
   677  029E                     	;# 
   678  029E                     	;# 
   679  0311                     	;# 
   680  0311                     	;# 
   681  0312                     	;# 
   682  0313                     	;# 
   683  0318                     	;# 
   684  0318                     	;# 
   685  0319                     	;# 
   686  031A                     	;# 
   687  0394                     	;# 
   688  0395                     	;# 
   689  0396                     	;# 
   690  039A                     	;# 
   691  039C                     	;# 
   692  039D                     	;# 
   693  039E                     	;# 
   694  039F                     	;# 
   695  0415                     	;# 
   696  0416                     	;# 
   697  0417                     	;# 
   698  041C                     	;# 
   699  041D                     	;# 
   700  041E                     	;# 
   701  0FE4                     	;# 
   702  0FE5                     	;# 
   703  0FE6                     	;# 
   704  0FE7                     	;# 
   705  0FE8                     	;# 
   706  0FE9                     	;# 
   707  0FEA                     	;# 
   708  0FEB                     	;# 
   709  0FED                     	;# 
   710  0FEE                     	;# 
   711  0FEF                     	;# 
   712  0000                     	;# 
   713  0001                     	;# 
   714  0002                     	;# 
   715  0003                     	;# 
   716  0004                     	;# 
   717  0005                     	;# 
   718  0006                     	;# 
   719  0007                     	;# 
   720  0008                     	;# 
   721  0009                     	;# 
   722  000A                     	;# 
   723  000B                     	;# 
   724  000C                     	;# 
   725  000D                     	;# 
   726  0011                     	;# 
   727  0012                     	;# 
   728  0013                     	;# 
   729  0014                     	;# 
   730  0015                     	;# 
   731  0016                     	;# 
   732  0016                     	;# 
   733  0017                     	;# 
   734  0018                     	;# 
   735  0019                     	;# 
   736  001A                     	;# 
   737  001B                     	;# 
   738  001C                     	;# 
   739  001E                     	;# 
   740  001F                     	;# 
   741  008C                     	;# 
   742  008D                     	;# 
   743  0091                     	;# 
   744  0092                     	;# 
   745  0093                     	;# 
   746  0094                     	;# 
   747  0095                     	;# 
   748  0096                     	;# 
   749  0097                     	;# 
   750  0098                     	;# 
   751  0099                     	;# 
   752  009A                     	;# 
   753  009B                     	;# 
   754  009B                     	;# 
   755  009C                     	;# 
   756  009D                     	;# 
   757  009E                     	;# 
   758  010C                     	;# 
   759  010D                     	;# 
   760  0111                     	;# 
   761  0112                     	;# 
   762  0113                     	;# 
   763  0114                     	;# 
   764  0115                     	;# 
   765  0116                     	;# 
   766  0117                     	;# 
   767  0118                     	;# 
   768  0119                     	;# 
   769  011A                     	;# 
   770  011B                     	;# 
   771  011D                     	;# 
   772  011E                     	;# 
   773  018C                     	;# 
   774  018D                     	;# 
   775  0191                     	;# 
   776  0191                     	;# 
   777  0192                     	;# 
   778  0193                     	;# 
   779  0193                     	;# 
   780  0193                     	;# 
   781  0194                     	;# 
   782  0195                     	;# 
   783  0196                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019B                     	;# 
   788  019B                     	;# 
   789  019B                     	;# 
   790  019C                     	;# 
   791  019C                     	;# 
   792  019D                     	;# 
   793  019E                     	;# 
   794  019F                     	;# 
   795  020C                     	;# 
   796  020D                     	;# 
   797  0211                     	;# 
   798  0211                     	;# 
   799  0212                     	;# 
   800  0212                     	;# 
   801  0213                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0214                     	;# 
   805  0215                     	;# 
   806  0215                     	;# 
   807  0215                     	;# 
   808  0216                     	;# 
   809  0216                     	;# 
   810  0217                     	;# 
   811  0217                     	;# 
   812  0219                     	;# 
   813  021A                     	;# 
   814  021B                     	;# 
   815  021C                     	;# 
   816  021D                     	;# 
   817  021E                     	;# 
   818  021F                     	;# 
   819  0291                     	;# 
   820  0291                     	;# 
   821  0292                     	;# 
   822  0293                     	;# 
   823  0294                     	;# 
   824  0295                     	;# 
   825  0295                     	;# 
   826  0296                     	;# 
   827  0298                     	;# 
   828  0298                     	;# 
   829  0299                     	;# 
   830  029A                     	;# 
   831  029B                     	;# 
   832  029C                     	;# 
   833  029C                     	;# 
   834  029D                     	;# 
   835  029E                     	;# 
   836  029E                     	;# 
   837  0311                     	;# 
   838  0311                     	;# 
   839  0312                     	;# 
   840  0313                     	;# 
   841  0318                     	;# 
   842  0318                     	;# 
   843  0319                     	;# 
   844  031A                     	;# 
   845  0394                     	;# 
   846  0395                     	;# 
   847  0396                     	;# 
   848  039A                     	;# 
   849  039C                     	;# 
   850  039D                     	;# 
   851  039E                     	;# 
   852  039F                     	;# 
   853  0415                     	;# 
   854  0416                     	;# 
   855  0417                     	;# 
   856  041C                     	;# 
   857  041D                     	;# 
   858  041E                     	;# 
   859  0FE4                     	;# 
   860  0FE5                     	;# 
   861  0FE6                     	;# 
   862  0FE7                     	;# 
   863  0FE8                     	;# 
   864  0FE9                     	;# 
   865  0FEA                     	;# 
   866  0FEB                     	;# 
   867  0FED                     	;# 
   868  0FEE                     	;# 
   869  0FEF                     	;# 
   870  0000                     	;# 
   871  0001                     	;# 
   872  0002                     	;# 
   873  0003                     	;# 
   874  0004                     	;# 
   875  0005                     	;# 
   876  0006                     	;# 
   877  0007                     	;# 
   878  0008                     	;# 
   879  0009                     	;# 
   880  000A                     	;# 
   881  000B                     	;# 
   882  000C                     	;# 
   883  000D                     	;# 
   884  0011                     	;# 
   885  0012                     	;# 
   886  0013                     	;# 
   887  0014                     	;# 
   888  0015                     	;# 
   889  0016                     	;# 
   890  0016                     	;# 
   891  0017                     	;# 
   892  0018                     	;# 
   893  0019                     	;# 
   894  001A                     	;# 
   895  001B                     	;# 
   896  001C                     	;# 
   897  001E                     	;# 
   898  001F                     	;# 
   899  008C                     	;# 
   900  008D                     	;# 
   901  0091                     	;# 
   902  0092                     	;# 
   903  0093                     	;# 
   904  0094                     	;# 
   905  0095                     	;# 
   906  0096                     	;# 
   907  0097                     	;# 
   908  0098                     	;# 
   909  0099                     	;# 
   910  009A                     	;# 
   911  009B                     	;# 
   912  009B                     	;# 
   913  009C                     	;# 
   914  009D                     	;# 
   915  009E                     	;# 
   916  010C                     	;# 
   917  010D                     	;# 
   918  0111                     	;# 
   919  0112                     	;# 
   920  0113                     	;# 
   921  0114                     	;# 
   922  0115                     	;# 
   923  0116                     	;# 
   924  0117                     	;# 
   925  0118                     	;# 
   926  0119                     	;# 
   927  011A                     	;# 
   928  011B                     	;# 
   929  011D                     	;# 
   930  011E                     	;# 
   931  018C                     	;# 
   932  018D                     	;# 
   933  0191                     	;# 
   934  0191                     	;# 
   935  0192                     	;# 
   936  0193                     	;# 
   937  0193                     	;# 
   938  0193                     	;# 
   939  0194                     	;# 
   940  0195                     	;# 
   941  0196                     	;# 
   942  0199                     	;# 
   943  019A                     	;# 
   944  019B                     	;# 
   945  019B                     	;# 
   946  019B                     	;# 
   947  019B                     	;# 
   948  019C                     	;# 
   949  019C                     	;# 
   950  019D                     	;# 
   951  019E                     	;# 
   952  019F                     	;# 
   953  020C                     	;# 
   954  020D                     	;# 
   955  0211                     	;# 
   956  0211                     	;# 
   957  0212                     	;# 
   958  0212                     	;# 
   959  0213                     	;# 
   960  0213                     	;# 
   961  0214                     	;# 
   962  0214                     	;# 
   963  0215                     	;# 
   964  0215                     	;# 
   965  0215                     	;# 
   966  0216                     	;# 
   967  0216                     	;# 
   968  0217                     	;# 
   969  0217                     	;# 
   970  0219                     	;# 
   971  021A                     	;# 
   972  021B                     	;# 
   973  021C                     	;# 
   974  021D                     	;# 
   975  021E                     	;# 
   976  021F                     	;# 
   977  0291                     	;# 
   978  0291                     	;# 
   979  0292                     	;# 
   980  0293                     	;# 
   981  0294                     	;# 
   982  0295                     	;# 
   983  0295                     	;# 
   984  0296                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029C                     	;# 
   991  029C                     	;# 
   992  029D                     	;# 
   993  029E                     	;# 
   994  029E                     	;# 
   995  0311                     	;# 
   996  0311                     	;# 
   997  0312                     	;# 
   998  0313                     	;# 
   999  0318                     	;# 
  1000  0318                     	;# 
  1001  0319                     	;# 
  1002  031A                     	;# 
  1003  0394                     	;# 
  1004  0395                     	;# 
  1005  0396                     	;# 
  1006  039A                     	;# 
  1007  039C                     	;# 
  1008  039D                     	;# 
  1009  039E                     	;# 
  1010  039F                     	;# 
  1011  0415                     	;# 
  1012  0416                     	;# 
  1013  0417                     	;# 
  1014  041C                     	;# 
  1015  041D                     	;# 
  1016  041E                     	;# 
  1017  0FE4                     	;# 
  1018  0FE5                     	;# 
  1019  0FE6                     	;# 
  1020  0FE7                     	;# 
  1021  0FE8                     	;# 
  1022  0FE9                     	;# 
  1023  0FEA                     	;# 
  1024  0FEB                     	;# 
  1025  0FED                     	;# 
  1026  0FEE                     	;# 
  1027  0FEF                     	;# 
  1028  0000                     	;# 
  1029  0001                     	;# 
  1030  0002                     	;# 
  1031  0003                     	;# 
  1032  0004                     	;# 
  1033  0005                     	;# 
  1034  0006                     	;# 
  1035  0007                     	;# 
  1036  0008                     	;# 
  1037  0009                     	;# 
  1038  000A                     	;# 
  1039  000B                     	;# 
  1040  000C                     	;# 
  1041  000D                     	;# 
  1042  0011                     	;# 
  1043  0012                     	;# 
  1044  0013                     	;# 
  1045  0014                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  008C                     	;# 
  1058  008D                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0094                     	;# 
  1063  0095                     	;# 
  1064  0096                     	;# 
  1065  0097                     	;# 
  1066  0098                     	;# 
  1067  0099                     	;# 
  1068  009A                     	;# 
  1069  009B                     	;# 
  1070  009B                     	;# 
  1071  009C                     	;# 
  1072  009D                     	;# 
  1073  009E                     	;# 
  1074  010C                     	;# 
  1075  010D                     	;# 
  1076  0111                     	;# 
  1077  0112                     	;# 
  1078  0113                     	;# 
  1079  0114                     	;# 
  1080  0115                     	;# 
  1081  0116                     	;# 
  1082  0117                     	;# 
  1083  0118                     	;# 
  1084  0119                     	;# 
  1085  011A                     	;# 
  1086  011B                     	;# 
  1087  011D                     	;# 
  1088  011E                     	;# 
  1089  018C                     	;# 
  1090  018D                     	;# 
  1091  0191                     	;# 
  1092  0191                     	;# 
  1093  0192                     	;# 
  1094  0193                     	;# 
  1095  0193                     	;# 
  1096  0193                     	;# 
  1097  0194                     	;# 
  1098  0195                     	;# 
  1099  0196                     	;# 
  1100  0199                     	;# 
  1101  019A                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019B                     	;# 
  1106  019C                     	;# 
  1107  019C                     	;# 
  1108  019D                     	;# 
  1109  019E                     	;# 
  1110  019F                     	;# 
  1111  020C                     	;# 
  1112  020D                     	;# 
  1113  0211                     	;# 
  1114  0211                     	;# 
  1115  0212                     	;# 
  1116  0212                     	;# 
  1117  0213                     	;# 
  1118  0213                     	;# 
  1119  0214                     	;# 
  1120  0214                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0216                     	;# 
  1125  0216                     	;# 
  1126  0217                     	;# 
  1127  0217                     	;# 
  1128  0219                     	;# 
  1129  021A                     	;# 
  1130  021B                     	;# 
  1131  021C                     	;# 
  1132  021D                     	;# 
  1133  021E                     	;# 
  1134  021F                     	;# 
  1135  0291                     	;# 
  1136  0291                     	;# 
  1137  0292                     	;# 
  1138  0293                     	;# 
  1139  0294                     	;# 
  1140  0295                     	;# 
  1141  0295                     	;# 
  1142  0296                     	;# 
  1143  0298                     	;# 
  1144  0298                     	;# 
  1145  0299                     	;# 
  1146  029A                     	;# 
  1147  029B                     	;# 
  1148  029C                     	;# 
  1149  029C                     	;# 
  1150  029D                     	;# 
  1151  029E                     	;# 
  1152  029E                     	;# 
  1153  0311                     	;# 
  1154  0311                     	;# 
  1155  0312                     	;# 
  1156  0313                     	;# 
  1157  0318                     	;# 
  1158  0318                     	;# 
  1159  0319                     	;# 
  1160  031A                     	;# 
  1161  0394                     	;# 
  1162  0395                     	;# 
  1163  0396                     	;# 
  1164  039A                     	;# 
  1165  039C                     	;# 
  1166  039D                     	;# 
  1167  039E                     	;# 
  1168  039F                     	;# 
  1169  0415                     	;# 
  1170  0416                     	;# 
  1171  0417                     	;# 
  1172  041C                     	;# 
  1173  041D                     	;# 
  1174  041E                     	;# 
  1175  0FE4                     	;# 
  1176  0FE5                     	;# 
  1177  0FE6                     	;# 
  1178  0FE7                     	;# 
  1179  0FE8                     	;# 
  1180  0FE9                     	;# 
  1181  0FEA                     	;# 
  1182  0FEB                     	;# 
  1183  0FED                     	;# 
  1184  0FEE                     	;# 
  1185  0FEF                     	;# 
  1186  0000                     	;# 
  1187  0001                     	;# 
  1188  0002                     	;# 
  1189  0003                     	;# 
  1190  0004                     	;# 
  1191  0005                     	;# 
  1192  0006                     	;# 
  1193  0007                     	;# 
  1194  0008                     	;# 
  1195  0009                     	;# 
  1196  000A                     	;# 
  1197  000B                     	;# 
  1198  000C                     	;# 
  1199  000D                     	;# 
  1200  0011                     	;# 
  1201  0012                     	;# 
  1202  0013                     	;# 
  1203  0014                     	;# 
  1204  0015                     	;# 
  1205  0016                     	;# 
  1206  0016                     	;# 
  1207  0017                     	;# 
  1208  0018                     	;# 
  1209  0019                     	;# 
  1210  001A                     	;# 
  1211  001B                     	;# 
  1212  001C                     	;# 
  1213  001E                     	;# 
  1214  001F                     	;# 
  1215  008C                     	;# 
  1216  008D                     	;# 
  1217  0091                     	;# 
  1218  0092                     	;# 
  1219  0093                     	;# 
  1220  0094                     	;# 
  1221  0095                     	;# 
  1222  0096                     	;# 
  1223  0097                     	;# 
  1224  0098                     	;# 
  1225  0099                     	;# 
  1226  009A                     	;# 
  1227  009B                     	;# 
  1228  009B                     	;# 
  1229  009C                     	;# 
  1230  009D                     	;# 
  1231  009E                     	;# 
  1232  010C                     	;# 
  1233  010D                     	;# 
  1234  0111                     	;# 
  1235  0112                     	;# 
  1236  0113                     	;# 
  1237  0114                     	;# 
  1238  0115                     	;# 
  1239  0116                     	;# 
  1240  0117                     	;# 
  1241  0118                     	;# 
  1242  0119                     	;# 
  1243  011A                     	;# 
  1244  011B                     	;# 
  1245  011D                     	;# 
  1246  011E                     	;# 
  1247  018C                     	;# 
  1248  018D                     	;# 
  1249  0191                     	;# 
  1250  0191                     	;# 
  1251  0192                     	;# 
  1252  0193                     	;# 
  1253  0193                     	;# 
  1254  0193                     	;# 
  1255  0194                     	;# 
  1256  0195                     	;# 
  1257  0196                     	;# 
  1258  0199                     	;# 
  1259  019A                     	;# 
  1260  019B                     	;# 
  1261  019B                     	;# 
  1262  019B                     	;# 
  1263  019B                     	;# 
  1264  019C                     	;# 
  1265  019C                     	;# 
  1266  019D                     	;# 
  1267  019E                     	;# 
  1268  019F                     	;# 
  1269  020C                     	;# 
  1270  020D                     	;# 
  1271  0211                     	;# 
  1272  0211                     	;# 
  1273  0212                     	;# 
  1274  0212                     	;# 
  1275  0213                     	;# 
  1276  0213                     	;# 
  1277  0214                     	;# 
  1278  0214                     	;# 
  1279  0215                     	;# 
  1280  0215                     	;# 
  1281  0215                     	;# 
  1282  0216                     	;# 
  1283  0216                     	;# 
  1284  0217                     	;# 
  1285  0217                     	;# 
  1286  0219                     	;# 
  1287  021A                     	;# 
  1288  021B                     	;# 
  1289  021C                     	;# 
  1290  021D                     	;# 
  1291  021E                     	;# 
  1292  021F                     	;# 
  1293  0291                     	;# 
  1294  0291                     	;# 
  1295  0292                     	;# 
  1296  0293                     	;# 
  1297  0294                     	;# 
  1298  0295                     	;# 
  1299  0295                     	;# 
  1300  0296                     	;# 
  1301  0298                     	;# 
  1302  0298                     	;# 
  1303  0299                     	;# 
  1304  029A                     	;# 
  1305  029B                     	;# 
  1306  029C                     	;# 
  1307  029C                     	;# 
  1308  029D                     	;# 
  1309  029E                     	;# 
  1310  029E                     	;# 
  1311  0311                     	;# 
  1312  0311                     	;# 
  1313  0312                     	;# 
  1314  0313                     	;# 
  1315  0318                     	;# 
  1316  0318                     	;# 
  1317  0319                     	;# 
  1318  031A                     	;# 
  1319  0394                     	;# 
  1320  0395                     	;# 
  1321  0396                     	;# 
  1322  039A                     	;# 
  1323  039C                     	;# 
  1324  039D                     	;# 
  1325  039E                     	;# 
  1326  039F                     	;# 
  1327  0415                     	;# 
  1328  0416                     	;# 
  1329  0417                     	;# 
  1330  041C                     	;# 
  1331  041D                     	;# 
  1332  041E                     	;# 
  1333  0FE4                     	;# 
  1334  0FE5                     	;# 
  1335  0FE6                     	;# 
  1336  0FE7                     	;# 
  1337  0FE8                     	;# 
  1338  0FE9                     	;# 
  1339  0FEA                     	;# 
  1340  0FEB                     	;# 
  1341  0FED                     	;# 
  1342  0FEE                     	;# 
  1343  0FEF                     	;# 
  1344  0000                     	;# 
  1345  0001                     	;# 
  1346  0002                     	;# 
  1347  0003                     	;# 
  1348  0004                     	;# 
  1349  0005                     	;# 
  1350  0006                     	;# 
  1351  0007                     	;# 
  1352  0008                     	;# 
  1353  0009                     	;# 
  1354  000A                     	;# 
  1355  000B                     	;# 
  1356  000C                     	;# 
  1357  000D                     	;# 
  1358  0011                     	;# 
  1359  0012                     	;# 
  1360  0013                     	;# 
  1361  0014                     	;# 
  1362  0015                     	;# 
  1363  0016                     	;# 
  1364  0016                     	;# 
  1365  0017                     	;# 
  1366  0018                     	;# 
  1367  0019                     	;# 
  1368  001A                     	;# 
  1369  001B                     	;# 
  1370  001C                     	;# 
  1371  001E                     	;# 
  1372  001F                     	;# 
  1373  008C                     	;# 
  1374  008D                     	;# 
  1375  0091                     	;# 
  1376  0092                     	;# 
  1377  0093                     	;# 
  1378  0094                     	;# 
  1379  0095                     	;# 
  1380  0096                     	;# 
  1381  0097                     	;# 
  1382  0098                     	;# 
  1383  0099                     	;# 
  1384  009A                     	;# 
  1385  009B                     	;# 
  1386  009B                     	;# 
  1387  009C                     	;# 
  1388  009D                     	;# 
  1389  009E                     	;# 
  1390  010C                     	;# 
  1391  010D                     	;# 
  1392  0111                     	;# 
  1393  0112                     	;# 
  1394  0113                     	;# 
  1395  0114                     	;# 
  1396  0115                     	;# 
  1397  0116                     	;# 
  1398  0117                     	;# 
  1399  0118                     	;# 
  1400  0119                     	;# 
  1401  011A                     	;# 
  1402  011B                     	;# 
  1403  011D                     	;# 
  1404  011E                     	;# 
  1405  018C                     	;# 
  1406  018D                     	;# 
  1407  0191                     	;# 
  1408  0191                     	;# 
  1409  0192                     	;# 
  1410  0193                     	;# 
  1411  0193                     	;# 
  1412  0193                     	;# 
  1413  0194                     	;# 
  1414  0195                     	;# 
  1415  0196                     	;# 
  1416  0199                     	;# 
  1417  019A                     	;# 
  1418  019B                     	;# 
  1419  019B                     	;# 
  1420  019B                     	;# 
  1421  019B                     	;# 
  1422  019C                     	;# 
  1423  019C                     	;# 
  1424  019D                     	;# 
  1425  019E                     	;# 
  1426  019F                     	;# 
  1427  020C                     	;# 
  1428  020D                     	;# 
  1429  0211                     	;# 
  1430  0211                     	;# 
  1431  0212                     	;# 
  1432  0212                     	;# 
  1433  0213                     	;# 
  1434  0213                     	;# 
  1435  0214                     	;# 
  1436  0214                     	;# 
  1437  0215                     	;# 
  1438  0215                     	;# 
  1439  0215                     	;# 
  1440  0216                     	;# 
  1441  0216                     	;# 
  1442  0217                     	;# 
  1443  0217                     	;# 
  1444  0219                     	;# 
  1445  021A                     	;# 
  1446  021B                     	;# 
  1447  021C                     	;# 
  1448  021D                     	;# 
  1449  021E                     	;# 
  1450  021F                     	;# 
  1451  0291                     	;# 
  1452  0291                     	;# 
  1453  0292                     	;# 
  1454  0293                     	;# 
  1455  0294                     	;# 
  1456  0295                     	;# 
  1457  0295                     	;# 
  1458  0296                     	;# 
  1459  0298                     	;# 
  1460  0298                     	;# 
  1461  0299                     	;# 
  1462  029A                     	;# 
  1463  029B                     	;# 
  1464  029C                     	;# 
  1465  029C                     	;# 
  1466  029D                     	;# 
  1467  029E                     	;# 
  1468  029E                     	;# 
  1469  0311                     	;# 
  1470  0311                     	;# 
  1471  0312                     	;# 
  1472  0313                     	;# 
  1473  0318                     	;# 
  1474  0318                     	;# 
  1475  0319                     	;# 
  1476  031A                     	;# 
  1477  0394                     	;# 
  1478  0395                     	;# 
  1479  0396                     	;# 
  1480  039A                     	;# 
  1481  039C                     	;# 
  1482  039D                     	;# 
  1483  039E                     	;# 
  1484  039F                     	;# 
  1485  0415                     	;# 
  1486  0416                     	;# 
  1487  0417                     	;# 
  1488  041C                     	;# 
  1489  041D                     	;# 
  1490  041E                     	;# 
  1491  0FE4                     	;# 
  1492  0FE5                     	;# 
  1493  0FE6                     	;# 
  1494  0FE7                     	;# 
  1495  0FE8                     	;# 
  1496  0FE9                     	;# 
  1497  0FEA                     	;# 
  1498  0FEB                     	;# 
  1499  0FED                     	;# 
  1500  0FEE                     	;# 
  1501  0FEF                     	;# 
  1502  000D                     _PORTB	set	13
  1503  000C                     _PORTA	set	12
  1504  001C                     _T2CONbits	set	28
  1505  001B                     _PR2	set	27
  1506  0011                     _PIR1bits	set	17
  1507  000B                     _INTCONbits	set	11
  1508  009B                     _ADRESL	set	155
  1509  009C                     _ADRESH	set	156
  1510  009D                     _ADCON0bits	set	157
  1511  008D                     _TRISB	set	141
  1512  008C                     _TRISA	set	140
  1513  009E                     _ADCON1	set	158
  1514  009D                     _ADCON0	set	157
  1515  0095                     _OPTION_REG	set	149
  1516  0095                     _OPTION_REGbits	set	149
  1517  0091                     _PIE1bits	set	145
  1518  0099                     _OSCCONbits	set	153
  1519  010D                     _LATB	set	269
  1520  010C                     _LATA	set	268
  1521  011D                     _APFCON0bits	set	285
  1522  018D                     _ANSELB	set	397
  1523  018C                     _ANSELA	set	396
  1524  0293                     _CCP1CONbits	set	659
  1525  0296                     _PSTR1CONbits	set	662
  1526  0291                     _CCPR1L	set	657
  1527  0293                     _CCP1CON	set	659
  1528                           
  1529                           	psect	stringtext1
  1530  0779                     __pstringtext1:
  1531  0779                     STR_1:
  1532  0779  3428               	retlw	40	;'('
  1533  077A  3428               	retlw	40	;'('
  1534  077B  3449               	retlw	73	;'I'
  1535  077C  344E               	retlw	78	;'N'
  1536  077D  3454               	retlw	84	;'T'
  1537  077E  3443               	retlw	67	;'C'
  1538  077F  344F               	retlw	79	;'O'
  1539  0780  344E               	retlw	78	;'N'
  1540  0781  3429               	retlw	41	;')'
  1541  0782  3426               	retlw	38	;'&'
  1542  0783  3430               	retlw	48	;'0'
  1543  0784  3437               	retlw	55	;'7'
  1544  0785  3446               	retlw	70	;'F'
  1545  0786  3468               	retlw	104	;'h'
  1546  0787  3429               	retlw	41	;')'
  1547  0788  342C               	retlw	44	;','
  1548  0789  3432               	retlw	50	;'2'
  1549  078A  3400               	retlw	0
  1550                           
  1551                           	psect	stringtext2
  1552  078B                     __pstringtext2:
  1553  078B                     STR_3:
  1554  078B  3428               	retlw	40	;'('
  1555  078C  3428               	retlw	40	;'('
  1556  078D  3450               	retlw	80	;'P'
  1557  078E  3449               	retlw	73	;'I'
  1558  078F  3452               	retlw	82	;'R'
  1559  0790  3431               	retlw	49	;'1'
  1560  0791  3429               	retlw	41	;')'
  1561  0792  3426               	retlw	38	;'&'
  1562  0793  3430               	retlw	48	;'0'
  1563  0794  3437               	retlw	55	;'7'
  1564  0795  3446               	retlw	70	;'F'
  1565  0796  3468               	retlw	104	;'h'
  1566  0797  3429               	retlw	41	;')'
  1567  0798  342C               	retlw	44	;','
  1568  0799  3432               	retlw	50	;'2'
  1569  079A  3400               	retlw	0
  1570                           
  1571                           	psect	stringtext3
  1572  0000                     __pstringtext3:
  1573  078B                     
  1574                           	psect	cinit
  1575  0087                     start_initialization:	
  1576                           ; #config settings
  1577                           
  1578  0087                     __initialization:
  1579                           
  1580                           ; Clear objects allocated to BANK0
  1581  0087  303D               	movlw	low __pbssBANK0
  1582  0088  0084               	movwf	4
  1583  0089  3000               	movlw	high __pbssBANK0
  1584  008A  0085               	movwf	5
  1585  008B  301C               	movlw	28
  1586  008C  3187  27C6  3180   	fcall	clear_ram0
  1587                           
  1588                           ; Clear objects allocated to BANK1
  1589  008F  30A0               	movlw	low __pbssBANK1
  1590  0090  0084               	movwf	4
  1591  0091  3000               	movlw	high __pbssBANK1
  1592  0092  0085               	movwf	5
  1593  0093  3040               	movlw	64
  1594  0094  3187  27C6  3180   	fcall	clear_ram0
  1595                           
  1596                           ; Clear objects allocated to BANK2
  1597  0097  3020               	movlw	low __pbssBANK2
  1598  0098  0084               	movwf	4
  1599  0099  3001               	movlw	high __pbssBANK2
  1600  009A  0085               	movwf	5
  1601  009B  3040               	movlw	64
  1602  009C  3187  27C6  3180   	fcall	clear_ram0
  1603                           
  1604                           ; Clear objects allocated to BANK3
  1605  009F  30A0               	movlw	low __pbssBANK3
  1606  00A0  0084               	movwf	4
  1607  00A1  3001               	movlw	high __pbssBANK3
  1608  00A2  0085               	movwf	5
  1609  00A3  3020               	movlw	32
  1610  00A4  3187  27C6  3180   	fcall	clear_ram0
  1611  00A7                     end_of_initialization:	
  1612                           ;End of C runtime variable initialization code
  1613                           
  1614  00A7                     __end_of__initialization:
  1615  00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1616  00A8  0020               	movlb	0
  1617  00A9  3187  2F5D         	ljmp	_main	;jump to C main() function
  1618                           
  1619                           	psect	bssBANK0
  1620  003D                     __pbssBANK0:
  1621  003D                     _clockFrequency:
  1622  003D                     	ds	4
  1623  0041                     _filteredDutyPot:
  1624  0041                     	ds	2
  1625  0043                     _filteredFreqPot:
  1626  0043                     	ds	2
  1627  0045                     _filteredVout:
  1628  0045                     	ds	2
  1629  0047                     _filteredIL:
  1630  0047                     	ds	2
  1631  0049                     _filteredIDS:
  1632  0049                     	ds	2
  1633  004B                     _latestIL:
  1634  004B                     	ds	2
  1635  004D                     _prevDuty:
  1636  004D                     	ds	2
  1637  004F                     _setDuty:
  1638  004F                     	ds	2
  1639  0051                     _emergencyStop:
  1640  0051                     	ds	1
  1641  0052                     _timerSlotQuarter:
  1642  0052                     	ds	1
  1643  0053                     _timerSlotHalf:
  1644  0053                     	ds	1
  1645  0054                     _potSetCount:
  1646  0054                     	ds	1
  1647  0055                     _tripIL:
  1648  0055                     	ds	1
  1649  0056                     _tripIDS:
  1650  0056                     	ds	1
  1651  0057                     _prevPeriod:
  1652  0057                     	ds	1
  1653  0058                     _setPeriod:
  1654  0058                     	ds	1
  1655                           
  1656                           	psect	bssBANK1
  1657  00A0                     __pbssBANK1:
  1658  00A0                     _currentILFIFO:
  1659  00A0                     	ds	32
  1660  00C0                     _currentIDSFIFO:
  1661  00C0                     	ds	32
  1662                           
  1663                           	psect	bssBANK2
  1664  0120                     __pbssBANK2:
  1665  0120                     _freqPotFIFO:
  1666  0120                     	ds	32
  1667  0140                     _voutFIFO:
  1668  0140                     	ds	32
  1669                           
  1670                           	psect	bssBANK3
  1671  01A0                     __pbssBANK3:
  1672  01A0                     _dutyPotFIFO:
  1673  01A0                     	ds	32
  1674                           
  1675                           	psect	clrtext
  1676  07C6                     clear_ram0:	
  1677                           ;	Called with FSR0 containing the base address, and
  1678                           ;	WREG with the size to clear
  1679                           
  1680  07C6  0064               	clrwdt	;clear the watchdog before getting into this loop
  1681  07C7                     clrloop0:
  1682  07C7  0180               	clrf	0	;clear RAM location pointed to by FSR
  1683  07C8  3101               	addfsr 0,1
  1684  07C9  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1685  07CA  2FC7               	goto	clrloop0	;have we reached the end yet?
  1686  07CB  3400               	retlw	0	;all done for this memory range, return
  1687                           
  1688                           	psect	cstackCOMMON
  1689  0070                     __pcstackCOMMON:
  1690  0070                     ?_currentTripRead:
  1691  0070                     ?_setPWMDutyandPeriod:	
  1692                           ; 1 bytes @ 0x0
  1693                           
  1694  0070                     ?_runPotScaling:	
  1695                           ; 1 bytes @ 0x0
  1696                           
  1697  0070                     ?_setupInternalOscillator:	
  1698                           ; 1 bytes @ 0x0
  1699                           
  1700  0070                     ?_setupPWM:	
  1701                           ; 1 bytes @ 0x0
  1702                           
  1703  0070                     ?_setupTimer0Interrupt:	
  1704                           ; 1 bytes @ 0x0
  1705                           
  1706  0070                     ?_initialiseADCModule:	
  1707                           ; 1 bytes @ 0x0
  1708                           
  1709  0070                     ?_initialiseCurrentSensors:	
  1710                           ; 1 bytes @ 0x0
  1711                           
  1712  0070                     ?_initialisePotentiometers:	
  1713                           ; 1 bytes @ 0x0
  1714                           
  1715  0070                     ?_currentTripReset:	
  1716                           ; 1 bytes @ 0x0
  1717                           
  1718  0070                     ?_Tick980Hz:	
  1719                           ; 1 bytes @ 0x0
  1720                           
  1721  0070                     ?_initialiseADCPin:	
  1722                           ; 1 bytes @ 0x0
  1723                           
  1724  0070                     ?_readGPIO:	
  1725                           ; 1 bytes @ 0x0
  1726                           
  1727  0070                     ??_readGPIO:	
  1728                           ; 1 bytes @ 0x0
  1729                           
  1730  0070                     ?i1_writeGPIO:	
  1731                           ; 1 bytes @ 0x0
  1732                           
  1733  0070                     ?_readFilteredIL:	
  1734                           ; 1 bytes @ 0x0
  1735                           
  1736  0070                     ?_readILCurrentADCRaw:	
  1737                           ; 2 bytes @ 0x0
  1738                           
  1739  0070                     ?_readADCRaw:	
  1740                           ; 2 bytes @ 0x0
  1741                           
  1742  0070                     ?___wmul:	
  1743                           ; 2 bytes @ 0x0
  1744                           
  1745  0070                     ?___lmul:	
  1746                           ; 2 bytes @ 0x0
  1747                           
  1748  0070                     i1writeGPIO@writeValue:	
  1749                           ; 4 bytes @ 0x0
  1750                           
  1751  0070                     setPWMDutyandPeriod@dutyCycle:	
  1752                           ; 1 bytes @ 0x0
  1753                           
  1754  0070                     ___wmul@multiplier:	
  1755                           ; 2 bytes @ 0x0
  1756                           
  1757  0070                     ___lmul@multiplier:	
  1758                           ; 2 bytes @ 0x0
  1759                           
  1760                           
  1761                           ; 4 bytes @ 0x0
  1762  0070                     	ds	1
  1763  0071                     ??i1_writeGPIO:
  1764                           
  1765                           ; 1 bytes @ 0x1
  1766  0071                     	ds	1
  1767  0072                     ??_readFilteredIL:
  1768  0072                     ??_readILCurrentADCRaw:	
  1769                           ; 1 bytes @ 0x2
  1770                           
  1771  0072                     ??_readADCRaw:	
  1772                           ; 1 bytes @ 0x2
  1773                           
  1774  0072                     setPWMDutyandPeriod@period:	
  1775                           ; 1 bytes @ 0x2
  1776                           
  1777  0072                     readGPIO@readA:	
  1778                           ; 1 bytes @ 0x2
  1779                           
  1780  0072                     ___wmul@multiplicand:	
  1781                           ; 1 bytes @ 0x2
  1782                           
  1783                           
  1784                           ; 2 bytes @ 0x2
  1785  0072                     	ds	1
  1786  0073                     ??_setPWMDutyandPeriod:
  1787  0073                     readGPIO@returnValueA:	
  1788                           ; 1 bytes @ 0x3
  1789                           
  1790  0073                     i1writeGPIO@portType:	
  1791                           ; 1 bytes @ 0x3
  1792                           
  1793                           
  1794                           ; 1 bytes @ 0x3
  1795  0073                     	ds	1
  1796  0074                     ??___wmul:
  1797  0074                     readGPIO@readB:	
  1798                           ; 1 bytes @ 0x4
  1799                           
  1800  0074                     i1writeGPIO@gpioNumber:	
  1801                           ; 1 bytes @ 0x4
  1802                           
  1803  0074                     readADCRaw@returnValue:	
  1804                           ; 1 bytes @ 0x4
  1805                           
  1806  0074                     ___wmul@product:	
  1807                           ; 2 bytes @ 0x4
  1808                           
  1809  0074                     ___lmul@multiplicand:	
  1810                           ; 2 bytes @ 0x4
  1811                           
  1812                           
  1813                           ; 4 bytes @ 0x4
  1814  0074                     	ds	1
  1815  0075                     readGPIO@returnValueB:
  1816  0075                     i1writeGPIO@portNumber:	
  1817                           ; 1 bytes @ 0x5
  1818                           
  1819                           
  1820                           ; 1 bytes @ 0x5
  1821  0075                     	ds	1
  1822  0076                     ?___lldiv:
  1823  0076                     readADCRaw@channel:	
  1824                           ; 4 bytes @ 0x6
  1825                           
  1826  0076                     readGPIO@portNumber:	
  1827                           ; 1 bytes @ 0x6
  1828                           
  1829  0076                     readFilteredIL@sumOfSamples:	
  1830                           ; 1 bytes @ 0x6
  1831                           
  1832  0076                     ___lldiv@divisor:	
  1833                           ; 4 bytes @ 0x6
  1834                           
  1835                           
  1836                           ; 4 bytes @ 0x6
  1837  0076                     	ds	1
  1838  0077                     readADCRaw@gpioValid:
  1839  0077                     readGPIO@portType:	
  1840                           ; 1 bytes @ 0x7
  1841                           
  1842                           
  1843                           ; 1 bytes @ 0x7
  1844  0077                     	ds	1
  1845  0078                     ??___lmul:
  1846  0078                     readADCRaw@i:	
  1847                           ; 1 bytes @ 0x8
  1848                           
  1849  0078                     readGPIO@gpioNumber:	
  1850                           ; 1 bytes @ 0x8
  1851                           
  1852  0078                     ___lmul@product:	
  1853                           ; 1 bytes @ 0x8
  1854                           
  1855                           
  1856                           ; 4 bytes @ 0x8
  1857  0078                     	ds	1
  1858  0079                     ??_currentTripRead:
  1859  0079                     readADCRaw@i_626:	
  1860                           ; 1 bytes @ 0x9
  1861                           
  1862                           
  1863                           ; 1 bytes @ 0x9
  1864  0079                     	ds	1
  1865  007A                     readADCRaw@gpioNumber:
  1866  007A                     _currentTripRead$812:	
  1867                           ; 1 bytes @ 0xA
  1868                           
  1869  007A                     readFilteredIL@i_820:	
  1870                           ; 1 bytes @ 0xA
  1871                           
  1872  007A                     ___lldiv@dividend:	
  1873                           ; 1 bytes @ 0xA
  1874                           
  1875                           
  1876                           ; 4 bytes @ 0xA
  1877  007A                     	ds	1
  1878  007B                     ?_readFilteredVout:
  1879  007B                     ?_readFilteredDutyPot:	
  1880                           ; 2 bytes @ 0xB
  1881                           
  1882  007B                     ?_readFilteredFreqPot:	
  1883                           ; 2 bytes @ 0xB
  1884                           
  1885  007B                     readFilteredIL@i:	
  1886                           ; 2 bytes @ 0xB
  1887                           
  1888                           
  1889                           ; 1 bytes @ 0xB
  1890  007B                     	ds	3
  1891                           
  1892                           	psect	cstackBANK0
  1893  0020                     __pcstackBANK0:
  1894  0020                     ??_readFilteredVout:
  1895  0020                     ??_readFilteredDutyPot:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0020                     ??_readFilteredFreqPot:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0020                     ??___lldiv:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904                           
  1905                           ; 1 bytes @ 0x0
  1906  0020                     	ds	1
  1907  0021                     ___lldiv@quotient:
  1908                           
  1909                           ; 4 bytes @ 0x1
  1910  0021                     	ds	3
  1911  0024                     readFilteredDutyPot@sumOfSamples:
  1912  0024                     readFilteredFreqPot@sumOfSamples:	
  1913                           ; 4 bytes @ 0x4
  1914                           
  1915  0024                     readFilteredVout@sumOfSamples:	
  1916                           ; 4 bytes @ 0x4
  1917                           
  1918                           
  1919                           ; 4 bytes @ 0x4
  1920  0024                     	ds	1
  1921  0025                     ___lldiv@counter:
  1922                           
  1923                           ; 1 bytes @ 0x5
  1924  0025                     	ds	1
  1925  0026                     ??_runPotScaling:
  1926                           
  1927                           ; 1 bytes @ 0x6
  1928  0026                     	ds	2
  1929  0028                     readFilteredDutyPot@i_712:
  1930  0028                     readFilteredFreqPot@i_716:	
  1931                           ; 1 bytes @ 0x8
  1932                           
  1933  0028                     readFilteredVout@i_748:	
  1934                           ; 1 bytes @ 0x8
  1935                           
  1936                           
  1937                           ; 1 bytes @ 0x8
  1938  0028                     	ds	1
  1939  0029                     readFilteredDutyPot@i:
  1940  0029                     readFilteredFreqPot@i:	
  1941                           ; 1 bytes @ 0x9
  1942                           
  1943  0029                     readFilteredVout@i:	
  1944                           ; 1 bytes @ 0x9
  1945                           
  1946                           
  1947                           ; 1 bytes @ 0x9
  1948  0029                     	ds	5
  1949  002E                     runPotScaling@maxDuty:
  1950                           
  1951                           ; 2 bytes @ 0xE
  1952  002E                     	ds	2
  1953  0030                     runPotScaling@minDuty:
  1954                           
  1955                           ; 2 bytes @ 0x10
  1956  0030                     	ds	2
  1957  0032                     ??_Tick980Hz:
  1958                           
  1959                           ; 1 bytes @ 0x12
  1960  0032                     	ds	1
  1961  0033                     ?_writeGPIO:
  1962  0033                     ??_setupInternalOscillator:	
  1963                           ; 1 bytes @ 0x13
  1964                           
  1965  0033                     ??_setupTimer0Interrupt:	
  1966                           ; 1 bytes @ 0x13
  1967                           
  1968  0033                     ??_initialiseADCModule:	
  1969                           ; 1 bytes @ 0x13
  1970                           
  1971  0033                     ?_initialiseGPIO:	
  1972                           ; 1 bytes @ 0x13
  1973                           
  1974  0033                     ??_initialiseADCPin:	
  1975                           ; 1 bytes @ 0x13
  1976                           
  1977  0033                     initialiseGPIO@direction:	
  1978                           ; 1 bytes @ 0x13
  1979                           
  1980  0033                     writeGPIO@writeValue:	
  1981                           ; 1 bytes @ 0x13
  1982                           
  1983                           
  1984                           ; 1 bytes @ 0x13
  1985  0033                     	ds	1
  1986  0034                     ??_writeGPIO:
  1987  0034                     ??_initialiseGPIO:	
  1988                           ; 1 bytes @ 0x14
  1989                           
  1990                           
  1991                           ; 1 bytes @ 0x14
  1992  0034                     	ds	1
  1993  0035                     setupInternalOscillator@selectedFreq:
  1994  0035                     initialiseADCPin@gpioValid:	
  1995                           ; 1 bytes @ 0x15
  1996                           
  1997                           
  1998                           ; 1 bytes @ 0x15
  1999  0035                     	ds	1
  2000  0036                     initialiseADCPin@portType:
  2001  0036                     initialiseGPIO@portType:	
  2002                           ; 1 bytes @ 0x16
  2003                           
  2004  0036                     writeGPIO@portType:	
  2005                           ; 1 bytes @ 0x16
  2006                           
  2007                           
  2008                           ; 1 bytes @ 0x16
  2009  0036                     	ds	1
  2010  0037                     initialiseADCPin@portNumber:
  2011  0037                     initialiseGPIO@gpioNumber:	
  2012                           ; 1 bytes @ 0x17
  2013                           
  2014  0037                     writeGPIO@gpioNumber:	
  2015                           ; 1 bytes @ 0x17
  2016                           
  2017                           
  2018                           ; 1 bytes @ 0x17
  2019  0037                     	ds	1
  2020  0038                     initialiseADCPin@gpioNumber:
  2021  0038                     initialiseGPIO@portNumber:	
  2022                           ; 1 bytes @ 0x18
  2023                           
  2024  0038                     writeGPIO@portNumber:	
  2025                           ; 1 bytes @ 0x18
  2026                           
  2027                           
  2028                           ; 1 bytes @ 0x18
  2029  0038                     	ds	1
  2030  0039                     ??_setupPWM:
  2031  0039                     ??_initialiseCurrentSensors:	
  2032                           ; 1 bytes @ 0x19
  2033                           
  2034  0039                     ??_initialisePotentiometers:	
  2035                           ; 1 bytes @ 0x19
  2036                           
  2037  0039                     ??_currentTripReset:	
  2038                           ; 1 bytes @ 0x19
  2039                           
  2040  0039                     ?_main:	
  2041                           ; 1 bytes @ 0x19
  2042                           
  2043  0039                     main@argc:	
  2044                           ; 2 bytes @ 0x19
  2045                           
  2046                           
  2047                           ; 2 bytes @ 0x19
  2048  0039                     	ds	2
  2049  003B                     main@argv:
  2050                           
  2051                           ; 2 bytes @ 0x1B
  2052  003B                     	ds	2
  2053  003D                     ??_main:
  2054                           
  2055                           	psect	maintext
  2056  075D                     __pmaintext:	
  2057                           ; 1 bytes @ 0x1D
  2058 ;;
  2059 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2060 ;;
  2061 ;; *************** function _main *****************
  2062 ;; Defined at:
  2063 ;;		line 104 in file "main.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  argc            2   25[BANK0 ] int 
  2066 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;		None
  2069 ;; Return value:  Size  Location     Type
  2070 ;;                  2   25[BANK0 ] int 
  2071 ;; Registers used:
  2072 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2073 ;; Tracked objects:
  2074 ;;		On entry : B1F/0
  2075 ;;		On exit  : 0/0
  2076 ;;		Unchanged: 0/0
  2077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2078 ;;      Params:         0       4       0       0       0       0
  2079 ;;      Locals:         0       0       0       0       0       0
  2080 ;;      Temps:          0       0       0       0       0       0
  2081 ;;      Totals:         0       4       0       0       0       0
  2082 ;;Total ram usage:        4 bytes
  2083 ;; Hardware stack levels required when called: 6
  2084 ;; This function calls:
  2085 ;;		_initialiseADCModule
  2086 ;;		_initialiseCurrentSensors
  2087 ;;		_initialiseGPIO
  2088 ;;		_initialisePotentiometers
  2089 ;;		_setupInternalOscillator
  2090 ;;		_setupPWM
  2091 ;;		_setupTimer0Interrupt
  2092 ;; This function is called by:
  2093 ;;		Startup code after reset
  2094 ;; This function uses a non-reentrant model
  2095 ;;
  2096                           
  2097  075D                     _main:	
  2098                           ;psect for function _main
  2099                           
  2100  075D                     l2271:	
  2101                           ;incstack = 0
  2102                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2103                           
  2104                           
  2105                           ;main.c: 106:     setupInternalOscillator(freq32M);
  2106  075D  300A               	movlw	10
  2107  075E  3181  218E  3187   	fcall	_setupInternalOscillator
  2108  0761                     l2273:
  2109                           
  2110                           ;main.c: 108:     setupPWM();
  2111  0761  3187  2740  3187   	fcall	_setupPWM
  2112  0764                     l2275:
  2113                           
  2114                           ;main.c: 109:     setupTimer0Interrupt();
  2115  0764  3187  27BE  3187   	fcall	_setupTimer0Interrupt
  2116  0767                     l2277:
  2117                           
  2118                           ;main.c: 110:     initialiseADCModule();
  2119  0767  3187  27CC  3187   	fcall	_initialiseADCModule
  2120  076A                     l2279:
  2121                           
  2122                           ;main.c: 111:     initialiseCurrentSensors();
  2123  076A  3187  2701  3187   	fcall	_initialiseCurrentSensors
  2124  076D                     l2281:
  2125                           
  2126                           ;main.c: 112:     initialisePotentiometers();
  2127  076D  3187  27B5  3187   	fcall	_initialisePotentiometers
  2128  0770                     l2283:
  2129                           
  2130                           ;main.c: 113:     initialiseGPIO(pinRB4, 0);
  2131  0770  0020               	movlb	0	; select bank0
  2132  0771  01B3               	clrf	initialiseGPIO@direction
  2133  0772  300C               	movlw	12
  2134  0773  3182  2269  3187   	fcall	_initialiseGPIO
  2135  0776                     l100:	
  2136                           ;main.c: 115:     while(1){
  2137                           
  2138  0776                     l101:	
  2139                           ;main.c: 117:     }
  2140                           
  2141  0776  2F76               	goto	l100
  2142  0777  3180  2885         	ljmp	start
  2143  0779                     __end_of_main:
  2144                           
  2145                           	psect	text1
  2146  07BE                     __ptext1:	
  2147 ;; *************** function _setupTimer0Interrupt *****************
  2148 ;; Defined at:
  2149 ;;		line 17 in file "Timer0.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2163 ;;      Params:         0       0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 3
  2170 ;; This function calls:
  2171 ;;		Nothing
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177  07BE                     _setupTimer0Interrupt:	
  2178                           ;psect for function _setupTimer0Interrupt
  2179                           
  2180  07BE                     l2197:	
  2181                           ;incstack = 0
  2182                           ; Regs used in _setupTimer0Interrupt: [wreg]
  2183                           
  2184                           
  2185                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  2186  07BE  178B               	bsf	11,7	;volatile
  2187                           
  2188                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  2189  07BF  168B               	bsf	11,5	;volatile
  2190                           
  2191                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  2192  07C0  0021               	movlb	1	; select bank1
  2193  07C1  1295               	bcf	21,5	;volatile
  2194                           
  2195                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  2196  07C2  1195               	bcf	21,3	;volatile
  2197  07C3                     l2199:
  2198                           
  2199                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  2200  07C3  3004               	movlw	4
  2201  07C4  0095               	movwf	21	;volatile
  2202  07C5                     l177:
  2203  07C5  0008               	return
  2204  07C6                     __end_of_setupTimer0Interrupt:
  2205                           
  2206                           	psect	text2
  2207  0740                     __ptext2:	
  2208 ;; *************** function _setupPWM *****************
  2209 ;; Defined at:
  2210 ;;		line 16 in file "PWM.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;		None
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;		None
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0, pclath, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2224 ;;      Params:         0       0       0       0       0       0
  2225 ;;      Locals:         0       0       0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0
  2227 ;;      Totals:         0       0       0       0       0       0
  2228 ;;Total ram usage:        0 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 4
  2231 ;; This function calls:
  2232 ;;		_initialiseGPIO
  2233 ;; This function is called by:
  2234 ;;		_main
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238  0740                     _setupPWM:	
  2239                           ;psect for function _setupPWM
  2240                           
  2241  0740                     l2173:	
  2242                           ;incstack = 0
  2243                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2244                           
  2245                           
  2246                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2247  0740  300C               	movlw	12
  2248  0741  0025               	movlb	5	; select bank5
  2249  0742  0093               	movwf	19	;volatile
  2250  0743                     l2175:
  2251                           
  2252                           ;PWM.c: 20:     PR2 = 0;
  2253  0743  0020               	movlb	0	; select bank0
  2254  0744  019B               	clrf	27	;volatile
  2255  0745                     l2177:
  2256                           
  2257                           ;PWM.c: 21:     CCPR1L = 0;
  2258  0745  0025               	movlb	5	; select bank5
  2259  0746  0191               	clrf	17	;volatile
  2260  0747                     l2179:
  2261                           
  2262                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2263  0747  0022               	movlb	2	; select bank2
  2264  0748  151D               	bsf	29,2	;volatile
  2265  0749                     l2181:
  2266                           
  2267                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2268  0749  0025               	movlb	5	; select bank5
  2269  074A  1596               	bsf	22,3	;volatile
  2270  074B                     l2183:
  2271                           
  2272                           ;PWM.c: 25:     PSTR1CONbits.STR1A = 0;
  2273  074B  1016               	bcf	22,0	;volatile
  2274  074C                     l2185:
  2275                           
  2276                           ;PWM.c: 27:     T2CONbits.T2CKPS = 0b00;
  2277  074C  30FC               	movlw	-4
  2278  074D  0020               	movlb	0	; select bank0
  2279  074E  059C               	andwf	28,f	;volatile
  2280  074F                     l2187:
  2281                           
  2282                           ;PWM.c: 28:     PIE1bits.TMR2IE = 0;
  2283  074F  0021               	movlb	1	; select bank1
  2284  0750  1091               	bcf	17,1	;volatile
  2285  0751                     l2189:
  2286                           
  2287                           ;PWM.c: 29:     T2CONbits.TMR2ON = 1;
  2288  0751  0020               	movlb	0	; select bank0
  2289  0752  151C               	bsf	28,2	;volatile
  2290  0753                     l2191:
  2291                           
  2292                           ;PWM.c: 31:     INTCONbits.PEIE = 1;
  2293  0753  170B               	bsf	11,6	;volatile
  2294  0754                     l2193:
  2295                           
  2296                           ;PWM.c: 32:     PIE1bits.CCP1IE = 1;
  2297  0754  0021               	movlb	1	; select bank1
  2298  0755  1511               	bsf	17,2	;volatile
  2299  0756                     l2195:
  2300                           
  2301                           ;PWM.c: 36:     initialiseGPIO(pinRA6, 0);
  2302  0756  0020               	movlb	0	; select bank0
  2303  0757  01B3               	clrf	initialiseGPIO@direction
  2304  0758  3006               	movlw	6
  2305  0759  3182  2269  3187   	fcall	_initialiseGPIO
  2306  075C                     l152:
  2307  075C  0008               	return
  2308  075D                     __end_of_setupPWM:
  2309                           
  2310                           	psect	text3
  2311  018E                     __ptext3:	
  2312 ;; *************** function _setupInternalOscillator *****************
  2313 ;; Defined at:
  2314 ;;		line 126 in file "main.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;  selectedFreq    1    wreg     const enum E2830
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  1    wreg      void 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2328 ;;      Params:         0       0       0       0       0       0
  2329 ;;      Locals:         0       1       0       0       0       0
  2330 ;;      Temps:          0       2       0       0       0       0
  2331 ;;      Totals:         0       3       0       0       0       0
  2332 ;;Total ram usage:        3 bytes
  2333 ;; Hardware stack levels used: 1
  2334 ;; Hardware stack levels required when called: 3
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342  018E                     _setupInternalOscillator:	
  2343                           ;psect for function _setupInternalOscillator
  2344                           
  2345                           
  2346                           ;incstack = 0
  2347                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2348                           ;setupInternalOscillator@selectedFreq stored from wreg
  2349  018E  0020               	movlb	0	; select bank0
  2350  018F  00B5               	movwf	setupInternalOscillator@selectedFreq
  2351  0190                     l2095:
  2352                           
  2353                           ;main.c: 130:     switch(selectedFreq){
  2354  0190  2A3D               	goto	l2165
  2355  0191                     l2097:
  2356  0191  3087               	movlw	-121
  2357  0192  0021               	movlb	1	; select bank1
  2358  0193  0599               	andwf	25,f	;volatile
  2359  0194                     l2099:
  2360  0194  1399               	bcf	25,7	;volatile
  2361  0195                     l2101:
  2362  0195  3000               	movlw	0
  2363  0196  0020               	movlb	0	; select bank0
  2364  0197  00C0               	movwf	_clockFrequency+3
  2365  0198  3000               	movlw	0
  2366  0199  00BF               	movwf	_clockFrequency+2
  2367  019A  3079               	movlw	121
  2368  019B  00BE               	movwf	_clockFrequency+1
  2369  019C  3018               	movlw	24
  2370  019D  00BD               	movwf	_clockFrequency
  2371  019E  2A68               	goto	l119
  2372  019F                     l2103:
  2373  019F  0021               	movlb	1	; select bank1
  2374  01A0  0819               	movf	25,w	;volatile
  2375  01A1  3987               	andlw	-121
  2376  01A2  3820               	iorlw	32
  2377  01A3  0099               	movwf	25	;volatile
  2378  01A4                     l2105:
  2379  01A4  1399               	bcf	25,7	;volatile
  2380  01A5                     l2107:
  2381  01A5  3000               	movlw	0
  2382  01A6  0020               	movlb	0	; select bank0
  2383  01A7  00C0               	movwf	_clockFrequency+3
  2384  01A8  3000               	movlw	0
  2385  01A9  00BF               	movwf	_clockFrequency+2
  2386  01AA  30F4               	movlw	244
  2387  01AB  00BE               	movwf	_clockFrequency+1
  2388  01AC  3024               	movlw	36
  2389  01AD  00BD               	movwf	_clockFrequency
  2390  01AE  2A68               	goto	l119
  2391  01AF                     l2109:
  2392  01AF  0021               	movlb	1	; select bank1
  2393  01B0  0819               	movf	25,w	;volatile
  2394  01B1  3987               	andlw	-121
  2395  01B2  3828               	iorlw	40
  2396  01B3  0099               	movwf	25	;volatile
  2397  01B4                     l2111:
  2398  01B4  1399               	bcf	25,7	;volatile
  2399  01B5                     l2113:
  2400  01B5  3000               	movlw	0
  2401  01B6  0020               	movlb	0	; select bank0
  2402  01B7  00C0               	movwf	_clockFrequency+3
  2403  01B8  3001               	movlw	1
  2404  01B9  00BF               	movwf	_clockFrequency+2
  2405  01BA  30E8               	movlw	232
  2406  01BB  00BE               	movwf	_clockFrequency+1
  2407  01BC  3048               	movlw	72
  2408  01BD  00BD               	movwf	_clockFrequency
  2409  01BE  2A68               	goto	l119
  2410  01BF                     l2115:
  2411  01BF  0021               	movlb	1	; select bank1
  2412  01C0  0819               	movf	25,w	;volatile
  2413  01C1  3987               	andlw	-121
  2414  01C2  3830               	iorlw	48
  2415  01C3  0099               	movwf	25	;volatile
  2416  01C4                     l2117:
  2417  01C4  1399               	bcf	25,7	;volatile
  2418  01C5                     l2119:
  2419  01C5  3000               	movlw	0
  2420  01C6  0020               	movlb	0	; select bank0
  2421  01C7  00C0               	movwf	_clockFrequency+3
  2422  01C8  3003               	movlw	3
  2423  01C9  00BF               	movwf	_clockFrequency+2
  2424  01CA  30D0               	movlw	208
  2425  01CB  00BE               	movwf	_clockFrequency+1
  2426  01CC  3090               	movlw	144
  2427  01CD  00BD               	movwf	_clockFrequency
  2428  01CE  2A68               	goto	l119
  2429  01CF                     l2121:
  2430  01CF  0021               	movlb	1	; select bank1
  2431  01D0  0819               	movf	25,w	;volatile
  2432  01D1  3987               	andlw	-121
  2433  01D2  3838               	iorlw	56
  2434  01D3  0099               	movwf	25	;volatile
  2435  01D4                     l2123:
  2436  01D4  1399               	bcf	25,7	;volatile
  2437  01D5                     l2125:
  2438  01D5  3000               	movlw	0
  2439  01D6  0020               	movlb	0	; select bank0
  2440  01D7  00C0               	movwf	_clockFrequency+3
  2441  01D8  3007               	movlw	7
  2442  01D9  00BF               	movwf	_clockFrequency+2
  2443  01DA  30A1               	movlw	161
  2444  01DB  00BE               	movwf	_clockFrequency+1
  2445  01DC  3020               	movlw	32
  2446  01DD  00BD               	movwf	_clockFrequency
  2447  01DE  2A68               	goto	l119
  2448  01DF                     l2127:
  2449  01DF  0021               	movlb	1	; select bank1
  2450  01E0  0819               	movf	25,w	;volatile
  2451  01E1  3987               	andlw	-121
  2452  01E2  3858               	iorlw	88
  2453  01E3  0099               	movwf	25	;volatile
  2454  01E4                     l2129:
  2455  01E4  1399               	bcf	25,7	;volatile
  2456  01E5                     l2131:
  2457  01E5  3000               	movlw	0
  2458  01E6  0020               	movlb	0	; select bank0
  2459  01E7  00C0               	movwf	_clockFrequency+3
  2460  01E8  300F               	movlw	15
  2461  01E9  00BF               	movwf	_clockFrequency+2
  2462  01EA  3042               	movlw	66
  2463  01EB  00BE               	movwf	_clockFrequency+1
  2464  01EC  3040               	movlw	64
  2465  01ED  00BD               	movwf	_clockFrequency
  2466  01EE  2A68               	goto	l119
  2467  01EF                     l2133:
  2468  01EF  0021               	movlb	1	; select bank1
  2469  01F0  0819               	movf	25,w	;volatile
  2470  01F1  3987               	andlw	-121
  2471  01F2  3860               	iorlw	96
  2472  01F3  0099               	movwf	25	;volatile
  2473  01F4                     l2135:
  2474  01F4  1399               	bcf	25,7	;volatile
  2475  01F5                     l2137:
  2476  01F5  3000               	movlw	0
  2477  01F6  0020               	movlb	0	; select bank0
  2478  01F7  00C0               	movwf	_clockFrequency+3
  2479  01F8  301E               	movlw	30
  2480  01F9  00BF               	movwf	_clockFrequency+2
  2481  01FA  3084               	movlw	132
  2482  01FB  00BE               	movwf	_clockFrequency+1
  2483  01FC  3080               	movlw	128
  2484  01FD  00BD               	movwf	_clockFrequency
  2485  01FE  2A68               	goto	l119
  2486  01FF                     l2139:
  2487  01FF  0021               	movlb	1	; select bank1
  2488  0200  0819               	movf	25,w	;volatile
  2489  0201  3987               	andlw	-121
  2490  0202  3868               	iorlw	104
  2491  0203  0099               	movwf	25	;volatile
  2492  0204                     l2141:
  2493  0204  1399               	bcf	25,7	;volatile
  2494  0205                     l2143:
  2495  0205  3000               	movlw	0
  2496  0206  0020               	movlb	0	; select bank0
  2497  0207  00C0               	movwf	_clockFrequency+3
  2498  0208  303D               	movlw	61
  2499  0209  00BF               	movwf	_clockFrequency+2
  2500  020A  3009               	movlw	9
  2501  020B  00BE               	movwf	_clockFrequency+1
  2502  020C  3000               	movlw	0
  2503  020D  00BD               	movwf	_clockFrequency
  2504  020E  2A68               	goto	l119
  2505  020F                     l2145:
  2506  020F  0021               	movlb	1	; select bank1
  2507  0210  0819               	movf	25,w	;volatile
  2508  0211  3987               	andlw	-121
  2509  0212  3870               	iorlw	112
  2510  0213  0099               	movwf	25	;volatile
  2511  0214                     l2147:
  2512  0214  1399               	bcf	25,7	;volatile
  2513  0215                     l2149:
  2514  0215  3000               	movlw	0
  2515  0216  0020               	movlb	0	; select bank0
  2516  0217  00C0               	movwf	_clockFrequency+3
  2517  0218  307A               	movlw	122
  2518  0219  00BF               	movwf	_clockFrequency+2
  2519  021A  3012               	movlw	18
  2520  021B  00BE               	movwf	_clockFrequency+1
  2521  021C  3000               	movlw	0
  2522  021D  00BD               	movwf	_clockFrequency
  2523  021E  2A68               	goto	l119
  2524  021F                     l2151:
  2525  021F  3078               	movlw	120
  2526  0220  0021               	movlb	1	; select bank1
  2527  0221  0499               	iorwf	25,f	;volatile
  2528  0222                     l2153:
  2529  0222  1399               	bcf	25,7	;volatile
  2530  0223                     l2155:
  2531  0223  3000               	movlw	0
  2532  0224  0020               	movlb	0	; select bank0
  2533  0225  00C0               	movwf	_clockFrequency+3
  2534  0226  30F4               	movlw	244
  2535  0227  00BF               	movwf	_clockFrequency+2
  2536  0228  3024               	movlw	36
  2537  0229  00BE               	movwf	_clockFrequency+1
  2538  022A  3000               	movlw	0
  2539  022B  00BD               	movwf	_clockFrequency
  2540  022C  2A68               	goto	l119
  2541  022D                     l2157:
  2542  022D  0021               	movlb	1	; select bank1
  2543  022E  0819               	movf	25,w	;volatile
  2544  022F  3987               	andlw	-121
  2545  0230  3870               	iorlw	112
  2546  0231  0099               	movwf	25	;volatile
  2547  0232                     l2159:
  2548  0232  1799               	bsf	25,7	;volatile
  2549  0233                     l2161:
  2550  0233  3001               	movlw	1
  2551  0234  0020               	movlb	0	; select bank0
  2552  0235  00C0               	movwf	_clockFrequency+3
  2553  0236  30E8               	movlw	232
  2554  0237  00BF               	movwf	_clockFrequency+2
  2555  0238  3048               	movlw	72
  2556  0239  00BE               	movwf	_clockFrequency+1
  2557  023A  3000               	movlw	0
  2558  023B  00BD               	movwf	_clockFrequency
  2559  023C  2A68               	goto	l119
  2560  023D                     l2165:
  2561  023D  0835               	movf	setupInternalOscillator@selectedFreq,w
  2562  023E  00B3               	movwf	??_setupInternalOscillator
  2563  023F  01B4               	clrf	??_setupInternalOscillator+1
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ; direct_byte            8     6 (fixed)
  2572                           ; jumptable            260     6 (fixed)
  2573                           ;	Chosen strategy is simple_byte
  2574  0240  0834               	movf	??_setupInternalOscillator+1,w
  2575  0241  3A00               	xorlw	0	; case 0
  2576  0242  1903               	skipnz
  2577  0243  2A45               	goto	l2355
  2578  0244  2A68               	goto	l119
  2579  0245                     l2355:
  2580                           
  2581                           ; Switch size 1, requested type "simple"
  2582                           ; Number of cases is 11, Range of values is 0 to 10
  2583                           ; switch strategies available:
  2584                           ; Name         Instructions Cycles
  2585                           ; direct_byte           28     6 (fixed)
  2586                           ; simple_byte           34    18 (average)
  2587                           ; jumptable            260     6 (fixed)
  2588                           ;	Chosen strategy is simple_byte
  2589  0245  0833               	movf	??_setupInternalOscillator,w
  2590  0246  3A00               	xorlw	0	; case 0
  2591  0247  1903               	skipnz
  2592  0248  2991               	goto	l2097
  2593  0249  3A01               	xorlw	1	; case 1
  2594  024A  1903               	skipnz
  2595  024B  299F               	goto	l2103
  2596  024C  3A03               	xorlw	3	; case 2
  2597  024D  1903               	skipnz
  2598  024E  29AF               	goto	l2109
  2599  024F  3A01               	xorlw	1	; case 3
  2600  0250  1903               	skipnz
  2601  0251  29BF               	goto	l2115
  2602  0252  3A07               	xorlw	7	; case 4
  2603  0253  1903               	skipnz
  2604  0254  29CF               	goto	l2121
  2605  0255  3A01               	xorlw	1	; case 5
  2606  0256  1903               	skipnz
  2607  0257  29DF               	goto	l2127
  2608  0258  3A03               	xorlw	3	; case 6
  2609  0259  1903               	skipnz
  2610  025A  29EF               	goto	l2133
  2611  025B  3A01               	xorlw	1	; case 7
  2612  025C  1903               	skipnz
  2613  025D  29FF               	goto	l2139
  2614  025E  3A0F               	xorlw	15	; case 8
  2615  025F  1903               	skipnz
  2616  0260  2A0F               	goto	l2145
  2617  0261  3A01               	xorlw	1	; case 9
  2618  0262  1903               	skipnz
  2619  0263  2A1F               	goto	l2151
  2620  0264  3A03               	xorlw	3	; case 10
  2621  0265  1903               	skipnz
  2622  0266  2A2D               	goto	l2157
  2623  0267  2A68               	goto	l119
  2624  0268                     l119:
  2625  0268  0008               	return
  2626  0269                     __end_of_setupInternalOscillator:
  2627                           
  2628                           	psect	text4
  2629  07B5                     __ptext4:	
  2630 ;; *************** function _initialisePotentiometers *****************
  2631 ;; Defined at:
  2632 ;;		line 15 in file "Potentiometer.c"
  2633 ;; Parameters:    Size  Location     Type
  2634 ;;		None
  2635 ;; Auto vars:     Size  Location     Type
  2636 ;;		None
  2637 ;; Return value:  Size  Location     Type
  2638 ;;                  1    wreg      void 
  2639 ;; Registers used:
  2640 ;;		wreg, status,2, status,0, pclath, cstack
  2641 ;; Tracked objects:
  2642 ;;		On entry : 0/0
  2643 ;;		On exit  : 0/0
  2644 ;;		Unchanged: 0/0
  2645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2646 ;;      Params:         0       0       0       0       0       0
  2647 ;;      Locals:         0       0       0       0       0       0
  2648 ;;      Temps:          0       0       0       0       0       0
  2649 ;;      Totals:         0       0       0       0       0       0
  2650 ;;Total ram usage:        0 bytes
  2651 ;; Hardware stack levels used: 1
  2652 ;; Hardware stack levels required when called: 4
  2653 ;; This function calls:
  2654 ;;		_initialiseADCPin
  2655 ;; This function is called by:
  2656 ;;		_main
  2657 ;; This function uses a non-reentrant model
  2658 ;;
  2659                           
  2660  07B5                     _initialisePotentiometers:	
  2661                           ;psect for function _initialisePotentiometers
  2662                           
  2663  07B5                     l2205:	
  2664                           ;incstack = 0
  2665                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2666                           
  2667                           
  2668                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2669  07B5  3009               	movlw	9
  2670  07B6  3182  22E5  3187   	fcall	_initialiseADCPin
  2671                           
  2672                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2673  07B9  300A               	movlw	10
  2674  07BA  3182  22E5  3187   	fcall	_initialiseADCPin
  2675  07BD                     l329:
  2676  07BD  0008               	return
  2677  07BE                     __end_of_initialisePotentiometers:
  2678                           
  2679                           	psect	text5
  2680  0701                     __ptext5:	
  2681 ;; *************** function _initialiseCurrentSensors *****************
  2682 ;; Defined at:
  2683 ;;		line 17 in file "CurrentSensor.c"
  2684 ;; Parameters:    Size  Location     Type
  2685 ;;		None
  2686 ;; Auto vars:     Size  Location     Type
  2687 ;;		None
  2688 ;; Return value:  Size  Location     Type
  2689 ;;                  1    wreg      void 
  2690 ;; Registers used:
  2691 ;;		wreg, status,2, status,0, pclath, cstack
  2692 ;; Tracked objects:
  2693 ;;		On entry : 0/0
  2694 ;;		On exit  : 0/0
  2695 ;;		Unchanged: 0/0
  2696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2697 ;;      Params:         0       0       0       0       0       0
  2698 ;;      Locals:         0       0       0       0       0       0
  2699 ;;      Temps:          0       0       0       0       0       0
  2700 ;;      Totals:         0       0       0       0       0       0
  2701 ;;Total ram usage:        0 bytes
  2702 ;; Hardware stack levels used: 1
  2703 ;; Hardware stack levels required when called: 5
  2704 ;; This function calls:
  2705 ;;		_currentTripReset
  2706 ;;		_initialiseADCPin
  2707 ;;		_initialiseGPIO
  2708 ;; This function is called by:
  2709 ;;		_main
  2710 ;; This function uses a non-reentrant model
  2711 ;;
  2712                           
  2713  0701                     _initialiseCurrentSensors:	
  2714                           ;psect for function _initialiseCurrentSensors
  2715                           
  2716  0701                     l2203:	
  2717                           ;incstack = 0
  2718                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2719                           
  2720                           
  2721                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2722  0701  0020               	movlb	0	; select bank0
  2723  0702  01B3               	clrf	initialiseGPIO@direction
  2724  0703  0AB3               	incf	initialiseGPIO@direction,f
  2725  0704  3003               	movlw	3
  2726  0705  3182  2269  3187   	fcall	_initialiseGPIO
  2727                           
  2728                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2729  0708  0020               	movlb	0	; select bank0
  2730  0709  01B3               	clrf	initialiseGPIO@direction
  2731  070A  0AB3               	incf	initialiseGPIO@direction,f
  2732  070B  3001               	movlw	1
  2733  070C  3182  2269  3187   	fcall	_initialiseGPIO
  2734                           
  2735                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2736  070F  3000               	movlw	0
  2737  0710  3182  22E5  3187   	fcall	_initialiseADCPin
  2738                           
  2739                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  2740  0713  3002               	movlw	2
  2741  0714  3182  22E5  3187   	fcall	_initialiseADCPin
  2742                           
  2743                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2744  0717  0020               	movlb	0	; select bank0
  2745  0718  01B3               	clrf	initialiseGPIO@direction
  2746  0719  300B               	movlw	11
  2747  071A  3182  2269  3187   	fcall	_initialiseGPIO
  2748                           
  2749                           ;CurrentSensor.c: 23:     currentTripReset();
  2750  071D  3187  279B  3187   	fcall	_currentTripReset
  2751  0720                     l416:
  2752  0720  0008               	return
  2753  0721                     __end_of_initialiseCurrentSensors:
  2754                           
  2755                           	psect	text6
  2756  0269                     __ptext6:	
  2757 ;; *************** function _initialiseGPIO *****************
  2758 ;; Defined at:
  2759 ;;		line 18 in file "GPIO.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  gpioNumber      1    wreg     const enum E2798
  2762 ;;  direction       1   19[BANK0 ] unsigned char 
  2763 ;; Auto vars:     Size  Location     Type
  2764 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2765 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2766 ;;  portType        1   22[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2776 ;;      Params:         0       1       0       0       0       0
  2777 ;;      Locals:         0       3       0       0       0       0
  2778 ;;      Temps:          0       2       0       0       0       0
  2779 ;;      Totals:         0       6       0       0       0       0
  2780 ;;Total ram usage:        6 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 3
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;;		_setupPWM
  2788 ;;		_initialiseCurrentSensors
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792  0269                     _initialiseGPIO:	
  2793                           ;psect for function _initialiseGPIO
  2794                           
  2795                           
  2796                           ;incstack = 0
  2797                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2798                           ;initialiseGPIO@gpioNumber stored from wreg
  2799  0269  0020               	movlb	0	; select bank0
  2800  026A  00B7               	movwf	initialiseGPIO@gpioNumber
  2801  026B                     l1737:
  2802                           
  2803                           ;GPIO.c: 20:     uint8_t portType = 0;
  2804  026B  01B6               	clrf	initialiseGPIO@portType
  2805  026C                     l1739:
  2806                           
  2807                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2808  026C  3008               	movlw	8
  2809  026D  0237               	subwf	initialiseGPIO@gpioNumber,w
  2810  026E  1C03               	skipc
  2811  026F  2A71               	goto	u1171
  2812  0270  2A72               	goto	u1170
  2813  0271                     u1171:
  2814  0271  2A7A               	goto	l1745
  2815  0272                     u1170:
  2816  0272                     l1741:
  2817                           
  2818                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2819  0272  0837               	movf	initialiseGPIO@gpioNumber,w
  2820  0273  3EF8               	addlw	248
  2821  0274  00B4               	movwf	??_initialiseGPIO
  2822  0275  0834               	movf	??_initialiseGPIO,w
  2823  0276  00B8               	movwf	initialiseGPIO@portNumber
  2824  0277                     l1743:
  2825                           
  2826                           ;GPIO.c: 23:         portType = 1;
  2827  0277  01B6               	clrf	initialiseGPIO@portType
  2828  0278  0AB6               	incf	initialiseGPIO@portType,f
  2829                           
  2830                           ;GPIO.c: 24:     }
  2831  0279  2A7F               	goto	l1749
  2832  027A                     l1745:
  2833                           
  2834                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2835  027A  0837               	movf	initialiseGPIO@gpioNumber,w
  2836  027B  00B4               	movwf	??_initialiseGPIO
  2837  027C  0834               	movf	??_initialiseGPIO,w
  2838  027D  00B8               	movwf	initialiseGPIO@portNumber
  2839  027E                     l1747:
  2840                           
  2841                           ;GPIO.c: 27:         portType = 0;
  2842  027E  01B6               	clrf	initialiseGPIO@portType
  2843  027F                     l1749:
  2844                           
  2845                           ;GPIO.c: 30:     if(portType == 0){
  2846  027F  0836               	movf	initialiseGPIO@portType,w
  2847  0280  1D03               	btfss	3,2
  2848  0281  2A83               	goto	u1181
  2849  0282  2A84               	goto	u1180
  2850  0283                     u1181:
  2851  0283  2AB2               	goto	l1757
  2852  0284                     u1180:
  2853  0284                     l1751:
  2854                           
  2855                           ;GPIO.c: 31:         if(direction){
  2856  0284  0833               	movf	initialiseGPIO@direction,w
  2857  0285  1903               	btfsc	3,2
  2858  0286  2A88               	goto	u1191
  2859  0287  2A89               	goto	u1190
  2860  0288                     u1191:
  2861  0288  2AA4               	goto	l1755
  2862  0289                     u1190:
  2863  0289                     l1753:
  2864                           
  2865                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2866  0289  3001               	movlw	1
  2867  028A  00B4               	movwf	??_initialiseGPIO
  2868  028B  0A38               	incf	initialiseGPIO@portNumber,w
  2869  028C  2A8E               	goto	u1204
  2870  028D                     u1205:
  2871  028D  35B4               	lslf	??_initialiseGPIO,f
  2872  028E                     u1204:
  2873  028E  0B89               	decfsz	9,f
  2874  028F  2A8D               	goto	u1205
  2875  0290  0834               	movf	??_initialiseGPIO,w
  2876  0291  00B5               	movwf	??_initialiseGPIO+1
  2877  0292  0835               	movf	??_initialiseGPIO+1,w
  2878  0293  0021               	movlb	1	; select bank1
  2879  0294  048C               	iorwf	12,f	;volatile
  2880                           
  2881                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2882  0295  3001               	movlw	1
  2883  0296  0020               	movlb	0	; select bank0
  2884  0297  00B4               	movwf	??_initialiseGPIO
  2885  0298  0A38               	incf	initialiseGPIO@portNumber,w
  2886  0299  2A9B               	goto	u1214
  2887  029A                     u1215:
  2888  029A  35B4               	lslf	??_initialiseGPIO,f
  2889  029B                     u1214:
  2890  029B  0B89               	decfsz	9,f
  2891  029C  2A9A               	goto	u1215
  2892  029D  0834               	movf	??_initialiseGPIO,w
  2893  029E  3AFF               	xorlw	255
  2894  029F  00B5               	movwf	??_initialiseGPIO+1
  2895  02A0  0835               	movf	??_initialiseGPIO+1,w
  2896  02A1  0023               	movlb	3	; select bank3
  2897  02A2  058C               	andwf	12,f	;volatile
  2898                           
  2899                           ;GPIO.c: 34:         }
  2900  02A3  2AE4               	goto	l278
  2901  02A4                     l1755:
  2902  02A4  3001               	movlw	1
  2903  02A5  00B4               	movwf	??_initialiseGPIO
  2904  02A6  0A38               	incf	initialiseGPIO@portNumber,w
  2905  02A7  2AA9               	goto	u1224
  2906  02A8                     u1225:
  2907  02A8  35B4               	lslf	??_initialiseGPIO,f
  2908  02A9                     u1224:
  2909  02A9  0B89               	decfsz	9,f
  2910  02AA  2AA8               	goto	u1225
  2911  02AB  0834               	movf	??_initialiseGPIO,w
  2912  02AC  3AFF               	xorlw	255
  2913  02AD  00B5               	movwf	??_initialiseGPIO+1
  2914  02AE  0835               	movf	??_initialiseGPIO+1,w
  2915  02AF  0021               	movlb	1	; select bank1
  2916  02B0  058C               	andwf	12,f	;volatile
  2917  02B1  2AE4               	goto	l278
  2918  02B2                     l1757:
  2919  02B2  0336               	decf	initialiseGPIO@portType,w
  2920  02B3  1D03               	btfss	3,2
  2921  02B4  2AB6               	goto	u1231
  2922  02B5  2AB7               	goto	u1230
  2923  02B6                     u1231:
  2924  02B6  2AE4               	goto	l278
  2925  02B7                     u1230:
  2926  02B7                     l1759:
  2927                           
  2928                           ;GPIO.c: 38:         if(direction){
  2929  02B7  0833               	movf	initialiseGPIO@direction,w
  2930  02B8  1903               	btfsc	3,2
  2931  02B9  2ABB               	goto	u1241
  2932  02BA  2ABC               	goto	u1240
  2933  02BB                     u1241:
  2934  02BB  2AD7               	goto	l1763
  2935  02BC                     u1240:
  2936  02BC                     l1761:
  2937                           
  2938                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2939  02BC  3001               	movlw	1
  2940  02BD  00B4               	movwf	??_initialiseGPIO
  2941  02BE  0A38               	incf	initialiseGPIO@portNumber,w
  2942  02BF  2AC1               	goto	u1254
  2943  02C0                     u1255:
  2944  02C0  35B4               	lslf	??_initialiseGPIO,f
  2945  02C1                     u1254:
  2946  02C1  0B89               	decfsz	9,f
  2947  02C2  2AC0               	goto	u1255
  2948  02C3  0834               	movf	??_initialiseGPIO,w
  2949  02C4  00B5               	movwf	??_initialiseGPIO+1
  2950  02C5  0835               	movf	??_initialiseGPIO+1,w
  2951  02C6  0021               	movlb	1	; select bank1
  2952  02C7  048D               	iorwf	13,f	;volatile
  2953                           
  2954                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2955  02C8  3001               	movlw	1
  2956  02C9  0020               	movlb	0	; select bank0
  2957  02CA  00B4               	movwf	??_initialiseGPIO
  2958  02CB  0A38               	incf	initialiseGPIO@portNumber,w
  2959  02CC  2ACE               	goto	u1264
  2960  02CD                     u1265:
  2961  02CD  35B4               	lslf	??_initialiseGPIO,f
  2962  02CE                     u1264:
  2963  02CE  0B89               	decfsz	9,f
  2964  02CF  2ACD               	goto	u1265
  2965  02D0  0834               	movf	??_initialiseGPIO,w
  2966  02D1  3AFF               	xorlw	255
  2967  02D2  00B5               	movwf	??_initialiseGPIO+1
  2968  02D3  0835               	movf	??_initialiseGPIO+1,w
  2969  02D4  0023               	movlb	3	; select bank3
  2970  02D5  058D               	andwf	13,f	;volatile
  2971                           
  2972                           ;GPIO.c: 41:         }
  2973  02D6  2AE4               	goto	l278
  2974  02D7                     l1763:
  2975  02D7  3001               	movlw	1
  2976  02D8  00B4               	movwf	??_initialiseGPIO
  2977  02D9  0A38               	incf	initialiseGPIO@portNumber,w
  2978  02DA  2ADC               	goto	u1274
  2979  02DB                     u1275:
  2980  02DB  35B4               	lslf	??_initialiseGPIO,f
  2981  02DC                     u1274:
  2982  02DC  0B89               	decfsz	9,f
  2983  02DD  2ADB               	goto	u1275
  2984  02DE  0834               	movf	??_initialiseGPIO,w
  2985  02DF  3AFF               	xorlw	255
  2986  02E0  00B5               	movwf	??_initialiseGPIO+1
  2987  02E1  0835               	movf	??_initialiseGPIO+1,w
  2988  02E2  0021               	movlb	1	; select bank1
  2989  02E3  058D               	andwf	13,f	;volatile
  2990  02E4                     l278:
  2991  02E4  0008               	return
  2992  02E5                     __end_of_initialiseGPIO:
  2993                           
  2994                           	psect	text7
  2995  02E5                     __ptext7:	
  2996 ;; *************** function _initialiseADCPin *****************
  2997 ;; Defined at:
  2998 ;;		line 37 in file "ADC.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  gpioNumber      1    wreg     const enum E2798
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  3003 ;;  portNumber      1   23[BANK0 ] unsigned char 
  3004 ;;  portType        1   22[BANK0 ] unsigned char 
  3005 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      void 
  3008 ;; Registers used:
  3009 ;;		wreg, status,2, status,0
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3015 ;;      Params:         0       0       0       0       0       0
  3016 ;;      Locals:         0       4       0       0       0       0
  3017 ;;      Temps:          0       2       0       0       0       0
  3018 ;;      Totals:         0       6       0       0       0       0
  3019 ;;Total ram usage:        6 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 3
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_initialisePotentiometers
  3026 ;;		_initialiseCurrentSensors
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030  02E5                     _initialiseADCPin:	
  3031                           ;psect for function _initialiseADCPin
  3032                           
  3033                           
  3034                           ;incstack = 0
  3035                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3036                           ;initialiseADCPin@gpioNumber stored from wreg
  3037  02E5  0020               	movlb	0	; select bank0
  3038  02E6  00B8               	movwf	initialiseADCPin@gpioNumber
  3039  02E7                     l1765:
  3040                           
  3041                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3042  02E7  01B7               	clrf	initialiseADCPin@portNumber
  3043                           
  3044                           ;ADC.c: 40:     uint8_t portType = 0;
  3045  02E8  01B6               	clrf	initialiseADCPin@portType
  3046                           
  3047                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3048  02E9  01B5               	clrf	initialiseADCPin@gpioValid
  3049  02EA                     l1767:
  3050                           
  3051                           ;ADC.c: 43:     if(gpioNumber < 4){
  3052  02EA  3004               	movlw	4
  3053  02EB  0238               	subwf	initialiseADCPin@gpioNumber,w
  3054  02EC  1803               	skipnc
  3055  02ED  2AEF               	goto	u1281
  3056  02EE  2AF0               	goto	u1280
  3057  02EF                     u1281:
  3058  02EF  2AF7               	goto	l1775
  3059  02F0                     u1280:
  3060  02F0                     l1769:
  3061                           
  3062                           ;ADC.c: 44:         portNumber = gpioNumber;
  3063  02F0  0838               	movf	initialiseADCPin@gpioNumber,w
  3064  02F1  00B3               	movwf	??_initialiseADCPin
  3065  02F2  0833               	movf	??_initialiseADCPin,w
  3066  02F3  00B7               	movwf	initialiseADCPin@portNumber
  3067  02F4                     l1771:
  3068                           
  3069                           ;ADC.c: 45:         portType = 0;
  3070  02F4  01B6               	clrf	initialiseADCPin@portType
  3071  02F5                     l1773:
  3072                           
  3073                           ;ADC.c: 46:         gpioValid = 1;
  3074  02F5  01B5               	clrf	initialiseADCPin@gpioValid
  3075  02F6  0AB5               	incf	initialiseADCPin@gpioValid,f
  3076  02F7                     l1775:
  3077                           
  3078                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3079  02F7  3009               	movlw	9
  3080  02F8  0238               	subwf	initialiseADCPin@gpioNumber,w
  3081  02F9  1C03               	skipc
  3082  02FA  2AFC               	goto	u1291
  3083  02FB  2AFD               	goto	u1290
  3084  02FC                     u1291:
  3085  02FC  2B0C               	goto	l212
  3086  02FD                     u1290:
  3087  02FD                     l1777:
  3088  02FD  3010               	movlw	16
  3089  02FE  0238               	subwf	initialiseADCPin@gpioNumber,w
  3090  02FF  1803               	skipnc
  3091  0300  2B02               	goto	u1301
  3092  0301  2B03               	goto	u1300
  3093  0302                     u1301:
  3094  0302  2B0C               	goto	l212
  3095  0303                     u1300:
  3096  0303                     l1779:
  3097                           
  3098                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3099  0303  0838               	movf	initialiseADCPin@gpioNumber,w
  3100  0304  3EF8               	addlw	248
  3101  0305  00B3               	movwf	??_initialiseADCPin
  3102  0306  0833               	movf	??_initialiseADCPin,w
  3103  0307  00B7               	movwf	initialiseADCPin@portNumber
  3104  0308                     l1781:
  3105                           
  3106                           ;ADC.c: 51:         portType = 1;
  3107  0308  01B6               	clrf	initialiseADCPin@portType
  3108  0309  0AB6               	incf	initialiseADCPin@portType,f
  3109  030A                     l1783:
  3110                           
  3111                           ;ADC.c: 52:         gpioValid = 1;
  3112  030A  01B5               	clrf	initialiseADCPin@gpioValid
  3113  030B  0AB5               	incf	initialiseADCPin@gpioValid,f
  3114  030C                     l212:	
  3115                           ;ADC.c: 53:     }
  3116                           
  3117                           
  3118                           ;ADC.c: 55:     if(gpioValid){
  3119  030C  0835               	movf	initialiseADCPin@gpioValid,w
  3120  030D  1903               	btfsc	3,2
  3121  030E  2B10               	goto	u1311
  3122  030F  2B11               	goto	u1310
  3123  0310                     u1311:
  3124  0310  2B4E               	goto	l217
  3125  0311                     u1310:
  3126  0311                     l1785:
  3127                           
  3128                           ;ADC.c: 56:         if(portType == 0){
  3129  0311  0836               	movf	initialiseADCPin@portType,w
  3130  0312  1D03               	btfss	3,2
  3131  0313  2B15               	goto	u1321
  3132  0314  2B16               	goto	u1320
  3133  0315                     u1321:
  3134  0315  2B30               	goto	l1789
  3135  0316                     u1320:
  3136  0316                     l1787:
  3137                           
  3138                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3139  0316  3001               	movlw	1
  3140  0317  00B3               	movwf	??_initialiseADCPin
  3141  0318  0A37               	incf	initialiseADCPin@portNumber,w
  3142  0319  2B1B               	goto	u1334
  3143  031A                     u1335:
  3144  031A  35B3               	lslf	??_initialiseADCPin,f
  3145  031B                     u1334:
  3146  031B  0B89               	decfsz	9,f
  3147  031C  2B1A               	goto	u1335
  3148  031D  0833               	movf	??_initialiseADCPin,w
  3149  031E  00B4               	movwf	??_initialiseADCPin+1
  3150  031F  0834               	movf	??_initialiseADCPin+1,w
  3151  0320  0021               	movlb	1	; select bank1
  3152  0321  048C               	iorwf	12,f	;volatile
  3153                           
  3154                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3155  0322  3001               	movlw	1
  3156  0323  0020               	movlb	0	; select bank0
  3157  0324  00B3               	movwf	??_initialiseADCPin
  3158  0325  0A37               	incf	initialiseADCPin@portNumber,w
  3159  0326  2B28               	goto	u1344
  3160  0327                     u1345:
  3161  0327  35B3               	lslf	??_initialiseADCPin,f
  3162  0328                     u1344:
  3163  0328  0B89               	decfsz	9,f
  3164  0329  2B27               	goto	u1345
  3165  032A  0833               	movf	??_initialiseADCPin,w
  3166  032B  00B4               	movwf	??_initialiseADCPin+1
  3167  032C  0834               	movf	??_initialiseADCPin+1,w
  3168  032D  0023               	movlb	3	; select bank3
  3169  032E  048C               	iorwf	12,f	;volatile
  3170                           
  3171                           ;ADC.c: 59:         }
  3172  032F  2B4E               	goto	l217
  3173  0330                     l1789:
  3174  0330  0336               	decf	initialiseADCPin@portType,w
  3175  0331  1D03               	btfss	3,2
  3176  0332  2B34               	goto	u1351
  3177  0333  2B35               	goto	u1350
  3178  0334                     u1351:
  3179  0334  2B4E               	goto	l217
  3180  0335                     u1350:
  3181  0335                     l1791:
  3182                           
  3183                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3184  0335  3001               	movlw	1
  3185  0336  00B3               	movwf	??_initialiseADCPin
  3186  0337  0A37               	incf	initialiseADCPin@portNumber,w
  3187  0338  2B3A               	goto	u1364
  3188  0339                     u1365:
  3189  0339  35B3               	lslf	??_initialiseADCPin,f
  3190  033A                     u1364:
  3191  033A  0B89               	decfsz	9,f
  3192  033B  2B39               	goto	u1365
  3193  033C  0833               	movf	??_initialiseADCPin,w
  3194  033D  00B4               	movwf	??_initialiseADCPin+1
  3195  033E  0834               	movf	??_initialiseADCPin+1,w
  3196  033F  0021               	movlb	1	; select bank1
  3197  0340  048D               	iorwf	13,f	;volatile
  3198                           
  3199                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3200  0341  3001               	movlw	1
  3201  0342  0020               	movlb	0	; select bank0
  3202  0343  00B3               	movwf	??_initialiseADCPin
  3203  0344  0A37               	incf	initialiseADCPin@portNumber,w
  3204  0345  2B47               	goto	u1374
  3205  0346                     u1375:
  3206  0346  35B3               	lslf	??_initialiseADCPin,f
  3207  0347                     u1374:
  3208  0347  0B89               	decfsz	9,f
  3209  0348  2B46               	goto	u1375
  3210  0349  0833               	movf	??_initialiseADCPin,w
  3211  034A  00B4               	movwf	??_initialiseADCPin+1
  3212  034B  0834               	movf	??_initialiseADCPin+1,w
  3213  034C  0023               	movlb	3	; select bank3
  3214  034D  048D               	iorwf	13,f	;volatile
  3215  034E                     l217:
  3216  034E  0008               	return
  3217  034F                     __end_of_initialiseADCPin:
  3218                           
  3219                           	psect	text8
  3220  079B                     __ptext8:	
  3221 ;; *************** function _currentTripReset *****************
  3222 ;; Defined at:
  3223 ;;		line 70 in file "CurrentSensor.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;		None
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;		None
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0, pclath, cstack
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3237 ;;      Params:         0       0       0       0       0       0
  3238 ;;      Locals:         0       0       0       0       0       0
  3239 ;;      Temps:          0       0       0       0       0       0
  3240 ;;      Totals:         0       0       0       0       0       0
  3241 ;;Total ram usage:        0 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 4
  3244 ;; This function calls:
  3245 ;;		_writeGPIO
  3246 ;; This function is called by:
  3247 ;;		_initialiseCurrentSensors
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251  079B                     _currentTripReset:	
  3252                           ;psect for function _currentTripReset
  3253                           
  3254  079B                     l1877:	
  3255                           ;incstack = 0
  3256                           ; Regs used in _currentTripReset: [wreg+status,2+status,0+pclath+cstack]
  3257                           
  3258                           
  3259                           ;CurrentSensor.c: 71:     writeGPIO(pinRB3, 0);
  3260  079B  0020               	movlb	0	; select bank0
  3261  079C  01B3               	clrf	writeGPIO@writeValue
  3262  079D  300B               	movlw	11
  3263  079E  3183  23B1  3187   	fcall	_writeGPIO
  3264  07A1                     l1879:
  3265                           
  3266                           ;CurrentSensor.c: 72:      _delay((unsigned long)((2)*(freq32M/4000000.0)));
  3267                           ;CurrentSensor.c: 73:     writeGPIO(pinRB3, 1);
  3268  07A1  0020               	movlb	0	; select bank0
  3269  07A2  01B3               	clrf	writeGPIO@writeValue
  3270  07A3  0AB3               	incf	writeGPIO@writeValue,f
  3271  07A4  300B               	movlw	11
  3272  07A5  3183  23B1  3187   	fcall	_writeGPIO
  3273  07A8                     l438:
  3274  07A8  0008               	return
  3275  07A9                     __end_of_currentTripReset:
  3276                           
  3277                           	psect	text9
  3278  03B1                     __ptext9:	
  3279 ;; *************** function _writeGPIO *****************
  3280 ;; Defined at:
  3281 ;;		line 52 in file "GPIO.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  gpioNumber      1    wreg     const enum E2798
  3284 ;;  writeValue      1   19[BANK0 ] unsigned char 
  3285 ;; Auto vars:     Size  Location     Type
  3286 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  3287 ;;  portNumber      1   24[BANK0 ] unsigned char 
  3288 ;;  portType        1   22[BANK0 ] unsigned char 
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3298 ;;      Params:         0       1       0       0       0       0
  3299 ;;      Locals:         0       3       0       0       0       0
  3300 ;;      Temps:          0       2       0       0       0       0
  3301 ;;      Totals:         0       6       0       0       0       0
  3302 ;;Total ram usage:        6 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 3
  3305 ;; This function calls:
  3306 ;;		Nothing
  3307 ;; This function is called by:
  3308 ;;		_currentTripReset
  3309 ;; This function uses a non-reentrant model
  3310 ;;
  3311                           
  3312  03B1                     _writeGPIO:	
  3313                           ;psect for function _writeGPIO
  3314                           
  3315                           
  3316                           ;incstack = 0
  3317                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3318                           ;writeGPIO@gpioNumber stored from wreg
  3319  03B1  0020               	movlb	0	; select bank0
  3320  03B2  00B7               	movwf	writeGPIO@gpioNumber
  3321  03B3                     l1703:
  3322                           
  3323                           ;GPIO.c: 54:     uint8_t portType = 0;
  3324  03B3  01B6               	clrf	writeGPIO@portType
  3325  03B4                     l1705:
  3326                           
  3327                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3328  03B4  3008               	movlw	8
  3329  03B5  0237               	subwf	writeGPIO@gpioNumber,w
  3330  03B6  1C03               	skipc
  3331  03B7  2BB9               	goto	u1061
  3332  03B8  2BBA               	goto	u1060
  3333  03B9                     u1061:
  3334  03B9  2BC2               	goto	l1711
  3335  03BA                     u1060:
  3336  03BA                     l1707:
  3337                           
  3338                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3339  03BA  0837               	movf	writeGPIO@gpioNumber,w
  3340  03BB  3EF8               	addlw	248
  3341  03BC  00B4               	movwf	??_writeGPIO
  3342  03BD  0834               	movf	??_writeGPIO,w
  3343  03BE  00B8               	movwf	writeGPIO@portNumber
  3344  03BF                     l1709:
  3345                           
  3346                           ;GPIO.c: 57:         portType = 1;
  3347  03BF  01B6               	clrf	writeGPIO@portType
  3348  03C0  0AB6               	incf	writeGPIO@portType,f
  3349                           
  3350                           ;GPIO.c: 58:     }
  3351  03C1  2BC7               	goto	l1715
  3352  03C2                     l1711:
  3353                           
  3354                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3355  03C2  0837               	movf	writeGPIO@gpioNumber,w
  3356  03C3  00B4               	movwf	??_writeGPIO
  3357  03C4  0834               	movf	??_writeGPIO,w
  3358  03C5  00B8               	movwf	writeGPIO@portNumber
  3359  03C6                     l1713:
  3360                           
  3361                           ;GPIO.c: 61:         portType = 0;
  3362  03C6  01B6               	clrf	writeGPIO@portType
  3363  03C7                     l1715:
  3364                           
  3365                           ;GPIO.c: 64:     if(portType == 0){
  3366  03C7  0836               	movf	writeGPIO@portType,w
  3367  03C8  1D03               	btfss	3,2
  3368  03C9  2BCB               	goto	u1071
  3369  03CA  2BCC               	goto	u1070
  3370  03CB                     u1071:
  3371  03CB  2BEC               	goto	l1723
  3372  03CC                     u1070:
  3373  03CC                     l1717:
  3374                           
  3375                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3376  03CC  0833               	movf	writeGPIO@writeValue,w
  3377  03CD  1903               	btfsc	3,2
  3378  03CE  2BD0               	goto	u1081
  3379  03CF  2BD1               	goto	u1080
  3380  03D0                     u1081:
  3381  03D0  2BDE               	goto	l1721
  3382  03D1                     u1080:
  3383  03D1                     l1719:
  3384  03D1  3001               	movlw	1
  3385  03D2  00B4               	movwf	??_writeGPIO
  3386  03D3  0A38               	incf	writeGPIO@portNumber,w
  3387  03D4  2BD6               	goto	u1094
  3388  03D5                     u1095:
  3389  03D5  35B4               	lslf	??_writeGPIO,f
  3390  03D6                     u1094:
  3391  03D6  0B89               	decfsz	9,f
  3392  03D7  2BD5               	goto	u1095
  3393  03D8  0834               	movf	??_writeGPIO,w
  3394  03D9  00B5               	movwf	??_writeGPIO+1
  3395  03DA  0835               	movf	??_writeGPIO+1,w
  3396  03DB  0022               	movlb	2	; select bank2
  3397  03DC  048C               	iorwf	12,f	;volatile
  3398  03DD  2C10               	goto	l292
  3399  03DE                     l1721:
  3400  03DE  3001               	movlw	1
  3401  03DF  00B4               	movwf	??_writeGPIO
  3402  03E0  0A38               	incf	writeGPIO@portNumber,w
  3403  03E1  2BE3               	goto	u1104
  3404  03E2                     u1105:
  3405  03E2  35B4               	lslf	??_writeGPIO,f
  3406  03E3                     u1104:
  3407  03E3  0B89               	decfsz	9,f
  3408  03E4  2BE2               	goto	u1105
  3409  03E5  0834               	movf	??_writeGPIO,w
  3410  03E6  3AFF               	xorlw	255
  3411  03E7  00B5               	movwf	??_writeGPIO+1
  3412  03E8  0835               	movf	??_writeGPIO+1,w
  3413  03E9  0022               	movlb	2	; select bank2
  3414  03EA  058C               	andwf	12,f	;volatile
  3415  03EB  2C10               	goto	l292
  3416  03EC                     l1723:
  3417  03EC  0336               	decf	writeGPIO@portType,w
  3418  03ED  1D03               	btfss	3,2
  3419  03EE  2BF0               	goto	u1111
  3420  03EF  2BF1               	goto	u1110
  3421  03F0                     u1111:
  3422  03F0  2C10               	goto	l292
  3423  03F1                     u1110:
  3424  03F1                     l1725:
  3425                           
  3426                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3427  03F1  0833               	movf	writeGPIO@writeValue,w
  3428  03F2  1903               	btfsc	3,2
  3429  03F3  2BF5               	goto	u1121
  3430  03F4  2BF6               	goto	u1120
  3431  03F5                     u1121:
  3432  03F5  2C03               	goto	l1729
  3433  03F6                     u1120:
  3434  03F6                     l1727:
  3435  03F6  3001               	movlw	1
  3436  03F7  00B4               	movwf	??_writeGPIO
  3437  03F8  0A38               	incf	writeGPIO@portNumber,w
  3438  03F9  2BFB               	goto	u1134
  3439  03FA                     u1135:
  3440  03FA  35B4               	lslf	??_writeGPIO,f
  3441  03FB                     u1134:
  3442  03FB  0B89               	decfsz	9,f
  3443  03FC  2BFA               	goto	u1135
  3444  03FD  0834               	movf	??_writeGPIO,w
  3445  03FE  00B5               	movwf	??_writeGPIO+1
  3446  03FF  0835               	movf	??_writeGPIO+1,w
  3447  0400  0022               	movlb	2	; select bank2
  3448  0401  048D               	iorwf	13,f	;volatile
  3449  0402  2C10               	goto	l292
  3450  0403                     l1729:
  3451  0403  3001               	movlw	1
  3452  0404  00B4               	movwf	??_writeGPIO
  3453  0405  0A38               	incf	writeGPIO@portNumber,w
  3454  0406  2C08               	goto	u1144
  3455  0407                     u1145:
  3456  0407  35B4               	lslf	??_writeGPIO,f
  3457  0408                     u1144:
  3458  0408  0B89               	decfsz	9,f
  3459  0409  2C07               	goto	u1145
  3460  040A  0834               	movf	??_writeGPIO,w
  3461  040B  3AFF               	xorlw	255
  3462  040C  00B5               	movwf	??_writeGPIO+1
  3463  040D  0835               	movf	??_writeGPIO+1,w
  3464  040E  0022               	movlb	2	; select bank2
  3465  040F  058D               	andwf	13,f	;volatile
  3466  0410                     l292:
  3467  0410  0008               	return
  3468  0411                     __end_of_writeGPIO:
  3469                           
  3470                           	psect	text10
  3471  07CC                     __ptext10:	
  3472 ;; *************** function _initialiseADCModule *****************
  3473 ;; Defined at:
  3474 ;;		line 14 in file "ADC.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3488 ;;      Params:         0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 3
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_main
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502  07CC                     _initialiseADCModule:	
  3503                           ;psect for function _initialiseADCModule
  3504                           
  3505  07CC                     l2201:	
  3506                           ;incstack = 0
  3507                           ; Regs used in _initialiseADCModule: [wreg]
  3508                           
  3509                           
  3510                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3511  07CC  3001               	movlw	1
  3512  07CD  0021               	movlb	1	; select bank1
  3513  07CE  009D               	movwf	29	;volatile
  3514                           
  3515                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3516  07CF  3080               	movlw	128
  3517  07D0  009E               	movwf	30	;volatile
  3518  07D1                     l208:
  3519  07D1  0008               	return
  3520  07D2                     __end_of_initialiseADCModule:
  3521                           
  3522                           	psect	intentry
  3523  0004                     __pintentry:	
  3524 ;; *************** function _Tick980Hz *****************
  3525 ;; Defined at:
  3526 ;;		line 41 in file "main.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;		None
  3529 ;; Auto vars:     Size  Location     Type
  3530 ;;		None
  3531 ;; Return value:  Size  Location     Type
  3532 ;;                  1    wreg      void 
  3533 ;; Registers used:
  3534 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3535 ;; Tracked objects:
  3536 ;;		On entry : 0/0
  3537 ;;		On exit  : 0/0
  3538 ;;		Unchanged: 0/0
  3539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3540 ;;      Params:         0       0       0       0       0       0
  3541 ;;      Locals:         0       0       0       0       0       0
  3542 ;;      Temps:          0       1       0       0       0       0
  3543 ;;      Totals:         0       1       0       0       0       0
  3544 ;;Total ram usage:        1 bytes
  3545 ;; Hardware stack levels used: 1
  3546 ;; Hardware stack levels required when called: 2
  3547 ;; This function calls:
  3548 ;;		_currentTripRead
  3549 ;;		_readFilteredDutyPot
  3550 ;;		_readFilteredFreqPot
  3551 ;;		_readFilteredIL
  3552 ;;		_readFilteredVout
  3553 ;;		_readILCurrentADCRaw
  3554 ;;		_runPotScaling
  3555 ;;		_setPWMDutyandPeriod
  3556 ;;		i1_writeGPIO
  3557 ;; This function is called by:
  3558 ;;		Interrupt level 1
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562  0004                     _Tick980Hz:
  3563                           
  3564                           ;incstack = 0
  3565  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3566                           
  3567                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3568  0005  3180               	pagesel	$
  3569  0006                     i1l2235:
  3570                           
  3571                           ;main.c: 52:         if(currentTripRead() == 1){
  3572  0006  3186  26A9  3180   	fcall	_currentTripRead
  3573  0009  3A01               	xorlw	1
  3574  000A  1D03               	skipz
  3575  000B  280D               	goto	u199_21
  3576  000C  280E               	goto	u199_20
  3577  000D                     u199_21:
  3578  000D  281A               	goto	i1l2241
  3579  000E                     u199_20:
  3580  000E                     i1l2237:
  3581                           
  3582                           ;main.c: 53:             emergencyStop = 1;
  3583  000E  3001               	movlw	1
  3584  000F  0020               	movlb	0	; select bank0
  3585  0010  00B2               	movwf	??_Tick980Hz
  3586  0011  0832               	movf	??_Tick980Hz,w
  3587  0012  00D1               	movwf	_emergencyStop	;volatile
  3588  0013                     i1l2239:
  3589                           
  3590                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3591  0013  3000               	movlw	0
  3592  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3593  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3594  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3595  0017  3186  26D6  3180   	fcall	_setPWMDutyandPeriod
  3596  001A                     i1l2241:
  3597                           
  3598                           ;main.c: 57:         if(timerSlotHalf == 0){
  3599  001A  0020               	movlb	0	; select bank0
  3600  001B  0853               	movf	_timerSlotHalf,w	;volatile
  3601  001C  1D03               	btfss	3,2
  3602  001D  281F               	goto	u200_21
  3603  001E  2820               	goto	u200_20
  3604  001F                     u200_21:
  3605  001F  2825               	goto	i1l2245
  3606  0020                     u200_20:
  3607  0020                     i1l2243:
  3608                           
  3609                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3610  0020  01F0               	clrf	i1writeGPIO@writeValue
  3611  0021  300C               	movlw	12
  3612  0022  3184  2411  3180   	fcall	i1_writeGPIO
  3613  0025                     i1l2245:
  3614                           
  3615                           ;main.c: 61:         if(timerSlotHalf == 1){
  3616  0025  0020               	movlb	0	; select bank0
  3617  0026  0353               	decf	_timerSlotHalf,w	;volatile
  3618  0027  1D03               	btfss	3,2
  3619  0028  282A               	goto	u201_21
  3620  0029  282B               	goto	u201_20
  3621  002A                     u201_21:
  3622  002A  286F               	goto	i1l2263
  3623  002B                     u201_20:
  3624  002B                     i1l2247:
  3625                           
  3626                           ;main.c: 63:             filteredIL = readFilteredIL();
  3627  002B  3185  25DC  3180   	fcall	_readFilteredIL
  3628  002E  0871               	movf	?_readFilteredIL+1,w
  3629  002F  0020               	movlb	0	; select bank0
  3630  0030  00C8               	movwf	_filteredIL+1
  3631  0031  0870               	movf	?_readFilteredIL,w
  3632  0032  00C7               	movwf	_filteredIL
  3633                           
  3634                           ;main.c: 65:             filteredVout = readFilteredVout();
  3635  0033  3184  24CB  3180   	fcall	_readFilteredVout
  3636  0036  087C               	movf	?_readFilteredVout+1,w
  3637  0037  0020               	movlb	0	; select bank0
  3638  0038  00C6               	movwf	_filteredVout+1
  3639  0039  087B               	movf	?_readFilteredVout,w
  3640  003A  00C5               	movwf	_filteredVout
  3641  003B                     i1l2249:
  3642                           
  3643                           ;main.c: 68:             if(timerSlotQuarter == 0){
  3644  003B  0852               	movf	_timerSlotQuarter,w	;volatile
  3645  003C  1D03               	btfss	3,2
  3646  003D  283F               	goto	u202_21
  3647  003E  2840               	goto	u202_20
  3648  003F                     u202_21:
  3649  003F  284F               	goto	i1l2257
  3650  0040                     u202_20:
  3651  0040                     i1l2251:
  3652                           
  3653                           ;main.c: 70:                 writeGPIO(pinRB4, 1);
  3654  0040  01F0               	clrf	i1writeGPIO@writeValue
  3655  0041  0AF0               	incf	i1writeGPIO@writeValue,f
  3656  0042  300C               	movlw	12
  3657  0043  3184  2411  3180   	fcall	i1_writeGPIO
  3658  0046                     i1l2253:
  3659                           
  3660                           ;main.c: 72:                 if(~emergencyStop){
  3661  0046  0020               	movlb	0	; select bank0
  3662  0047  0351               	decf	_emergencyStop,w	;volatile
  3663  0048  1903               	btfsc	3,2
  3664  0049  284B               	goto	u203_21
  3665  004A  284C               	goto	u203_20
  3666  004B                     u203_21:
  3667  004B  284F               	goto	i1l2257
  3668  004C                     u203_20:
  3669  004C                     i1l2255:
  3670                           
  3671                           ;main.c: 73:                     runPotScaling();
  3672  004C  3180  20AB  3180   	fcall	_runPotScaling
  3673  004F                     i1l2257:
  3674                           
  3675                           ;main.c: 77:             if(timerSlotQuarter == 1){
  3676  004F  0020               	movlb	0	; select bank0
  3677  0050  0352               	decf	_timerSlotQuarter,w	;volatile
  3678  0051  1D03               	btfss	3,2
  3679  0052  2854               	goto	u204_21
  3680  0053  2855               	goto	u204_20
  3681  0054                     u204_21:
  3682  0054  2865               	goto	i1l2261
  3683  0055                     u204_20:
  3684  0055                     i1l2259:
  3685                           
  3686                           ;main.c: 79:                 filteredDutyPot = readFilteredDutyPot();
  3687  0055  3185  2581  3180   	fcall	_readFilteredDutyPot
  3688  0058  087C               	movf	?_readFilteredDutyPot+1,w
  3689  0059  0020               	movlb	0	; select bank0
  3690  005A  00C2               	movwf	_filteredDutyPot+1
  3691  005B  087B               	movf	?_readFilteredDutyPot,w
  3692  005C  00C1               	movwf	_filteredDutyPot
  3693                           
  3694                           ;main.c: 80:                 filteredFreqPot = readFilteredFreqPot();
  3695  005D  3185  2526  3180   	fcall	_readFilteredFreqPot
  3696  0060  087C               	movf	?_readFilteredFreqPot+1,w
  3697  0061  0020               	movlb	0	; select bank0
  3698  0062  00C4               	movwf	_filteredFreqPot+1
  3699  0063  087B               	movf	?_readFilteredFreqPot,w
  3700  0064  00C3               	movwf	_filteredFreqPot
  3701  0065                     i1l2261:
  3702                           
  3703                           ;main.c: 83:             timerSlotQuarter = ~timerSlotQuarter;
  3704  0065  0352               	decf	_timerSlotQuarter,w	;volatile
  3705  0066  1D03               	btfss	3,2
  3706  0067  2869               	goto	u205_21
  3707  0068  286B               	goto	u205_20
  3708  0069                     u205_21:
  3709  0069  3001               	movlw	1
  3710  006A  286C               	goto	u206_20
  3711  006B                     u205_20:
  3712  006B  3000               	movlw	0
  3713  006C                     u206_20:
  3714  006C  00B2               	movwf	??_Tick980Hz
  3715  006D  0832               	movf	??_Tick980Hz,w
  3716  006E  00D2               	movwf	_timerSlotQuarter	;volatile
  3717  006F                     i1l2263:
  3718                           
  3719                           ;main.c: 86:         timerSlotHalf = ~timerSlotHalf;
  3720  006F  0353               	decf	_timerSlotHalf,w	;volatile
  3721  0070  1D03               	btfss	3,2
  3722  0071  2873               	goto	u207_21
  3723  0072  2875               	goto	u207_20
  3724  0073                     u207_21:
  3725  0073  3001               	movlw	1
  3726  0074  2876               	goto	u208_20
  3727  0075                     u207_20:
  3728  0075  3000               	movlw	0
  3729  0076                     u208_20:
  3730  0076  00B2               	movwf	??_Tick980Hz
  3731  0077  0832               	movf	??_Tick980Hz,w
  3732  0078  00D3               	movwf	_timerSlotHalf	;volatile
  3733  0079                     i1l2265:
  3734                           
  3735                           ;main.c: 87:         INTCONbits.TMR0IF = 0;
  3736  0079  110B               	bcf	11,2	;volatile
  3737  007A                     i1l2267:
  3738                           
  3739                           ;main.c: 92:         latestIL = readILCurrentADCRaw();
  3740  007A  3187  27A9  3180   	fcall	_readILCurrentADCRaw
  3741  007D  0871               	movf	?_readILCurrentADCRaw+1,w
  3742  007E  0020               	movlb	0	; select bank0
  3743  007F  00CC               	movwf	_latestIL+1	;volatile
  3744  0080  0870               	movf	?_readILCurrentADCRaw,w
  3745  0081  00CB               	movwf	_latestIL	;volatile
  3746  0082                     i1l2269:
  3747                           
  3748                           ;main.c: 93:         PIR1bits.CCP1IF = 0;
  3749  0082  1111               	bcf	17,2	;volatile
  3750  0083                     i1l95:
  3751  0083  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3752  0084  0009               	retfie
  3753  0085                     __end_of_Tick980Hz:
  3754                           
  3755                           	psect	text12
  3756  0411                     __ptext12:	
  3757 ;; *************** function i1_writeGPIO *****************
  3758 ;; Defined at:
  3759 ;;		line 52 in file "GPIO.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;  gpioNumber      1    wreg     const enum E2798
  3762 ;;  writeValue      1    0[COMMON] unsigned char 
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3765 ;;  portNumber      1    5[COMMON] unsigned char 
  3766 ;;  portType        1    3[COMMON] unsigned char 
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, status,2, status,0
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3776 ;;      Params:         1       0       0       0       0       0
  3777 ;;      Locals:         3       0       0       0       0       0
  3778 ;;      Temps:          2       0       0       0       0       0
  3779 ;;      Totals:         6       0       0       0       0       0
  3780 ;;Total ram usage:        6 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; This function calls:
  3783 ;;		Nothing
  3784 ;; This function is called by:
  3785 ;;		_Tick980Hz
  3786 ;; This function uses a non-reentrant model
  3787 ;;
  3788                           
  3789  0411                     i1_writeGPIO:	
  3790                           ;psect for function i1_writeGPIO
  3791                           
  3792                           
  3793                           ;incstack = 0
  3794                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3795                           ;i1writeGPIO@gpioNumber stored from wreg
  3796  0411  00F4               	movwf	i1writeGPIO@gpioNumber
  3797  0412                     i1l2207:
  3798                           
  3799                           ;GPIO.c: 54:     uint8_t portType = 0;
  3800  0412  01F3               	clrf	i1writeGPIO@portType
  3801  0413                     i1l2209:
  3802                           
  3803                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3804  0413  3008               	movlw	8
  3805  0414  0274               	subwf	i1writeGPIO@gpioNumber,w
  3806  0415  1C03               	skipc
  3807  0416  2C18               	goto	u190_21
  3808  0417  2C19               	goto	u190_20
  3809  0418                     u190_21:
  3810  0418  2C21               	goto	i1l2215
  3811  0419                     u190_20:
  3812  0419                     i1l2211:
  3813                           
  3814                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3815  0419  0874               	movf	i1writeGPIO@gpioNumber,w
  3816  041A  3EF8               	addlw	248
  3817  041B  00F1               	movwf	??i1_writeGPIO
  3818  041C  0871               	movf	??i1_writeGPIO,w
  3819  041D  00F5               	movwf	i1writeGPIO@portNumber
  3820  041E                     i1l2213:
  3821                           
  3822                           ;GPIO.c: 57:         portType = 1;
  3823  041E  01F3               	clrf	i1writeGPIO@portType
  3824  041F  0AF3               	incf	i1writeGPIO@portType,f
  3825                           
  3826                           ;GPIO.c: 58:     }
  3827  0420  2C26               	goto	i1l2219
  3828  0421                     i1l2215:
  3829                           
  3830                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3831  0421  0874               	movf	i1writeGPIO@gpioNumber,w
  3832  0422  00F1               	movwf	??i1_writeGPIO
  3833  0423  0871               	movf	??i1_writeGPIO,w
  3834  0424  00F5               	movwf	i1writeGPIO@portNumber
  3835  0425                     i1l2217:
  3836                           
  3837                           ;GPIO.c: 61:         portType = 0;
  3838  0425  01F3               	clrf	i1writeGPIO@portType
  3839  0426                     i1l2219:
  3840                           
  3841                           ;GPIO.c: 64:     if(portType == 0){
  3842  0426  0873               	movf	i1writeGPIO@portType,w
  3843  0427  1D03               	btfss	3,2
  3844  0428  2C2A               	goto	u191_21
  3845  0429  2C2B               	goto	u191_20
  3846  042A                     u191_21:
  3847  042A  2C4B               	goto	i1l2227
  3848  042B                     u191_20:
  3849  042B                     i1l2221:
  3850                           
  3851                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3852  042B  0870               	movf	i1writeGPIO@writeValue,w
  3853  042C  1903               	btfsc	3,2
  3854  042D  2C2F               	goto	u192_21
  3855  042E  2C30               	goto	u192_20
  3856  042F                     u192_21:
  3857  042F  2C3D               	goto	i1l2225
  3858  0430                     u192_20:
  3859  0430                     i1l2223:
  3860  0430  3001               	movlw	1
  3861  0431  00F1               	movwf	??i1_writeGPIO
  3862  0432  0A75               	incf	i1writeGPIO@portNumber,w
  3863  0433  2C35               	goto	u193_24
  3864  0434                     u193_25:
  3865  0434  35F1               	lslf	??i1_writeGPIO,f
  3866  0435                     u193_24:
  3867  0435  0B89               	decfsz	9,f
  3868  0436  2C34               	goto	u193_25
  3869  0437  0871               	movf	??i1_writeGPIO,w
  3870  0438  00F2               	movwf	??i1_writeGPIO+1
  3871  0439  0872               	movf	??i1_writeGPIO+1,w
  3872  043A  0022               	movlb	2	; select bank2
  3873  043B  048C               	iorwf	12,f	;volatile
  3874  043C  2C6F               	goto	i1l292
  3875  043D                     i1l2225:
  3876  043D  3001               	movlw	1
  3877  043E  00F1               	movwf	??i1_writeGPIO
  3878  043F  0A75               	incf	i1writeGPIO@portNumber,w
  3879  0440  2C42               	goto	u194_24
  3880  0441                     u194_25:
  3881  0441  35F1               	lslf	??i1_writeGPIO,f
  3882  0442                     u194_24:
  3883  0442  0B89               	decfsz	9,f
  3884  0443  2C41               	goto	u194_25
  3885  0444  0871               	movf	??i1_writeGPIO,w
  3886  0445  3AFF               	xorlw	255
  3887  0446  00F2               	movwf	??i1_writeGPIO+1
  3888  0447  0872               	movf	??i1_writeGPIO+1,w
  3889  0448  0022               	movlb	2	; select bank2
  3890  0449  058C               	andwf	12,f	;volatile
  3891  044A  2C6F               	goto	i1l292
  3892  044B                     i1l2227:
  3893  044B  0373               	decf	i1writeGPIO@portType,w
  3894  044C  1D03               	btfss	3,2
  3895  044D  2C4F               	goto	u195_21
  3896  044E  2C50               	goto	u195_20
  3897  044F                     u195_21:
  3898  044F  2C6F               	goto	i1l292
  3899  0450                     u195_20:
  3900  0450                     i1l2229:
  3901                           
  3902                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3903  0450  0870               	movf	i1writeGPIO@writeValue,w
  3904  0451  1903               	btfsc	3,2
  3905  0452  2C54               	goto	u196_21
  3906  0453  2C55               	goto	u196_20
  3907  0454                     u196_21:
  3908  0454  2C62               	goto	i1l2233
  3909  0455                     u196_20:
  3910  0455                     i1l2231:
  3911  0455  3001               	movlw	1
  3912  0456  00F1               	movwf	??i1_writeGPIO
  3913  0457  0A75               	incf	i1writeGPIO@portNumber,w
  3914  0458  2C5A               	goto	u197_24
  3915  0459                     u197_25:
  3916  0459  35F1               	lslf	??i1_writeGPIO,f
  3917  045A                     u197_24:
  3918  045A  0B89               	decfsz	9,f
  3919  045B  2C59               	goto	u197_25
  3920  045C  0871               	movf	??i1_writeGPIO,w
  3921  045D  00F2               	movwf	??i1_writeGPIO+1
  3922  045E  0872               	movf	??i1_writeGPIO+1,w
  3923  045F  0022               	movlb	2	; select bank2
  3924  0460  048D               	iorwf	13,f	;volatile
  3925  0461  2C6F               	goto	i1l292
  3926  0462                     i1l2233:
  3927  0462  3001               	movlw	1
  3928  0463  00F1               	movwf	??i1_writeGPIO
  3929  0464  0A75               	incf	i1writeGPIO@portNumber,w
  3930  0465  2C67               	goto	u198_24
  3931  0466                     u198_25:
  3932  0466  35F1               	lslf	??i1_writeGPIO,f
  3933  0467                     u198_24:
  3934  0467  0B89               	decfsz	9,f
  3935  0468  2C66               	goto	u198_25
  3936  0469  0871               	movf	??i1_writeGPIO,w
  3937  046A  3AFF               	xorlw	255
  3938  046B  00F2               	movwf	??i1_writeGPIO+1
  3939  046C  0872               	movf	??i1_writeGPIO+1,w
  3940  046D  0022               	movlb	2	; select bank2
  3941  046E  058D               	andwf	13,f	;volatile
  3942  046F                     i1l292:
  3943  046F  0008               	return
  3944  0470                     __end_ofi1_writeGPIO:
  3945                           
  3946                           	psect	text13
  3947  00AB                     __ptext13:	
  3948 ;; *************** function _runPotScaling *****************
  3949 ;; Defined at:
  3950 ;;		line 55 in file "Potentiometer.c"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3955 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3965 ;;      Params:         0       0       0       0       0       0
  3966 ;;      Locals:         0       4       0       0       0       0
  3967 ;;      Temps:          0       8       0       0       0       0
  3968 ;;      Totals:         0      12       0       0       0       0
  3969 ;;Total ram usage:       12 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 1
  3972 ;; This function calls:
  3973 ;;		___lldiv
  3974 ;;		___lmul
  3975 ;;		___wmul
  3976 ;;		_setPWMDutyandPeriod
  3977 ;; This function is called by:
  3978 ;;		_Tick980Hz
  3979 ;; This function uses a non-reentrant model
  3980 ;;
  3981                           
  3982  00AB                     _runPotScaling:	
  3983                           ;psect for function _runPotScaling
  3984                           
  3985  00AB                     i1l2009:	
  3986                           ;incstack = 0
  3987                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3988                           
  3989                           
  3990                           ;Potentiometer.c: 57:     potSetCount++;
  3991  00AB  3001               	movlw	1
  3992  00AC  0020               	movlb	0	; select bank0
  3993  00AD  00A6               	movwf	??_runPotScaling
  3994  00AE  0826               	movf	??_runPotScaling,w
  3995  00AF  07D4               	addwf	_potSetCount,f
  3996                           
  3997                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3998  00B0  3020               	movlw	32
  3999  00B1  0654               	xorwf	_potSetCount,w
  4000  00B2  1D03               	btfss	3,2
  4001  00B3  28B5               	goto	u178_21
  4002  00B4  28B6               	goto	u178_20
  4003  00B5                     u178_21:
  4004  00B5  298D               	goto	i1l349
  4005  00B6                     u178_20:
  4006  00B6                     i1l2011:
  4007                           
  4008                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  4009  00B6  0843               	movf	_filteredFreqPot,w
  4010  00B7  3ED3               	addlw	211
  4011  00B8  00F0               	movwf	___lmul@multiplier
  4012  00B9  30FF               	movlw	255
  4013  00BA  3D44               	addwfc	_filteredFreqPot+1,w
  4014  00BB  00F1               	movwf	___lmul@multiplier+1
  4015  00BC  01F2               	clrf	___lmul@multiplier+2
  4016  00BD  01F3               	clrf	___lmul@multiplier+3
  4017  00BE  3000               	movlw	0
  4018  00BF  00F7               	movwf	___lmul@multiplicand+3
  4019  00C0  3000               	movlw	0
  4020  00C1  00F6               	movwf	___lmul@multiplicand+2
  4021  00C2  3000               	movlw	0
  4022  00C3  00F5               	movwf	___lmul@multiplicand+1
  4023  00C4  3090               	movlw	144
  4024  00C5  00F4               	movwf	___lmul@multiplicand
  4025  00C6  3186  2676  3180   	fcall	___lmul
  4026  00C9  0870               	movf	?___lmul,w
  4027  00CA  0020               	movlb	0	; select bank0
  4028  00CB  00A6               	movwf	??_runPotScaling
  4029  00CC  0871               	movf	?___lmul+1,w
  4030  00CD  00A7               	movwf	??_runPotScaling+1
  4031  00CE  0872               	movf	?___lmul+2,w
  4032  00CF  00A8               	movwf	??_runPotScaling+2
  4033  00D0  0873               	movf	?___lmul+3,w
  4034  00D1  00A9               	movwf	??_runPotScaling+3
  4035  00D2  300A               	movlw	10
  4036  00D3                     u179_25:
  4037  00D3  36A9               	lsrf	??_runPotScaling+3,f
  4038  00D4  0CA8               	rrf	??_runPotScaling+2,f
  4039  00D5  0CA7               	rrf	??_runPotScaling+1,f
  4040  00D6  0CA6               	rrf	??_runPotScaling,f
  4041  00D7                     u179_20:
  4042  00D7  0B89               	decfsz	9,f
  4043  00D8  28D3               	goto	u179_25
  4044  00D9  0826               	movf	??_runPotScaling,w
  4045  00DA  3E0F               	addlw	15
  4046  00DB  00AA               	movwf	??_runPotScaling+4
  4047  00DC  082A               	movf	??_runPotScaling+4,w
  4048  00DD  00D8               	movwf	_setPeriod
  4049                           
  4050                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  4051  00DE  0841               	movf	_filteredDutyPot,w
  4052  00DF  3ED3               	addlw	211
  4053  00E0  00F0               	movwf	___lmul@multiplier
  4054  00E1  30FF               	movlw	255
  4055  00E2  3D42               	addwfc	_filteredDutyPot+1,w
  4056  00E3  00F1               	movwf	___lmul@multiplier+1
  4057  00E4  01F2               	clrf	___lmul@multiplier+2
  4058  00E5  01F3               	clrf	___lmul@multiplier+3
  4059  00E6  0858               	movf	_setPeriod,w
  4060  00E7  00A6               	movwf	??_runPotScaling
  4061  00E8  01A7               	clrf	??_runPotScaling+1
  4062  00E9  01A8               	clrf	??_runPotScaling+2
  4063  00EA  01A9               	clrf	??_runPotScaling+3
  4064  00EB  0829               	movf	??_runPotScaling+3,w
  4065  00EC  00F7               	movwf	___lmul@multiplicand+3
  4066  00ED  0828               	movf	??_runPotScaling+2,w
  4067  00EE  00F6               	movwf	___lmul@multiplicand+2
  4068  00EF  0827               	movf	??_runPotScaling+1,w
  4069  00F0  00F5               	movwf	___lmul@multiplicand+1
  4070  00F1  0826               	movf	??_runPotScaling,w
  4071  00F2  00F4               	movwf	___lmul@multiplicand
  4072  00F3  3186  2676  3180   	fcall	___lmul
  4073  00F6  0870               	movf	?___lmul,w
  4074  00F7  0020               	movlb	0	; select bank0
  4075  00F8  00AA               	movwf	??_runPotScaling+4
  4076  00F9  0871               	movf	?___lmul+1,w
  4077  00FA  00AB               	movwf	??_runPotScaling+5
  4078  00FB  0872               	movf	?___lmul+2,w
  4079  00FC  00AC               	movwf	??_runPotScaling+6
  4080  00FD  0873               	movf	?___lmul+3,w
  4081  00FE  00AD               	movwf	??_runPotScaling+7
  4082  00FF  3008               	movlw	8
  4083  0100                     u180_25:
  4084  0100  36AD               	lsrf	??_runPotScaling+7,f
  4085  0101  0CAC               	rrf	??_runPotScaling+6,f
  4086  0102  0CAB               	rrf	??_runPotScaling+5,f
  4087  0103  0CAA               	rrf	??_runPotScaling+4,f
  4088  0104                     u180_20:
  4089  0104  0B89               	decfsz	9,f
  4090  0105  2900               	goto	u180_25
  4091  0106  082B               	movf	??_runPotScaling+5,w
  4092  0107  00D0               	movwf	_setDuty+1
  4093  0108  082A               	movf	??_runPotScaling+4,w
  4094  0109  00CF               	movwf	_setDuty
  4095                           
  4096                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  4097  010A  3000               	movlw	0
  4098  010B  00F9               	movwf	___lldiv@divisor+3
  4099  010C  3000               	movlw	0
  4100  010D  00F8               	movwf	___lldiv@divisor+2
  4101  010E  3000               	movlw	0
  4102  010F  00F7               	movwf	___lldiv@divisor+1
  4103  0110  3019               	movlw	25
  4104  0111  00F6               	movwf	___lldiv@divisor
  4105  0112  305A               	movlw	90
  4106  0113  00F2               	movwf	___wmul@multiplicand
  4107  0114  3000               	movlw	0
  4108  0115  00F3               	movwf	___wmul@multiplicand+1
  4109  0116  0858               	movf	_setPeriod,w
  4110  0117  00A6               	movwf	??_runPotScaling
  4111  0118  01A7               	clrf	??_runPotScaling+1
  4112  0119  0826               	movf	??_runPotScaling,w
  4113  011A  00F0               	movwf	___wmul@multiplier
  4114  011B  0827               	movf	??_runPotScaling+1,w
  4115  011C  00F1               	movwf	___wmul@multiplier+1
  4116  011D  3187  2721  3180   	fcall	___wmul
  4117  0120  0870               	movf	?___wmul,w
  4118  0121  0020               	movlb	0	; select bank0
  4119  0122  00A8               	movwf	??_runPotScaling+2
  4120  0123  0871               	movf	?___wmul+1,w
  4121  0124  00A9               	movwf	??_runPotScaling+3
  4122  0125  01AA               	clrf	??_runPotScaling+4
  4123  0126  01AB               	clrf	??_runPotScaling+5
  4124  0127  082B               	movf	??_runPotScaling+5,w
  4125  0128  00FD               	movwf	___lldiv@dividend+3
  4126  0129  082A               	movf	??_runPotScaling+4,w
  4127  012A  00FC               	movwf	___lldiv@dividend+2
  4128  012B  0829               	movf	??_runPotScaling+3,w
  4129  012C  00FB               	movwf	___lldiv@dividend+1
  4130  012D  0828               	movf	??_runPotScaling+2,w
  4131  012E  00FA               	movwf	___lldiv@dividend
  4132  012F  3184  2470  3180   	fcall	___lldiv
  4133  0132  0877               	movf	?___lldiv+1,w
  4134  0133  0020               	movlb	0	; select bank0
  4135  0134  00AF               	movwf	runPotScaling@maxDuty+1
  4136  0135  0876               	movf	?___lldiv,w
  4137  0136  00AE               	movwf	runPotScaling@maxDuty
  4138                           
  4139                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  4140  0137  3000               	movlw	0
  4141  0138  00F9               	movwf	___lldiv@divisor+3
  4142  0139  3000               	movlw	0
  4143  013A  00F8               	movwf	___lldiv@divisor+2
  4144  013B  3000               	movlw	0
  4145  013C  00F7               	movwf	___lldiv@divisor+1
  4146  013D  3019               	movlw	25
  4147  013E  00F6               	movwf	___lldiv@divisor
  4148  013F  300A               	movlw	10
  4149  0140  00F2               	movwf	___wmul@multiplicand
  4150  0141  3000               	movlw	0
  4151  0142  00F3               	movwf	___wmul@multiplicand+1
  4152  0143  0858               	movf	_setPeriod,w
  4153  0144  00A6               	movwf	??_runPotScaling
  4154  0145  01A7               	clrf	??_runPotScaling+1
  4155  0146  0826               	movf	??_runPotScaling,w
  4156  0147  00F0               	movwf	___wmul@multiplier
  4157  0148  0827               	movf	??_runPotScaling+1,w
  4158  0149  00F1               	movwf	___wmul@multiplier+1
  4159  014A  3187  2721  3180   	fcall	___wmul
  4160  014D  0870               	movf	?___wmul,w
  4161  014E  0020               	movlb	0	; select bank0
  4162  014F  00A8               	movwf	??_runPotScaling+2
  4163  0150  0871               	movf	?___wmul+1,w
  4164  0151  00A9               	movwf	??_runPotScaling+3
  4165  0152  01AA               	clrf	??_runPotScaling+4
  4166  0153  01AB               	clrf	??_runPotScaling+5
  4167  0154  082B               	movf	??_runPotScaling+5,w
  4168  0155  00FD               	movwf	___lldiv@dividend+3
  4169  0156  082A               	movf	??_runPotScaling+4,w
  4170  0157  00FC               	movwf	___lldiv@dividend+2
  4171  0158  0829               	movf	??_runPotScaling+3,w
  4172  0159  00FB               	movwf	___lldiv@dividend+1
  4173  015A  0828               	movf	??_runPotScaling+2,w
  4174  015B  00FA               	movwf	___lldiv@dividend
  4175  015C  3184  2470  3180   	fcall	___lldiv
  4176  015F  0877               	movf	?___lldiv+1,w
  4177  0160  0020               	movlb	0	; select bank0
  4178  0161  00B1               	movwf	runPotScaling@minDuty+1
  4179  0162  0876               	movf	?___lldiv,w
  4180  0163  00B0               	movwf	runPotScaling@minDuty
  4181  0164                     i1l2013:
  4182                           
  4183                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  4184  0164  0850               	movf	_setDuty+1,w
  4185  0165  022F               	subwf	runPotScaling@maxDuty+1,w
  4186  0166  1D03               	skipz
  4187  0167  296A               	goto	u181_25
  4188  0168  084F               	movf	_setDuty,w
  4189  0169  022E               	subwf	runPotScaling@maxDuty,w
  4190  016A                     u181_25:
  4191  016A  1803               	skipnc
  4192  016B  296D               	goto	u181_21
  4193  016C  296E               	goto	u181_20
  4194  016D                     u181_21:
  4195  016D  2972               	goto	i1l347
  4196  016E                     u181_20:
  4197  016E                     i1l2015:
  4198  016E  082F               	movf	runPotScaling@maxDuty+1,w
  4199  016F  00D0               	movwf	_setDuty+1
  4200  0170  082E               	movf	runPotScaling@maxDuty,w
  4201  0171  00CF               	movwf	_setDuty
  4202  0172                     i1l347:
  4203                           
  4204                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  4205  0172  0831               	movf	runPotScaling@minDuty+1,w
  4206  0173  0250               	subwf	_setDuty+1,w
  4207  0174  1D03               	skipz
  4208  0175  2978               	goto	u182_25
  4209  0176  0830               	movf	runPotScaling@minDuty,w
  4210  0177  024F               	subwf	_setDuty,w
  4211  0178                     u182_25:
  4212  0178  1803               	skipnc
  4213  0179  297B               	goto	u182_21
  4214  017A  297C               	goto	u182_20
  4215  017B                     u182_21:
  4216  017B  2980               	goto	i1l2019
  4217  017C                     u182_20:
  4218  017C                     i1l2017:
  4219  017C  0831               	movf	runPotScaling@minDuty+1,w
  4220  017D  00D0               	movwf	_setDuty+1
  4221  017E  0830               	movf	runPotScaling@minDuty,w
  4222  017F  00CF               	movwf	_setDuty
  4223  0180                     i1l2019:
  4224                           
  4225                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  4226  0180  0850               	movf	_setDuty+1,w
  4227  0181  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  4228  0182  084F               	movf	_setDuty,w
  4229  0183  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  4230  0184  0858               	movf	_setPeriod,w
  4231  0185  00A6               	movwf	??_runPotScaling
  4232  0186  0826               	movf	??_runPotScaling,w
  4233  0187  00F2               	movwf	setPWMDutyandPeriod@period
  4234  0188  3186  26D6  3180   	fcall	_setPWMDutyandPeriod
  4235  018B                     i1l2021:
  4236                           
  4237                           ;Potentiometer.c: 72:         potSetCount = 0;
  4238  018B  0020               	movlb	0	; select bank0
  4239  018C  01D4               	clrf	_potSetCount
  4240  018D                     i1l349:
  4241  018D  0008               	return
  4242  018E                     __end_of_runPotScaling:
  4243                           
  4244                           	psect	text14
  4245  06D6                     __ptext14:	
  4246 ;; *************** function _setPWMDutyandPeriod *****************
  4247 ;; Defined at:
  4248 ;;		line 49 in file "PWM.c"
  4249 ;; Parameters:    Size  Location     Type
  4250 ;;  dutyCycle       2    0[COMMON] unsigned short 
  4251 ;;  period          1    2[COMMON] unsigned char 
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4263 ;;      Params:         3       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0
  4265 ;;      Temps:          2       0       0       0       0       0
  4266 ;;      Totals:         5       0       0       0       0       0
  4267 ;;Total ram usage:        5 bytes
  4268 ;; Hardware stack levels used: 1
  4269 ;; This function calls:
  4270 ;;		Nothing
  4271 ;; This function is called by:
  4272 ;;		_Tick980Hz
  4273 ;;		_runPotScaling
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277  06D6                     _setPWMDutyandPeriod:	
  4278                           ;psect for function _setPWMDutyandPeriod
  4279                           
  4280  06D6                     i1l1731:	
  4281                           ;incstack = 0
  4282                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  4283                           
  4284                           
  4285                           ;PWM.c: 50:     PR2 = period;
  4286  06D6  0872               	movf	setPWMDutyandPeriod@period,w
  4287  06D7  0020               	movlb	0	; select bank0
  4288  06D8  009B               	movwf	27	;volatile
  4289  06D9                     i1l1733:
  4290                           
  4291                           ;PWM.c: 51:     CCPR1L = dutyCycle >> 2;
  4292  06D9  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  4293  06DA  00F4               	movwf	??_setPWMDutyandPeriod+1
  4294  06DB  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4295  06DC  00F3               	movwf	??_setPWMDutyandPeriod
  4296  06DD  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4297  06DE  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4298  06DF  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4299  06E0  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4300  06E1  0873               	movf	??_setPWMDutyandPeriod,w
  4301  06E2  0025               	movlb	5	; select bank5
  4302  06E3  0091               	movwf	17	;volatile
  4303  06E4                     i1l1735:
  4304                           
  4305                           ;PWM.c: 52:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4306  06E4  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4307  06E5  3901               	andlw	1
  4308  06E6  00F3               	movwf	??_setPWMDutyandPeriod
  4309  06E7  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4310  06E8  0813               	movf	19,w	;volatile
  4311  06E9  0673               	xorwf	??_setPWMDutyandPeriod,w
  4312  06EA  39EF               	andlw	-17
  4313  06EB  0673               	xorwf	??_setPWMDutyandPeriod,w
  4314  06EC  0093               	movwf	19	;volatile
  4315                           
  4316                           ;PWM.c: 53:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4317  06ED  3002               	movlw	2
  4318  06EE  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4319  06EF  00F3               	movwf	??_setPWMDutyandPeriod
  4320  06F0  3000               	movlw	0
  4321  06F1  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4322  06F2  00F4               	movwf	??_setPWMDutyandPeriod+1
  4323  06F3  3000               	movlw	0
  4324  06F4  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4325  06F5  3002               	movlw	2
  4326  06F6  1903               	skipnz
  4327  06F7  0273               	subwf	??_setPWMDutyandPeriod,w
  4328  06F8  1803               	skipnc
  4329  06F9  2EFB               	goto	u115_21
  4330  06FA  2EFE               	goto	u115_20
  4331  06FB                     u115_21:
  4332  06FB  0025               	movlb	5	; select bank5
  4333  06FC  1693               	bsf	19,5	;volatile
  4334  06FD  2F00               	goto	u116_24
  4335  06FE                     u115_20:
  4336  06FE  0025               	movlb	5	; select bank5
  4337  06FF  1293               	bcf	19,5	;volatile
  4338  0700                     u116_24:
  4339  0700                     i1l155:
  4340  0700  0008               	return
  4341  0701                     __end_of_setPWMDutyandPeriod:
  4342                           
  4343                           	psect	text15
  4344  0721                     __ptext15:	
  4345 ;; *************** function ___wmul *****************
  4346 ;; Defined at:
  4347 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  multiplier      2    0[COMMON] unsigned int 
  4350 ;;  multiplicand    2    2[COMMON] unsigned int 
  4351 ;; Auto vars:     Size  Location     Type
  4352 ;;  product         2    4[COMMON] unsigned int 
  4353 ;; Return value:  Size  Location     Type
  4354 ;;                  2    0[COMMON] unsigned int 
  4355 ;; Registers used:
  4356 ;;		wreg, status,2, status,0
  4357 ;; Tracked objects:
  4358 ;;		On entry : 0/0
  4359 ;;		On exit  : 0/0
  4360 ;;		Unchanged: 0/0
  4361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4362 ;;      Params:         4       0       0       0       0       0
  4363 ;;      Locals:         2       0       0       0       0       0
  4364 ;;      Temps:          0       0       0       0       0       0
  4365 ;;      Totals:         6       0       0       0       0       0
  4366 ;;Total ram usage:        6 bytes
  4367 ;; Hardware stack levels used: 1
  4368 ;; This function calls:
  4369 ;;		Nothing
  4370 ;; This function is called by:
  4371 ;;		_runPotScaling
  4372 ;;		_convertRawToDeciVolts
  4373 ;;		_convertRawToMilliAmps
  4374 ;; This function uses a non-reentrant model
  4375 ;;
  4376                           
  4377  0721                     ___wmul:	
  4378                           ;psect for function ___wmul
  4379                           
  4380  0721                     i1l1881:	
  4381                           ;incstack = 0
  4382                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4383                           
  4384  0721  01F4               	clrf	___wmul@product
  4385  0722  01F5               	clrf	___wmul@product+1
  4386  0723                     i1l1883:
  4387  0723  1C70               	btfss	___wmul@multiplier,0
  4388  0724  2F26               	goto	u151_21
  4389  0725  2F27               	goto	u151_20
  4390  0726                     u151_21:
  4391  0726  2F2B               	goto	i1l591
  4392  0727                     u151_20:
  4393  0727                     i1l1885:
  4394  0727  0872               	movf	___wmul@multiplicand,w
  4395  0728  07F4               	addwf	___wmul@product,f
  4396  0729  0873               	movf	___wmul@multiplicand+1,w
  4397  072A  3DF5               	addwfc	___wmul@product+1,f
  4398  072B                     i1l591:
  4399  072B  3001               	movlw	1
  4400  072C                     u152_25:
  4401  072C  35F2               	lslf	___wmul@multiplicand,f
  4402  072D  0DF3               	rlf	___wmul@multiplicand+1,f
  4403  072E  0B89               	decfsz	9,f
  4404  072F  2F2C               	goto	u152_25
  4405  0730                     i1l1887:
  4406  0730  3001               	movlw	1
  4407  0731                     u153_25:
  4408  0731  36F1               	lsrf	___wmul@multiplier+1,f
  4409  0732  0CF0               	rrf	___wmul@multiplier,f
  4410  0733  0B89               	decfsz	9,f
  4411  0734  2F31               	goto	u153_25
  4412  0735                     i1l1889:
  4413  0735  0870               	movf	___wmul@multiplier,w
  4414  0736  0471               	iorwf	___wmul@multiplier+1,w
  4415  0737  1D03               	btfss	3,2
  4416  0738  2F3A               	goto	u154_21
  4417  0739  2F3B               	goto	u154_20
  4418  073A                     u154_21:
  4419  073A  2F23               	goto	i1l1883
  4420  073B                     u154_20:
  4421  073B                     i1l1891:
  4422  073B  0875               	movf	___wmul@product+1,w
  4423  073C  00F1               	movwf	?___wmul+1
  4424  073D  0874               	movf	___wmul@product,w
  4425  073E  00F0               	movwf	?___wmul
  4426  073F                     i1l593:
  4427  073F  0008               	return
  4428  0740                     __end_of___wmul:
  4429                           
  4430                           	psect	text16
  4431  0676                     __ptext16:	
  4432 ;; *************** function ___lmul *****************
  4433 ;; Defined at:
  4434 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  multiplier      4    0[COMMON] unsigned long 
  4437 ;;  multiplicand    4    4[COMMON] unsigned long 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  product         4    8[COMMON] unsigned long 
  4440 ;; Return value:  Size  Location     Type
  4441 ;;                  4    0[COMMON] unsigned long 
  4442 ;; Registers used:
  4443 ;;		wreg, status,2, status,0
  4444 ;; Tracked objects:
  4445 ;;		On entry : 0/0
  4446 ;;		On exit  : 0/0
  4447 ;;		Unchanged: 0/0
  4448 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4449 ;;      Params:         8       0       0       0       0       0
  4450 ;;      Locals:         4       0       0       0       0       0
  4451 ;;      Temps:          0       0       0       0       0       0
  4452 ;;      Totals:        12       0       0       0       0       0
  4453 ;;Total ram usage:       12 bytes
  4454 ;; Hardware stack levels used: 1
  4455 ;; This function calls:
  4456 ;;		Nothing
  4457 ;; This function is called by:
  4458 ;;		_runPotScaling
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462  0676                     ___lmul:	
  4463                           ;psect for function ___lmul
  4464                           
  4465  0676                     i1l1895:	
  4466                           ;incstack = 0
  4467                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4468                           
  4469  0676  3000               	movlw	0
  4470  0677  00FB               	movwf	___lmul@product+3
  4471  0678  3000               	movlw	0
  4472  0679  00FA               	movwf	___lmul@product+2
  4473  067A  3000               	movlw	0
  4474  067B  00F9               	movwf	___lmul@product+1
  4475  067C  3000               	movlw	0
  4476  067D  00F8               	movwf	___lmul@product
  4477  067E                     i1l1897:
  4478  067E  1C70               	btfss	___lmul@multiplier,0
  4479  067F  2E81               	goto	u155_21
  4480  0680  2E82               	goto	u155_20
  4481  0681                     u155_21:
  4482  0681  2E8A               	goto	i1l1901
  4483  0682                     u155_20:
  4484  0682                     i1l1899:
  4485  0682  0874               	movf	___lmul@multiplicand,w
  4486  0683  07F8               	addwf	___lmul@product,f
  4487  0684  0875               	movf	___lmul@multiplicand+1,w
  4488  0685  3DF9               	addwfc	___lmul@product+1,f
  4489  0686  0876               	movf	___lmul@multiplicand+2,w
  4490  0687  3DFA               	addwfc	___lmul@product+2,f
  4491  0688  0877               	movf	___lmul@multiplicand+3,w
  4492  0689  3DFB               	addwfc	___lmul@product+3,f
  4493  068A                     i1l1901:
  4494  068A  3001               	movlw	1
  4495  068B                     u156_25:
  4496  068B  35F4               	lslf	___lmul@multiplicand,f
  4497  068C  0DF5               	rlf	___lmul@multiplicand+1,f
  4498  068D  0DF6               	rlf	___lmul@multiplicand+2,f
  4499  068E  0DF7               	rlf	___lmul@multiplicand+3,f
  4500  068F  0B89               	decfsz	9,f
  4501  0690  2E8B               	goto	u156_25
  4502  0691                     i1l1903:
  4503  0691  3001               	movlw	1
  4504  0692                     u157_25:
  4505  0692  36F3               	lsrf	___lmul@multiplier+3,f
  4506  0693  0CF2               	rrf	___lmul@multiplier+2,f
  4507  0694  0CF1               	rrf	___lmul@multiplier+1,f
  4508  0695  0CF0               	rrf	___lmul@multiplier,f
  4509  0696  0B89               	decfsz	9,f
  4510  0697  2E92               	goto	u157_25
  4511  0698  0873               	movf	___lmul@multiplier+3,w
  4512  0699  0472               	iorwf	___lmul@multiplier+2,w
  4513  069A  0471               	iorwf	___lmul@multiplier+1,w
  4514  069B  0470               	iorwf	___lmul@multiplier,w
  4515  069C  1D03               	skipz
  4516  069D  2E9F               	goto	u158_21
  4517  069E  2EA0               	goto	u158_20
  4518  069F                     u158_21:
  4519  069F  2E7E               	goto	i1l1897
  4520  06A0                     u158_20:
  4521  06A0                     i1l1905:
  4522  06A0  087B               	movf	___lmul@product+3,w
  4523  06A1  00F3               	movwf	?___lmul+3
  4524  06A2  087A               	movf	___lmul@product+2,w
  4525  06A3  00F2               	movwf	?___lmul+2
  4526  06A4  0879               	movf	___lmul@product+1,w
  4527  06A5  00F1               	movwf	?___lmul+1
  4528  06A6  0878               	movf	___lmul@product,w
  4529  06A7  00F0               	movwf	?___lmul
  4530  06A8                     i1l605:
  4531  06A8  0008               	return
  4532  06A9                     __end_of___lmul:
  4533                           
  4534                           	psect	text17
  4535  0470                     __ptext17:	
  4536 ;; *************** function ___lldiv *****************
  4537 ;; Defined at:
  4538 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  divisor         4    6[COMMON] unsigned long 
  4541 ;;  dividend        4   10[COMMON] unsigned long 
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;  quotient        4    1[BANK0 ] unsigned long 
  4544 ;;  counter         1    5[BANK0 ] unsigned char 
  4545 ;; Return value:  Size  Location     Type
  4546 ;;                  4    6[COMMON] unsigned long 
  4547 ;; Registers used:
  4548 ;;		wreg, status,2, status,0
  4549 ;; Tracked objects:
  4550 ;;		On entry : 0/0
  4551 ;;		On exit  : 0/0
  4552 ;;		Unchanged: 0/0
  4553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4554 ;;      Params:         8       0       0       0       0       0
  4555 ;;      Locals:         0       5       0       0       0       0
  4556 ;;      Temps:          0       1       0       0       0       0
  4557 ;;      Totals:         8       6       0       0       0       0
  4558 ;;Total ram usage:       14 bytes
  4559 ;; Hardware stack levels used: 1
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_runPotScaling
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567  0470                     ___lldiv:	
  4568                           ;psect for function ___lldiv
  4569                           
  4570  0470                     i1l1909:	
  4571                           ;incstack = 0
  4572                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4573                           
  4574  0470  3000               	movlw	0
  4575  0471  0020               	movlb	0	; select bank0
  4576  0472  00A4               	movwf	___lldiv@quotient+3
  4577  0473  3000               	movlw	0
  4578  0474  00A3               	movwf	___lldiv@quotient+2
  4579  0475  3000               	movlw	0
  4580  0476  00A2               	movwf	___lldiv@quotient+1
  4581  0477  3000               	movlw	0
  4582  0478  00A1               	movwf	___lldiv@quotient
  4583  0479  0879               	movf	___lldiv@divisor+3,w
  4584  047A  0478               	iorwf	___lldiv@divisor+2,w
  4585  047B  0477               	iorwf	___lldiv@divisor+1,w
  4586  047C  0476               	iorwf	___lldiv@divisor,w
  4587  047D  1903               	skipnz
  4588  047E  2C80               	goto	u159_21
  4589  047F  2C81               	goto	u159_20
  4590  0480                     u159_21:
  4591  0480  2CC2               	goto	i1l1929
  4592  0481                     u159_20:
  4593  0481                     i1l1911:
  4594  0481  01A5               	clrf	___lldiv@counter
  4595  0482  0AA5               	incf	___lldiv@counter,f
  4596  0483  2C8F               	goto	i1l1915
  4597  0484                     i1l1913:
  4598  0484  3001               	movlw	1
  4599  0485                     u160_25:
  4600  0485  35F6               	lslf	___lldiv@divisor,f
  4601  0486  0DF7               	rlf	___lldiv@divisor+1,f
  4602  0487  0DF8               	rlf	___lldiv@divisor+2,f
  4603  0488  0DF9               	rlf	___lldiv@divisor+3,f
  4604  0489  0B89               	decfsz	9,f
  4605  048A  2C85               	goto	u160_25
  4606  048B  3001               	movlw	1
  4607  048C  00A0               	movwf	??___lldiv
  4608  048D  0820               	movf	??___lldiv,w
  4609  048E  07A5               	addwf	___lldiv@counter,f
  4610  048F                     i1l1915:
  4611  048F  1FF9               	btfss	___lldiv@divisor+3,7
  4612  0490  2C92               	goto	u161_21
  4613  0491  2C93               	goto	u161_20
  4614  0492                     u161_21:
  4615  0492  2C84               	goto	i1l1913
  4616  0493                     u161_20:
  4617  0493                     i1l1917:
  4618  0493  3001               	movlw	1
  4619  0494                     u162_25:
  4620  0494  35A1               	lslf	___lldiv@quotient,f
  4621  0495  0DA2               	rlf	___lldiv@quotient+1,f
  4622  0496  0DA3               	rlf	___lldiv@quotient+2,f
  4623  0497  0DA4               	rlf	___lldiv@quotient+3,f
  4624  0498  0B89               	decfsz	9,f
  4625  0499  2C94               	goto	u162_25
  4626  049A                     i1l1919:
  4627  049A  0879               	movf	___lldiv@divisor+3,w
  4628  049B  027D               	subwf	___lldiv@dividend+3,w
  4629  049C  1D03               	skipz
  4630  049D  2CA8               	goto	u163_25
  4631  049E  0878               	movf	___lldiv@divisor+2,w
  4632  049F  027C               	subwf	___lldiv@dividend+2,w
  4633  04A0  1D03               	skipz
  4634  04A1  2CA8               	goto	u163_25
  4635  04A2  0877               	movf	___lldiv@divisor+1,w
  4636  04A3  027B               	subwf	___lldiv@dividend+1,w
  4637  04A4  1D03               	skipz
  4638  04A5  2CA8               	goto	u163_25
  4639  04A6  0876               	movf	___lldiv@divisor,w
  4640  04A7  027A               	subwf	___lldiv@dividend,w
  4641  04A8                     u163_25:
  4642  04A8  1C03               	skipc
  4643  04A9  2CAB               	goto	u163_21
  4644  04AA  2CAC               	goto	u163_20
  4645  04AB                     u163_21:
  4646  04AB  2CB5               	goto	i1l1925
  4647  04AC                     u163_20:
  4648  04AC                     i1l1921:
  4649  04AC  0876               	movf	___lldiv@divisor,w
  4650  04AD  02FA               	subwf	___lldiv@dividend,f
  4651  04AE  0877               	movf	___lldiv@divisor+1,w
  4652  04AF  3BFB               	subwfb	___lldiv@dividend+1,f
  4653  04B0  0878               	movf	___lldiv@divisor+2,w
  4654  04B1  3BFC               	subwfb	___lldiv@dividend+2,f
  4655  04B2  0879               	movf	___lldiv@divisor+3,w
  4656  04B3  3BFD               	subwfb	___lldiv@dividend+3,f
  4657  04B4                     i1l1923:
  4658  04B4  1421               	bsf	___lldiv@quotient,0
  4659  04B5                     i1l1925:
  4660  04B5  3001               	movlw	1
  4661  04B6                     u164_25:
  4662  04B6  36F9               	lsrf	___lldiv@divisor+3,f
  4663  04B7  0CF8               	rrf	___lldiv@divisor+2,f
  4664  04B8  0CF7               	rrf	___lldiv@divisor+1,f
  4665  04B9  0CF6               	rrf	___lldiv@divisor,f
  4666  04BA  0B89               	decfsz	9,f
  4667  04BB  2CB6               	goto	u164_25
  4668  04BC                     i1l1927:
  4669  04BC  3001               	movlw	1
  4670  04BD  02A5               	subwf	___lldiv@counter,f
  4671  04BE  1D03               	btfss	3,2
  4672  04BF  2CC1               	goto	u165_21
  4673  04C0  2CC2               	goto	u165_20
  4674  04C1                     u165_21:
  4675  04C1  2C93               	goto	i1l1917
  4676  04C2                     u165_20:
  4677  04C2                     i1l1929:
  4678  04C2  0824               	movf	___lldiv@quotient+3,w
  4679  04C3  00F9               	movwf	?___lldiv+3
  4680  04C4  0823               	movf	___lldiv@quotient+2,w
  4681  04C5  00F8               	movwf	?___lldiv+2
  4682  04C6  0822               	movf	___lldiv@quotient+1,w
  4683  04C7  00F7               	movwf	?___lldiv+1
  4684  04C8  0821               	movf	___lldiv@quotient,w
  4685  04C9  00F6               	movwf	?___lldiv
  4686  04CA                     i1l627:
  4687  04CA  0008               	return
  4688  04CB                     __end_of___lldiv:
  4689                           
  4690                           	psect	text18
  4691  07A9                     __ptext18:	
  4692 ;; *************** function _readILCurrentADCRaw *****************
  4693 ;; Defined at:
  4694 ;;		line 108 in file "ADC.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  2    0[COMMON] unsigned short 
  4701 ;; Registers used:
  4702 ;;		wreg
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4708 ;;      Params:         2       0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0       0
  4711 ;;      Totals:         2       0       0       0       0       0
  4712 ;;Total ram usage:        2 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; This function calls:
  4715 ;;		Nothing
  4716 ;; This function is called by:
  4717 ;;		_Tick980Hz
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721  07A9                     _readILCurrentADCRaw:	
  4722                           ;psect for function _readILCurrentADCRaw
  4723                           
  4724  07A9                     i1l2087:	
  4725                           ;incstack = 0
  4726                           ; Regs used in _readILCurrentADCRaw: [wreg]
  4727                           
  4728                           
  4729                           ;ADC.c: 110:     if(~ADCON0bits.GO_nDONE){
  4730  07A9  0021               	movlb	1	; select bank1
  4731  07AA  081D               	movf	29,w	;volatile
  4732  07AB                     i1l2089:
  4733                           
  4734                           ;ADC.c: 111:         ADCON0bits.GO_nDONE = 1;
  4735  07AB  149D               	bsf	29,1	;volatile
  4736  07AC                     i1l235:	
  4737                           ;ADC.c: 112:         while(ADCON0bits.GO_nDONE);
  4738                           
  4739  07AC  189D               	btfsc	29,1	;volatile
  4740  07AD  2FAF               	goto	u189_21
  4741  07AE  2FB0               	goto	u189_20
  4742  07AF                     u189_21:
  4743  07AF  2FAC               	goto	i1l235
  4744  07B0                     u189_20:
  4745  07B0                     i1l2091:
  4746                           
  4747                           ;ADC.c: 113:         return ((ADRESH<<8)+ADRESL);
  4748  07B0  081C               	movf	28,w	;volatile
  4749  07B1  00F1               	movwf	?_readILCurrentADCRaw+1
  4750  07B2  081B               	movf	27,w	;volatile
  4751  07B3  00F0               	movwf	?_readILCurrentADCRaw
  4752  07B4                     i1l238:
  4753  07B4  0008               	return
  4754  07B5                     __end_of_readILCurrentADCRaw:
  4755                           
  4756                           	psect	text19
  4757  04CB                     __ptext19:	
  4758 ;; *************** function _readFilteredVout *****************
  4759 ;; Defined at:
  4760 ;;		line 18 in file "Controller.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  i               1    8[BANK0 ] unsigned char 
  4765 ;;  i               1    9[BANK0 ] unsigned char 
  4766 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2   11[COMMON] unsigned short 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 0/0
  4773 ;;		On exit  : 0/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4776 ;;      Params:         2       0       0       0       0       0
  4777 ;;      Locals:         0       6       0       0       0       0
  4778 ;;      Temps:          0       4       0       0       0       0
  4779 ;;      Totals:         2      10       0       0       0       0
  4780 ;;Total ram usage:       12 bytes
  4781 ;; Hardware stack levels used: 1
  4782 ;; Hardware stack levels required when called: 1
  4783 ;; This function calls:
  4784 ;;		_readADCRaw
  4785 ;; This function is called by:
  4786 ;;		_Tick980Hz
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790  04CB                     _readFilteredVout:	
  4791                           ;psect for function _readFilteredVout
  4792                           
  4793  04CB                     i1l1977:	
  4794                           ;incstack = 0
  4795                           ; Regs used in _readFilteredVout: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4796                           
  4797                           
  4798                           ;Controller.c: 19:     for(uint8_t i=0; i<16 -1; i++) voutFIFO[i] = voutFIFO[i+1];
  4799  04CB  0020               	movlb	0	; select bank0
  4800  04CC  01A9               	clrf	readFilteredVout@i
  4801  04CD                     i1l1983:
  4802  04CD  3529               	lslf	readFilteredVout@i,w
  4803  04CE  3E42               	addlw	(low ((_voutFIFO| (0+256)+2)))& (0+255)
  4804  04CF  0086               	movwf	6
  4805  04D0  3001               	movlw	1	; select bank2/3
  4806  04D1  0087               	movwf	7
  4807  04D2  3529               	lslf	readFilteredVout@i,w
  4808  04D3  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  4809  04D4  0084               	movwf	4
  4810  04D5  3001               	movlw	1	; select bank2/3
  4811  04D6  0085               	movwf	5
  4812  04D7  3F40               	moviw [0]fsr1
  4813  04D8  3F80               	movwi [0]fsr0
  4814  04D9  3F41               	moviw [1]fsr1
  4815  04DA  3F81               	movwi [1]fsr0
  4816  04DB                     i1l1985:
  4817  04DB  3001               	movlw	1
  4818  04DC  00A0               	movwf	??_readFilteredVout
  4819  04DD  0820               	movf	??_readFilteredVout,w
  4820  04DE  07A9               	addwf	readFilteredVout@i,f
  4821  04DF                     i1l1987:
  4822  04DF  300F               	movlw	15
  4823  04E0  0229               	subwf	readFilteredVout@i,w
  4824  04E1  1C03               	skipc
  4825  04E2  2CE4               	goto	u175_21
  4826  04E3  2CE5               	goto	u175_20
  4827  04E4                     u175_21:
  4828  04E4  2CCD               	goto	i1l1983
  4829  04E5                     u175_20:
  4830  04E5                     i1l1989:
  4831                           
  4832                           ;Controller.c: 20:     voutFIFO[16 -1] = readADCRaw(pinRA4);
  4833  04E5  3004               	movlw	4
  4834  04E6  3183  234F  3184   	fcall	_readADCRaw
  4835  04E9  0871               	movf	?_readADCRaw+1,w
  4836  04EA  0022               	movlb	2	; select bank2
  4837  04EB  00DF               	movwf	((_voutFIFO+1)^(0+256)+30)
  4838  04EC  0870               	movf	?_readADCRaw,w
  4839  04ED  00DE               	movwf	(_voutFIFO^(0+256)+30)
  4840  04EE                     i1l1991:
  4841                           
  4842                           ;Controller.c: 21:     uint32_t sumOfSamples = 0;
  4843  04EE  3000               	movlw	0
  4844  04EF  0020               	movlb	0	; select bank0
  4845  04F0  00A7               	movwf	readFilteredVout@sumOfSamples+3
  4846  04F1  3000               	movlw	0
  4847  04F2  00A6               	movwf	readFilteredVout@sumOfSamples+2
  4848  04F3  3000               	movlw	0
  4849  04F4  00A5               	movwf	readFilteredVout@sumOfSamples+1
  4850  04F5  3000               	movlw	0
  4851  04F6  00A4               	movwf	readFilteredVout@sumOfSamples
  4852  04F7                     i1l1993:
  4853                           
  4854                           ;Controller.c: 22:     for(uint8_t i=0; i<16; i++) sumOfSamples += voutFIFO[i];
  4855  04F7  01A8               	clrf	readFilteredVout@i_748
  4856  04F8                     i1l1999:
  4857  04F8  3528               	lslf	readFilteredVout@i_748,w
  4858  04F9  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  4859  04FA  0086               	movwf	6
  4860  04FB  3001               	movlw	1	; select bank2/3
  4861  04FC  0087               	movwf	7
  4862  04FD  3F40               	moviw [0]fsr1
  4863  04FE  00A0               	movwf	??_readFilteredVout
  4864  04FF  3F41               	moviw [1]fsr1
  4865  0500  00A1               	movwf	??_readFilteredVout+1
  4866  0501  0820               	movf	??_readFilteredVout,w
  4867  0502  07A4               	addwf	readFilteredVout@sumOfSamples,f
  4868  0503  0821               	movf	??_readFilteredVout+1,w
  4869  0504  3DA5               	addwfc	readFilteredVout@sumOfSamples+1,f
  4870  0505  3000               	movlw	0
  4871  0506  3DA6               	addwfc	readFilteredVout@sumOfSamples+2,f
  4872  0507  3DA7               	addwfc	readFilteredVout@sumOfSamples+3,f
  4873  0508                     i1l2001:
  4874  0508  3001               	movlw	1
  4875  0509  00A0               	movwf	??_readFilteredVout
  4876  050A  0820               	movf	??_readFilteredVout,w
  4877  050B  07A8               	addwf	readFilteredVout@i_748,f
  4878  050C                     i1l2003:
  4879  050C  3010               	movlw	16
  4880  050D  0228               	subwf	readFilteredVout@i_748,w
  4881  050E  1C03               	skipc
  4882  050F  2D11               	goto	u176_21
  4883  0510  2D12               	goto	u176_20
  4884  0511                     u176_21:
  4885  0511  2CF8               	goto	i1l1999
  4886  0512                     u176_20:
  4887  0512                     i1l2005:
  4888                           
  4889                           ;Controller.c: 24:     return (sumOfSamples >> 4);
  4890  0512  0824               	movf	readFilteredVout@sumOfSamples,w
  4891  0513  00A0               	movwf	??_readFilteredVout
  4892  0514  0825               	movf	readFilteredVout@sumOfSamples+1,w
  4893  0515  00A1               	movwf	??_readFilteredVout+1
  4894  0516  0826               	movf	readFilteredVout@sumOfSamples+2,w
  4895  0517  00A2               	movwf	??_readFilteredVout+2
  4896  0518  0827               	movf	readFilteredVout@sumOfSamples+3,w
  4897  0519  00A3               	movwf	??_readFilteredVout+3
  4898  051A  3004               	movlw	4
  4899  051B                     u177_25:
  4900  051B  36A3               	lsrf	??_readFilteredVout+3,f
  4901  051C  0CA2               	rrf	??_readFilteredVout+2,f
  4902  051D  0CA1               	rrf	??_readFilteredVout+1,f
  4903  051E  0CA0               	rrf	??_readFilteredVout,f
  4904  051F                     u177_20:
  4905  051F  0B89               	decfsz	9,f
  4906  0520  2D1B               	goto	u177_25
  4907  0521  0821               	movf	??_readFilteredVout+1,w
  4908  0522  00FC               	movwf	?_readFilteredVout+1
  4909  0523  0820               	movf	??_readFilteredVout,w
  4910  0524  00FB               	movwf	?_readFilteredVout
  4911  0525                     i1l372:
  4912  0525  0008               	return
  4913  0526                     __end_of_readFilteredVout:
  4914                           
  4915                           	psect	text20
  4916  05DC                     __ptext20:	
  4917 ;; *************** function _readFilteredIL *****************
  4918 ;; Defined at:
  4919 ;;		line 55 in file "CurrentSensor.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;		None
  4922 ;; Auto vars:     Size  Location     Type
  4923 ;;  i               1   10[COMMON] unsigned char 
  4924 ;;  i               1   11[COMMON] unsigned char 
  4925 ;;  sumOfSamples    4    6[COMMON] unsigned long 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  2    0[COMMON] unsigned short 
  4928 ;; Registers used:
  4929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4935 ;;      Params:         2       0       0       0       0       0
  4936 ;;      Locals:         6       0       0       0       0       0
  4937 ;;      Temps:          4       0       0       0       0       0
  4938 ;;      Totals:        12       0       0       0       0       0
  4939 ;;Total ram usage:       12 bytes
  4940 ;; Hardware stack levels used: 1
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_Tick980Hz
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948  05DC                     _readFilteredIL:	
  4949                           ;psect for function _readFilteredIL
  4950                           
  4951  05DC                     i1l1947:	
  4952                           ;incstack = 0
  4953                           ; Regs used in _readFilteredIL: [wreg-fsr1h+status,2+status,0]
  4954                           
  4955                           
  4956                           ;CurrentSensor.c: 56:     for(uint8_t i=0; i<16 -1; i++) currentILFIFO[i] = currentILFIF
      +                          O[i+1];
  4957  05DC  01FB               	clrf	readFilteredIL@i
  4958  05DD                     i1l1953:
  4959  05DD  357B               	lslf	readFilteredIL@i,w
  4960  05DE  3EA2               	addlw	(low ((_currentILFIFO| 0+2)))& (0+255)
  4961  05DF  0086               	movwf	6
  4962  05E0  0187               	clrf	7
  4963  05E1  357B               	lslf	readFilteredIL@i,w
  4964  05E2  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  4965  05E3  0084               	movwf	4
  4966  05E4  0185               	clrf	5
  4967  05E5  3F40               	moviw [0]fsr1
  4968  05E6  3F80               	movwi [0]fsr0
  4969  05E7  3F41               	moviw [1]fsr1
  4970  05E8  3F81               	movwi [1]fsr0
  4971  05E9                     i1l1955:
  4972  05E9  3001               	movlw	1
  4973  05EA  00F2               	movwf	??_readFilteredIL
  4974  05EB  0872               	movf	??_readFilteredIL,w
  4975  05EC  07FB               	addwf	readFilteredIL@i,f
  4976  05ED                     i1l1957:
  4977  05ED  300F               	movlw	15
  4978  05EE  027B               	subwf	readFilteredIL@i,w
  4979  05EF  1C03               	skipc
  4980  05F0  2DF2               	goto	u172_21
  4981  05F1  2DF3               	goto	u172_20
  4982  05F2                     u172_21:
  4983  05F2  2DDD               	goto	i1l1953
  4984  05F3                     u172_20:
  4985  05F3                     i1l1959:
  4986                           
  4987                           ;CurrentSensor.c: 57:     currentILFIFO[16 -1] = latestIL;
  4988  05F3  0020               	movlb	0	; select bank0
  4989  05F4  084C               	movf	_latestIL+1,w	;volatile
  4990  05F5  0021               	movlb	1	; select bank1
  4991  05F6  00BF               	movwf	((_currentILFIFO+1)^(0+128)+30)
  4992  05F7  0020               	movlb	0	; select bank0
  4993  05F8  084B               	movf	_latestIL,w	;volatile
  4994  05F9  0021               	movlb	1	; select bank1
  4995  05FA  00BE               	movwf	(_currentILFIFO^(0+128)+30)
  4996                           
  4997                           ;CurrentSensor.c: 58:     uint32_t sumOfSamples = 0;
  4998  05FB  3000               	movlw	0
  4999  05FC  00F9               	movwf	readFilteredIL@sumOfSamples+3
  5000  05FD  3000               	movlw	0
  5001  05FE  00F8               	movwf	readFilteredIL@sumOfSamples+2
  5002  05FF  3000               	movlw	0
  5003  0600  00F7               	movwf	readFilteredIL@sumOfSamples+1
  5004  0601  3000               	movlw	0
  5005  0602  00F6               	movwf	readFilteredIL@sumOfSamples
  5006  0603                     i1l1961:
  5007                           
  5008                           ;CurrentSensor.c: 59:     for(uint8_t i=0; i<16; i++) sumOfSamples += currentILFIFO[i];
  5009  0603  01FA               	clrf	readFilteredIL@i_820
  5010  0604                     i1l1967:
  5011  0604  357A               	lslf	readFilteredIL@i_820,w
  5012  0605  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  5013  0606  0086               	movwf	6
  5014  0607  0187               	clrf	7
  5015  0608  3F40               	moviw [0]fsr1
  5016  0609  00F2               	movwf	??_readFilteredIL
  5017  060A  3F41               	moviw [1]fsr1
  5018  060B  00F3               	movwf	??_readFilteredIL+1
  5019  060C  0872               	movf	??_readFilteredIL,w
  5020  060D  07F6               	addwf	readFilteredIL@sumOfSamples,f
  5021  060E  0873               	movf	??_readFilteredIL+1,w
  5022  060F  3DF7               	addwfc	readFilteredIL@sumOfSamples+1,f
  5023  0610  3000               	movlw	0
  5024  0611  3DF8               	addwfc	readFilteredIL@sumOfSamples+2,f
  5025  0612  3DF9               	addwfc	readFilteredIL@sumOfSamples+3,f
  5026  0613                     i1l1969:
  5027  0613  3001               	movlw	1
  5028  0614  00F2               	movwf	??_readFilteredIL
  5029  0615  0872               	movf	??_readFilteredIL,w
  5030  0616  07FA               	addwf	readFilteredIL@i_820,f
  5031  0617                     i1l1971:
  5032  0617  3010               	movlw	16
  5033  0618  027A               	subwf	readFilteredIL@i_820,w
  5034  0619  1C03               	skipc
  5035  061A  2E1C               	goto	u173_21
  5036  061B  2E1D               	goto	u173_20
  5037  061C                     u173_21:
  5038  061C  2E04               	goto	i1l1967
  5039  061D                     u173_20:
  5040  061D                     i1l1973:
  5041                           
  5042                           ;CurrentSensor.c: 61:     return (sumOfSamples >> 4);
  5043  061D  0876               	movf	readFilteredIL@sumOfSamples,w
  5044  061E  00F2               	movwf	??_readFilteredIL
  5045  061F  0877               	movf	readFilteredIL@sumOfSamples+1,w
  5046  0620  00F3               	movwf	??_readFilteredIL+1
  5047  0621  0878               	movf	readFilteredIL@sumOfSamples+2,w
  5048  0622  00F4               	movwf	??_readFilteredIL+2
  5049  0623  0879               	movf	readFilteredIL@sumOfSamples+3,w
  5050  0624  00F5               	movwf	??_readFilteredIL+3
  5051  0625  3004               	movlw	4
  5052  0626                     u174_25:
  5053  0626  36F5               	lsrf	??_readFilteredIL+3,f
  5054  0627  0CF4               	rrf	??_readFilteredIL+2,f
  5055  0628  0CF3               	rrf	??_readFilteredIL+1,f
  5056  0629  0CF2               	rrf	??_readFilteredIL,f
  5057  062A                     u174_20:
  5058  062A  0B89               	decfsz	9,f
  5059  062B  2E26               	goto	u174_25
  5060  062C  0873               	movf	??_readFilteredIL+1,w
  5061  062D  00F1               	movwf	?_readFilteredIL+1
  5062  062E  0872               	movf	??_readFilteredIL,w
  5063  062F  00F0               	movwf	?_readFilteredIL
  5064  0630                     i1l435:
  5065  0630  0008               	return
  5066  0631                     __end_of_readFilteredIL:
  5067                           
  5068                           	psect	text21
  5069  0526                     __ptext21:	
  5070 ;; *************** function _readFilteredFreqPot *****************
  5071 ;; Defined at:
  5072 ;;		line 39 in file "Potentiometer.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;		None
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  i               1    8[BANK0 ] unsigned char 
  5077 ;;  i               1    9[BANK0 ] unsigned char 
  5078 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  2   11[COMMON] unsigned short 
  5081 ;; Registers used:
  5082 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5088 ;;      Params:         2       0       0       0       0       0
  5089 ;;      Locals:         0       6       0       0       0       0
  5090 ;;      Temps:          0       4       0       0       0       0
  5091 ;;      Totals:         2      10       0       0       0       0
  5092 ;;Total ram usage:       12 bytes
  5093 ;; Hardware stack levels used: 1
  5094 ;; Hardware stack levels required when called: 1
  5095 ;; This function calls:
  5096 ;;		_readADCRaw
  5097 ;; This function is called by:
  5098 ;;		_Tick980Hz
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102  0526                     _readFilteredFreqPot:	
  5103                           ;psect for function _readFilteredFreqPot
  5104                           
  5105  0526                     i1l2055:	
  5106                           ;incstack = 0
  5107                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5108                           
  5109                           
  5110                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  5111  0526  0020               	movlb	0	; select bank0
  5112  0527  01A9               	clrf	readFilteredFreqPot@i
  5113  0528                     i1l2061:
  5114  0528  3529               	lslf	readFilteredFreqPot@i,w
  5115  0529  3E22               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  5116  052A  0086               	movwf	6
  5117  052B  3001               	movlw	1	; select bank2/3
  5118  052C  0087               	movwf	7
  5119  052D  3529               	lslf	readFilteredFreqPot@i,w
  5120  052E  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5121  052F  0084               	movwf	4
  5122  0530  3001               	movlw	1	; select bank2/3
  5123  0531  0085               	movwf	5
  5124  0532  3F40               	moviw [0]fsr1
  5125  0533  3F80               	movwi [0]fsr0
  5126  0534  3F41               	moviw [1]fsr1
  5127  0535  3F81               	movwi [1]fsr0
  5128  0536                     i1l2063:
  5129  0536  3001               	movlw	1
  5130  0537  00A0               	movwf	??_readFilteredFreqPot
  5131  0538  0820               	movf	??_readFilteredFreqPot,w
  5132  0539  07A9               	addwf	readFilteredFreqPot@i,f
  5133  053A                     i1l2065:
  5134  053A  300F               	movlw	15
  5135  053B  0229               	subwf	readFilteredFreqPot@i,w
  5136  053C  1C03               	skipc
  5137  053D  2D3F               	goto	u186_21
  5138  053E  2D40               	goto	u186_20
  5139  053F                     u186_21:
  5140  053F  2D28               	goto	i1l2061
  5141  0540                     u186_20:
  5142  0540                     i1l2067:
  5143                           
  5144                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  5145  0540  300A               	movlw	10
  5146  0541  3183  234F  3185   	fcall	_readADCRaw
  5147  0544  0871               	movf	?_readADCRaw+1,w
  5148  0545  0022               	movlb	2	; select bank2
  5149  0546  00BF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  5150  0547  0870               	movf	?_readADCRaw,w
  5151  0548  00BE               	movwf	(_freqPotFIFO^(0+256)+30)
  5152  0549                     i1l2069:
  5153                           
  5154                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  5155  0549  3000               	movlw	0
  5156  054A  0020               	movlb	0	; select bank0
  5157  054B  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  5158  054C  3000               	movlw	0
  5159  054D  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  5160  054E  3000               	movlw	0
  5161  054F  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  5162  0550  3000               	movlw	0
  5163  0551  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  5164  0552                     i1l2071:
  5165                           
  5166                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  5167  0552  01A8               	clrf	readFilteredFreqPot@i_716
  5168  0553                     i1l2077:
  5169  0553  3528               	lslf	readFilteredFreqPot@i_716,w
  5170  0554  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5171  0555  0086               	movwf	6
  5172  0556  3001               	movlw	1	; select bank2/3
  5173  0557  0087               	movwf	7
  5174  0558  3F40               	moviw [0]fsr1
  5175  0559  00A0               	movwf	??_readFilteredFreqPot
  5176  055A  3F41               	moviw [1]fsr1
  5177  055B  00A1               	movwf	??_readFilteredFreqPot+1
  5178  055C  0820               	movf	??_readFilteredFreqPot,w
  5179  055D  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  5180  055E  0821               	movf	??_readFilteredFreqPot+1,w
  5181  055F  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  5182  0560  3000               	movlw	0
  5183  0561  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  5184  0562  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  5185  0563                     i1l2079:
  5186  0563  3001               	movlw	1
  5187  0564  00A0               	movwf	??_readFilteredFreqPot
  5188  0565  0820               	movf	??_readFilteredFreqPot,w
  5189  0566  07A8               	addwf	readFilteredFreqPot@i_716,f
  5190  0567                     i1l2081:
  5191  0567  3010               	movlw	16
  5192  0568  0228               	subwf	readFilteredFreqPot@i_716,w
  5193  0569  1C03               	skipc
  5194  056A  2D6C               	goto	u187_21
  5195  056B  2D6D               	goto	u187_20
  5196  056C                     u187_21:
  5197  056C  2D53               	goto	i1l2077
  5198  056D                     u187_20:
  5199  056D                     i1l2083:
  5200                           
  5201                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  5202  056D  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  5203  056E  00A0               	movwf	??_readFilteredFreqPot
  5204  056F  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  5205  0570  00A1               	movwf	??_readFilteredFreqPot+1
  5206  0571  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  5207  0572  00A2               	movwf	??_readFilteredFreqPot+2
  5208  0573  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  5209  0574  00A3               	movwf	??_readFilteredFreqPot+3
  5210  0575  3004               	movlw	4
  5211  0576                     u188_25:
  5212  0576  36A3               	lsrf	??_readFilteredFreqPot+3,f
  5213  0577  0CA2               	rrf	??_readFilteredFreqPot+2,f
  5214  0578  0CA1               	rrf	??_readFilteredFreqPot+1,f
  5215  0579  0CA0               	rrf	??_readFilteredFreqPot,f
  5216  057A                     u188_20:
  5217  057A  0B89               	decfsz	9,f
  5218  057B  2D76               	goto	u188_25
  5219  057C  0821               	movf	??_readFilteredFreqPot+1,w
  5220  057D  00FC               	movwf	?_readFilteredFreqPot+1
  5221  057E  0820               	movf	??_readFilteredFreqPot,w
  5222  057F  00FB               	movwf	?_readFilteredFreqPot
  5223  0580                     i1l343:
  5224  0580  0008               	return
  5225  0581                     __end_of_readFilteredFreqPot:
  5226                           
  5227                           	psect	text22
  5228  0581                     __ptext22:	
  5229 ;; *************** function _readFilteredDutyPot *****************
  5230 ;; Defined at:
  5231 ;;		line 25 in file "Potentiometer.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;		None
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  i               1    8[BANK0 ] unsigned char 
  5236 ;;  i               1    9[BANK0 ] unsigned char 
  5237 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  2   11[COMMON] unsigned short 
  5240 ;; Registers used:
  5241 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5247 ;;      Params:         2       0       0       0       0       0
  5248 ;;      Locals:         0       6       0       0       0       0
  5249 ;;      Temps:          0       4       0       0       0       0
  5250 ;;      Totals:         2      10       0       0       0       0
  5251 ;;Total ram usage:       12 bytes
  5252 ;; Hardware stack levels used: 1
  5253 ;; Hardware stack levels required when called: 1
  5254 ;; This function calls:
  5255 ;;		_readADCRaw
  5256 ;; This function is called by:
  5257 ;;		_Tick980Hz
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           
  5261  0581                     _readFilteredDutyPot:	
  5262                           ;psect for function _readFilteredDutyPot
  5263                           
  5264  0581                     i1l2023:	
  5265                           ;incstack = 0
  5266                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5267                           
  5268                           
  5269                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  5270  0581  0020               	movlb	0	; select bank0
  5271  0582  01A9               	clrf	readFilteredDutyPot@i
  5272  0583                     i1l2029:
  5273  0583  3529               	lslf	readFilteredDutyPot@i,w
  5274  0584  3EA2               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  5275  0585  0086               	movwf	6
  5276  0586  3001               	movlw	1	; select bank3/4
  5277  0587  0087               	movwf	7
  5278  0588  3529               	lslf	readFilteredDutyPot@i,w
  5279  0589  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5280  058A  0084               	movwf	4
  5281  058B  3001               	movlw	1	; select bank3/4
  5282  058C  0085               	movwf	5
  5283  058D  3F40               	moviw [0]fsr1
  5284  058E  3F80               	movwi [0]fsr0
  5285  058F  3F41               	moviw [1]fsr1
  5286  0590  3F81               	movwi [1]fsr0
  5287  0591                     i1l2031:
  5288  0591  3001               	movlw	1
  5289  0592  00A0               	movwf	??_readFilteredDutyPot
  5290  0593  0820               	movf	??_readFilteredDutyPot,w
  5291  0594  07A9               	addwf	readFilteredDutyPot@i,f
  5292  0595                     i1l2033:
  5293  0595  300F               	movlw	15
  5294  0596  0229               	subwf	readFilteredDutyPot@i,w
  5295  0597  1C03               	skipc
  5296  0598  2D9A               	goto	u183_21
  5297  0599  2D9B               	goto	u183_20
  5298  059A                     u183_21:
  5299  059A  2D83               	goto	i1l2029
  5300  059B                     u183_20:
  5301  059B                     i1l2035:
  5302                           
  5303                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  5304  059B  3009               	movlw	9
  5305  059C  3183  234F  3185   	fcall	_readADCRaw
  5306  059F  0871               	movf	?_readADCRaw+1,w
  5307  05A0  0023               	movlb	3	; select bank3
  5308  05A1  00BF               	movwf	((_dutyPotFIFO+1)^(0+384)+30)
  5309  05A2  0870               	movf	?_readADCRaw,w
  5310  05A3  00BE               	movwf	(_dutyPotFIFO^(0+384)+30)
  5311  05A4                     i1l2037:
  5312                           
  5313                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  5314  05A4  3000               	movlw	0
  5315  05A5  0020               	movlb	0	; select bank0
  5316  05A6  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  5317  05A7  3000               	movlw	0
  5318  05A8  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  5319  05A9  3000               	movlw	0
  5320  05AA  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  5321  05AB  3000               	movlw	0
  5322  05AC  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  5323  05AD                     i1l2039:
  5324                           
  5325                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  5326  05AD  01A8               	clrf	readFilteredDutyPot@i_712
  5327  05AE                     i1l2045:
  5328  05AE  3528               	lslf	readFilteredDutyPot@i_712,w
  5329  05AF  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5330  05B0  0086               	movwf	6
  5331  05B1  3001               	movlw	1	; select bank3/4
  5332  05B2  0087               	movwf	7
  5333  05B3  3F40               	moviw [0]fsr1
  5334  05B4  00A0               	movwf	??_readFilteredDutyPot
  5335  05B5  3F41               	moviw [1]fsr1
  5336  05B6  00A1               	movwf	??_readFilteredDutyPot+1
  5337  05B7  0820               	movf	??_readFilteredDutyPot,w
  5338  05B8  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  5339  05B9  0821               	movf	??_readFilteredDutyPot+1,w
  5340  05BA  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  5341  05BB  3000               	movlw	0
  5342  05BC  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  5343  05BD  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  5344  05BE                     i1l2047:
  5345  05BE  3001               	movlw	1
  5346  05BF  00A0               	movwf	??_readFilteredDutyPot
  5347  05C0  0820               	movf	??_readFilteredDutyPot,w
  5348  05C1  07A8               	addwf	readFilteredDutyPot@i_712,f
  5349  05C2                     i1l2049:
  5350  05C2  3010               	movlw	16
  5351  05C3  0228               	subwf	readFilteredDutyPot@i_712,w
  5352  05C4  1C03               	skipc
  5353  05C5  2DC7               	goto	u184_21
  5354  05C6  2DC8               	goto	u184_20
  5355  05C7                     u184_21:
  5356  05C7  2DAE               	goto	i1l2045
  5357  05C8                     u184_20:
  5358  05C8                     i1l2051:
  5359                           
  5360                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  5361  05C8  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  5362  05C9  00A0               	movwf	??_readFilteredDutyPot
  5363  05CA  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  5364  05CB  00A1               	movwf	??_readFilteredDutyPot+1
  5365  05CC  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  5366  05CD  00A2               	movwf	??_readFilteredDutyPot+2
  5367  05CE  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  5368  05CF  00A3               	movwf	??_readFilteredDutyPot+3
  5369  05D0  3004               	movlw	4
  5370  05D1                     u185_25:
  5371  05D1  36A3               	lsrf	??_readFilteredDutyPot+3,f
  5372  05D2  0CA2               	rrf	??_readFilteredDutyPot+2,f
  5373  05D3  0CA1               	rrf	??_readFilteredDutyPot+1,f
  5374  05D4  0CA0               	rrf	??_readFilteredDutyPot,f
  5375  05D5                     u185_20:
  5376  05D5  0B89               	decfsz	9,f
  5377  05D6  2DD1               	goto	u185_25
  5378  05D7  0821               	movf	??_readFilteredDutyPot+1,w
  5379  05D8  00FC               	movwf	?_readFilteredDutyPot+1
  5380  05D9  0820               	movf	??_readFilteredDutyPot,w
  5381  05DA  00FB               	movwf	?_readFilteredDutyPot
  5382  05DB                     i1l336:
  5383  05DB  0008               	return
  5384  05DC                     __end_of_readFilteredDutyPot:
  5385                           
  5386                           	psect	text23
  5387  034F                     __ptext23:	
  5388 ;; *************** function _readADCRaw *****************
  5389 ;; Defined at:
  5390 ;;		line 71 in file "ADC.c"
  5391 ;; Parameters:    Size  Location     Type
  5392 ;;  gpioNumber      1    wreg     const enum E2798
  5393 ;; Auto vars:     Size  Location     Type
  5394 ;;  gpioNumber      1   10[COMMON] const enum E2798
  5395 ;;  i               1    9[COMMON] unsigned char 
  5396 ;;  i               1    8[COMMON] unsigned char 
  5397 ;;  returnValue     2    4[COMMON] unsigned int 
  5398 ;;  gpioValid       1    7[COMMON] unsigned char 
  5399 ;;  channel         1    6[COMMON] unsigned char 
  5400 ;; Return value:  Size  Location     Type
  5401 ;;                  2    0[COMMON] unsigned short 
  5402 ;; Registers used:
  5403 ;;		wreg, status,2, status,0
  5404 ;; Tracked objects:
  5405 ;;		On entry : 0/0
  5406 ;;		On exit  : 0/0
  5407 ;;		Unchanged: 0/0
  5408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5409 ;;      Params:         2       0       0       0       0       0
  5410 ;;      Locals:         7       0       0       0       0       0
  5411 ;;      Temps:          2       0       0       0       0       0
  5412 ;;      Totals:        11       0       0       0       0       0
  5413 ;;Total ram usage:       11 bytes
  5414 ;; Hardware stack levels used: 1
  5415 ;; This function calls:
  5416 ;;		Nothing
  5417 ;; This function is called by:
  5418 ;;		_readFilteredDutyPot
  5419 ;;		_readFilteredFreqPot
  5420 ;;		_readFilteredVout
  5421 ;;		_readFilteredIDS
  5422 ;; This function uses a non-reentrant model
  5423 ;;
  5424                           
  5425  034F                     _readADCRaw:	
  5426                           ;psect for function _readADCRaw
  5427                           
  5428                           
  5429                           ;incstack = 0
  5430                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  5431                           ;readADCRaw@gpioNumber stored from wreg
  5432  034F  00FA               	movwf	readADCRaw@gpioNumber
  5433  0350                     i1l1793:
  5434                           
  5435                           ;ADC.c: 72:     uint8_t channel = 0;
  5436  0350  01F6               	clrf	readADCRaw@channel
  5437                           
  5438                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  5439  0351  01F7               	clrf	readADCRaw@gpioValid
  5440  0352                     i1l1795:
  5441                           
  5442                           ;ADC.c: 75:     if(gpioNumber < 4){
  5443  0352  3004               	movlw	4
  5444  0353  027A               	subwf	readADCRaw@gpioNumber,w
  5445  0354  1803               	skipnc
  5446  0355  2B57               	goto	u138_21
  5447  0356  2B58               	goto	u138_20
  5448  0357                     u138_21:
  5449  0357  2B5E               	goto	i1l220
  5450  0358                     u138_20:
  5451  0358                     i1l1797:
  5452                           
  5453                           ;ADC.c: 76:         channel = gpioNumber;
  5454  0358  087A               	movf	readADCRaw@gpioNumber,w
  5455  0359  00F2               	movwf	??_readADCRaw
  5456  035A  0872               	movf	??_readADCRaw,w
  5457  035B  00F6               	movwf	readADCRaw@channel
  5458  035C                     i1l1799:
  5459                           
  5460                           ;ADC.c: 77:         gpioValid = 1;
  5461  035C  01F7               	clrf	readADCRaw@gpioValid
  5462  035D  0AF7               	incf	readADCRaw@gpioValid,f
  5463  035E                     i1l220:	
  5464                           ;ADC.c: 78:     }
  5465                           
  5466                           
  5467                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  5468  035E  3009               	movlw	9
  5469  035F  027A               	subwf	readADCRaw@gpioNumber,w
  5470  0360  1C03               	skipc
  5471  0361  2B63               	goto	u139_21
  5472  0362  2B64               	goto	u139_20
  5473  0363                     u139_21:
  5474  0363  2B71               	goto	i1l221
  5475  0364                     u139_20:
  5476  0364                     i1l1801:
  5477  0364  3010               	movlw	16
  5478  0365  027A               	subwf	readADCRaw@gpioNumber,w
  5479  0366  1803               	skipnc
  5480  0367  2B69               	goto	u140_21
  5481  0368  2B6A               	goto	u140_20
  5482  0369                     u140_21:
  5483  0369  2B71               	goto	i1l221
  5484  036A                     u140_20:
  5485  036A                     i1l1803:
  5486                           
  5487                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  5488  036A  087A               	movf	readADCRaw@gpioNumber,w
  5489  036B  3C14               	sublw	20
  5490  036C  00F2               	movwf	??_readADCRaw
  5491  036D  0872               	movf	??_readADCRaw,w
  5492  036E  00F6               	movwf	readADCRaw@channel
  5493  036F                     i1l1805:
  5494                           
  5495                           ;ADC.c: 81:         gpioValid = 1;
  5496  036F  01F7               	clrf	readADCRaw@gpioValid
  5497  0370  0AF7               	incf	readADCRaw@gpioValid,f
  5498  0371                     i1l221:	
  5499                           ;ADC.c: 82:     }
  5500                           
  5501                           
  5502                           ;ADC.c: 83:     if(gpioValid){
  5503  0371  0877               	movf	readADCRaw@gpioValid,w
  5504  0372  1903               	btfsc	3,2
  5505  0373  2B75               	goto	u141_21
  5506  0374  2B76               	goto	u141_20
  5507  0375                     u141_21:
  5508  0375  2BB0               	goto	i1l231
  5509  0376                     u141_20:
  5510  0376                     i1l1807:
  5511                           
  5512                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  5513  0376  0021               	movlb	1	; select bank1
  5514  0377  081D               	movf	29,w	;volatile
  5515  0378                     i1l1809:
  5516                           
  5517                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  5518  0378  3083               	movlw	131
  5519  0379  00F2               	movwf	??_readADCRaw
  5520  037A  0872               	movf	??_readADCRaw,w
  5521  037B  059D               	andwf	29,f	;volatile
  5522  037C                     i1l1811:
  5523                           
  5524                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  5525  037C  0876               	movf	readADCRaw@channel,w	;volatile
  5526  037D  00F2               	movwf	??_readADCRaw
  5527  037E  3001               	movlw	1
  5528  037F                     u142_25:
  5529  037F  35F2               	lslf	??_readADCRaw,f
  5530  0380  3EFF               	addlw	-1
  5531  0381  1D03               	skipz
  5532  0382  2B7F               	goto	u142_25
  5533  0383  3572               	lslf	??_readADCRaw,w
  5534  0384  00F3               	movwf	??_readADCRaw+1
  5535  0385  0873               	movf	??_readADCRaw+1,w
  5536  0386  049D               	iorwf	29,f	;volatile
  5537  0387                     i1l1813:
  5538                           
  5539                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  5540  0387  01F8               	clrf	readADCRaw@i
  5541  0388                     i1l1819:
  5542  0388  3001               	movlw	1
  5543  0389  00F2               	movwf	??_readADCRaw
  5544  038A  0872               	movf	??_readADCRaw,w
  5545  038B  07F8               	addwf	readADCRaw@i,f
  5546  038C                     i1l1821:
  5547  038C  3008               	movlw	8
  5548  038D  0278               	subwf	readADCRaw@i,w
  5549  038E  1C03               	skipc
  5550  038F  2B91               	goto	u143_21
  5551  0390  2B92               	goto	u143_20
  5552  0391                     u143_21:
  5553  0391  2B88               	goto	i1l1819
  5554  0392                     u143_20:
  5555  0392                     i1l225:
  5556                           
  5557                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  5558  0392  0021               	movlb	1	; select bank1
  5559  0393  149D               	bsf	29,1	;volatile
  5560  0394                     i1l226:	
  5561                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  5562                           
  5563  0394  189D               	btfsc	29,1	;volatile
  5564  0395  2B97               	goto	u144_21
  5565  0396  2B98               	goto	u144_20
  5566  0397                     u144_21:
  5567  0397  2B94               	goto	i1l226
  5568  0398                     u144_20:
  5569  0398                     i1l1823:
  5570                           
  5571                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  5572  0398  081C               	movf	28,w	;volatile
  5573  0399  00F5               	movwf	readADCRaw@returnValue+1
  5574  039A  081B               	movf	27,w	;volatile
  5575  039B  00F4               	movwf	readADCRaw@returnValue
  5576  039C                     i1l1825:
  5577                           
  5578                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  5579  039C  3083               	movlw	131
  5580  039D  00F2               	movwf	??_readADCRaw
  5581  039E  0872               	movf	??_readADCRaw,w
  5582  039F  059D               	andwf	29,f	;volatile
  5583  03A0                     i1l1827:
  5584                           
  5585                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  5586  03A0  159D               	bsf	29,3	;volatile
  5587  03A1                     i1l1829:
  5588                           
  5589                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  5590  03A1  01F9               	clrf	readADCRaw@i_626
  5591  03A2                     i1l1835:
  5592  03A2  3001               	movlw	1
  5593  03A3  00F2               	movwf	??_readADCRaw
  5594  03A4  0872               	movf	??_readADCRaw,w
  5595  03A5  07F9               	addwf	readADCRaw@i_626,f
  5596  03A6                     i1l1837:
  5597  03A6  3008               	movlw	8
  5598  03A7  0279               	subwf	readADCRaw@i_626,w
  5599  03A8  1C03               	skipc
  5600  03A9  2BAB               	goto	u145_21
  5601  03AA  2BAC               	goto	u145_20
  5602  03AB                     u145_21:
  5603  03AB  2BA2               	goto	i1l1835
  5604  03AC                     u145_20:
  5605  03AC                     i1l1839:
  5606                           
  5607                           ;ADC.c: 97:             return returnValue;
  5608  03AC  0875               	movf	readADCRaw@returnValue+1,w
  5609  03AD  00F1               	movwf	?_readADCRaw+1
  5610  03AE  0874               	movf	readADCRaw@returnValue,w
  5611  03AF  00F0               	movwf	?_readADCRaw
  5612  03B0                     i1l231:
  5613  03B0  0008               	return
  5614  03B1                     __end_of_readADCRaw:
  5615                           
  5616                           	psect	text24
  5617  06A9                     __ptext24:	
  5618 ;; *************** function _currentTripRead *****************
  5619 ;; Defined at:
  5620 ;;		line 30 in file "CurrentSensor.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;		None
  5623 ;; Auto vars:     Size  Location     Type
  5624 ;;		None
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  1    wreg      _Bool 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0, pclath, cstack
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5634 ;;      Params:         0       0       0       0       0       0
  5635 ;;      Locals:         1       0       0       0       0       0
  5636 ;;      Temps:          1       0       0       0       0       0
  5637 ;;      Totals:         2       0       0       0       0       0
  5638 ;;Total ram usage:        2 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; Hardware stack levels required when called: 1
  5641 ;; This function calls:
  5642 ;;		_readGPIO
  5643 ;; This function is called by:
  5644 ;;		_Tick980Hz
  5645 ;; This function uses a non-reentrant model
  5646 ;;
  5647                           
  5648  06A9                     _currentTripRead:	
  5649                           ;psect for function _currentTripRead
  5650                           
  5651  06A9                     i1l1933:	
  5652                           ;incstack = 0
  5653                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  5654                           
  5655                           
  5656                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  5657  06A9  3001               	movlw	1
  5658  06AA  3186  2631  3186   	fcall	_readGPIO
  5659  06AD  3A01               	xorlw	1
  5660  06AE  1D03               	skipz
  5661  06AF  2EB1               	goto	u166_21
  5662  06B0  2EB3               	goto	u166_20
  5663  06B1                     u166_21:
  5664  06B1  3001               	movlw	1
  5665  06B2  2EB4               	goto	u167_20
  5666  06B3                     u166_20:
  5667  06B3  3000               	movlw	0
  5668  06B4                     u167_20:
  5669  06B4  00F9               	movwf	??_currentTripRead
  5670  06B5  0879               	movf	??_currentTripRead,w
  5671  06B6  0020               	movlb	0	; select bank0
  5672  06B7  00D6               	movwf	_tripIDS
  5673                           
  5674                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  5675  06B8  3003               	movlw	3
  5676  06B9  3186  2631  3186   	fcall	_readGPIO
  5677  06BC  3A01               	xorlw	1
  5678  06BD  1D03               	skipz
  5679  06BE  2EC0               	goto	u168_21
  5680  06BF  2EC2               	goto	u168_20
  5681  06C0                     u168_21:
  5682  06C0  3001               	movlw	1
  5683  06C1  2EC3               	goto	u169_20
  5684  06C2                     u168_20:
  5685  06C2  3000               	movlw	0
  5686  06C3                     u169_20:
  5687  06C3  00F9               	movwf	??_currentTripRead
  5688  06C4  0879               	movf	??_currentTripRead,w
  5689  06C5  0020               	movlb	0	; select bank0
  5690  06C6  00D5               	movwf	_tripIL
  5691  06C7                     i1l1935:
  5692                           
  5693                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  5694  06C7  01FA               	clrf	_currentTripRead$812
  5695  06C8  0AFA               	incf	_currentTripRead$812,f
  5696  06C9                     i1l1937:
  5697  06C9  0855               	movf	_tripIL,w
  5698  06CA  1D03               	btfss	3,2
  5699  06CB  2ECD               	goto	u170_21
  5700  06CC  2ECE               	goto	u170_20
  5701  06CD                     u170_21:
  5702  06CD  2ED4               	goto	i1l1943
  5703  06CE                     u170_20:
  5704  06CE                     i1l1939:
  5705  06CE  0856               	movf	_tripIDS,w
  5706  06CF  1D03               	btfss	3,2
  5707  06D0  2ED2               	goto	u171_21
  5708  06D1  2ED3               	goto	u171_20
  5709  06D2                     u171_21:
  5710  06D2  2ED4               	goto	i1l1943
  5711  06D3                     u171_20:
  5712  06D3                     i1l1941:
  5713  06D3  01FA               	clrf	_currentTripRead$812
  5714  06D4                     i1l1943:
  5715  06D4  087A               	movf	_currentTripRead$812,w
  5716  06D5                     i1l421:
  5717  06D5  0008               	return
  5718  06D6                     __end_of_currentTripRead:
  5719                           
  5720                           	psect	text25
  5721  0631                     __ptext25:	
  5722 ;; *************** function _readGPIO *****************
  5723 ;; Defined at:
  5724 ;;		line 79 in file "GPIO.c"
  5725 ;; Parameters:    Size  Location     Type
  5726 ;;  gpioNumber      1    wreg     const enum E2798
  5727 ;; Auto vars:     Size  Location     Type
  5728 ;;  gpioNumber      1    8[COMMON] const enum E2798
  5729 ;;  returnValueB    1    5[COMMON] unsigned char 
  5730 ;;  readB           1    4[COMMON] unsigned char 
  5731 ;;  returnValueA    1    3[COMMON] unsigned char 
  5732 ;;  readA           1    2[COMMON] unsigned char 
  5733 ;;  portType        1    7[COMMON] unsigned char 
  5734 ;;  portNumber      1    6[COMMON] unsigned char 
  5735 ;; Return value:  Size  Location     Type
  5736 ;;                  1    wreg      _Bool 
  5737 ;; Registers used:
  5738 ;;		wreg, status,2, status,0
  5739 ;; Tracked objects:
  5740 ;;		On entry : 0/0
  5741 ;;		On exit  : 0/0
  5742 ;;		Unchanged: 0/0
  5743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5744 ;;      Params:         0       0       0       0       0       0
  5745 ;;      Locals:         7       0       0       0       0       0
  5746 ;;      Temps:          2       0       0       0       0       0
  5747 ;;      Totals:         9       0       0       0       0       0
  5748 ;;Total ram usage:        9 bytes
  5749 ;; Hardware stack levels used: 1
  5750 ;; This function calls:
  5751 ;;		Nothing
  5752 ;; This function is called by:
  5753 ;;		_currentTripRead
  5754 ;; This function uses a non-reentrant model
  5755 ;;
  5756                           
  5757  0631                     _readGPIO:	
  5758                           ;psect for function _readGPIO
  5759                           
  5760                           
  5761                           ;incstack = 0
  5762                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5763                           ;readGPIO@gpioNumber stored from wreg
  5764  0631  00F8               	movwf	readGPIO@gpioNumber
  5765  0632                     i1l1843:
  5766                           
  5767                           ;GPIO.c: 81:     uint8_t portType = 0;
  5768  0632  01F7               	clrf	readGPIO@portType
  5769  0633                     i1l1845:
  5770                           
  5771                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5772  0633  3008               	movlw	8
  5773  0634  0278               	subwf	readGPIO@gpioNumber,w
  5774  0635  1C03               	skipc
  5775  0636  2E38               	goto	u146_21
  5776  0637  2E39               	goto	u146_20
  5777  0638                     u146_21:
  5778  0638  2E41               	goto	i1l1851
  5779  0639                     u146_20:
  5780  0639                     i1l1847:
  5781                           
  5782                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5783  0639  0878               	movf	readGPIO@gpioNumber,w
  5784  063A  3EF8               	addlw	248
  5785  063B  00F0               	movwf	??_readGPIO
  5786  063C  0870               	movf	??_readGPIO,w
  5787  063D  00F6               	movwf	readGPIO@portNumber
  5788  063E                     i1l1849:
  5789                           
  5790                           ;GPIO.c: 84:         portType = 1;
  5791  063E  01F7               	clrf	readGPIO@portType
  5792  063F  0AF7               	incf	readGPIO@portType,f
  5793                           
  5794                           ;GPIO.c: 85:     }
  5795  0640  2E46               	goto	i1l1855
  5796  0641                     i1l1851:
  5797                           
  5798                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5799  0641  0878               	movf	readGPIO@gpioNumber,w
  5800  0642  00F0               	movwf	??_readGPIO
  5801  0643  0870               	movf	??_readGPIO,w
  5802  0644  00F6               	movwf	readGPIO@portNumber
  5803  0645                     i1l1853:
  5804                           
  5805                           ;GPIO.c: 88:         portType = 0;
  5806  0645  01F7               	clrf	readGPIO@portType
  5807  0646                     i1l1855:
  5808                           
  5809                           ;GPIO.c: 91:     if(portType == 0){
  5810  0646  0877               	movf	readGPIO@portType,w
  5811  0647  1D03               	btfss	3,2
  5812  0648  2E4A               	goto	u147_21
  5813  0649  2E4B               	goto	u147_20
  5814  064A                     u147_21:
  5815  064A  2E5E               	goto	i1l1867
  5816  064B                     u147_20:
  5817  064B                     i1l1857:
  5818                           
  5819                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  5820  064B  0020               	movlb	0	; select bank0
  5821  064C  080C               	movf	12,w	;volatile
  5822  064D  00F0               	movwf	??_readGPIO
  5823  064E  0870               	movf	??_readGPIO,w
  5824  064F  00F2               	movwf	readGPIO@readA
  5825  0650                     i1l1859:
  5826                           
  5827                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  5828  0650  0872               	movf	readGPIO@readA,w
  5829  0651  00F0               	movwf	??_readGPIO
  5830  0652  0A76               	incf	readGPIO@portNumber,w
  5831  0653  2E55               	goto	u148_24
  5832  0654                     u148_25:
  5833  0654  36F0               	lsrf	??_readGPIO,f
  5834  0655                     u148_24:
  5835  0655  0B89               	decfsz	9,f
  5836  0656  2E54               	goto	u148_25
  5837  0657  0870               	movf	??_readGPIO,w
  5838  0658  3901               	andlw	1
  5839  0659  00F1               	movwf	??_readGPIO+1
  5840  065A  0871               	movf	??_readGPIO+1,w
  5841  065B  00F3               	movwf	readGPIO@returnValueA
  5842  065C                     i1l1861:
  5843                           
  5844                           ;GPIO.c: 94:         return returnValueA;
  5845  065C  0873               	movf	readGPIO@returnValueA,w
  5846  065D  2E75               	goto	i1l298
  5847  065E                     i1l1867:
  5848  065E  0377               	decf	readGPIO@portType,w
  5849  065F  1D03               	btfss	3,2
  5850  0660  2E62               	goto	u149_21
  5851  0661  2E63               	goto	u149_20
  5852  0662                     u149_21:
  5853  0662  2E75               	goto	i1l298
  5854  0663                     u149_20:
  5855  0663                     i1l1869:
  5856                           
  5857                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  5858  0663  0020               	movlb	0	; select bank0
  5859  0664  080D               	movf	13,w	;volatile
  5860  0665  00F0               	movwf	??_readGPIO
  5861  0666  0870               	movf	??_readGPIO,w
  5862  0667  00F4               	movwf	readGPIO@readB
  5863  0668                     i1l1871:
  5864                           
  5865                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  5866  0668  0874               	movf	readGPIO@readB,w
  5867  0669  00F0               	movwf	??_readGPIO
  5868  066A  0A76               	incf	readGPIO@portNumber,w
  5869  066B  2E6D               	goto	u150_24
  5870  066C                     u150_25:
  5871  066C  36F0               	lsrf	??_readGPIO,f
  5872  066D                     u150_24:
  5873  066D  0B89               	decfsz	9,f
  5874  066E  2E6C               	goto	u150_25
  5875  066F  0870               	movf	??_readGPIO,w
  5876  0670  3901               	andlw	1
  5877  0671  00F1               	movwf	??_readGPIO+1
  5878  0672  0871               	movf	??_readGPIO+1,w
  5879  0673  00F5               	movwf	readGPIO@returnValueB
  5880  0674                     i1l1873:
  5881                           
  5882                           ;GPIO.c: 99:         return returnValueB;
  5883  0674  0875               	movf	readGPIO@returnValueB,w
  5884  0675                     i1l298:
  5885  0675  0008               	return
  5886  0676                     __end_of_readGPIO:
  5887  007E                     btemp	set	126	;btemp
  5888  007E                     int$flags	set	126
  5889  007E                     wtemp0	set	126
  5890                           
  5891                           	psect	idloc
  5892                           
  5893                           ;Config register IDLOC0 @ 0x8000
  5894                           ;	unspecified, using default values
  5895  8000                     	org	32768
  5896  8000  3FFF               	dw	16383
  5897                           
  5898                           ;Config register IDLOC1 @ 0x8001
  5899                           ;	unspecified, using default values
  5900  8001                     	org	32769
  5901  8001  3FFF               	dw	16383
  5902                           
  5903                           ;Config register IDLOC2 @ 0x8002
  5904                           ;	unspecified, using default values
  5905  8002                     	org	32770
  5906  8002  3FFF               	dw	16383
  5907                           
  5908                           ;Config register IDLOC3 @ 0x8003
  5909                           ;	unspecified, using default values
  5910  8003                     	org	32771
  5911  8003  3FFF               	dw	16383
  5912                           
  5913                           	psect	config
  5914                           
  5915                           ;Config register CONFIG1 @ 0x8007
  5916                           ;	Oscillator Selection
  5917                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5918                           ;	Watchdog Timer Enable
  5919                           ;	WDTE = OFF, WDT disabled
  5920                           ;	Power-up Timer Enable
  5921                           ;	PWRTE = OFF, PWRT disabled
  5922                           ;	MCLR Pin Function Select
  5923                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5924                           ;	Flash Program Memory Code Protection
  5925                           ;	CP = OFF, Program memory code protection is disabled
  5926                           ;	Data Memory Code Protection
  5927                           ;	CPD = OFF, Data memory code protection is disabled
  5928                           ;	Brown-out Reset Enable
  5929                           ;	BOREN = ON, Brown-out Reset enabled
  5930                           ;	Clock Out Enable
  5931                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5932                           ;	Internal/External Switchover
  5933                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5934                           ;	Fail-Safe Clock Monitor Enable
  5935                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5936  8007                     	org	32775
  5937  8007  0FA4               	dw	4004
  5938                           
  5939                           ;Config register CONFIG2 @ 0x8008
  5940                           ;	Flash Memory Self-Write Protection
  5941                           ;	WRT = OFF, Write protection off
  5942                           ;	PLL Enable
  5943                           ;	PLLEN = OFF, 4x PLL disabled
  5944                           ;	Stack Overflow/Underflow Reset Enable
  5945                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5946                           ;	Brown-out Reset Voltage Selection
  5947                           ;	BORV = 0x1, unprogrammed default
  5948                           ;	Low-Voltage Programming Enable
  5949                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5950  8008                     	org	32776
  5951  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         188
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      57
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0      32
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredVout->_readADCRaw
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _currentTripReset->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3084
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1445
                   _currentTripReset
                   _initialiseADCPin
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _currentTripReset                                     0     0      0     500
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (3) _writeGPIO                                            6     5      1     500
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Tick980Hz                                            1     1      0    4565
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                     _readFilteredIL
                   _readFilteredVout
                _readILCurrentADCRaw
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (5) i1_writeGPIO                                          6     5      1     300
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (5) _runPotScaling                                       12    12      0    2044
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (5) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _readILCurrentADCRaw                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredVout                                    12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredIL                                      12    10      2     182
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (6) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (6) _readGPIO                                             9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _currentTripReset
       _writeGPIO
     _initialiseADCPin
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _readFilteredIL
   _readFilteredVout
     _readADCRaw
   _readILCurrentADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      E7       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      39       6       71.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      E7      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 16:22:39 2023

                ___wmul@multiplicand 0072                                  l100 0776  
                                l101 0776                                  l212 030C  
                                l119 0268                                  l208 07D1  
                                l152 075C                                  l217 034E  
                                l416 0720                                  l329 07BD  
                                l177 07C5                                  l292 0410  
                                l438 07A8                                  l278 02E4  
                                _PR2 001B                    readFilteredVout@i 0029  
                                wreg 0009                  __end_ofi1_writeGPIO 0470  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2101 0195                                 l2111 01B4  
                               l2103 019F                                 l2201 07CC  
                               l2121 01CF                                 l2113 01B5  
                               l2105 01A4                                 l2203 0701  
                               l2131 01E5                                 l2123 01D4  
                               l2115 01BF                                 l2107 01A5  
                               l2205 07B5                                 l2141 0204  
                               l2133 01EF                                 l2125 01D5  
                               l2117 01C4                                 l2109 01AF  
                               l2151 021F                                 l2143 0205  
                               l2135 01F4                                 l2127 01DF  
                               l2119 01C5                                 l2161 0233  
                               l2153 0222                                 l2145 020F  
                               l2137 01F5                                 l2129 01E4  
                               l2155 0223                                 l2147 0214  
                               l2139 01FF                                 l2157 022D  
                               l2149 0215                                 l2165 023D  
                               l2181 0749                                 l2173 0740  
                               l1711 03C2                                 l1703 03B3  
                               l2159 0232                                 l2095 0190  
                               l2191 0753                                 l2183 074B  
                               l2175 0743                                 l2271 075D  
                               l1721 03DE                                 l1713 03C6  
                               l1705 03B4                                 l2097 0191  
                               l2193 0754                                 l2185 074C  
                               l2177 0745                                 l2281 076D  
                               l2273 0761                                 l1723 03EC  
                               l1715 03C7                                 l1707 03BA  
                               l2355 0245                                 l2099 0194  
                               l2195 0756                                 l2187 074F  
                               l2179 0747                                 l2283 0770  
                               l2275 0764                                 l1725 03F1  
                               l1717 03CC                                 l1709 03BF  
                               l1741 0272                                 l2189 0751  
                               l2197 07BE                                 l2277 0767  
                               l1727 03F6                                 l1719 03D1  
                               l1751 0284                                 l1743 0277  
                               l2199 07C3                                 l2279 076A  
                               l1729 0403                                 l1761 02BC  
                               l1753 0289                                 l1745 027A  
                               l1737 026B                                 l1771 02F4  
                               l1763 02D7                                 l1755 02A4  
                               l1747 027E                                 l1739 026C  
                               l1781 0308                                 l1773 02F5  
                               l1765 02E7                                 l1757 02B2  
                               l1749 027F                                 l1791 0335  
                               l1783 030A                                 l1775 02F7  
                               l1767 02EA                                 l1759 02B7  
                               l1785 0311                                 l1777 02FD  
                               l1769 02F0                                 l1787 0316  
                               l1779 0303                                 l1877 079B  
                               l1789 0330                                 l1879 07A1  
                               STR_1 0779                                 STR_3 078B  
                               u1110 03F1                                 u1111 03F0  
                               u1120 03F6                                 u1104 03E3  
                               u1121 03F5                                 u1105 03E2  
                               u1060 03BA                                 u1300 0303  
                               u1204 028E                                 u1061 03B9  
                               u1301 0302                                 u1205 028D  
                               u1134 03FB                                 u1070 03CC  
                               u1310 0311                                 u1230 02B7  
                               u1214 029B                                 u1135 03FA  
                               u1071 03CB                                 u1311 0310  
                               u1231 02B6                                 u1215 029A  
                               u1144 0408                                 u1080 03D1  
                               u1320 0316                                 u1240 02BC  
                               u1224 02A9                                 u1145 0407  
                               u1081 03D0                                 u1321 0315  
                               u1241 02BB                                 u1225 02A8  
                               u1170 0272                                 u1171 0271  
                               u1180 0284                                 u1181 0283  
                               _LATA 010C                                 u1094 03D6  
                               u1350 0335                                 u1334 031B  
                               u1254 02C1                                 u1190 0289  
                               _LATB 010D                                 u1095 03D5  
                               u1351 0334                                 u1335 031A  
                               u1255 02C0                                 u1191 0288  
                               u1344 0328                                 u1280 02F0  
                               u1264 02CE                                 u1345 0327  
                               u1281 02EF                                 u1265 02CD  
                               u1290 02FD                                 u1274 02DC  
                               u1291 02FC                                 u1275 02DB  
                               u1364 033A                                 u1365 0339  
                               u1374 0347                                 u1375 0346  
                               i1l95 0083                      _filteredFreqPot 0043  
                    _filteredDutyPot 0041                                 _main 075D  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 0085  
          ??_setupInternalOscillator 0033                                ?_main 0039  
                    __end_of___lldiv 04CB                                i1l220 035E  
                              i1l221 0371                                i1l231 03B0  
                              i1l225 0392                                i1l226 0394  
                              i1l235 07AC                                i1l155 0700  
                              i1l421 06D5                                i1l238 07B4  
                              i1l343 0580                                i1l336 05DB  
                              i1l435 0630                                i1l347 0172  
                              i1l372 0525                                i1l292 046F  
                              i1l605 06A8                                i1l349 018D  
                              i1l298 0675                                i1l627 04CA  
                              i1l591 072B                                i1l593 073F  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
               readFilteredFreqPot@i 0029             readFilteredDutyPot@i_712 0028  
                              status 0003                                wtemp0 007E  
             initialiseGPIO@portType 0036                  _initialiseADCModule 07CC  
               readFilteredDutyPot@i 0029           initialiseADCPin@gpioNumber 0038  
                    __initialization 0087                         __end_of_main 0779  
                  ?_initialiseADCPin 0070                          i1_writeGPIO 0411  
                             ??_main 003D                   ??_initialiseADCPin 0033  
           __end_of_readFilteredVout 0526                 ?_initialiseADCModule 0070  
         ??_initialiseCurrentSensors 0039      __end_of_setupInternalOscillator 0269  
setupInternalOscillator@selectedFreq 0035                               _ADCON0 009D  
                             _ADCON1 009E                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             i1l2001 0508                               i1l2003 050C  
                             i1l2011 00B6                               i1l2005 0512  
                             i1l2021 018B                               i1l2013 0164  
                             i1l2031 0591                               i1l2023 0581  
                             i1l2015 016E                               i1l2033 0595  
                             i1l2017 017C                               i1l2009 00AB  
                             i1l2051 05C8                               i1l2035 059B  
                             i1l2019 0180                               i1l2211 0419  
                             i1l2045 05AE                               i1l2037 05A4  
                             i1l2029 0583                               i1l2061 0528  
                             i1l2221 042B                               i1l2213 041E  
                             i1l2047 05BE                               i1l2039 05AD  
                             i1l2071 0552                               i1l2063 0536  
                             i1l2055 0526                               i1l2231 0455  
                             i1l2223 0430                               i1l2215 0421  
                             i1l2207 0412                               u200_20 0020  
                             i1l2049 05C2                               i1l2081 0567  
                             i1l2065 053A                               i1l2233 0462  
                             i1l2225 043D                               i1l2217 0425  
                             i1l2209 0413                               u200_21 001F  
                             i1l2241 001A                               i1l2083 056D  
                             i1l2067 0540                               i1l2091 07B0  
                             i1l2227 044B                               i1l2219 0426  
                             i1l2251 0040                               i1l2243 0020  
                             i1l2235 0006                               i1l2077 0553  
                             i1l2069 0549                               i1l2229 0450  
                             i1l2261 0065                               i1l2253 0046  
                             i1l2245 0025                               i1l2237 000E  
                             i1l2079 0563                               i1l2087 07A9  
                             i1l2255 004C                               i1l2247 002B  
                             i1l2263 006F                               i1l2239 0013  
                             u201_20 002B                               i1l1801 0364  
                             i1l2089 07AB                               i1l2265 0079  
                             i1l2257 004F                               i1l2249 003B  
                             u201_21 002A                               i1l1811 037C  
                             i1l1803 036A                               i1l1731 06D6  
                             i1l2267 007A                               i1l2259 0055  
                             i1l1821 038C                               i1l1813 0387  
                             i1l1805 036F                               i1l1901 068A  
                             i1l1733 06D9                               i1l2269 0082  
                             i1l1823 0398                               i1l1807 0376  
                             i1l1911 0481                               i1l1903 0691  
                             i1l1735 06E4                               u202_20 0040  
                             i1l1825 039C                               i1l1809 0378  
                             i1l1921 04AC                               i1l1913 0484  
                             i1l1905 06A0                               u202_21 003F  
                             i1l1851 0641                               i1l1843 0632  
                             i1l1835 03A2                               i1l1827 03A0  
                             i1l1819 0388                               i1l1923 04B4  
                             i1l1915 048F                               i1l1861 065C  
                             i1l1853 0645                               i1l1845 0633  
                             i1l1941 06D3                               i1l1933 06A9  
                             i1l1837 03A6                               i1l1829 03A1  
                             i1l1925 04B5                               i1l1917 0493  
                             i1l1909 0470                               i1l1871 0668  
                             i1l1855 0646                               i1l1847 0639  
                             i1l1943 06D4                               i1l1935 06C7  
                             i1l1839 03AC                               i1l1927 04BC  
                             i1l1919 049A                               u115_20 06FE  
                             u203_20 004C                               i1l1873 0674  
                             i1l1857 064B                               i1l1849 063E  
                             i1l1937 06C9                               i1l1793 0350  
                             i1l1961 0603                               i1l1953 05DD  
                             i1l1929 04C2                               i1l1881 0721  
                             u115_21 06FB                               u203_21 004B  
                             i1l1859 0650                               i1l1867 065E  
                             i1l1939 06CE                               i1l1795 0352  
                             i1l1971 0617                               i1l1955 05E9  
                             i1l1947 05DC                               i1l1891 073B  
                             i1l1883 0723                               i1l1869 0663  
                             i1l1797 0358                               i1l1973 061D  
                             i1l1957 05ED                               i1l1885 0727  
                             i1l1799 035C                               i1l1967 0604  
                             i1l1959 05F3                               i1l1991 04EE  
                             i1l1983 04CD                               i1l1895 0676  
                             i1l1887 0730                               u140_20 036A  
                             u204_20 0055                               u140_21 0369  
                             i1l1969 0613                               i1l1993 04F7  
                             i1l1985 04DB                               i1l1977 04CB  
                             i1l1897 067E                               i1l1889 0735  
                             u204_21 0054                               i1l1987 04DF  
                             i1l1899 0682                               u116_24 0700  
                             i1l1989 04E5                               i1l1999 04F8  
                             u141_20 0376                               u205_20 006B  
                             u141_21 0375                               u205_21 0069  
                             u206_20 006C                               u150_24 066D  
                             u150_25 066C                               u142_25 037F  
                             u143_20 0392                               u151_20 0727  
                             u207_20 0075                               u143_21 0391  
                             u151_21 0726                               u207_21 0073  
                             u144_20 0398                               u208_20 0076  
                             u144_21 0397                               u160_25 0485  
                             u152_25 072C                               u145_20 03AC  
                             u161_20 0493                               u145_21 03AB  
                             u161_21 0492                               u153_25 0731  
                             u146_20 0639                               u170_20 06CE  
                             u138_20 0358                               u154_20 073B  
                             u146_21 0638                               u170_21 06CD  
                             u138_21 0357                               u154_21 073A  
                             u162_25 0494                               u147_20 064B  
                             u171_20 06D3                               u139_20 0364  
                             u163_20 04AC                               u155_20 0682  
                             u147_21 064A                               u171_21 06D2  
                             u139_21 0363                               u163_21 04AB  
                             u155_21 0681                               u163_25 04A8  
                             u172_20 05F3                               u180_20 0104  
                             u172_21 05F2                               u148_24 0655  
                             u148_25 0654                               u164_25 04B6  
                             u156_25 068B                               u180_25 0100  
                             u149_20 0663                               u173_20 061D  
                             u165_20 04C2                               u181_20 016E  
                             u149_21 0662                               u173_21 061C  
                             u165_21 04C1                               u181_21 016D  
                             u157_25 0692                               u181_25 016A  
                             u166_20 06B3                               u174_20 062A  
                             u158_20 06A0                               u182_20 017C  
                             u190_20 0419                               u166_21 06B1  
                             u158_21 069F                               u182_21 017B  
                             u190_21 0418                               u174_25 0626  
                             u182_25 0178                               u167_20 06B4  
                             u183_20 059B                               u175_20 04E5  
                             u159_20 0481                               u191_20 042B  
                             u183_21 059A                               u175_21 04E4  
                             u159_21 0480                               u191_21 042A  
                             u168_20 06C2                               u184_20 05C8  
                             u176_20 0512                               u192_20 0430  
                             u168_21 06C0                               u184_21 05C7  
                             u176_21 0511                               u192_21 042F  
                             u169_20 06C3                               u185_20 05D5  
                             u177_20 051F                               u193_24 0435  
                             u185_25 05D1                               u177_25 051B  
                             u193_25 0434                               u186_20 0540  
                             u178_20 00B6                               u186_21 053F  
                             u178_21 00B5                               u194_24 0442  
                             u194_25 0441                               u187_20 056D  
                             u179_20 00D7                               u195_20 0450  
                             u187_21 056C                               u195_21 044F  
                             u179_25 00D3                               u188_20 057A  
                             u196_20 0455                               u196_21 0454  
                    ??_runPotScaling 0026                               u188_25 0576  
                             u189_20 07B0                               u189_21 07AF  
                             u197_24 045A                               u197_25 0459  
                             u198_24 0467                               u198_25 0466  
                             u199_20 000E                               u199_21 000D  
            initialiseGPIO@direction 0033                     readGPIO@portType 0077  
        __end_of_readILCurrentADCRaw 07B5                  readADCRaw@gpioValid 0077  
                             ___lmul 0676                               ___wmul 0721  
                          ??___lldiv 0020                     __end_of_readGPIO 0676  
                             _tripIL 0055            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 07B5  
         initialiseADCPin@portNumber 0037                     __end_of_setupPWM 075D  
                    _currentTripRead 06A9              __end_of__initialization 00A7  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
              i1writeGPIO@gpioNumber 0074                        _currentILFIFO 00A0  
                     _OPTION_REGbits 0095                    __end_of_Tick980Hz 0085  
                         __pbssBANK0 003D                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pbssBANK3 01A0  
                         __pmaintext 075D                              ?___lmul 0070  
                            ?___wmul 0070                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 06D6          __end_of_setPWMDutyandPeriod 0701  
   __end_of_initialiseCurrentSensors 0721             initialiseADCPin@portType 0036  
              readFilteredVout@i_748 0028                i1writeGPIO@portNumber 0075  
                         _filteredIL 0047                            ?_readGPIO 0070  
                         _readADCRaw 034F                  _readFilteredFreqPot 0526  
                _readFilteredDutyPot 0581                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 0037  
                            ___lldiv 0470                         ?i1_writeGPIO 0070  
               ?_readFilteredFreqPot 007B                              __ptext1 07BE  
                            __ptext2 0740                              __ptext3 018E  
                            __ptext4 07B5                              __ptext5 0701  
                            __ptext6 0269                              __ptext7 02E5  
                            __ptext8 079B                              __ptext9 03B1  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                  ?_readFilteredVout 007B                              _setDuty 004F  
              i1writeGPIO@writeValue 0070                              _tripIDS 0056  
                 ??_readFilteredVout 0020                              clrloop0 07C7  
               end_of_initialization 00A7                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
                   _currentTripReset 079B           ??_initialisePotentiometers 0039  
                         _prevPeriod 0057                    writeGPIO@portType 0036  
                     _readFilteredIL 05DC                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 0411             initialiseGPIO@portNumber 0038  
                       _filteredVout 0045                          ?_readADCRaw 0070  
                        _CCP1CONbits 0293                        readGPIO@readA 0072  
                      readGPIO@readB 0074                __end_of_runPotScaling 018E  
          ?_initialiseCurrentSensors 0070               __end_of_readFilteredIL 0631  
                     __end_of___lmul 06A9          __end_of_initialiseADCModule 07D2  
                     __end_of___wmul 0740                       _clockFrequency 003D  
                start_initialization 0087         __end_of_setupTimer0Interrupt 07C6  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                           ??___wmul 0074                      ?_readFilteredIL 0070  
                          ___latbits 0001                        __pcstackBANK0 0020  
                         ?_Tick980Hz 0070                     _initialiseADCPin 02E5  
                 readGPIO@gpioNumber 0078                       _initialiseGPIO 0269  
   __end_of_initialisePotentiometers 07BE                             ?___lldiv 0076  
                    readADCRaw@i_626 0079             __end_of_currentTripReset 07A9  
    readFilteredDutyPot@sumOfSamples 0024                       ___wmul@product 0074  
             __end_of_initialiseGPIO 02E5                            clear_ram0 07C6  
                          _setPeriod 0058                             _PIE1bits 0091  
                           _PIR1bits 0011         setPWMDutyandPeriod@dutyCycle 0070  
               _setupTimer0Interrupt 07BE                  _currentTripRead$812 007A  
                        _filteredIDS 0049                           _ADCON0bits 009D  
                  ___wmul@multiplier 0070                   readGPIO@portNumber 0076  
                        _freqPotFIFO 0120                            _writeGPIO 03B1  
                        ??_Tick980Hz 0032                    ___lmul@multiplier 0070  
                _readILCurrentADCRaw 07A9                         ??_readADCRaw 0072  
                    ?_initialiseGPIO 0033         readFilteredVout@sumOfSamples 0024  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 0581          __end_of_readFilteredDutyPot 05DC  
               runPotScaling@maxDuty 002E                 runPotScaling@minDuty 0030  
               ?_readILCurrentADCRaw 0070                  writeGPIO@gpioNumber 0037  
                 __end_of_readADCRaw 03B1             readFilteredFreqPot@i_716 0028  
                         ?_writeGPIO 0033                             __ptext10 07CC  
                           __ptext20 05DC                             __ptext12 0411  
                           __ptext21 0526                             __ptext13 00AB  
                           __ptext22 0581                             __ptext14 06D6  
                           __ptext23 034F                             __ptext15 0721  
                           __ptext24 06A9                             __ptext16 0676  
                           __ptext25 0631                             __ptext17 0470  
                           __ptext18 07A9                             __ptext19 04CB  
          ?_initialisePotentiometers 0070                          _dutyPotFIFO 01A0  
                i1writeGPIO@portType 0073           readFilteredIL@sumOfSamples 0076  
                           _readGPIO 0631                             _latestIL 004B  
                   ??_readFilteredIL 0072                        _timerSlotHalf 0053  
                       _PSTR1CONbits 0296                             _prevDuty 004D  
                           _setupPWM 0740                             int$flags 007E  
              ??_readILCurrentADCRaw 0072             __end_of_initialiseADCPin 034F  
                           main@argc 0039                             main@argv 003B  
                           _voutFIFO 0140      readFilteredFreqPot@sumOfSamples 0024  
                   _timerSlotQuarter 0052                           _INTCONbits 000B  
                writeGPIO@portNumber 0038                             intlevel1 0000  
           _initialiseCurrentSensors 0701                     ___lldiv@dividend 007A  
                   _readFilteredVout 04CB               ??_setupTimer0Interrupt 0033  
                         _OSCCONbits 0099                          _potSetCount 0054  
                _setPWMDutyandPeriod 06D6              _setupInternalOscillator 018E  
                      _emergencyStop 0051                        ??i1_writeGPIO 0071  
                      __pstringtext1 0779                        __pstringtext2 078B  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                   ___lldiv@quotient 0021                  writeGPIO@writeValue 0033  
                        ??_writeGPIO 0034                 ?_setPWMDutyandPeriod 0070  
                  ?_currentTripReset 0070                   ??_currentTripReset 0039  
              readADCRaw@returnValue 0074                    ??_currentTripRead 0079  
                      _runPotScaling 00AB                 readGPIO@returnValueA 0073  
               readGPIO@returnValueB 0075                  readFilteredIL@i_820 007A  
                    readFilteredIL@i 007B  
