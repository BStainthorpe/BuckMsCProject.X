

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 11:16:27 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F1827 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     	;# 
    75  0001                     	;# 
    76  0002                     	;# 
    77  0003                     	;# 
    78  0004                     	;# 
    79  0005                     	;# 
    80  0006                     	;# 
    81  0007                     	;# 
    82  0008                     	;# 
    83  0009                     	;# 
    84  000A                     	;# 
    85  000B                     	;# 
    86  000C                     	;# 
    87  000D                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001E                     	;# 
   102  001F                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009B                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  011A                     	;# 
   132  011B                     	;# 
   133  011D                     	;# 
   134  011E                     	;# 
   135  018C                     	;# 
   136  018D                     	;# 
   137  0191                     	;# 
   138  0191                     	;# 
   139  0192                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0194                     	;# 
   144  0195                     	;# 
   145  0196                     	;# 
   146  0199                     	;# 
   147  019A                     	;# 
   148  019B                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019C                     	;# 
   153  019C                     	;# 
   154  019D                     	;# 
   155  019E                     	;# 
   156  019F                     	;# 
   157  020C                     	;# 
   158  020D                     	;# 
   159  0211                     	;# 
   160  0211                     	;# 
   161  0212                     	;# 
   162  0212                     	;# 
   163  0213                     	;# 
   164  0213                     	;# 
   165  0214                     	;# 
   166  0214                     	;# 
   167  0215                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0216                     	;# 
   171  0216                     	;# 
   172  0217                     	;# 
   173  0217                     	;# 
   174  0219                     	;# 
   175  021A                     	;# 
   176  021B                     	;# 
   177  021C                     	;# 
   178  021D                     	;# 
   179  021E                     	;# 
   180  021F                     	;# 
   181  0291                     	;# 
   182  0291                     	;# 
   183  0292                     	;# 
   184  0293                     	;# 
   185  0294                     	;# 
   186  0295                     	;# 
   187  0295                     	;# 
   188  0296                     	;# 
   189  0298                     	;# 
   190  0298                     	;# 
   191  0299                     	;# 
   192  029A                     	;# 
   193  029B                     	;# 
   194  029C                     	;# 
   195  029C                     	;# 
   196  029D                     	;# 
   197  029E                     	;# 
   198  029E                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0318                     	;# 
   204  0318                     	;# 
   205  0319                     	;# 
   206  031A                     	;# 
   207  0394                     	;# 
   208  0395                     	;# 
   209  0396                     	;# 
   210  039A                     	;# 
   211  039C                     	;# 
   212  039D                     	;# 
   213  039E                     	;# 
   214  039F                     	;# 
   215  0415                     	;# 
   216  0416                     	;# 
   217  0417                     	;# 
   218  041C                     	;# 
   219  041D                     	;# 
   220  041E                     	;# 
   221  0FE4                     	;# 
   222  0FE5                     	;# 
   223  0FE6                     	;# 
   224  0FE7                     	;# 
   225  0FE8                     	;# 
   226  0FE9                     	;# 
   227  0FEA                     	;# 
   228  0FEB                     	;# 
   229  0FED                     	;# 
   230  0FEE                     	;# 
   231  0FEF                     	;# 
   232  0000                     	;# 
   233  0001                     	;# 
   234  0002                     	;# 
   235  0003                     	;# 
   236  0004                     	;# 
   237  0005                     	;# 
   238  0006                     	;# 
   239  0007                     	;# 
   240  0008                     	;# 
   241  0009                     	;# 
   242  000A                     	;# 
   243  000B                     	;# 
   244  000C                     	;# 
   245  000D                     	;# 
   246  0011                     	;# 
   247  0012                     	;# 
   248  0013                     	;# 
   249  0014                     	;# 
   250  0015                     	;# 
   251  0016                     	;# 
   252  0016                     	;# 
   253  0017                     	;# 
   254  0018                     	;# 
   255  0019                     	;# 
   256  001A                     	;# 
   257  001B                     	;# 
   258  001C                     	;# 
   259  001E                     	;# 
   260  001F                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0094                     	;# 
   267  0095                     	;# 
   268  0096                     	;# 
   269  0097                     	;# 
   270  0098                     	;# 
   271  0099                     	;# 
   272  009A                     	;# 
   273  009B                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  0111                     	;# 
   281  0112                     	;# 
   282  0113                     	;# 
   283  0114                     	;# 
   284  0115                     	;# 
   285  0116                     	;# 
   286  0117                     	;# 
   287  0118                     	;# 
   288  0119                     	;# 
   289  011A                     	;# 
   290  011B                     	;# 
   291  011D                     	;# 
   292  011E                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0191                     	;# 
   296  0191                     	;# 
   297  0192                     	;# 
   298  0193                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0194                     	;# 
   302  0195                     	;# 
   303  0196                     	;# 
   304  0199                     	;# 
   305  019A                     	;# 
   306  019B                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019C                     	;# 
   311  019C                     	;# 
   312  019D                     	;# 
   313  019E                     	;# 
   314  019F                     	;# 
   315  020C                     	;# 
   316  020D                     	;# 
   317  0211                     	;# 
   318  0211                     	;# 
   319  0212                     	;# 
   320  0212                     	;# 
   321  0213                     	;# 
   322  0213                     	;# 
   323  0214                     	;# 
   324  0214                     	;# 
   325  0215                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0216                     	;# 
   329  0216                     	;# 
   330  0217                     	;# 
   331  0217                     	;# 
   332  0219                     	;# 
   333  021A                     	;# 
   334  021B                     	;# 
   335  021C                     	;# 
   336  021D                     	;# 
   337  021E                     	;# 
   338  021F                     	;# 
   339  0291                     	;# 
   340  0291                     	;# 
   341  0292                     	;# 
   342  0293                     	;# 
   343  0294                     	;# 
   344  0295                     	;# 
   345  0295                     	;# 
   346  0296                     	;# 
   347  0298                     	;# 
   348  0298                     	;# 
   349  0299                     	;# 
   350  029A                     	;# 
   351  029B                     	;# 
   352  029C                     	;# 
   353  029C                     	;# 
   354  029D                     	;# 
   355  029E                     	;# 
   356  029E                     	;# 
   357  0311                     	;# 
   358  0311                     	;# 
   359  0312                     	;# 
   360  0313                     	;# 
   361  0318                     	;# 
   362  0318                     	;# 
   363  0319                     	;# 
   364  031A                     	;# 
   365  0394                     	;# 
   366  0395                     	;# 
   367  0396                     	;# 
   368  039A                     	;# 
   369  039C                     	;# 
   370  039D                     	;# 
   371  039E                     	;# 
   372  039F                     	;# 
   373  0415                     	;# 
   374  0416                     	;# 
   375  0417                     	;# 
   376  041C                     	;# 
   377  041D                     	;# 
   378  041E                     	;# 
   379  0FE4                     	;# 
   380  0FE5                     	;# 
   381  0FE6                     	;# 
   382  0FE7                     	;# 
   383  0FE8                     	;# 
   384  0FE9                     	;# 
   385  0FEA                     	;# 
   386  0FEB                     	;# 
   387  0FED                     	;# 
   388  0FEE                     	;# 
   389  0FEF                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  0011                     	;# 
   405  0012                     	;# 
   406  0013                     	;# 
   407  0014                     	;# 
   408  0015                     	;# 
   409  0016                     	;# 
   410  0016                     	;# 
   411  0017                     	;# 
   412  0018                     	;# 
   413  0019                     	;# 
   414  001A                     	;# 
   415  001B                     	;# 
   416  001C                     	;# 
   417  001E                     	;# 
   418  001F                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  0111                     	;# 
   439  0112                     	;# 
   440  0113                     	;# 
   441  0114                     	;# 
   442  0115                     	;# 
   443  0116                     	;# 
   444  0117                     	;# 
   445  0118                     	;# 
   446  0119                     	;# 
   447  011A                     	;# 
   448  011B                     	;# 
   449  011D                     	;# 
   450  011E                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0191                     	;# 
   454  0191                     	;# 
   455  0192                     	;# 
   456  0193                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0194                     	;# 
   460  0195                     	;# 
   461  0196                     	;# 
   462  0199                     	;# 
   463  019A                     	;# 
   464  019B                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019C                     	;# 
   469  019C                     	;# 
   470  019D                     	;# 
   471  019E                     	;# 
   472  019F                     	;# 
   473  020C                     	;# 
   474  020D                     	;# 
   475  0211                     	;# 
   476  0211                     	;# 
   477  0212                     	;# 
   478  0212                     	;# 
   479  0213                     	;# 
   480  0213                     	;# 
   481  0214                     	;# 
   482  0214                     	;# 
   483  0215                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0216                     	;# 
   487  0216                     	;# 
   488  0217                     	;# 
   489  0217                     	;# 
   490  0219                     	;# 
   491  021A                     	;# 
   492  021B                     	;# 
   493  021C                     	;# 
   494  021D                     	;# 
   495  021E                     	;# 
   496  021F                     	;# 
   497  0291                     	;# 
   498  0291                     	;# 
   499  0292                     	;# 
   500  0293                     	;# 
   501  0294                     	;# 
   502  0295                     	;# 
   503  0295                     	;# 
   504  0296                     	;# 
   505  0298                     	;# 
   506  0298                     	;# 
   507  0299                     	;# 
   508  029A                     	;# 
   509  029B                     	;# 
   510  029C                     	;# 
   511  029C                     	;# 
   512  029D                     	;# 
   513  029E                     	;# 
   514  029E                     	;# 
   515  0311                     	;# 
   516  0311                     	;# 
   517  0312                     	;# 
   518  0313                     	;# 
   519  0318                     	;# 
   520  0318                     	;# 
   521  0319                     	;# 
   522  031A                     	;# 
   523  0394                     	;# 
   524  0395                     	;# 
   525  0396                     	;# 
   526  039A                     	;# 
   527  039C                     	;# 
   528  039D                     	;# 
   529  039E                     	;# 
   530  039F                     	;# 
   531  0415                     	;# 
   532  0416                     	;# 
   533  0417                     	;# 
   534  041C                     	;# 
   535  041D                     	;# 
   536  041E                     	;# 
   537  0FE4                     	;# 
   538  0FE5                     	;# 
   539  0FE6                     	;# 
   540  0FE7                     	;# 
   541  0FE8                     	;# 
   542  0FE9                     	;# 
   543  0FEA                     	;# 
   544  0FEB                     	;# 
   545  0FED                     	;# 
   546  0FEE                     	;# 
   547  0FEF                     	;# 
   548  0000                     	;# 
   549  0001                     	;# 
   550  0002                     	;# 
   551  0003                     	;# 
   552  0004                     	;# 
   553  0005                     	;# 
   554  0006                     	;# 
   555  0007                     	;# 
   556  0008                     	;# 
   557  0009                     	;# 
   558  000A                     	;# 
   559  000B                     	;# 
   560  000C                     	;# 
   561  000D                     	;# 
   562  0011                     	;# 
   563  0012                     	;# 
   564  0013                     	;# 
   565  0014                     	;# 
   566  0015                     	;# 
   567  0016                     	;# 
   568  0016                     	;# 
   569  0017                     	;# 
   570  0018                     	;# 
   571  0019                     	;# 
   572  001A                     	;# 
   573  001B                     	;# 
   574  001C                     	;# 
   575  001E                     	;# 
   576  001F                     	;# 
   577  008C                     	;# 
   578  008D                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0094                     	;# 
   583  0095                     	;# 
   584  0096                     	;# 
   585  0097                     	;# 
   586  0098                     	;# 
   587  0099                     	;# 
   588  009A                     	;# 
   589  009B                     	;# 
   590  009B                     	;# 
   591  009C                     	;# 
   592  009D                     	;# 
   593  009E                     	;# 
   594  010C                     	;# 
   595  010D                     	;# 
   596  0111                     	;# 
   597  0112                     	;# 
   598  0113                     	;# 
   599  0114                     	;# 
   600  0115                     	;# 
   601  0116                     	;# 
   602  0117                     	;# 
   603  0118                     	;# 
   604  0119                     	;# 
   605  011A                     	;# 
   606  011B                     	;# 
   607  011D                     	;# 
   608  011E                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  0191                     	;# 
   612  0191                     	;# 
   613  0192                     	;# 
   614  0193                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0194                     	;# 
   618  0195                     	;# 
   619  0196                     	;# 
   620  0199                     	;# 
   621  019A                     	;# 
   622  019B                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019C                     	;# 
   627  019C                     	;# 
   628  019D                     	;# 
   629  019E                     	;# 
   630  019F                     	;# 
   631  020C                     	;# 
   632  020D                     	;# 
   633  0211                     	;# 
   634  0211                     	;# 
   635  0212                     	;# 
   636  0212                     	;# 
   637  0213                     	;# 
   638  0213                     	;# 
   639  0214                     	;# 
   640  0214                     	;# 
   641  0215                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0216                     	;# 
   645  0216                     	;# 
   646  0217                     	;# 
   647  0217                     	;# 
   648  0219                     	;# 
   649  021A                     	;# 
   650  021B                     	;# 
   651  021C                     	;# 
   652  021D                     	;# 
   653  021E                     	;# 
   654  021F                     	;# 
   655  0291                     	;# 
   656  0291                     	;# 
   657  0292                     	;# 
   658  0293                     	;# 
   659  0294                     	;# 
   660  0295                     	;# 
   661  0295                     	;# 
   662  0296                     	;# 
   663  0298                     	;# 
   664  0298                     	;# 
   665  0299                     	;# 
   666  029A                     	;# 
   667  029B                     	;# 
   668  029C                     	;# 
   669  029C                     	;# 
   670  029D                     	;# 
   671  029E                     	;# 
   672  029E                     	;# 
   673  0311                     	;# 
   674  0311                     	;# 
   675  0312                     	;# 
   676  0313                     	;# 
   677  0318                     	;# 
   678  0318                     	;# 
   679  0319                     	;# 
   680  031A                     	;# 
   681  0394                     	;# 
   682  0395                     	;# 
   683  0396                     	;# 
   684  039A                     	;# 
   685  039C                     	;# 
   686  039D                     	;# 
   687  039E                     	;# 
   688  039F                     	;# 
   689  0415                     	;# 
   690  0416                     	;# 
   691  0417                     	;# 
   692  041C                     	;# 
   693  041D                     	;# 
   694  041E                     	;# 
   695  0FE4                     	;# 
   696  0FE5                     	;# 
   697  0FE6                     	;# 
   698  0FE7                     	;# 
   699  0FE8                     	;# 
   700  0FE9                     	;# 
   701  0FEA                     	;# 
   702  0FEB                     	;# 
   703  0FED                     	;# 
   704  0FEE                     	;# 
   705  0FEF                     	;# 
   706  0000                     	;# 
   707  0001                     	;# 
   708  0002                     	;# 
   709  0003                     	;# 
   710  0004                     	;# 
   711  0005                     	;# 
   712  0006                     	;# 
   713  0007                     	;# 
   714  0008                     	;# 
   715  0009                     	;# 
   716  000A                     	;# 
   717  000B                     	;# 
   718  000C                     	;# 
   719  000D                     	;# 
   720  0011                     	;# 
   721  0012                     	;# 
   722  0013                     	;# 
   723  0014                     	;# 
   724  0015                     	;# 
   725  0016                     	;# 
   726  0016                     	;# 
   727  0017                     	;# 
   728  0018                     	;# 
   729  0019                     	;# 
   730  001A                     	;# 
   731  001B                     	;# 
   732  001C                     	;# 
   733  001E                     	;# 
   734  001F                     	;# 
   735  008C                     	;# 
   736  008D                     	;# 
   737  0091                     	;# 
   738  0092                     	;# 
   739  0093                     	;# 
   740  0094                     	;# 
   741  0095                     	;# 
   742  0096                     	;# 
   743  0097                     	;# 
   744  0098                     	;# 
   745  0099                     	;# 
   746  009A                     	;# 
   747  009B                     	;# 
   748  009B                     	;# 
   749  009C                     	;# 
   750  009D                     	;# 
   751  009E                     	;# 
   752  010C                     	;# 
   753  010D                     	;# 
   754  0111                     	;# 
   755  0112                     	;# 
   756  0113                     	;# 
   757  0114                     	;# 
   758  0115                     	;# 
   759  0116                     	;# 
   760  0117                     	;# 
   761  0118                     	;# 
   762  0119                     	;# 
   763  011A                     	;# 
   764  011B                     	;# 
   765  011D                     	;# 
   766  011E                     	;# 
   767  018C                     	;# 
   768  018D                     	;# 
   769  0191                     	;# 
   770  0191                     	;# 
   771  0192                     	;# 
   772  0193                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0194                     	;# 
   776  0195                     	;# 
   777  0196                     	;# 
   778  0199                     	;# 
   779  019A                     	;# 
   780  019B                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019C                     	;# 
   785  019C                     	;# 
   786  019D                     	;# 
   787  019E                     	;# 
   788  019F                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0213                     	;# 
   797  0214                     	;# 
   798  0214                     	;# 
   799  0215                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0216                     	;# 
   803  0216                     	;# 
   804  0217                     	;# 
   805  0217                     	;# 
   806  0219                     	;# 
   807  021A                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021D                     	;# 
   811  021E                     	;# 
   812  021F                     	;# 
   813  0291                     	;# 
   814  0291                     	;# 
   815  0292                     	;# 
   816  0293                     	;# 
   817  0294                     	;# 
   818  0295                     	;# 
   819  0295                     	;# 
   820  0296                     	;# 
   821  0298                     	;# 
   822  0298                     	;# 
   823  0299                     	;# 
   824  029A                     	;# 
   825  029B                     	;# 
   826  029C                     	;# 
   827  029C                     	;# 
   828  029D                     	;# 
   829  029E                     	;# 
   830  029E                     	;# 
   831  0311                     	;# 
   832  0311                     	;# 
   833  0312                     	;# 
   834  0313                     	;# 
   835  0318                     	;# 
   836  0318                     	;# 
   837  0319                     	;# 
   838  031A                     	;# 
   839  0394                     	;# 
   840  0395                     	;# 
   841  0396                     	;# 
   842  039A                     	;# 
   843  039C                     	;# 
   844  039D                     	;# 
   845  039E                     	;# 
   846  039F                     	;# 
   847  0415                     	;# 
   848  0416                     	;# 
   849  0417                     	;# 
   850  041C                     	;# 
   851  041D                     	;# 
   852  041E                     	;# 
   853  0FE4                     	;# 
   854  0FE5                     	;# 
   855  0FE6                     	;# 
   856  0FE7                     	;# 
   857  0FE8                     	;# 
   858  0FE9                     	;# 
   859  0FEA                     	;# 
   860  0FEB                     	;# 
   861  0FED                     	;# 
   862  0FEE                     	;# 
   863  0FEF                     	;# 
   864  0000                     	;# 
   865  0001                     	;# 
   866  0002                     	;# 
   867  0003                     	;# 
   868  0004                     	;# 
   869  0005                     	;# 
   870  0006                     	;# 
   871  0007                     	;# 
   872  0008                     	;# 
   873  0009                     	;# 
   874  000A                     	;# 
   875  000B                     	;# 
   876  000C                     	;# 
   877  000D                     	;# 
   878  0011                     	;# 
   879  0012                     	;# 
   880  0013                     	;# 
   881  0014                     	;# 
   882  0015                     	;# 
   883  0016                     	;# 
   884  0016                     	;# 
   885  0017                     	;# 
   886  0018                     	;# 
   887  0019                     	;# 
   888  001A                     	;# 
   889  001B                     	;# 
   890  001C                     	;# 
   891  001E                     	;# 
   892  001F                     	;# 
   893  008C                     	;# 
   894  008D                     	;# 
   895  0091                     	;# 
   896  0092                     	;# 
   897  0093                     	;# 
   898  0094                     	;# 
   899  0095                     	;# 
   900  0096                     	;# 
   901  0097                     	;# 
   902  0098                     	;# 
   903  0099                     	;# 
   904  009A                     	;# 
   905  009B                     	;# 
   906  009B                     	;# 
   907  009C                     	;# 
   908  009D                     	;# 
   909  009E                     	;# 
   910  010C                     	;# 
   911  010D                     	;# 
   912  0111                     	;# 
   913  0112                     	;# 
   914  0113                     	;# 
   915  0114                     	;# 
   916  0115                     	;# 
   917  0116                     	;# 
   918  0117                     	;# 
   919  0118                     	;# 
   920  0119                     	;# 
   921  011A                     	;# 
   922  011B                     	;# 
   923  011D                     	;# 
   924  011E                     	;# 
   925  018C                     	;# 
   926  018D                     	;# 
   927  0191                     	;# 
   928  0191                     	;# 
   929  0192                     	;# 
   930  0193                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0194                     	;# 
   934  0195                     	;# 
   935  0196                     	;# 
   936  0199                     	;# 
   937  019A                     	;# 
   938  019B                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019C                     	;# 
   943  019C                     	;# 
   944  019D                     	;# 
   945  019E                     	;# 
   946  019F                     	;# 
   947  020C                     	;# 
   948  020D                     	;# 
   949  0211                     	;# 
   950  0211                     	;# 
   951  0212                     	;# 
   952  0212                     	;# 
   953  0213                     	;# 
   954  0213                     	;# 
   955  0214                     	;# 
   956  0214                     	;# 
   957  0215                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0216                     	;# 
   961  0216                     	;# 
   962  0217                     	;# 
   963  0217                     	;# 
   964  0219                     	;# 
   965  021A                     	;# 
   966  021B                     	;# 
   967  021C                     	;# 
   968  021D                     	;# 
   969  021E                     	;# 
   970  021F                     	;# 
   971  0291                     	;# 
   972  0291                     	;# 
   973  0292                     	;# 
   974  0293                     	;# 
   975  0294                     	;# 
   976  0295                     	;# 
   977  0295                     	;# 
   978  0296                     	;# 
   979  0298                     	;# 
   980  0298                     	;# 
   981  0299                     	;# 
   982  029A                     	;# 
   983  029B                     	;# 
   984  029C                     	;# 
   985  029C                     	;# 
   986  029D                     	;# 
   987  029E                     	;# 
   988  029E                     	;# 
   989  0311                     	;# 
   990  0311                     	;# 
   991  0312                     	;# 
   992  0313                     	;# 
   993  0318                     	;# 
   994  0318                     	;# 
   995  0319                     	;# 
   996  031A                     	;# 
   997  0394                     	;# 
   998  0395                     	;# 
   999  0396                     	;# 
  1000  039A                     	;# 
  1001  039C                     	;# 
  1002  039D                     	;# 
  1003  039E                     	;# 
  1004  039F                     	;# 
  1005  0415                     	;# 
  1006  0416                     	;# 
  1007  0417                     	;# 
  1008  041C                     	;# 
  1009  041D                     	;# 
  1010  041E                     	;# 
  1011  0FE4                     	;# 
  1012  0FE5                     	;# 
  1013  0FE6                     	;# 
  1014  0FE7                     	;# 
  1015  0FE8                     	;# 
  1016  0FE9                     	;# 
  1017  0FEA                     	;# 
  1018  0FEB                     	;# 
  1019  0FED                     	;# 
  1020  0FEE                     	;# 
  1021  0FEF                     	;# 
  1022  0000                     	;# 
  1023  0001                     	;# 
  1024  0002                     	;# 
  1025  0003                     	;# 
  1026  0004                     	;# 
  1027  0005                     	;# 
  1028  0006                     	;# 
  1029  0007                     	;# 
  1030  0008                     	;# 
  1031  0009                     	;# 
  1032  000A                     	;# 
  1033  000B                     	;# 
  1034  000C                     	;# 
  1035  000D                     	;# 
  1036  0011                     	;# 
  1037  0012                     	;# 
  1038  0013                     	;# 
  1039  0014                     	;# 
  1040  0015                     	;# 
  1041  0016                     	;# 
  1042  0016                     	;# 
  1043  0017                     	;# 
  1044  0018                     	;# 
  1045  0019                     	;# 
  1046  001A                     	;# 
  1047  001B                     	;# 
  1048  001C                     	;# 
  1049  001E                     	;# 
  1050  001F                     	;# 
  1051  008C                     	;# 
  1052  008D                     	;# 
  1053  0091                     	;# 
  1054  0092                     	;# 
  1055  0093                     	;# 
  1056  0094                     	;# 
  1057  0095                     	;# 
  1058  0096                     	;# 
  1059  0097                     	;# 
  1060  0098                     	;# 
  1061  0099                     	;# 
  1062  009A                     	;# 
  1063  009B                     	;# 
  1064  009B                     	;# 
  1065  009C                     	;# 
  1066  009D                     	;# 
  1067  009E                     	;# 
  1068  010C                     	;# 
  1069  010D                     	;# 
  1070  0111                     	;# 
  1071  0112                     	;# 
  1072  0113                     	;# 
  1073  0114                     	;# 
  1074  0115                     	;# 
  1075  0116                     	;# 
  1076  0117                     	;# 
  1077  0118                     	;# 
  1078  0119                     	;# 
  1079  011A                     	;# 
  1080  011B                     	;# 
  1081  011D                     	;# 
  1082  011E                     	;# 
  1083  018C                     	;# 
  1084  018D                     	;# 
  1085  0191                     	;# 
  1086  0191                     	;# 
  1087  0192                     	;# 
  1088  0193                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0194                     	;# 
  1092  0195                     	;# 
  1093  0196                     	;# 
  1094  0199                     	;# 
  1095  019A                     	;# 
  1096  019B                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019C                     	;# 
  1101  019C                     	;# 
  1102  019D                     	;# 
  1103  019E                     	;# 
  1104  019F                     	;# 
  1105  020C                     	;# 
  1106  020D                     	;# 
  1107  0211                     	;# 
  1108  0211                     	;# 
  1109  0212                     	;# 
  1110  0212                     	;# 
  1111  0213                     	;# 
  1112  0213                     	;# 
  1113  0214                     	;# 
  1114  0214                     	;# 
  1115  0215                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0216                     	;# 
  1119  0216                     	;# 
  1120  0217                     	;# 
  1121  0217                     	;# 
  1122  0219                     	;# 
  1123  021A                     	;# 
  1124  021B                     	;# 
  1125  021C                     	;# 
  1126  021D                     	;# 
  1127  021E                     	;# 
  1128  021F                     	;# 
  1129  0291                     	;# 
  1130  0291                     	;# 
  1131  0292                     	;# 
  1132  0293                     	;# 
  1133  0294                     	;# 
  1134  0295                     	;# 
  1135  0295                     	;# 
  1136  0296                     	;# 
  1137  0298                     	;# 
  1138  0298                     	;# 
  1139  0299                     	;# 
  1140  029A                     	;# 
  1141  029B                     	;# 
  1142  029C                     	;# 
  1143  029C                     	;# 
  1144  029D                     	;# 
  1145  029E                     	;# 
  1146  029E                     	;# 
  1147  0311                     	;# 
  1148  0311                     	;# 
  1149  0312                     	;# 
  1150  0313                     	;# 
  1151  0318                     	;# 
  1152  0318                     	;# 
  1153  0319                     	;# 
  1154  031A                     	;# 
  1155  0394                     	;# 
  1156  0395                     	;# 
  1157  0396                     	;# 
  1158  039A                     	;# 
  1159  039C                     	;# 
  1160  039D                     	;# 
  1161  039E                     	;# 
  1162  039F                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  041C                     	;# 
  1167  041D                     	;# 
  1168  041E                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0008                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000D                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0014                     	;# 
  1198  0015                     	;# 
  1199  0016                     	;# 
  1200  0016                     	;# 
  1201  0017                     	;# 
  1202  0018                     	;# 
  1203  0019                     	;# 
  1204  001A                     	;# 
  1205  001B                     	;# 
  1206  001C                     	;# 
  1207  001E                     	;# 
  1208  001F                     	;# 
  1209  008C                     	;# 
  1210  008D                     	;# 
  1211  0091                     	;# 
  1212  0092                     	;# 
  1213  0093                     	;# 
  1214  0094                     	;# 
  1215  0095                     	;# 
  1216  0096                     	;# 
  1217  0097                     	;# 
  1218  0098                     	;# 
  1219  0099                     	;# 
  1220  009A                     	;# 
  1221  009B                     	;# 
  1222  009B                     	;# 
  1223  009C                     	;# 
  1224  009D                     	;# 
  1225  009E                     	;# 
  1226  010C                     	;# 
  1227  010D                     	;# 
  1228  0111                     	;# 
  1229  0112                     	;# 
  1230  0113                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0117                     	;# 
  1235  0118                     	;# 
  1236  0119                     	;# 
  1237  011A                     	;# 
  1238  011B                     	;# 
  1239  011D                     	;# 
  1240  011E                     	;# 
  1241  018C                     	;# 
  1242  018D                     	;# 
  1243  0191                     	;# 
  1244  0191                     	;# 
  1245  0192                     	;# 
  1246  0193                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0194                     	;# 
  1250  0195                     	;# 
  1251  0196                     	;# 
  1252  0199                     	;# 
  1253  019A                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019C                     	;# 
  1259  019C                     	;# 
  1260  019D                     	;# 
  1261  019E                     	;# 
  1262  019F                     	;# 
  1263  020C                     	;# 
  1264  020D                     	;# 
  1265  0211                     	;# 
  1266  0211                     	;# 
  1267  0212                     	;# 
  1268  0212                     	;# 
  1269  0213                     	;# 
  1270  0213                     	;# 
  1271  0214                     	;# 
  1272  0214                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0216                     	;# 
  1277  0216                     	;# 
  1278  0217                     	;# 
  1279  0217                     	;# 
  1280  0219                     	;# 
  1281  021A                     	;# 
  1282  021B                     	;# 
  1283  021C                     	;# 
  1284  021D                     	;# 
  1285  021E                     	;# 
  1286  021F                     	;# 
  1287  0291                     	;# 
  1288  0291                     	;# 
  1289  0292                     	;# 
  1290  0293                     	;# 
  1291  0294                     	;# 
  1292  0295                     	;# 
  1293  0295                     	;# 
  1294  0296                     	;# 
  1295  0298                     	;# 
  1296  0298                     	;# 
  1297  0299                     	;# 
  1298  029A                     	;# 
  1299  029B                     	;# 
  1300  029C                     	;# 
  1301  029C                     	;# 
  1302  029D                     	;# 
  1303  029E                     	;# 
  1304  029E                     	;# 
  1305  0311                     	;# 
  1306  0311                     	;# 
  1307  0312                     	;# 
  1308  0313                     	;# 
  1309  0318                     	;# 
  1310  0318                     	;# 
  1311  0319                     	;# 
  1312  031A                     	;# 
  1313  0394                     	;# 
  1314  0395                     	;# 
  1315  0396                     	;# 
  1316  039A                     	;# 
  1317  039C                     	;# 
  1318  039D                     	;# 
  1319  039E                     	;# 
  1320  039F                     	;# 
  1321  0415                     	;# 
  1322  0416                     	;# 
  1323  0417                     	;# 
  1324  041C                     	;# 
  1325  041D                     	;# 
  1326  041E                     	;# 
  1327  0FE4                     	;# 
  1328  0FE5                     	;# 
  1329  0FE6                     	;# 
  1330  0FE7                     	;# 
  1331  0FE8                     	;# 
  1332  0FE9                     	;# 
  1333  0FEA                     	;# 
  1334  0FEB                     	;# 
  1335  0FED                     	;# 
  1336  0FEE                     	;# 
  1337  0FEF                     	;# 
  1338                           
  1339 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1340  000D                     _PORTB	set	13
  1341  000C                     _PORTA	set	12
  1342  001C                     _T2CONbits	set	28
  1343  001B                     _PR2	set	27
  1344  0011                     _PIR1bits	set	17
  1345  000B                     _INTCONbits	set	11
  1346  009B                     _ADRESL	set	155
  1347  009C                     _ADRESH	set	156
  1348  009D                     _ADCON0bits	set	157
  1349  008D                     _TRISB	set	141
  1350  008C                     _TRISA	set	140
  1351  009E                     _ADCON1	set	158
  1352  009D                     _ADCON0	set	157
  1353  0095                     _OPTION_REG	set	149
  1354  0095                     _OPTION_REGbits	set	149
  1355  0091                     _PIE1bits	set	145
  1356  0099                     _OSCCONbits	set	153
  1357  010D                     _LATB	set	269
  1358  010C                     _LATA	set	268
  1359  011D                     _APFCON0bits	set	285
  1360  018D                     _ANSELB	set	397
  1361  018C                     _ANSELA	set	396
  1362  0293                     _CCP1CONbits	set	659
  1363  0296                     _PSTR1CONbits	set	662
  1364  0291                     _CCPR1L	set	657
  1365  0293                     _CCP1CON	set	659
  1366                           
  1367                           	psect	stringtext1
  1368  062C                     __pstringtext1:
  1369  062C                     STR_1:
  1370  062C  3428               	retlw	40	;'('
  1371  062D  3428               	retlw	40	;'('
  1372  062E  3449               	retlw	73	;'I'
  1373  062F  344E               	retlw	78	;'N'
  1374  0630  3454               	retlw	84	;'T'
  1375  0631  3443               	retlw	67	;'C'
  1376  0632  344F               	retlw	79	;'O'
  1377  0633  344E               	retlw	78	;'N'
  1378  0634  3429               	retlw	41	;')'
  1379  0635  3426               	retlw	38	;'&'
  1380  0636  3430               	retlw	48	;'0'
  1381  0637  3437               	retlw	55	;'7'
  1382  0638  3446               	retlw	70	;'F'
  1383  0639  3468               	retlw	104	;'h'
  1384  063A  3429               	retlw	41	;')'
  1385  063B  342C               	retlw	44	;','
  1386  063C  3432               	retlw	50	;'2'
  1387  063D  3400               	retlw	0
  1388                           
  1389                           	psect	stringtext2
  1390  063E                     __pstringtext2:
  1391  063E                     STR_3:
  1392  063E  3428               	retlw	40	;'('
  1393  063F  3428               	retlw	40	;'('
  1394  0640  3450               	retlw	80	;'P'
  1395  0641  3449               	retlw	73	;'I'
  1396  0642  3452               	retlw	82	;'R'
  1397  0643  3431               	retlw	49	;'1'
  1398  0644  3429               	retlw	41	;')'
  1399  0645  3426               	retlw	38	;'&'
  1400  0646  3430               	retlw	48	;'0'
  1401  0647  3437               	retlw	55	;'7'
  1402  0648  3446               	retlw	70	;'F'
  1403  0649  3468               	retlw	104	;'h'
  1404  064A  3429               	retlw	41	;')'
  1405  064B  342C               	retlw	44	;','
  1406  064C  3432               	retlw	50	;'2'
  1407  064D  3400               	retlw	0
  1408                           
  1409                           	psect	stringtext3
  1410  0000                     __pstringtext3:
  1411  063E                     
  1412                           	psect	cinit
  1413  006E                     start_initialization:	
  1414                           ; #config settings
  1415                           
  1416  006E                     __initialization:
  1417                           
  1418                           ; Clear objects allocated to BANK0
  1419  006E  303D               	movlw	low __pbssBANK0
  1420  006F  0084               	movwf	4
  1421  0070  3000               	movlw	high __pbssBANK0
  1422  0071  0085               	movwf	5
  1423  0072  3018               	movlw	24
  1424  0073  3186  265F  3180   	fcall	clear_ram0
  1425                           
  1426                           ; Clear objects allocated to BANK1
  1427  0076  30A0               	movlw	low __pbssBANK1
  1428  0077  0084               	movwf	4
  1429  0078  3000               	movlw	high __pbssBANK1
  1430  0079  0085               	movwf	5
  1431  007A  3040               	movlw	64
  1432  007B  3186  265F  3180   	fcall	clear_ram0
  1433                           
  1434                           ; Clear objects allocated to BANK2
  1435  007E  3020               	movlw	low __pbssBANK2
  1436  007F  0084               	movwf	4
  1437  0080  3001               	movlw	high __pbssBANK2
  1438  0081  0085               	movwf	5
  1439  0082  3040               	movlw	64
  1440  0083  3186  265F  3180   	fcall	clear_ram0
  1441  0086                     end_of_initialization:	
  1442                           ;End of C runtime variable initialization code
  1443                           
  1444  0086                     __end_of__initialization:
  1445  0086  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1446  0087  0020               	movlb	0
  1447  0088  3185  2DC6         	ljmp	_main	;jump to C main() function
  1448                           
  1449                           	psect	bssBANK0
  1450  003D                     __pbssBANK0:
  1451  003D                     _clockFrequency:
  1452  003D                     	ds	4
  1453  0041                     _filteredDutyPot:
  1454  0041                     	ds	2
  1455  0043                     _filteredFreqPot:
  1456  0043                     	ds	2
  1457  0045                     _filteredIL:
  1458  0045                     	ds	2
  1459  0047                     _filteredIDS:
  1460  0047                     	ds	2
  1461  0049                     _latestIL1:
  1462  0049                     	ds	2
  1463  004B                     _prevDuty:
  1464  004B                     	ds	2
  1465  004D                     _setDuty:
  1466  004D                     	ds	2
  1467  004F                     _emergencyStop:
  1468  004F                     	ds	1
  1469  0050                     _timerSlotQuarter:
  1470  0050                     	ds	1
  1471  0051                     _timerSlotHalf:
  1472  0051                     	ds	1
  1473  0052                     _potSetCount:
  1474  0052                     	ds	1
  1475  0053                     _prevPeriod:
  1476  0053                     	ds	1
  1477  0054                     _setPeriod:
  1478  0054                     	ds	1
  1479                           
  1480                           	psect	bssBANK1
  1481  00A0                     __pbssBANK1:
  1482  00A0                     _currentILFIFO:
  1483  00A0                     	ds	32
  1484  00C0                     _currentIDSFIFO:
  1485  00C0                     	ds	32
  1486                           
  1487                           	psect	bssBANK2
  1488  0120                     __pbssBANK2:
  1489  0120                     _dutyPotFIFO:
  1490  0120                     	ds	32
  1491  0140                     _freqPotFIFO:
  1492  0140                     	ds	32
  1493                           
  1494                           	psect	clrtext
  1495  065F                     clear_ram0:	
  1496                           ;	Called with FSR0 containing the base address, and
  1497                           ;	WREG with the size to clear
  1498                           
  1499  065F  0064               	clrwdt	;clear the watchdog before getting into this loop
  1500  0660                     clrloop0:
  1501  0660  0180               	clrf	0	;clear RAM location pointed to by FSR
  1502  0661  3101               	addfsr 0,1
  1503  0662  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1504  0663  2E60               	goto	clrloop0	;have we reached the end yet?
  1505  0664  3400               	retlw	0	;all done for this memory range, return
  1506                           
  1507                           	psect	cstackCOMMON
  1508  0070                     __pcstackCOMMON:
  1509  0070                     ?_currentTripRead:
  1510  0070                     ?_setPWMDutyandPeriod:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_writeGPIO:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ?_runPotScaling:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_setupInternalOscillator:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_setupPWM:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_setupTimer0Interrupt:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_initialiseADCModule:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_initialiseCurrentSensors:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_initialisePotentiometers:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_Tick980Hz:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_initialiseADCPin:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_readGPIO:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ??_readGPIO:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?_readADCRaw:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ?___wmul:	
  1553                           ; 2 bytes @ 0x0
  1554                           
  1555  0070                     ?___lmul:	
  1556                           ; 2 bytes @ 0x0
  1557                           
  1558  0070                     writeGPIO@writeValue:	
  1559                           ; 4 bytes @ 0x0
  1560                           
  1561  0070                     setPWMDutyandPeriod@dutyCycle:	
  1562                           ; 1 bytes @ 0x0
  1563                           
  1564  0070                     ___wmul@multiplier:	
  1565                           ; 2 bytes @ 0x0
  1566                           
  1567  0070                     ___lmul@multiplier:	
  1568                           ; 2 bytes @ 0x0
  1569                           
  1570                           
  1571                           ; 4 bytes @ 0x0
  1572  0070                     	ds	1
  1573  0071                     ??_writeGPIO:
  1574                           
  1575                           ; 1 bytes @ 0x1
  1576  0071                     	ds	1
  1577  0072                     ??_readADCRaw:
  1578  0072                     setPWMDutyandPeriod@period:	
  1579                           ; 1 bytes @ 0x2
  1580                           
  1581  0072                     ___wmul@multiplicand:	
  1582                           ; 1 bytes @ 0x2
  1583                           
  1584                           
  1585                           ; 2 bytes @ 0x2
  1586  0072                     	ds	1
  1587  0073                     ??_setPWMDutyandPeriod:
  1588  0073                     writeGPIO@portType:	
  1589                           ; 1 bytes @ 0x3
  1590                           
  1591  0073                     readGPIO@portType:	
  1592                           ; 1 bytes @ 0x3
  1593                           
  1594                           
  1595                           ; 1 bytes @ 0x3
  1596  0073                     	ds	1
  1597  0074                     ??___wmul:
  1598  0074                     writeGPIO@gpioNumber:	
  1599                           ; 1 bytes @ 0x4
  1600                           
  1601  0074                     readGPIO@gpioNumber:	
  1602                           ; 1 bytes @ 0x4
  1603                           
  1604  0074                     readADCRaw@returnValue:	
  1605                           ; 1 bytes @ 0x4
  1606                           
  1607  0074                     ___wmul@product:	
  1608                           ; 2 bytes @ 0x4
  1609                           
  1610  0074                     ___lmul@multiplicand:	
  1611                           ; 2 bytes @ 0x4
  1612                           
  1613                           
  1614                           ; 4 bytes @ 0x4
  1615  0074                     	ds	1
  1616  0075                     writeGPIO@portNumber:
  1617  0075                     readGPIO@portNumber:	
  1618                           ; 1 bytes @ 0x5
  1619                           
  1620                           
  1621                           ; 1 bytes @ 0x5
  1622  0075                     	ds	1
  1623  0076                     ??_currentTripRead:
  1624  0076                     ?___lldiv:	
  1625                           ; 1 bytes @ 0x6
  1626                           
  1627  0076                     readADCRaw@channel:	
  1628                           ; 4 bytes @ 0x6
  1629                           
  1630  0076                     _currentTripRead$738:	
  1631                           ; 1 bytes @ 0x6
  1632                           
  1633  0076                     ___lldiv@divisor:	
  1634                           ; 1 bytes @ 0x6
  1635                           
  1636                           
  1637                           ; 4 bytes @ 0x6
  1638  0076                     	ds	1
  1639  0077                     readADCRaw@gpioValid:
  1640                           
  1641                           ; 1 bytes @ 0x7
  1642  0077                     	ds	1
  1643  0078                     ??___lmul:
  1644  0078                     readADCRaw@i:	
  1645                           ; 1 bytes @ 0x8
  1646                           
  1647  0078                     ___lmul@product:	
  1648                           ; 1 bytes @ 0x8
  1649                           
  1650                           
  1651                           ; 4 bytes @ 0x8
  1652  0078                     	ds	1
  1653  0079                     readADCRaw@i_614:
  1654                           
  1655                           ; 1 bytes @ 0x9
  1656  0079                     	ds	1
  1657  007A                     readADCRaw@gpioNumber:
  1658  007A                     ___lldiv@dividend:	
  1659                           ; 1 bytes @ 0xA
  1660                           
  1661                           
  1662                           ; 4 bytes @ 0xA
  1663  007A                     	ds	1
  1664  007B                     ?_readFilteredDutyPot:
  1665  007B                     ?_readFilteredFreqPot:	
  1666                           ; 2 bytes @ 0xB
  1667                           
  1668                           
  1669                           ; 2 bytes @ 0xB
  1670  007B                     	ds	3
  1671                           
  1672                           	psect	cstackBANK0
  1673  0020                     __pcstackBANK0:
  1674  0020                     ??_readFilteredDutyPot:
  1675  0020                     ??_readFilteredFreqPot:	
  1676                           ; 1 bytes @ 0x0
  1677                           
  1678  0020                     ??___lldiv:	
  1679                           ; 1 bytes @ 0x0
  1680                           
  1681                           
  1682                           ; 1 bytes @ 0x0
  1683  0020                     	ds	1
  1684  0021                     ___lldiv@quotient:
  1685                           
  1686                           ; 4 bytes @ 0x1
  1687  0021                     	ds	3
  1688  0024                     readFilteredDutyPot@sumOfSamples:
  1689  0024                     readFilteredFreqPot@sumOfSamples:	
  1690                           ; 4 bytes @ 0x4
  1691                           
  1692                           
  1693                           ; 4 bytes @ 0x4
  1694  0024                     	ds	1
  1695  0025                     ___lldiv@counter:
  1696                           
  1697                           ; 1 bytes @ 0x5
  1698  0025                     	ds	1
  1699  0026                     ??_runPotScaling:
  1700                           
  1701                           ; 1 bytes @ 0x6
  1702  0026                     	ds	2
  1703  0028                     readFilteredDutyPot@i_696:
  1704  0028                     readFilteredFreqPot@i_700:	
  1705                           ; 1 bytes @ 0x8
  1706                           
  1707                           
  1708                           ; 1 bytes @ 0x8
  1709  0028                     	ds	1
  1710  0029                     readFilteredDutyPot@i:
  1711  0029                     readFilteredFreqPot@i:	
  1712                           ; 1 bytes @ 0x9
  1713                           
  1714                           
  1715                           ; 1 bytes @ 0x9
  1716  0029                     	ds	5
  1717  002E                     runPotScaling@maxDuty:
  1718                           
  1719                           ; 2 bytes @ 0xE
  1720  002E                     	ds	2
  1721  0030                     runPotScaling@minDuty:
  1722                           
  1723                           ; 2 bytes @ 0x10
  1724  0030                     	ds	2
  1725  0032                     ??_Tick980Hz:
  1726                           
  1727                           ; 1 bytes @ 0x12
  1728  0032                     	ds	1
  1729  0033                     ??_setupInternalOscillator:
  1730  0033                     ??_setupTimer0Interrupt:	
  1731                           ; 1 bytes @ 0x13
  1732                           
  1733  0033                     ??_initialiseADCModule:	
  1734                           ; 1 bytes @ 0x13
  1735                           
  1736  0033                     ?_initialiseGPIO:	
  1737                           ; 1 bytes @ 0x13
  1738                           
  1739  0033                     ??_initialiseADCPin:	
  1740                           ; 1 bytes @ 0x13
  1741                           
  1742  0033                     initialiseGPIO@direction:	
  1743                           ; 1 bytes @ 0x13
  1744                           
  1745                           
  1746                           ; 1 bytes @ 0x13
  1747  0033                     	ds	1
  1748  0034                     ??_initialiseGPIO:
  1749                           
  1750                           ; 1 bytes @ 0x14
  1751  0034                     	ds	1
  1752  0035                     setupInternalOscillator@selectedFreq:
  1753  0035                     initialiseADCPin@gpioValid:	
  1754                           ; 1 bytes @ 0x15
  1755                           
  1756                           
  1757                           ; 1 bytes @ 0x15
  1758  0035                     	ds	1
  1759  0036                     initialiseADCPin@portType:
  1760  0036                     initialiseGPIO@portType:	
  1761                           ; 1 bytes @ 0x16
  1762                           
  1763                           
  1764                           ; 1 bytes @ 0x16
  1765  0036                     	ds	1
  1766  0037                     initialiseADCPin@portNumber:
  1767  0037                     initialiseGPIO@gpioNumber:	
  1768                           ; 1 bytes @ 0x17
  1769                           
  1770                           
  1771                           ; 1 bytes @ 0x17
  1772  0037                     	ds	1
  1773  0038                     initialiseADCPin@gpioNumber:
  1774  0038                     initialiseGPIO@portNumber:	
  1775                           ; 1 bytes @ 0x18
  1776                           
  1777                           
  1778                           ; 1 bytes @ 0x18
  1779  0038                     	ds	1
  1780  0039                     ??_setupPWM:
  1781  0039                     ??_initialiseCurrentSensors:	
  1782                           ; 1 bytes @ 0x19
  1783                           
  1784  0039                     ??_initialisePotentiometers:	
  1785                           ; 1 bytes @ 0x19
  1786                           
  1787  0039                     ?_main:	
  1788                           ; 1 bytes @ 0x19
  1789                           
  1790  0039                     main@argc:	
  1791                           ; 2 bytes @ 0x19
  1792                           
  1793                           
  1794                           ; 2 bytes @ 0x19
  1795  0039                     	ds	2
  1796  003B                     main@argv:
  1797                           
  1798                           ; 2 bytes @ 0x1B
  1799  003B                     	ds	2
  1800  003D                     ??_main:
  1801                           
  1802                           	psect	maintext
  1803  05C6                     __pmaintext:	
  1804                           ; 1 bytes @ 0x1D
  1805 ;;
  1806 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1807 ;;
  1808 ;; *************** function _main *****************
  1809 ;; Defined at:
  1810 ;;		line 102 in file "main.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;  argc            2   25[BANK0 ] int 
  1813 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2   25[BANK0 ] int 
  1818 ;; Registers used:
  1819 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1820 ;; Tracked objects:
  1821 ;;		On entry : B1F/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1825 ;;      Params:         0       4       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0
  1827 ;;      Temps:          0       0       0       0       0       0
  1828 ;;      Totals:         0       4       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels required when called: 5
  1831 ;; This function calls:
  1832 ;;		_initialiseADCModule
  1833 ;;		_initialiseCurrentSensors
  1834 ;;		_initialiseGPIO
  1835 ;;		_initialisePotentiometers
  1836 ;;		_setupInternalOscillator
  1837 ;;		_setupPWM
  1838 ;;		_setupTimer0Interrupt
  1839 ;; This function is called by:
  1840 ;;		Startup code after reset
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844  05C6                     _main:	
  1845                           ;psect for function _main
  1846                           
  1847  05C6                     l2007:	
  1848                           ;incstack = 0
  1849                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1850                           
  1851                           
  1852                           ;main.c: 104:     setupInternalOscillator(freq32M);
  1853  05C6  300A               	movlw	10
  1854  05C7  3181  216D  3185   	fcall	_setupInternalOscillator
  1855  05CA                     l2009:
  1856                           
  1857                           ;main.c: 106:     setupPWM();
  1858  05CA  3185  25E2  3185   	fcall	_setupPWM
  1859  05CD                     l2011:
  1860                           
  1861                           ;main.c: 107:     setupTimer0Interrupt();
  1862  05CD  3186  2657  3185   	fcall	_setupTimer0Interrupt
  1863  05D0                     l2013:
  1864                           
  1865                           ;main.c: 108:     initialiseADCModule();
  1866  05D0  3186  2665  3185   	fcall	_initialiseADCModule
  1867  05D3                     l2015:
  1868                           
  1869                           ;main.c: 109:     initialiseCurrentSensors();
  1870  05D3  3185  25FE  3185   	fcall	_initialiseCurrentSensors
  1871  05D6                     l2017:
  1872                           
  1873                           ;main.c: 110:     initialisePotentiometers();
  1874  05D6  3186  264E  3185   	fcall	_initialisePotentiometers
  1875  05D9                     l2019:
  1876                           
  1877                           ;main.c: 111:     initialiseGPIO(pinRB4, 0);
  1878  05D9  0020               	movlb	0	; select bank0
  1879  05DA  01B3               	clrf	initialiseGPIO@direction
  1880  05DB  300C               	movlw	12
  1881  05DC  3182  2248  3185   	fcall	_initialiseGPIO
  1882  05DF                     l88:	
  1883                           ;main.c: 113:     while(1){
  1884                           
  1885  05DF                     l89:	
  1886                           ;main.c: 115:     }
  1887                           
  1888  05DF  2DDF               	goto	l88
  1889  05E0  3180  286C         	ljmp	start
  1890  05E2                     __end_of_main:
  1891                           
  1892                           	psect	text1
  1893  0657                     __ptext1:	
  1894 ;; *************** function _setupTimer0Interrupt *****************
  1895 ;; Defined at:
  1896 ;;		line 17 in file "Timer0.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;		None
  1899 ;; Auto vars:     Size  Location     Type
  1900 ;;		None
  1901 ;; Return value:  Size  Location     Type
  1902 ;;                  1    wreg      void 
  1903 ;; Registers used:
  1904 ;;		wreg
  1905 ;; Tracked objects:
  1906 ;;		On entry : 0/0
  1907 ;;		On exit  : 0/0
  1908 ;;		Unchanged: 0/0
  1909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1910 ;;      Params:         0       0       0       0       0       0
  1911 ;;      Locals:         0       0       0       0       0       0
  1912 ;;      Temps:          0       0       0       0       0       0
  1913 ;;      Totals:         0       0       0       0       0       0
  1914 ;;Total ram usage:        0 bytes
  1915 ;; Hardware stack levels used: 1
  1916 ;; Hardware stack levels required when called: 3
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924  0657                     _setupTimer0Interrupt:	
  1925                           ;psect for function _setupTimer0Interrupt
  1926                           
  1927  0657                     l1963:	
  1928                           ;incstack = 0
  1929                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1930                           
  1931                           
  1932                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1933  0657  178B               	bsf	11,7	;volatile
  1934                           
  1935                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1936  0658  168B               	bsf	11,5	;volatile
  1937                           
  1938                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1939  0659  0021               	movlb	1	; select bank1
  1940  065A  1295               	bcf	21,5	;volatile
  1941                           
  1942                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1943  065B  1195               	bcf	21,3	;volatile
  1944  065C                     l1965:
  1945                           
  1946                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1947  065C  3004               	movlw	4
  1948  065D  0095               	movwf	21	;volatile
  1949  065E                     l165:
  1950  065E  0008               	return
  1951  065F                     __end_of_setupTimer0Interrupt:
  1952                           
  1953                           	psect	text2
  1954  05E2                     __ptext2:	
  1955 ;; *************** function _setupPWM *****************
  1956 ;; Defined at:
  1957 ;;		line 16 in file "PWM.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, status,2, status,0, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1971 ;;      Params:         0       0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used: 1
  1977 ;; Hardware stack levels required when called: 4
  1978 ;; This function calls:
  1979 ;;		_initialiseGPIO
  1980 ;; This function is called by:
  1981 ;;		_main
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985  05E2                     _setupPWM:	
  1986                           ;psect for function _setupPWM
  1987                           
  1988  05E2                     l1941:	
  1989                           ;incstack = 0
  1990                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  1991                           
  1992                           
  1993                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  1994  05E2  300C               	movlw	12
  1995  05E3  0025               	movlb	5	; select bank5
  1996  05E4  0093               	movwf	19	;volatile
  1997  05E5                     l1943:
  1998                           
  1999                           ;PWM.c: 20:     PR2 = 0;
  2000  05E5  0020               	movlb	0	; select bank0
  2001  05E6  019B               	clrf	27	;volatile
  2002  05E7                     l1945:
  2003                           
  2004                           ;PWM.c: 21:     CCPR1L = 0;
  2005  05E7  0025               	movlb	5	; select bank5
  2006  05E8  0191               	clrf	17	;volatile
  2007  05E9                     l1947:
  2008                           
  2009                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2010  05E9  0022               	movlb	2	; select bank2
  2011  05EA  151D               	bsf	29,2	;volatile
  2012  05EB                     l1949:
  2013                           
  2014                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2015  05EB  0025               	movlb	5	; select bank5
  2016  05EC  1596               	bsf	22,3	;volatile
  2017  05ED                     l1951:
  2018                           
  2019                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  2020  05ED  30FC               	movlw	-4
  2021  05EE  0020               	movlb	0	; select bank0
  2022  05EF  059C               	andwf	28,f	;volatile
  2023  05F0                     l1953:
  2024                           
  2025                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  2026  05F0  0021               	movlb	1	; select bank1
  2027  05F1  1091               	bcf	17,1	;volatile
  2028  05F2                     l1955:
  2029                           
  2030                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  2031  05F2  0020               	movlb	0	; select bank0
  2032  05F3  151C               	bsf	28,2	;volatile
  2033  05F4                     l1957:
  2034                           
  2035                           ;PWM.c: 30:     INTCONbits.PEIE = 1;
  2036  05F4  170B               	bsf	11,6	;volatile
  2037  05F5                     l1959:
  2038                           
  2039                           ;PWM.c: 31:     PIE1bits.CCP1IE = 1;
  2040  05F5  0021               	movlb	1	; select bank1
  2041  05F6  1511               	bsf	17,2	;volatile
  2042  05F7                     l1961:
  2043                           
  2044                           ;PWM.c: 35:     initialiseGPIO(pinRA6, 0);
  2045  05F7  0020               	movlb	0	; select bank0
  2046  05F8  01B3               	clrf	initialiseGPIO@direction
  2047  05F9  3006               	movlw	6
  2048  05FA  3182  2248  3185   	fcall	_initialiseGPIO
  2049  05FD                     l140:
  2050  05FD  0008               	return
  2051  05FE                     __end_of_setupPWM:
  2052                           
  2053                           	psect	text3
  2054  016D                     __ptext3:	
  2055 ;; *************** function _setupInternalOscillator *****************
  2056 ;; Defined at:
  2057 ;;		line 124 in file "main.c"
  2058 ;; Parameters:    Size  Location     Type
  2059 ;;  selectedFreq    1    wreg     const enum E2830
  2060 ;; Auto vars:     Size  Location     Type
  2061 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  1    wreg      void 
  2064 ;; Registers used:
  2065 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2071 ;;      Params:         0       0       0       0       0       0
  2072 ;;      Locals:         0       1       0       0       0       0
  2073 ;;      Temps:          0       2       0       0       0       0
  2074 ;;      Totals:         0       3       0       0       0       0
  2075 ;;Total ram usage:        3 bytes
  2076 ;; Hardware stack levels used: 1
  2077 ;; Hardware stack levels required when called: 3
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_main
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085  016D                     _setupInternalOscillator:	
  2086                           ;psect for function _setupInternalOscillator
  2087                           
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2091                           ;setupInternalOscillator@selectedFreq stored from wreg
  2092  016D  0020               	movlb	0	; select bank0
  2093  016E  00B5               	movwf	setupInternalOscillator@selectedFreq
  2094  016F                     l1863:
  2095                           
  2096                           ;main.c: 128:     switch(selectedFreq){
  2097  016F  2A1C               	goto	l1933
  2098  0170                     l1865:
  2099  0170  3087               	movlw	-121
  2100  0171  0021               	movlb	1	; select bank1
  2101  0172  0599               	andwf	25,f	;volatile
  2102  0173                     l1867:
  2103  0173  1399               	bcf	25,7	;volatile
  2104  0174                     l1869:
  2105  0174  3000               	movlw	0
  2106  0175  0020               	movlb	0	; select bank0
  2107  0176  00C0               	movwf	_clockFrequency+3
  2108  0177  3000               	movlw	0
  2109  0178  00BF               	movwf	_clockFrequency+2
  2110  0179  3079               	movlw	121
  2111  017A  00BE               	movwf	_clockFrequency+1
  2112  017B  3018               	movlw	24
  2113  017C  00BD               	movwf	_clockFrequency
  2114  017D  2A47               	goto	l107
  2115  017E                     l1871:
  2116  017E  0021               	movlb	1	; select bank1
  2117  017F  0819               	movf	25,w	;volatile
  2118  0180  3987               	andlw	-121
  2119  0181  3820               	iorlw	32
  2120  0182  0099               	movwf	25	;volatile
  2121  0183                     l1873:
  2122  0183  1399               	bcf	25,7	;volatile
  2123  0184                     l1875:
  2124  0184  3000               	movlw	0
  2125  0185  0020               	movlb	0	; select bank0
  2126  0186  00C0               	movwf	_clockFrequency+3
  2127  0187  3000               	movlw	0
  2128  0188  00BF               	movwf	_clockFrequency+2
  2129  0189  30F4               	movlw	244
  2130  018A  00BE               	movwf	_clockFrequency+1
  2131  018B  3024               	movlw	36
  2132  018C  00BD               	movwf	_clockFrequency
  2133  018D  2A47               	goto	l107
  2134  018E                     l1877:
  2135  018E  0021               	movlb	1	; select bank1
  2136  018F  0819               	movf	25,w	;volatile
  2137  0190  3987               	andlw	-121
  2138  0191  3828               	iorlw	40
  2139  0192  0099               	movwf	25	;volatile
  2140  0193                     l1879:
  2141  0193  1399               	bcf	25,7	;volatile
  2142  0194                     l1881:
  2143  0194  3000               	movlw	0
  2144  0195  0020               	movlb	0	; select bank0
  2145  0196  00C0               	movwf	_clockFrequency+3
  2146  0197  3001               	movlw	1
  2147  0198  00BF               	movwf	_clockFrequency+2
  2148  0199  30E8               	movlw	232
  2149  019A  00BE               	movwf	_clockFrequency+1
  2150  019B  3048               	movlw	72
  2151  019C  00BD               	movwf	_clockFrequency
  2152  019D  2A47               	goto	l107
  2153  019E                     l1883:
  2154  019E  0021               	movlb	1	; select bank1
  2155  019F  0819               	movf	25,w	;volatile
  2156  01A0  3987               	andlw	-121
  2157  01A1  3830               	iorlw	48
  2158  01A2  0099               	movwf	25	;volatile
  2159  01A3                     l1885:
  2160  01A3  1399               	bcf	25,7	;volatile
  2161  01A4                     l1887:
  2162  01A4  3000               	movlw	0
  2163  01A5  0020               	movlb	0	; select bank0
  2164  01A6  00C0               	movwf	_clockFrequency+3
  2165  01A7  3003               	movlw	3
  2166  01A8  00BF               	movwf	_clockFrequency+2
  2167  01A9  30D0               	movlw	208
  2168  01AA  00BE               	movwf	_clockFrequency+1
  2169  01AB  3090               	movlw	144
  2170  01AC  00BD               	movwf	_clockFrequency
  2171  01AD  2A47               	goto	l107
  2172  01AE                     l1889:
  2173  01AE  0021               	movlb	1	; select bank1
  2174  01AF  0819               	movf	25,w	;volatile
  2175  01B0  3987               	andlw	-121
  2176  01B1  3838               	iorlw	56
  2177  01B2  0099               	movwf	25	;volatile
  2178  01B3                     l1891:
  2179  01B3  1399               	bcf	25,7	;volatile
  2180  01B4                     l1893:
  2181  01B4  3000               	movlw	0
  2182  01B5  0020               	movlb	0	; select bank0
  2183  01B6  00C0               	movwf	_clockFrequency+3
  2184  01B7  3007               	movlw	7
  2185  01B8  00BF               	movwf	_clockFrequency+2
  2186  01B9  30A1               	movlw	161
  2187  01BA  00BE               	movwf	_clockFrequency+1
  2188  01BB  3020               	movlw	32
  2189  01BC  00BD               	movwf	_clockFrequency
  2190  01BD  2A47               	goto	l107
  2191  01BE                     l1895:
  2192  01BE  0021               	movlb	1	; select bank1
  2193  01BF  0819               	movf	25,w	;volatile
  2194  01C0  3987               	andlw	-121
  2195  01C1  3858               	iorlw	88
  2196  01C2  0099               	movwf	25	;volatile
  2197  01C3                     l1897:
  2198  01C3  1399               	bcf	25,7	;volatile
  2199  01C4                     l1899:
  2200  01C4  3000               	movlw	0
  2201  01C5  0020               	movlb	0	; select bank0
  2202  01C6  00C0               	movwf	_clockFrequency+3
  2203  01C7  300F               	movlw	15
  2204  01C8  00BF               	movwf	_clockFrequency+2
  2205  01C9  3042               	movlw	66
  2206  01CA  00BE               	movwf	_clockFrequency+1
  2207  01CB  3040               	movlw	64
  2208  01CC  00BD               	movwf	_clockFrequency
  2209  01CD  2A47               	goto	l107
  2210  01CE                     l1901:
  2211  01CE  0021               	movlb	1	; select bank1
  2212  01CF  0819               	movf	25,w	;volatile
  2213  01D0  3987               	andlw	-121
  2214  01D1  3860               	iorlw	96
  2215  01D2  0099               	movwf	25	;volatile
  2216  01D3                     l1903:
  2217  01D3  1399               	bcf	25,7	;volatile
  2218  01D4                     l1905:
  2219  01D4  3000               	movlw	0
  2220  01D5  0020               	movlb	0	; select bank0
  2221  01D6  00C0               	movwf	_clockFrequency+3
  2222  01D7  301E               	movlw	30
  2223  01D8  00BF               	movwf	_clockFrequency+2
  2224  01D9  3084               	movlw	132
  2225  01DA  00BE               	movwf	_clockFrequency+1
  2226  01DB  3080               	movlw	128
  2227  01DC  00BD               	movwf	_clockFrequency
  2228  01DD  2A47               	goto	l107
  2229  01DE                     l1907:
  2230  01DE  0021               	movlb	1	; select bank1
  2231  01DF  0819               	movf	25,w	;volatile
  2232  01E0  3987               	andlw	-121
  2233  01E1  3868               	iorlw	104
  2234  01E2  0099               	movwf	25	;volatile
  2235  01E3                     l1909:
  2236  01E3  1399               	bcf	25,7	;volatile
  2237  01E4                     l1911:
  2238  01E4  3000               	movlw	0
  2239  01E5  0020               	movlb	0	; select bank0
  2240  01E6  00C0               	movwf	_clockFrequency+3
  2241  01E7  303D               	movlw	61
  2242  01E8  00BF               	movwf	_clockFrequency+2
  2243  01E9  3009               	movlw	9
  2244  01EA  00BE               	movwf	_clockFrequency+1
  2245  01EB  3000               	movlw	0
  2246  01EC  00BD               	movwf	_clockFrequency
  2247  01ED  2A47               	goto	l107
  2248  01EE                     l1913:
  2249  01EE  0021               	movlb	1	; select bank1
  2250  01EF  0819               	movf	25,w	;volatile
  2251  01F0  3987               	andlw	-121
  2252  01F1  3870               	iorlw	112
  2253  01F2  0099               	movwf	25	;volatile
  2254  01F3                     l1915:
  2255  01F3  1399               	bcf	25,7	;volatile
  2256  01F4                     l1917:
  2257  01F4  3000               	movlw	0
  2258  01F5  0020               	movlb	0	; select bank0
  2259  01F6  00C0               	movwf	_clockFrequency+3
  2260  01F7  307A               	movlw	122
  2261  01F8  00BF               	movwf	_clockFrequency+2
  2262  01F9  3012               	movlw	18
  2263  01FA  00BE               	movwf	_clockFrequency+1
  2264  01FB  3000               	movlw	0
  2265  01FC  00BD               	movwf	_clockFrequency
  2266  01FD  2A47               	goto	l107
  2267  01FE                     l1919:
  2268  01FE  3078               	movlw	120
  2269  01FF  0021               	movlb	1	; select bank1
  2270  0200  0499               	iorwf	25,f	;volatile
  2271  0201                     l1921:
  2272  0201  1399               	bcf	25,7	;volatile
  2273  0202                     l1923:
  2274  0202  3000               	movlw	0
  2275  0203  0020               	movlb	0	; select bank0
  2276  0204  00C0               	movwf	_clockFrequency+3
  2277  0205  30F4               	movlw	244
  2278  0206  00BF               	movwf	_clockFrequency+2
  2279  0207  3024               	movlw	36
  2280  0208  00BE               	movwf	_clockFrequency+1
  2281  0209  3000               	movlw	0
  2282  020A  00BD               	movwf	_clockFrequency
  2283  020B  2A47               	goto	l107
  2284  020C                     l1925:
  2285  020C  0021               	movlb	1	; select bank1
  2286  020D  0819               	movf	25,w	;volatile
  2287  020E  3987               	andlw	-121
  2288  020F  3870               	iorlw	112
  2289  0210  0099               	movwf	25	;volatile
  2290  0211                     l1927:
  2291  0211  1799               	bsf	25,7	;volatile
  2292  0212                     l1929:
  2293  0212  3001               	movlw	1
  2294  0213  0020               	movlb	0	; select bank0
  2295  0214  00C0               	movwf	_clockFrequency+3
  2296  0215  30E8               	movlw	232
  2297  0216  00BF               	movwf	_clockFrequency+2
  2298  0217  3048               	movlw	72
  2299  0218  00BE               	movwf	_clockFrequency+1
  2300  0219  3000               	movlw	0
  2301  021A  00BD               	movwf	_clockFrequency
  2302  021B  2A47               	goto	l107
  2303  021C                     l1933:
  2304  021C  0835               	movf	setupInternalOscillator@selectedFreq,w
  2305  021D  00B3               	movwf	??_setupInternalOscillator
  2306  021E  01B4               	clrf	??_setupInternalOscillator+1
  2307                           
  2308                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2309                           ; Switch size 1, requested type "simple"
  2310                           ; Number of cases is 1, Range of values is 0 to 0
  2311                           ; switch strategies available:
  2312                           ; Name         Instructions Cycles
  2313                           ; simple_byte            4     3 (average)
  2314                           ; direct_byte            8     6 (fixed)
  2315                           ; jumptable            260     6 (fixed)
  2316                           ;	Chosen strategy is simple_byte
  2317  021F  0834               	movf	??_setupInternalOscillator+1,w
  2318  0220  3A00               	xorlw	0	; case 0
  2319  0221  1903               	skipnz
  2320  0222  2A24               	goto	l2105
  2321  0223  2A47               	goto	l107
  2322  0224                     l2105:
  2323                           
  2324                           ; Switch size 1, requested type "simple"
  2325                           ; Number of cases is 11, Range of values is 0 to 10
  2326                           ; switch strategies available:
  2327                           ; Name         Instructions Cycles
  2328                           ; direct_byte           28     6 (fixed)
  2329                           ; simple_byte           34    18 (average)
  2330                           ; jumptable            260     6 (fixed)
  2331                           ;	Chosen strategy is simple_byte
  2332  0224  0833               	movf	??_setupInternalOscillator,w
  2333  0225  3A00               	xorlw	0	; case 0
  2334  0226  1903               	skipnz
  2335  0227  2970               	goto	l1865
  2336  0228  3A01               	xorlw	1	; case 1
  2337  0229  1903               	skipnz
  2338  022A  297E               	goto	l1871
  2339  022B  3A03               	xorlw	3	; case 2
  2340  022C  1903               	skipnz
  2341  022D  298E               	goto	l1877
  2342  022E  3A01               	xorlw	1	; case 3
  2343  022F  1903               	skipnz
  2344  0230  299E               	goto	l1883
  2345  0231  3A07               	xorlw	7	; case 4
  2346  0232  1903               	skipnz
  2347  0233  29AE               	goto	l1889
  2348  0234  3A01               	xorlw	1	; case 5
  2349  0235  1903               	skipnz
  2350  0236  29BE               	goto	l1895
  2351  0237  3A03               	xorlw	3	; case 6
  2352  0238  1903               	skipnz
  2353  0239  29CE               	goto	l1901
  2354  023A  3A01               	xorlw	1	; case 7
  2355  023B  1903               	skipnz
  2356  023C  29DE               	goto	l1907
  2357  023D  3A0F               	xorlw	15	; case 8
  2358  023E  1903               	skipnz
  2359  023F  29EE               	goto	l1913
  2360  0240  3A01               	xorlw	1	; case 9
  2361  0241  1903               	skipnz
  2362  0242  29FE               	goto	l1919
  2363  0243  3A03               	xorlw	3	; case 10
  2364  0244  1903               	skipnz
  2365  0245  2A0C               	goto	l1925
  2366  0246  2A47               	goto	l107
  2367  0247                     l107:
  2368  0247  0008               	return
  2369  0248                     __end_of_setupInternalOscillator:
  2370                           
  2371                           	psect	text4
  2372  064E                     __ptext4:	
  2373 ;; *************** function _initialisePotentiometers *****************
  2374 ;; Defined at:
  2375 ;;		line 15 in file "Potentiometer.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;		None
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;		None
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2389 ;;      Params:         0       0       0       0       0       0
  2390 ;;      Locals:         0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0
  2392 ;;      Totals:         0       0       0       0       0       0
  2393 ;;Total ram usage:        0 bytes
  2394 ;; Hardware stack levels used: 1
  2395 ;; Hardware stack levels required when called: 4
  2396 ;; This function calls:
  2397 ;;		_initialiseADCPin
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403  064E                     _initialisePotentiometers:	
  2404                           ;psect for function _initialisePotentiometers
  2405                           
  2406  064E                     l1971:	
  2407                           ;incstack = 0
  2408                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2409                           
  2410                           
  2411                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2412  064E  3009               	movlw	9
  2413  064F  3182  22C4  3186   	fcall	_initialiseADCPin
  2414                           
  2415                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2416  0652  300A               	movlw	10
  2417  0653  3182  22C4  3186   	fcall	_initialiseADCPin
  2418  0656                     l317:
  2419  0656  0008               	return
  2420  0657                     __end_of_initialisePotentiometers:
  2421                           
  2422                           	psect	text5
  2423  05FE                     __ptext5:	
  2424 ;; *************** function _initialiseCurrentSensors *****************
  2425 ;; Defined at:
  2426 ;;		line 14 in file "CurrentSensor.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;		None
  2429 ;; Auto vars:     Size  Location     Type
  2430 ;;		None
  2431 ;; Return value:  Size  Location     Type
  2432 ;;                  1    wreg      void 
  2433 ;; Registers used:
  2434 ;;		wreg, status,2, status,0, pclath, cstack
  2435 ;; Tracked objects:
  2436 ;;		On entry : 0/0
  2437 ;;		On exit  : 0/0
  2438 ;;		Unchanged: 0/0
  2439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2440 ;;      Params:         0       0       0       0       0       0
  2441 ;;      Locals:         0       0       0       0       0       0
  2442 ;;      Temps:          0       0       0       0       0       0
  2443 ;;      Totals:         0       0       0       0       0       0
  2444 ;;Total ram usage:        0 bytes
  2445 ;; Hardware stack levels used: 1
  2446 ;; Hardware stack levels required when called: 4
  2447 ;; This function calls:
  2448 ;;		_initialiseADCPin
  2449 ;;		_initialiseGPIO
  2450 ;; This function is called by:
  2451 ;;		_main
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455  05FE                     _initialiseCurrentSensors:	
  2456                           ;psect for function _initialiseCurrentSensors
  2457                           
  2458  05FE                     l1969:	
  2459                           ;incstack = 0
  2460                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2461                           
  2462                           
  2463                           ;CurrentSensor.c: 15:     initialiseGPIO(pinRA3, 1);
  2464  05FE  0020               	movlb	0	; select bank0
  2465  05FF  01B3               	clrf	initialiseGPIO@direction
  2466  0600  0AB3               	incf	initialiseGPIO@direction,f
  2467  0601  3003               	movlw	3
  2468  0602  3182  2248  3185   	fcall	_initialiseGPIO
  2469                           
  2470                           ;CurrentSensor.c: 16:     initialiseGPIO(pinRA1, 1);
  2471  0605  0020               	movlb	0	; select bank0
  2472  0606  01B3               	clrf	initialiseGPIO@direction
  2473  0607  0AB3               	incf	initialiseGPIO@direction,f
  2474  0608  3001               	movlw	1
  2475  0609  3182  2248  3185   	fcall	_initialiseGPIO
  2476                           
  2477                           ;CurrentSensor.c: 17:     initialiseADCPin(pinRA0);
  2478  060C  3000               	movlw	0
  2479  060D  3182  22C4  3185   	fcall	_initialiseADCPin
  2480                           
  2481                           ;CurrentSensor.c: 18:     initialiseADCPin(pinRA3);
  2482  0610  3003               	movlw	3
  2483  0611  3182  22C4  3185   	fcall	_initialiseADCPin
  2484  0614                     l368:
  2485  0614  0008               	return
  2486  0615                     __end_of_initialiseCurrentSensors:
  2487                           
  2488                           	psect	text6
  2489  0248                     __ptext6:	
  2490 ;; *************** function _initialiseGPIO *****************
  2491 ;; Defined at:
  2492 ;;		line 18 in file "GPIO.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  gpioNumber      1    wreg     const enum E2798
  2495 ;;  direction       1   19[BANK0 ] unsigned char 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2498 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2499 ;;  portType        1   22[BANK0 ] unsigned char 
  2500 ;; Return value:  Size  Location     Type
  2501 ;;                  1    wreg      void 
  2502 ;; Registers used:
  2503 ;;		wreg, status,2, status,0
  2504 ;; Tracked objects:
  2505 ;;		On entry : 0/0
  2506 ;;		On exit  : 0/0
  2507 ;;		Unchanged: 0/0
  2508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2509 ;;      Params:         0       1       0       0       0       0
  2510 ;;      Locals:         0       3       0       0       0       0
  2511 ;;      Temps:          0       2       0       0       0       0
  2512 ;;      Totals:         0       6       0       0       0       0
  2513 ;;Total ram usage:        6 bytes
  2514 ;; Hardware stack levels used: 1
  2515 ;; Hardware stack levels required when called: 3
  2516 ;; This function calls:
  2517 ;;		Nothing
  2518 ;; This function is called by:
  2519 ;;		_main
  2520 ;;		_setupPWM
  2521 ;;		_initialiseCurrentSensors
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525  0248                     _initialiseGPIO:	
  2526                           ;psect for function _initialiseGPIO
  2527                           
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2531                           ;initialiseGPIO@gpioNumber stored from wreg
  2532  0248  0020               	movlb	0	; select bank0
  2533  0249  00B7               	movwf	initialiseGPIO@gpioNumber
  2534  024A                     l1561:
  2535                           
  2536                           ;GPIO.c: 20:     uint8_t portType = 0;
  2537  024A  01B6               	clrf	initialiseGPIO@portType
  2538  024B                     l1563:
  2539                           
  2540                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2541  024B  3008               	movlw	8
  2542  024C  0237               	subwf	initialiseGPIO@gpioNumber,w
  2543  024D  1C03               	skipc
  2544  024E  2A50               	goto	u921
  2545  024F  2A51               	goto	u920
  2546  0250                     u921:
  2547  0250  2A59               	goto	l1569
  2548  0251                     u920:
  2549  0251                     l1565:
  2550                           
  2551                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2552  0251  0837               	movf	initialiseGPIO@gpioNumber,w
  2553  0252  3EF8               	addlw	248
  2554  0253  00B4               	movwf	??_initialiseGPIO
  2555  0254  0834               	movf	??_initialiseGPIO,w
  2556  0255  00B8               	movwf	initialiseGPIO@portNumber
  2557  0256                     l1567:
  2558                           
  2559                           ;GPIO.c: 23:         portType = 1;
  2560  0256  01B6               	clrf	initialiseGPIO@portType
  2561  0257  0AB6               	incf	initialiseGPIO@portType,f
  2562                           
  2563                           ;GPIO.c: 24:     }
  2564  0258  2A5E               	goto	l1573
  2565  0259                     l1569:
  2566                           
  2567                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2568  0259  0837               	movf	initialiseGPIO@gpioNumber,w
  2569  025A  00B4               	movwf	??_initialiseGPIO
  2570  025B  0834               	movf	??_initialiseGPIO,w
  2571  025C  00B8               	movwf	initialiseGPIO@portNumber
  2572  025D                     l1571:
  2573                           
  2574                           ;GPIO.c: 27:         portType = 0;
  2575  025D  01B6               	clrf	initialiseGPIO@portType
  2576  025E                     l1573:
  2577                           
  2578                           ;GPIO.c: 30:     if(portType == 0){
  2579  025E  0836               	movf	initialiseGPIO@portType,w
  2580  025F  1D03               	btfss	3,2
  2581  0260  2A62               	goto	u931
  2582  0261  2A63               	goto	u930
  2583  0262                     u931:
  2584  0262  2A91               	goto	l1581
  2585  0263                     u930:
  2586  0263                     l1575:
  2587                           
  2588                           ;GPIO.c: 31:         if(direction){
  2589  0263  0833               	movf	initialiseGPIO@direction,w
  2590  0264  1903               	btfsc	3,2
  2591  0265  2A67               	goto	u941
  2592  0266  2A68               	goto	u940
  2593  0267                     u941:
  2594  0267  2A83               	goto	l1579
  2595  0268                     u940:
  2596  0268                     l1577:
  2597                           
  2598                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2599  0268  3001               	movlw	1
  2600  0269  00B4               	movwf	??_initialiseGPIO
  2601  026A  0A38               	incf	initialiseGPIO@portNumber,w
  2602  026B  2A6D               	goto	u954
  2603  026C                     u955:
  2604  026C  35B4               	lslf	??_initialiseGPIO,f
  2605  026D                     u954:
  2606  026D  0B89               	decfsz	9,f
  2607  026E  2A6C               	goto	u955
  2608  026F  0834               	movf	??_initialiseGPIO,w
  2609  0270  00B5               	movwf	??_initialiseGPIO+1
  2610  0271  0835               	movf	??_initialiseGPIO+1,w
  2611  0272  0021               	movlb	1	; select bank1
  2612  0273  048C               	iorwf	12,f	;volatile
  2613                           
  2614                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2615  0274  3001               	movlw	1
  2616  0275  0020               	movlb	0	; select bank0
  2617  0276  00B4               	movwf	??_initialiseGPIO
  2618  0277  0A38               	incf	initialiseGPIO@portNumber,w
  2619  0278  2A7A               	goto	u964
  2620  0279                     u965:
  2621  0279  35B4               	lslf	??_initialiseGPIO,f
  2622  027A                     u964:
  2623  027A  0B89               	decfsz	9,f
  2624  027B  2A79               	goto	u965
  2625  027C  0834               	movf	??_initialiseGPIO,w
  2626  027D  3AFF               	xorlw	255
  2627  027E  00B5               	movwf	??_initialiseGPIO+1
  2628  027F  0835               	movf	??_initialiseGPIO+1,w
  2629  0280  0023               	movlb	3	; select bank3
  2630  0281  058C               	andwf	12,f	;volatile
  2631                           
  2632                           ;GPIO.c: 34:         }
  2633  0282  2AC3               	goto	l266
  2634  0283                     l1579:
  2635  0283  3001               	movlw	1
  2636  0284  00B4               	movwf	??_initialiseGPIO
  2637  0285  0A38               	incf	initialiseGPIO@portNumber,w
  2638  0286  2A88               	goto	u974
  2639  0287                     u975:
  2640  0287  35B4               	lslf	??_initialiseGPIO,f
  2641  0288                     u974:
  2642  0288  0B89               	decfsz	9,f
  2643  0289  2A87               	goto	u975
  2644  028A  0834               	movf	??_initialiseGPIO,w
  2645  028B  3AFF               	xorlw	255
  2646  028C  00B5               	movwf	??_initialiseGPIO+1
  2647  028D  0835               	movf	??_initialiseGPIO+1,w
  2648  028E  0021               	movlb	1	; select bank1
  2649  028F  058C               	andwf	12,f	;volatile
  2650  0290  2AC3               	goto	l266
  2651  0291                     l1581:
  2652  0291  0336               	decf	initialiseGPIO@portType,w
  2653  0292  1D03               	btfss	3,2
  2654  0293  2A95               	goto	u981
  2655  0294  2A96               	goto	u980
  2656  0295                     u981:
  2657  0295  2AC3               	goto	l266
  2658  0296                     u980:
  2659  0296                     l1583:
  2660                           
  2661                           ;GPIO.c: 38:         if(direction){
  2662  0296  0833               	movf	initialiseGPIO@direction,w
  2663  0297  1903               	btfsc	3,2
  2664  0298  2A9A               	goto	u991
  2665  0299  2A9B               	goto	u990
  2666  029A                     u991:
  2667  029A  2AB6               	goto	l1587
  2668  029B                     u990:
  2669  029B                     l1585:
  2670                           
  2671                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2672  029B  3001               	movlw	1
  2673  029C  00B4               	movwf	??_initialiseGPIO
  2674  029D  0A38               	incf	initialiseGPIO@portNumber,w
  2675  029E  2AA0               	goto	u1004
  2676  029F                     u1005:
  2677  029F  35B4               	lslf	??_initialiseGPIO,f
  2678  02A0                     u1004:
  2679  02A0  0B89               	decfsz	9,f
  2680  02A1  2A9F               	goto	u1005
  2681  02A2  0834               	movf	??_initialiseGPIO,w
  2682  02A3  00B5               	movwf	??_initialiseGPIO+1
  2683  02A4  0835               	movf	??_initialiseGPIO+1,w
  2684  02A5  0021               	movlb	1	; select bank1
  2685  02A6  048D               	iorwf	13,f	;volatile
  2686                           
  2687                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2688  02A7  3001               	movlw	1
  2689  02A8  0020               	movlb	0	; select bank0
  2690  02A9  00B4               	movwf	??_initialiseGPIO
  2691  02AA  0A38               	incf	initialiseGPIO@portNumber,w
  2692  02AB  2AAD               	goto	u1014
  2693  02AC                     u1015:
  2694  02AC  35B4               	lslf	??_initialiseGPIO,f
  2695  02AD                     u1014:
  2696  02AD  0B89               	decfsz	9,f
  2697  02AE  2AAC               	goto	u1015
  2698  02AF  0834               	movf	??_initialiseGPIO,w
  2699  02B0  3AFF               	xorlw	255
  2700  02B1  00B5               	movwf	??_initialiseGPIO+1
  2701  02B2  0835               	movf	??_initialiseGPIO+1,w
  2702  02B3  0023               	movlb	3	; select bank3
  2703  02B4  058D               	andwf	13,f	;volatile
  2704                           
  2705                           ;GPIO.c: 41:         }
  2706  02B5  2AC3               	goto	l266
  2707  02B6                     l1587:
  2708  02B6  3001               	movlw	1
  2709  02B7  00B4               	movwf	??_initialiseGPIO
  2710  02B8  0A38               	incf	initialiseGPIO@portNumber,w
  2711  02B9  2ABB               	goto	u1024
  2712  02BA                     u1025:
  2713  02BA  35B4               	lslf	??_initialiseGPIO,f
  2714  02BB                     u1024:
  2715  02BB  0B89               	decfsz	9,f
  2716  02BC  2ABA               	goto	u1025
  2717  02BD  0834               	movf	??_initialiseGPIO,w
  2718  02BE  3AFF               	xorlw	255
  2719  02BF  00B5               	movwf	??_initialiseGPIO+1
  2720  02C0  0835               	movf	??_initialiseGPIO+1,w
  2721  02C1  0021               	movlb	1	; select bank1
  2722  02C2  058D               	andwf	13,f	;volatile
  2723  02C3                     l266:
  2724  02C3  0008               	return
  2725  02C4                     __end_of_initialiseGPIO:
  2726                           
  2727                           	psect	text7
  2728  02C4                     __ptext7:	
  2729 ;; *************** function _initialiseADCPin *****************
  2730 ;; Defined at:
  2731 ;;		line 37 in file "ADC.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;  gpioNumber      1    wreg     const enum E2798
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2736 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2737 ;;  portType        1   22[BANK0 ] unsigned char 
  2738 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  1    wreg      void 
  2741 ;; Registers used:
  2742 ;;		wreg, status,2, status,0
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2748 ;;      Params:         0       0       0       0       0       0
  2749 ;;      Locals:         0       4       0       0       0       0
  2750 ;;      Temps:          0       2       0       0       0       0
  2751 ;;      Totals:         0       6       0       0       0       0
  2752 ;;Total ram usage:        6 bytes
  2753 ;; Hardware stack levels used: 1
  2754 ;; Hardware stack levels required when called: 3
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_initialisePotentiometers
  2759 ;;		_initialiseCurrentSensors
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763  02C4                     _initialiseADCPin:	
  2764                           ;psect for function _initialiseADCPin
  2765                           
  2766                           
  2767                           ;incstack = 0
  2768                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  2769                           ;initialiseADCPin@gpioNumber stored from wreg
  2770  02C4  0020               	movlb	0	; select bank0
  2771  02C5  00B8               	movwf	initialiseADCPin@gpioNumber
  2772  02C6                     l1589:
  2773                           
  2774                           ;ADC.c: 39:     uint8_t portNumber = 0;
  2775  02C6  01B7               	clrf	initialiseADCPin@portNumber
  2776                           
  2777                           ;ADC.c: 40:     uint8_t portType = 0;
  2778  02C7  01B6               	clrf	initialiseADCPin@portType
  2779                           
  2780                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  2781  02C8  01B5               	clrf	initialiseADCPin@gpioValid
  2782  02C9                     l1591:
  2783                           
  2784                           ;ADC.c: 43:     if(gpioNumber < 4){
  2785  02C9  3004               	movlw	4
  2786  02CA  0238               	subwf	initialiseADCPin@gpioNumber,w
  2787  02CB  1803               	skipnc
  2788  02CC  2ACE               	goto	u1031
  2789  02CD  2ACF               	goto	u1030
  2790  02CE                     u1031:
  2791  02CE  2AD6               	goto	l1599
  2792  02CF                     u1030:
  2793  02CF                     l1593:
  2794                           
  2795                           ;ADC.c: 44:         portNumber = gpioNumber;
  2796  02CF  0838               	movf	initialiseADCPin@gpioNumber,w
  2797  02D0  00B3               	movwf	??_initialiseADCPin
  2798  02D1  0833               	movf	??_initialiseADCPin,w
  2799  02D2  00B7               	movwf	initialiseADCPin@portNumber
  2800  02D3                     l1595:
  2801                           
  2802                           ;ADC.c: 45:         portType = 0;
  2803  02D3  01B6               	clrf	initialiseADCPin@portType
  2804  02D4                     l1597:
  2805                           
  2806                           ;ADC.c: 46:         gpioValid = 1;
  2807  02D4  01B5               	clrf	initialiseADCPin@gpioValid
  2808  02D5  0AB5               	incf	initialiseADCPin@gpioValid,f
  2809  02D6                     l1599:
  2810                           
  2811                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  2812  02D6  3009               	movlw	9
  2813  02D7  0238               	subwf	initialiseADCPin@gpioNumber,w
  2814  02D8  1C03               	skipc
  2815  02D9  2ADB               	goto	u1041
  2816  02DA  2ADC               	goto	u1040
  2817  02DB                     u1041:
  2818  02DB  2AEB               	goto	l200
  2819  02DC                     u1040:
  2820  02DC                     l1601:
  2821  02DC  3010               	movlw	16
  2822  02DD  0238               	subwf	initialiseADCPin@gpioNumber,w
  2823  02DE  1803               	skipnc
  2824  02DF  2AE1               	goto	u1051
  2825  02E0  2AE2               	goto	u1050
  2826  02E1                     u1051:
  2827  02E1  2AEB               	goto	l200
  2828  02E2                     u1050:
  2829  02E2                     l1603:
  2830                           
  2831                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  2832  02E2  0838               	movf	initialiseADCPin@gpioNumber,w
  2833  02E3  3EF8               	addlw	248
  2834  02E4  00B3               	movwf	??_initialiseADCPin
  2835  02E5  0833               	movf	??_initialiseADCPin,w
  2836  02E6  00B7               	movwf	initialiseADCPin@portNumber
  2837  02E7                     l1605:
  2838                           
  2839                           ;ADC.c: 51:         portType = 1;
  2840  02E7  01B6               	clrf	initialiseADCPin@portType
  2841  02E8  0AB6               	incf	initialiseADCPin@portType,f
  2842  02E9                     l1607:
  2843                           
  2844                           ;ADC.c: 52:         gpioValid = 1;
  2845  02E9  01B5               	clrf	initialiseADCPin@gpioValid
  2846  02EA  0AB5               	incf	initialiseADCPin@gpioValid,f
  2847  02EB                     l200:	
  2848                           ;ADC.c: 53:     }
  2849                           
  2850                           
  2851                           ;ADC.c: 55:     if(gpioValid){
  2852  02EB  0835               	movf	initialiseADCPin@gpioValid,w
  2853  02EC  1903               	btfsc	3,2
  2854  02ED  2AEF               	goto	u1061
  2855  02EE  2AF0               	goto	u1060
  2856  02EF                     u1061:
  2857  02EF  2B2D               	goto	l205
  2858  02F0                     u1060:
  2859  02F0                     l1609:
  2860                           
  2861                           ;ADC.c: 56:         if(portType == 0){
  2862  02F0  0836               	movf	initialiseADCPin@portType,w
  2863  02F1  1D03               	btfss	3,2
  2864  02F2  2AF4               	goto	u1071
  2865  02F3  2AF5               	goto	u1070
  2866  02F4                     u1071:
  2867  02F4  2B0F               	goto	l1613
  2868  02F5                     u1070:
  2869  02F5                     l1611:
  2870                           
  2871                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  2872  02F5  3001               	movlw	1
  2873  02F6  00B3               	movwf	??_initialiseADCPin
  2874  02F7  0A37               	incf	initialiseADCPin@portNumber,w
  2875  02F8  2AFA               	goto	u1084
  2876  02F9                     u1085:
  2877  02F9  35B3               	lslf	??_initialiseADCPin,f
  2878  02FA                     u1084:
  2879  02FA  0B89               	decfsz	9,f
  2880  02FB  2AF9               	goto	u1085
  2881  02FC  0833               	movf	??_initialiseADCPin,w
  2882  02FD  00B4               	movwf	??_initialiseADCPin+1
  2883  02FE  0834               	movf	??_initialiseADCPin+1,w
  2884  02FF  0021               	movlb	1	; select bank1
  2885  0300  048C               	iorwf	12,f	;volatile
  2886                           
  2887                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  2888  0301  3001               	movlw	1
  2889  0302  0020               	movlb	0	; select bank0
  2890  0303  00B3               	movwf	??_initialiseADCPin
  2891  0304  0A37               	incf	initialiseADCPin@portNumber,w
  2892  0305  2B07               	goto	u1094
  2893  0306                     u1095:
  2894  0306  35B3               	lslf	??_initialiseADCPin,f
  2895  0307                     u1094:
  2896  0307  0B89               	decfsz	9,f
  2897  0308  2B06               	goto	u1095
  2898  0309  0833               	movf	??_initialiseADCPin,w
  2899  030A  00B4               	movwf	??_initialiseADCPin+1
  2900  030B  0834               	movf	??_initialiseADCPin+1,w
  2901  030C  0023               	movlb	3	; select bank3
  2902  030D  048C               	iorwf	12,f	;volatile
  2903                           
  2904                           ;ADC.c: 59:         }
  2905  030E  2B2D               	goto	l205
  2906  030F                     l1613:
  2907  030F  0336               	decf	initialiseADCPin@portType,w
  2908  0310  1D03               	btfss	3,2
  2909  0311  2B13               	goto	u1101
  2910  0312  2B14               	goto	u1100
  2911  0313                     u1101:
  2912  0313  2B2D               	goto	l205
  2913  0314                     u1100:
  2914  0314                     l1615:
  2915                           
  2916                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  2917  0314  3001               	movlw	1
  2918  0315  00B3               	movwf	??_initialiseADCPin
  2919  0316  0A37               	incf	initialiseADCPin@portNumber,w
  2920  0317  2B19               	goto	u1114
  2921  0318                     u1115:
  2922  0318  35B3               	lslf	??_initialiseADCPin,f
  2923  0319                     u1114:
  2924  0319  0B89               	decfsz	9,f
  2925  031A  2B18               	goto	u1115
  2926  031B  0833               	movf	??_initialiseADCPin,w
  2927  031C  00B4               	movwf	??_initialiseADCPin+1
  2928  031D  0834               	movf	??_initialiseADCPin+1,w
  2929  031E  0021               	movlb	1	; select bank1
  2930  031F  048D               	iorwf	13,f	;volatile
  2931                           
  2932                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  2933  0320  3001               	movlw	1
  2934  0321  0020               	movlb	0	; select bank0
  2935  0322  00B3               	movwf	??_initialiseADCPin
  2936  0323  0A37               	incf	initialiseADCPin@portNumber,w
  2937  0324  2B26               	goto	u1124
  2938  0325                     u1125:
  2939  0325  35B3               	lslf	??_initialiseADCPin,f
  2940  0326                     u1124:
  2941  0326  0B89               	decfsz	9,f
  2942  0327  2B25               	goto	u1125
  2943  0328  0833               	movf	??_initialiseADCPin,w
  2944  0329  00B4               	movwf	??_initialiseADCPin+1
  2945  032A  0834               	movf	??_initialiseADCPin+1,w
  2946  032B  0023               	movlb	3	; select bank3
  2947  032C  048D               	iorwf	13,f	;volatile
  2948  032D                     l205:
  2949  032D  0008               	return
  2950  032E                     __end_of_initialiseADCPin:
  2951                           
  2952                           	psect	text8
  2953  0665                     __ptext8:	
  2954 ;; *************** function _initialiseADCModule *****************
  2955 ;; Defined at:
  2956 ;;		line 14 in file "ADC.c"
  2957 ;; Parameters:    Size  Location     Type
  2958 ;;		None
  2959 ;; Auto vars:     Size  Location     Type
  2960 ;;		None
  2961 ;; Return value:  Size  Location     Type
  2962 ;;                  1    wreg      void 
  2963 ;; Registers used:
  2964 ;;		wreg
  2965 ;; Tracked objects:
  2966 ;;		On entry : 0/0
  2967 ;;		On exit  : 0/0
  2968 ;;		Unchanged: 0/0
  2969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2970 ;;      Params:         0       0       0       0       0       0
  2971 ;;      Locals:         0       0       0       0       0       0
  2972 ;;      Temps:          0       0       0       0       0       0
  2973 ;;      Totals:         0       0       0       0       0       0
  2974 ;;Total ram usage:        0 bytes
  2975 ;; Hardware stack levels used: 1
  2976 ;; Hardware stack levels required when called: 3
  2977 ;; This function calls:
  2978 ;;		Nothing
  2979 ;; This function is called by:
  2980 ;;		_main
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984  0665                     _initialiseADCModule:	
  2985                           ;psect for function _initialiseADCModule
  2986                           
  2987  0665                     l1967:	
  2988                           ;incstack = 0
  2989                           ; Regs used in _initialiseADCModule: [wreg]
  2990                           
  2991                           
  2992                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  2993  0665  3001               	movlw	1
  2994  0666  0021               	movlb	1	; select bank1
  2995  0667  009D               	movwf	29	;volatile
  2996                           
  2997                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  2998  0668  3080               	movlw	128
  2999  0669  009E               	movwf	30	;volatile
  3000  066A                     l196:
  3001  066A  0008               	return
  3002  066B                     __end_of_initialiseADCModule:
  3003                           
  3004                           	psect	intentry
  3005  0004                     __pintentry:	
  3006 ;; *************** function _Tick980Hz *****************
  3007 ;; Defined at:
  3008 ;;		line 41 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;		None
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      void 
  3015 ;; Registers used:
  3016 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3022 ;;      Params:         0       0       0       0       0       0
  3023 ;;      Locals:         0       0       0       0       0       0
  3024 ;;      Temps:          0       1       0       0       0       0
  3025 ;;      Totals:         0       1       0       0       0       0
  3026 ;;Total ram usage:        1 bytes
  3027 ;; Hardware stack levels used: 1
  3028 ;; Hardware stack levels required when called: 2
  3029 ;; This function calls:
  3030 ;;		_currentTripRead
  3031 ;;		_readFilteredDutyPot
  3032 ;;		_readFilteredFreqPot
  3033 ;;		_runPotScaling
  3034 ;;		_setPWMDutyandPeriod
  3035 ;;		_writeGPIO
  3036 ;; This function is called by:
  3037 ;;		Interrupt level 1
  3038 ;; This function uses a non-reentrant model
  3039 ;;
  3040                           
  3041  0004                     _Tick980Hz:
  3042                           
  3043                           ;incstack = 0
  3044  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3045                           
  3046                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3047  0005  3180               	pagesel	$
  3048  0006                     i1l1973:
  3049                           
  3050                           ;main.c: 52:         if(currentTripRead() < 1){
  3051  0006  3186  2615  3180   	fcall	_currentTripRead
  3052  0009  3A00               	xorlw	0
  3053  000A  1D03               	skipz
  3054  000B  280D               	goto	u165_21
  3055  000C  280E               	goto	u165_20
  3056  000D                     u165_21:
  3057  000D  281A               	goto	i1l1979
  3058  000E                     u165_20:
  3059  000E                     i1l1975:
  3060                           
  3061                           ;main.c: 53:             emergencyStop = 1;
  3062  000E  3001               	movlw	1
  3063  000F  0020               	movlb	0	; select bank0
  3064  0010  00B2               	movwf	??_Tick980Hz
  3065  0011  0832               	movf	??_Tick980Hz,w
  3066  0012  00CF               	movwf	_emergencyStop	;volatile
  3067  0013                     i1l1977:
  3068                           
  3069                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3070  0013  3000               	movlw	0
  3071  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3072  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3073  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3074  0017  3185  257C  3180   	fcall	_setPWMDutyandPeriod
  3075  001A                     i1l1979:
  3076                           
  3077                           ;main.c: 57:         if(timerSlotHalf == 0){
  3078  001A  0020               	movlb	0	; select bank0
  3079  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3080  001C  1D03               	btfss	3,2
  3081  001D  281F               	goto	u166_21
  3082  001E  2820               	goto	u166_20
  3083  001F                     u166_21:
  3084  001F  2825               	goto	i1l1983
  3085  0020                     u166_20:
  3086  0020                     i1l1981:
  3087                           
  3088                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3089  0020  01F0               	clrf	writeGPIO@writeValue
  3090  0021  300C               	movlw	12
  3091  0022  3183  2390  3180   	fcall	_writeGPIO
  3092  0025                     i1l1983:
  3093                           
  3094                           ;main.c: 61:         if(timerSlotHalf == 1){
  3095  0025  0020               	movlb	0	; select bank0
  3096  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3097  0027  1D03               	btfss	3,2
  3098  0028  282A               	goto	u167_21
  3099  0029  282B               	goto	u167_20
  3100  002A                     u167_21:
  3101  002A  285A               	goto	i1l78
  3102  002B                     u167_20:
  3103  002B                     i1l1985:
  3104                           
  3105                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3106  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3107  002C  1D03               	btfss	3,2
  3108  002D  282F               	goto	u168_21
  3109  002E  2830               	goto	u168_20
  3110  002F                     u168_21:
  3111  002F  284F               	goto	i1l1999
  3112  0030                     u168_20:
  3113  0030                     i1l1987:
  3114                           
  3115                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3116  0030  01F0               	clrf	writeGPIO@writeValue
  3117  0031  0AF0               	incf	writeGPIO@writeValue,f
  3118  0032  300C               	movlw	12
  3119  0033  3183  2390  3180   	fcall	_writeGPIO
  3120  0036                     i1l1989:
  3121                           
  3122                           ;main.c: 69:                 filteredDutyPot = readFilteredDutyPot();
  3123  0036  3184  24A5  3180   	fcall	_readFilteredDutyPot
  3124  0039  087C               	movf	?_readFilteredDutyPot+1,w
  3125  003A  0020               	movlb	0	; select bank0
  3126  003B  00C2               	movwf	_filteredDutyPot+1
  3127  003C  087B               	movf	?_readFilteredDutyPot,w
  3128  003D  00C1               	movwf	_filteredDutyPot
  3129  003E                     i1l1991:
  3130                           
  3131                           ;main.c: 70:                 filteredFreqPot = readFilteredFreqPot();
  3132  003E  3184  244A  3180   	fcall	_readFilteredFreqPot
  3133  0041  087C               	movf	?_readFilteredFreqPot+1,w
  3134  0042  0020               	movlb	0	; select bank0
  3135  0043  00C4               	movwf	_filteredFreqPot+1
  3136  0044  087B               	movf	?_readFilteredFreqPot,w
  3137  0045  00C3               	movwf	_filteredFreqPot
  3138  0046                     i1l1993:
  3139                           
  3140                           ;main.c: 72:                 if(~emergencyStop){
  3141  0046  034F               	decf	_emergencyStop,w	;volatile
  3142  0047  1903               	btfsc	3,2
  3143  0048  284A               	goto	u169_21
  3144  0049  284B               	goto	u169_20
  3145  004A                     u169_21:
  3146  004A  284F               	goto	i1l1997
  3147  004B                     u169_20:
  3148  004B                     i1l1995:
  3149                           
  3150                           ;main.c: 73:                     runPotScaling();
  3151  004B  3180  208A  3180   	fcall	_runPotScaling
  3152  004E  284F               	goto	i1l1999
  3153  004F                     i1l1997:
  3154  004F                     i1l1999:
  3155                           
  3156                           ;main.c: 81:             timerSlotQuarter = ~timerSlotQuarter;
  3157  004F  0020               	movlb	0	; select bank0
  3158  0050  0350               	decf	_timerSlotQuarter,w	;volatile
  3159  0051  1D03               	btfss	3,2
  3160  0052  2854               	goto	u170_21
  3161  0053  2856               	goto	u170_20
  3162  0054                     u170_21:
  3163  0054  3001               	movlw	1
  3164  0055  2857               	goto	u171_20
  3165  0056                     u170_20:
  3166  0056  3000               	movlw	0
  3167  0057                     u171_20:
  3168  0057  00B2               	movwf	??_Tick980Hz
  3169  0058  0832               	movf	??_Tick980Hz,w
  3170  0059  00D0               	movwf	_timerSlotQuarter	;volatile
  3171  005A                     i1l78:	
  3172                           ;main.c: 82:         }
  3173                           
  3174                           
  3175                           ;main.c: 84:         timerSlotHalf = ~timerSlotHalf;
  3176  005A  0351               	decf	_timerSlotHalf,w	;volatile
  3177  005B  1D03               	btfss	3,2
  3178  005C  285E               	goto	u172_21
  3179  005D  2860               	goto	u172_20
  3180  005E                     u172_21:
  3181  005E  3001               	movlw	1
  3182  005F  2861               	goto	u173_20
  3183  0060                     u172_20:
  3184  0060  3000               	movlw	0
  3185  0061                     u173_20:
  3186  0061  00B2               	movwf	??_Tick980Hz
  3187  0062  0832               	movf	??_Tick980Hz,w
  3188  0063  00D1               	movwf	_timerSlotHalf	;volatile
  3189  0064                     i1l2001:
  3190                           
  3191                           ;main.c: 85:         INTCONbits.TMR0IF = 0;
  3192  0064  110B               	bcf	11,2	;volatile
  3193  0065                     i1l2003:
  3194                           
  3195                           ;main.c: 90:         latestIL1 = readILCurrentADCRaw;
  3196  0065  3000               	movlw	0
  3197  0066  00C9               	movwf	_latestIL1	;volatile
  3198  0067  3000               	movlw	0
  3199  0068  00CA               	movwf	_latestIL1+1	;volatile
  3200  0069                     i1l2005:
  3201                           
  3202                           ;main.c: 91:         PIR1bits.CCP1IF = 0;
  3203  0069  1111               	bcf	17,2	;volatile
  3204  006A                     i1l83:
  3205  006A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3206  006B  0009               	retfie
  3207  006C                     __end_of_Tick980Hz:
  3208                           
  3209                           	psect	text10
  3210  0390                     __ptext10:	
  3211 ;; *************** function _writeGPIO *****************
  3212 ;; Defined at:
  3213 ;;		line 52 in file "GPIO.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  gpioNumber      1    wreg     const enum E2798
  3216 ;;  writeValue      1    0[COMMON] unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3219 ;;  portNumber      1    5[COMMON] unsigned char 
  3220 ;;  portType        1    3[COMMON] unsigned char 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3230 ;;      Params:         1       0       0       0       0       0
  3231 ;;      Locals:         3       0       0       0       0       0
  3232 ;;      Temps:          2       0       0       0       0       0
  3233 ;;      Totals:         6       0       0       0       0       0
  3234 ;;Total ram usage:        6 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_Tick980Hz
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243  0390                     _writeGPIO:	
  3244                           ;psect for function _writeGPIO
  3245                           
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3249                           ;writeGPIO@gpioNumber stored from wreg
  3250  0390  00F4               	movwf	writeGPIO@gpioNumber
  3251  0391                     i1l1757:
  3252                           
  3253                           ;GPIO.c: 54:     uint8_t portType = 0;
  3254  0391  01F3               	clrf	writeGPIO@portType
  3255  0392                     i1l1759:
  3256                           
  3257                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3258  0392  3008               	movlw	8
  3259  0393  0274               	subwf	writeGPIO@gpioNumber,w
  3260  0394  1C03               	skipc
  3261  0395  2B97               	goto	u145_21
  3262  0396  2B98               	goto	u145_20
  3263  0397                     u145_21:
  3264  0397  2BA0               	goto	i1l1765
  3265  0398                     u145_20:
  3266  0398                     i1l1761:
  3267                           
  3268                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3269  0398  0874               	movf	writeGPIO@gpioNumber,w
  3270  0399  3EF8               	addlw	248
  3271  039A  00F1               	movwf	??_writeGPIO
  3272  039B  0871               	movf	??_writeGPIO,w
  3273  039C  00F5               	movwf	writeGPIO@portNumber
  3274  039D                     i1l1763:
  3275                           
  3276                           ;GPIO.c: 57:         portType = 1;
  3277  039D  01F3               	clrf	writeGPIO@portType
  3278  039E  0AF3               	incf	writeGPIO@portType,f
  3279                           
  3280                           ;GPIO.c: 58:     }
  3281  039F  2BA5               	goto	i1l1769
  3282  03A0                     i1l1765:
  3283                           
  3284                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3285  03A0  0874               	movf	writeGPIO@gpioNumber,w
  3286  03A1  00F1               	movwf	??_writeGPIO
  3287  03A2  0871               	movf	??_writeGPIO,w
  3288  03A3  00F5               	movwf	writeGPIO@portNumber
  3289  03A4                     i1l1767:
  3290                           
  3291                           ;GPIO.c: 61:         portType = 0;
  3292  03A4  01F3               	clrf	writeGPIO@portType
  3293  03A5                     i1l1769:
  3294                           
  3295                           ;GPIO.c: 64:     if(portType == 0){
  3296  03A5  0873               	movf	writeGPIO@portType,w
  3297  03A6  1D03               	btfss	3,2
  3298  03A7  2BA9               	goto	u146_21
  3299  03A8  2BAA               	goto	u146_20
  3300  03A9                     u146_21:
  3301  03A9  2BCA               	goto	i1l1777
  3302  03AA                     u146_20:
  3303  03AA                     i1l1771:
  3304                           
  3305                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3306  03AA  0870               	movf	writeGPIO@writeValue,w
  3307  03AB  1903               	btfsc	3,2
  3308  03AC  2BAE               	goto	u147_21
  3309  03AD  2BAF               	goto	u147_20
  3310  03AE                     u147_21:
  3311  03AE  2BBC               	goto	i1l1775
  3312  03AF                     u147_20:
  3313  03AF                     i1l1773:
  3314  03AF  3001               	movlw	1
  3315  03B0  00F1               	movwf	??_writeGPIO
  3316  03B1  0A75               	incf	writeGPIO@portNumber,w
  3317  03B2  2BB4               	goto	u148_24
  3318  03B3                     u148_25:
  3319  03B3  35F1               	lslf	??_writeGPIO,f
  3320  03B4                     u148_24:
  3321  03B4  0B89               	decfsz	9,f
  3322  03B5  2BB3               	goto	u148_25
  3323  03B6  0871               	movf	??_writeGPIO,w
  3324  03B7  00F2               	movwf	??_writeGPIO+1
  3325  03B8  0872               	movf	??_writeGPIO+1,w
  3326  03B9  0022               	movlb	2	; select bank2
  3327  03BA  048C               	iorwf	12,f	;volatile
  3328  03BB  2BEE               	goto	i1l280
  3329  03BC                     i1l1775:
  3330  03BC  3001               	movlw	1
  3331  03BD  00F1               	movwf	??_writeGPIO
  3332  03BE  0A75               	incf	writeGPIO@portNumber,w
  3333  03BF  2BC1               	goto	u149_24
  3334  03C0                     u149_25:
  3335  03C0  35F1               	lslf	??_writeGPIO,f
  3336  03C1                     u149_24:
  3337  03C1  0B89               	decfsz	9,f
  3338  03C2  2BC0               	goto	u149_25
  3339  03C3  0871               	movf	??_writeGPIO,w
  3340  03C4  3AFF               	xorlw	255
  3341  03C5  00F2               	movwf	??_writeGPIO+1
  3342  03C6  0872               	movf	??_writeGPIO+1,w
  3343  03C7  0022               	movlb	2	; select bank2
  3344  03C8  058C               	andwf	12,f	;volatile
  3345  03C9  2BEE               	goto	i1l280
  3346  03CA                     i1l1777:
  3347  03CA  0373               	decf	writeGPIO@portType,w
  3348  03CB  1D03               	btfss	3,2
  3349  03CC  2BCE               	goto	u150_21
  3350  03CD  2BCF               	goto	u150_20
  3351  03CE                     u150_21:
  3352  03CE  2BEE               	goto	i1l280
  3353  03CF                     u150_20:
  3354  03CF                     i1l1779:
  3355                           
  3356                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3357  03CF  0870               	movf	writeGPIO@writeValue,w
  3358  03D0  1903               	btfsc	3,2
  3359  03D1  2BD3               	goto	u151_21
  3360  03D2  2BD4               	goto	u151_20
  3361  03D3                     u151_21:
  3362  03D3  2BE1               	goto	i1l1783
  3363  03D4                     u151_20:
  3364  03D4                     i1l1781:
  3365  03D4  3001               	movlw	1
  3366  03D5  00F1               	movwf	??_writeGPIO
  3367  03D6  0A75               	incf	writeGPIO@portNumber,w
  3368  03D7  2BD9               	goto	u152_24
  3369  03D8                     u152_25:
  3370  03D8  35F1               	lslf	??_writeGPIO,f
  3371  03D9                     u152_24:
  3372  03D9  0B89               	decfsz	9,f
  3373  03DA  2BD8               	goto	u152_25
  3374  03DB  0871               	movf	??_writeGPIO,w
  3375  03DC  00F2               	movwf	??_writeGPIO+1
  3376  03DD  0872               	movf	??_writeGPIO+1,w
  3377  03DE  0022               	movlb	2	; select bank2
  3378  03DF  048D               	iorwf	13,f	;volatile
  3379  03E0  2BEE               	goto	i1l280
  3380  03E1                     i1l1783:
  3381  03E1  3001               	movlw	1
  3382  03E2  00F1               	movwf	??_writeGPIO
  3383  03E3  0A75               	incf	writeGPIO@portNumber,w
  3384  03E4  2BE6               	goto	u153_24
  3385  03E5                     u153_25:
  3386  03E5  35F1               	lslf	??_writeGPIO,f
  3387  03E6                     u153_24:
  3388  03E6  0B89               	decfsz	9,f
  3389  03E7  2BE5               	goto	u153_25
  3390  03E8  0871               	movf	??_writeGPIO,w
  3391  03E9  3AFF               	xorlw	255
  3392  03EA  00F2               	movwf	??_writeGPIO+1
  3393  03EB  0872               	movf	??_writeGPIO+1,w
  3394  03EC  0022               	movlb	2	; select bank2
  3395  03ED  058D               	andwf	13,f	;volatile
  3396  03EE                     i1l280:
  3397  03EE  0008               	return
  3398  03EF                     __end_of_writeGPIO:
  3399                           
  3400                           	psect	text11
  3401  008A                     __ptext11:	
  3402 ;; *************** function _runPotScaling *****************
  3403 ;; Defined at:
  3404 ;;		line 55 in file "Potentiometer.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3409 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, status,2, status,0, pclath, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3419 ;;      Params:         0       0       0       0       0       0
  3420 ;;      Locals:         0       4       0       0       0       0
  3421 ;;      Temps:          0       8       0       0       0       0
  3422 ;;      Totals:         0      12       0       0       0       0
  3423 ;;Total ram usage:       12 bytes
  3424 ;; Hardware stack levels used: 1
  3425 ;; Hardware stack levels required when called: 1
  3426 ;; This function calls:
  3427 ;;		___lldiv
  3428 ;;		___lmul
  3429 ;;		___wmul
  3430 ;;		_setPWMDutyandPeriod
  3431 ;; This function is called by:
  3432 ;;		_Tick980Hz
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436  008A                     _runPotScaling:	
  3437                           ;psect for function _runPotScaling
  3438                           
  3439  008A                     i1l1849:	
  3440                           ;incstack = 0
  3441                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3442                           
  3443                           
  3444                           ;Potentiometer.c: 57:     potSetCount++;
  3445  008A  3001               	movlw	1
  3446  008B  0020               	movlb	0	; select bank0
  3447  008C  00A6               	movwf	??_runPotScaling
  3448  008D  0826               	movf	??_runPotScaling,w
  3449  008E  07D2               	addwf	_potSetCount,f
  3450                           
  3451                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3452  008F  3020               	movlw	32
  3453  0090  0652               	xorwf	_potSetCount,w
  3454  0091  1D03               	btfss	3,2
  3455  0092  2894               	goto	u160_21
  3456  0093  2895               	goto	u160_20
  3457  0094                     u160_21:
  3458  0094  296C               	goto	i1l337
  3459  0095                     u160_20:
  3460  0095                     i1l1851:
  3461                           
  3462                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3463  0095  0843               	movf	_filteredFreqPot,w
  3464  0096  3ED3               	addlw	211
  3465  0097  00F0               	movwf	___lmul@multiplier
  3466  0098  30FF               	movlw	255
  3467  0099  3D44               	addwfc	_filteredFreqPot+1,w
  3468  009A  00F1               	movwf	___lmul@multiplier+1
  3469  009B  01F2               	clrf	___lmul@multiplier+2
  3470  009C  01F3               	clrf	___lmul@multiplier+3
  3471  009D  3000               	movlw	0
  3472  009E  00F7               	movwf	___lmul@multiplicand+3
  3473  009F  3000               	movlw	0
  3474  00A0  00F6               	movwf	___lmul@multiplicand+2
  3475  00A1  3000               	movlw	0
  3476  00A2  00F5               	movwf	___lmul@multiplicand+1
  3477  00A3  3090               	movlw	144
  3478  00A4  00F4               	movwf	___lmul@multiplicand
  3479  00A5  3185  2549  3180   	fcall	___lmul
  3480  00A8  0870               	movf	?___lmul,w
  3481  00A9  0020               	movlb	0	; select bank0
  3482  00AA  00A6               	movwf	??_runPotScaling
  3483  00AB  0871               	movf	?___lmul+1,w
  3484  00AC  00A7               	movwf	??_runPotScaling+1
  3485  00AD  0872               	movf	?___lmul+2,w
  3486  00AE  00A8               	movwf	??_runPotScaling+2
  3487  00AF  0873               	movf	?___lmul+3,w
  3488  00B0  00A9               	movwf	??_runPotScaling+3
  3489  00B1  300A               	movlw	10
  3490  00B2                     u161_25:
  3491  00B2  36A9               	lsrf	??_runPotScaling+3,f
  3492  00B3  0CA8               	rrf	??_runPotScaling+2,f
  3493  00B4  0CA7               	rrf	??_runPotScaling+1,f
  3494  00B5  0CA6               	rrf	??_runPotScaling,f
  3495  00B6                     u161_20:
  3496  00B6  0B89               	decfsz	9,f
  3497  00B7  28B2               	goto	u161_25
  3498  00B8  0826               	movf	??_runPotScaling,w
  3499  00B9  3E0F               	addlw	15
  3500  00BA  00AA               	movwf	??_runPotScaling+4
  3501  00BB  082A               	movf	??_runPotScaling+4,w
  3502  00BC  00D4               	movwf	_setPeriod
  3503                           
  3504                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3505  00BD  0841               	movf	_filteredDutyPot,w
  3506  00BE  3ED3               	addlw	211
  3507  00BF  00F0               	movwf	___lmul@multiplier
  3508  00C0  30FF               	movlw	255
  3509  00C1  3D42               	addwfc	_filteredDutyPot+1,w
  3510  00C2  00F1               	movwf	___lmul@multiplier+1
  3511  00C3  01F2               	clrf	___lmul@multiplier+2
  3512  00C4  01F3               	clrf	___lmul@multiplier+3
  3513  00C5  0854               	movf	_setPeriod,w
  3514  00C6  00A6               	movwf	??_runPotScaling
  3515  00C7  01A7               	clrf	??_runPotScaling+1
  3516  00C8  01A8               	clrf	??_runPotScaling+2
  3517  00C9  01A9               	clrf	??_runPotScaling+3
  3518  00CA  0829               	movf	??_runPotScaling+3,w
  3519  00CB  00F7               	movwf	___lmul@multiplicand+3
  3520  00CC  0828               	movf	??_runPotScaling+2,w
  3521  00CD  00F6               	movwf	___lmul@multiplicand+2
  3522  00CE  0827               	movf	??_runPotScaling+1,w
  3523  00CF  00F5               	movwf	___lmul@multiplicand+1
  3524  00D0  0826               	movf	??_runPotScaling,w
  3525  00D1  00F4               	movwf	___lmul@multiplicand
  3526  00D2  3185  2549  3180   	fcall	___lmul
  3527  00D5  0870               	movf	?___lmul,w
  3528  00D6  0020               	movlb	0	; select bank0
  3529  00D7  00AA               	movwf	??_runPotScaling+4
  3530  00D8  0871               	movf	?___lmul+1,w
  3531  00D9  00AB               	movwf	??_runPotScaling+5
  3532  00DA  0872               	movf	?___lmul+2,w
  3533  00DB  00AC               	movwf	??_runPotScaling+6
  3534  00DC  0873               	movf	?___lmul+3,w
  3535  00DD  00AD               	movwf	??_runPotScaling+7
  3536  00DE  3008               	movlw	8
  3537  00DF                     u162_25:
  3538  00DF  36AD               	lsrf	??_runPotScaling+7,f
  3539  00E0  0CAC               	rrf	??_runPotScaling+6,f
  3540  00E1  0CAB               	rrf	??_runPotScaling+5,f
  3541  00E2  0CAA               	rrf	??_runPotScaling+4,f
  3542  00E3                     u162_20:
  3543  00E3  0B89               	decfsz	9,f
  3544  00E4  28DF               	goto	u162_25
  3545  00E5  082B               	movf	??_runPotScaling+5,w
  3546  00E6  00CE               	movwf	_setDuty+1
  3547  00E7  082A               	movf	??_runPotScaling+4,w
  3548  00E8  00CD               	movwf	_setDuty
  3549                           
  3550                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3551  00E9  3000               	movlw	0
  3552  00EA  00F9               	movwf	___lldiv@divisor+3
  3553  00EB  3000               	movlw	0
  3554  00EC  00F8               	movwf	___lldiv@divisor+2
  3555  00ED  3000               	movlw	0
  3556  00EE  00F7               	movwf	___lldiv@divisor+1
  3557  00EF  3019               	movlw	25
  3558  00F0  00F6               	movwf	___lldiv@divisor
  3559  00F1  305A               	movlw	90
  3560  00F2  00F2               	movwf	___wmul@multiplicand
  3561  00F3  3000               	movlw	0
  3562  00F4  00F3               	movwf	___wmul@multiplicand+1
  3563  00F5  0854               	movf	_setPeriod,w
  3564  00F6  00A6               	movwf	??_runPotScaling
  3565  00F7  01A7               	clrf	??_runPotScaling+1
  3566  00F8  0826               	movf	??_runPotScaling,w
  3567  00F9  00F0               	movwf	___wmul@multiplier
  3568  00FA  0827               	movf	??_runPotScaling+1,w
  3569  00FB  00F1               	movwf	___wmul@multiplier+1
  3570  00FC  3185  25A7  3180   	fcall	___wmul
  3571  00FF  0870               	movf	?___wmul,w
  3572  0100  0020               	movlb	0	; select bank0
  3573  0101  00A8               	movwf	??_runPotScaling+2
  3574  0102  0871               	movf	?___wmul+1,w
  3575  0103  00A9               	movwf	??_runPotScaling+3
  3576  0104  01AA               	clrf	??_runPotScaling+4
  3577  0105  01AB               	clrf	??_runPotScaling+5
  3578  0106  082B               	movf	??_runPotScaling+5,w
  3579  0107  00FD               	movwf	___lldiv@dividend+3
  3580  0108  082A               	movf	??_runPotScaling+4,w
  3581  0109  00FC               	movwf	___lldiv@dividend+2
  3582  010A  0829               	movf	??_runPotScaling+3,w
  3583  010B  00FB               	movwf	___lldiv@dividend+1
  3584  010C  0828               	movf	??_runPotScaling+2,w
  3585  010D  00FA               	movwf	___lldiv@dividend
  3586  010E  3183  23EF  3180   	fcall	___lldiv
  3587  0111  0877               	movf	?___lldiv+1,w
  3588  0112  0020               	movlb	0	; select bank0
  3589  0113  00AF               	movwf	runPotScaling@maxDuty+1
  3590  0114  0876               	movf	?___lldiv,w
  3591  0115  00AE               	movwf	runPotScaling@maxDuty
  3592                           
  3593                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3594  0116  3000               	movlw	0
  3595  0117  00F9               	movwf	___lldiv@divisor+3
  3596  0118  3000               	movlw	0
  3597  0119  00F8               	movwf	___lldiv@divisor+2
  3598  011A  3000               	movlw	0
  3599  011B  00F7               	movwf	___lldiv@divisor+1
  3600  011C  3019               	movlw	25
  3601  011D  00F6               	movwf	___lldiv@divisor
  3602  011E  300A               	movlw	10
  3603  011F  00F2               	movwf	___wmul@multiplicand
  3604  0120  3000               	movlw	0
  3605  0121  00F3               	movwf	___wmul@multiplicand+1
  3606  0122  0854               	movf	_setPeriod,w
  3607  0123  00A6               	movwf	??_runPotScaling
  3608  0124  01A7               	clrf	??_runPotScaling+1
  3609  0125  0826               	movf	??_runPotScaling,w
  3610  0126  00F0               	movwf	___wmul@multiplier
  3611  0127  0827               	movf	??_runPotScaling+1,w
  3612  0128  00F1               	movwf	___wmul@multiplier+1
  3613  0129  3185  25A7  3180   	fcall	___wmul
  3614  012C  0870               	movf	?___wmul,w
  3615  012D  0020               	movlb	0	; select bank0
  3616  012E  00A8               	movwf	??_runPotScaling+2
  3617  012F  0871               	movf	?___wmul+1,w
  3618  0130  00A9               	movwf	??_runPotScaling+3
  3619  0131  01AA               	clrf	??_runPotScaling+4
  3620  0132  01AB               	clrf	??_runPotScaling+5
  3621  0133  082B               	movf	??_runPotScaling+5,w
  3622  0134  00FD               	movwf	___lldiv@dividend+3
  3623  0135  082A               	movf	??_runPotScaling+4,w
  3624  0136  00FC               	movwf	___lldiv@dividend+2
  3625  0137  0829               	movf	??_runPotScaling+3,w
  3626  0138  00FB               	movwf	___lldiv@dividend+1
  3627  0139  0828               	movf	??_runPotScaling+2,w
  3628  013A  00FA               	movwf	___lldiv@dividend
  3629  013B  3183  23EF  3180   	fcall	___lldiv
  3630  013E  0877               	movf	?___lldiv+1,w
  3631  013F  0020               	movlb	0	; select bank0
  3632  0140  00B1               	movwf	runPotScaling@minDuty+1
  3633  0141  0876               	movf	?___lldiv,w
  3634  0142  00B0               	movwf	runPotScaling@minDuty
  3635  0143                     i1l1853:
  3636                           
  3637                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3638  0143  084E               	movf	_setDuty+1,w
  3639  0144  022F               	subwf	runPotScaling@maxDuty+1,w
  3640  0145  1D03               	skipz
  3641  0146  2949               	goto	u163_25
  3642  0147  084D               	movf	_setDuty,w
  3643  0148  022E               	subwf	runPotScaling@maxDuty,w
  3644  0149                     u163_25:
  3645  0149  1803               	skipnc
  3646  014A  294C               	goto	u163_21
  3647  014B  294D               	goto	u163_20
  3648  014C                     u163_21:
  3649  014C  2951               	goto	i1l335
  3650  014D                     u163_20:
  3651  014D                     i1l1855:
  3652  014D  082F               	movf	runPotScaling@maxDuty+1,w
  3653  014E  00CE               	movwf	_setDuty+1
  3654  014F  082E               	movf	runPotScaling@maxDuty,w
  3655  0150  00CD               	movwf	_setDuty
  3656  0151                     i1l335:
  3657                           
  3658                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3659  0151  0831               	movf	runPotScaling@minDuty+1,w
  3660  0152  024E               	subwf	_setDuty+1,w
  3661  0153  1D03               	skipz
  3662  0154  2957               	goto	u164_25
  3663  0155  0830               	movf	runPotScaling@minDuty,w
  3664  0156  024D               	subwf	_setDuty,w
  3665  0157                     u164_25:
  3666  0157  1803               	skipnc
  3667  0158  295A               	goto	u164_21
  3668  0159  295B               	goto	u164_20
  3669  015A                     u164_21:
  3670  015A  295F               	goto	i1l1859
  3671  015B                     u164_20:
  3672  015B                     i1l1857:
  3673  015B  0831               	movf	runPotScaling@minDuty+1,w
  3674  015C  00CE               	movwf	_setDuty+1
  3675  015D  0830               	movf	runPotScaling@minDuty,w
  3676  015E  00CD               	movwf	_setDuty
  3677  015F                     i1l1859:
  3678                           
  3679                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3680  015F  084E               	movf	_setDuty+1,w
  3681  0160  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3682  0161  084D               	movf	_setDuty,w
  3683  0162  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3684  0163  0854               	movf	_setPeriod,w
  3685  0164  00A6               	movwf	??_runPotScaling
  3686  0165  0826               	movf	??_runPotScaling,w
  3687  0166  00F2               	movwf	setPWMDutyandPeriod@period
  3688  0167  3185  257C  3180   	fcall	_setPWMDutyandPeriod
  3689  016A                     i1l1861:
  3690                           
  3691                           ;Potentiometer.c: 72:         potSetCount = 0;
  3692  016A  0020               	movlb	0	; select bank0
  3693  016B  01D2               	clrf	_potSetCount
  3694  016C                     i1l337:
  3695  016C  0008               	return
  3696  016D                     __end_of_runPotScaling:
  3697                           
  3698                           	psect	text12
  3699  057C                     __ptext12:	
  3700 ;; *************** function _setPWMDutyandPeriod *****************
  3701 ;; Defined at:
  3702 ;;		line 48 in file "PWM.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3705 ;;  period          1    2[COMMON] unsigned char 
  3706 ;; Auto vars:     Size  Location     Type
  3707 ;;		None
  3708 ;; Return value:  Size  Location     Type
  3709 ;;                  1    wreg      void 
  3710 ;; Registers used:
  3711 ;;		wreg, status,2, status,0
  3712 ;; Tracked objects:
  3713 ;;		On entry : 0/0
  3714 ;;		On exit  : 0/0
  3715 ;;		Unchanged: 0/0
  3716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3717 ;;      Params:         3       0       0       0       0       0
  3718 ;;      Locals:         0       0       0       0       0       0
  3719 ;;      Temps:          2       0       0       0       0       0
  3720 ;;      Totals:         5       0       0       0       0       0
  3721 ;;Total ram usage:        5 bytes
  3722 ;; Hardware stack levels used: 1
  3723 ;; This function calls:
  3724 ;;		Nothing
  3725 ;; This function is called by:
  3726 ;;		_Tick980Hz
  3727 ;;		_runPotScaling
  3728 ;; This function uses a non-reentrant model
  3729 ;;
  3730                           
  3731  057C                     _setPWMDutyandPeriod:	
  3732                           ;psect for function _setPWMDutyandPeriod
  3733                           
  3734  057C                     i1l1555:	
  3735                           ;incstack = 0
  3736                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3737                           
  3738                           
  3739                           ;PWM.c: 49:     PR2 = period;
  3740  057C  0872               	movf	setPWMDutyandPeriod@period,w
  3741  057D  0020               	movlb	0	; select bank0
  3742  057E  009B               	movwf	27	;volatile
  3743  057F                     i1l1557:
  3744                           
  3745                           ;PWM.c: 50:     CCPR1L = dutyCycle >> 2;
  3746  057F  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3747  0580  00F4               	movwf	??_setPWMDutyandPeriod+1
  3748  0581  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3749  0582  00F3               	movwf	??_setPWMDutyandPeriod
  3750  0583  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3751  0584  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3752  0585  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3753  0586  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3754  0587  0873               	movf	??_setPWMDutyandPeriod,w
  3755  0588  0025               	movlb	5	; select bank5
  3756  0589  0091               	movwf	17	;volatile
  3757  058A                     i1l1559:
  3758                           
  3759                           ;PWM.c: 51:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  3760  058A  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3761  058B  3901               	andlw	1
  3762  058C  00F3               	movwf	??_setPWMDutyandPeriod
  3763  058D  0EF3               	swapf	??_setPWMDutyandPeriod,f
  3764  058E  0813               	movf	19,w	;volatile
  3765  058F  0673               	xorwf	??_setPWMDutyandPeriod,w
  3766  0590  39EF               	andlw	-17
  3767  0591  0673               	xorwf	??_setPWMDutyandPeriod,w
  3768  0592  0093               	movwf	19	;volatile
  3769                           
  3770                           ;PWM.c: 52:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  3771  0593  3002               	movlw	2
  3772  0594  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  3773  0595  00F3               	movwf	??_setPWMDutyandPeriod
  3774  0596  3000               	movlw	0
  3775  0597  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  3776  0598  00F4               	movwf	??_setPWMDutyandPeriod+1
  3777  0599  3000               	movlw	0
  3778  059A  0274               	subwf	??_setPWMDutyandPeriod+1,w
  3779  059B  3002               	movlw	2
  3780  059C  1903               	skipnz
  3781  059D  0273               	subwf	??_setPWMDutyandPeriod,w
  3782  059E  1803               	skipnc
  3783  059F  2DA1               	goto	u90_21
  3784  05A0  2DA4               	goto	u90_20
  3785  05A1                     u90_21:
  3786  05A1  0025               	movlb	5	; select bank5
  3787  05A2  1693               	bsf	19,5	;volatile
  3788  05A3  2DA6               	goto	u91_24
  3789  05A4                     u90_20:
  3790  05A4  0025               	movlb	5	; select bank5
  3791  05A5  1293               	bcf	19,5	;volatile
  3792  05A6                     u91_24:
  3793  05A6                     i1l143:
  3794  05A6  0008               	return
  3795  05A7                     __end_of_setPWMDutyandPeriod:
  3796                           
  3797                           	psect	text13
  3798  05A7                     __ptext13:	
  3799 ;; *************** function ___wmul *****************
  3800 ;; Defined at:
  3801 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  multiplier      2    0[COMMON] unsigned int 
  3804 ;;  multiplicand    2    2[COMMON] unsigned int 
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;  product         2    4[COMMON] unsigned int 
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  2    0[COMMON] unsigned int 
  3809 ;; Registers used:
  3810 ;;		wreg, status,2, status,0
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3816 ;;      Params:         4       0       0       0       0       0
  3817 ;;      Locals:         2       0       0       0       0       0
  3818 ;;      Temps:          0       0       0       0       0       0
  3819 ;;      Totals:         6       0       0       0       0       0
  3820 ;;Total ram usage:        6 bytes
  3821 ;; Hardware stack levels used: 1
  3822 ;; This function calls:
  3823 ;;		Nothing
  3824 ;; This function is called by:
  3825 ;;		_runPotScaling
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829  05A7                     ___wmul:	
  3830                           ;psect for function ___wmul
  3831                           
  3832  05A7                     i1l1693:	
  3833                           ;incstack = 0
  3834                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3835                           
  3836  05A7  01F4               	clrf	___wmul@product
  3837  05A8  01F5               	clrf	___wmul@product+1
  3838  05A9                     i1l1695:
  3839  05A9  1C70               	btfss	___wmul@multiplier,0
  3840  05AA  2DAC               	goto	u128_21
  3841  05AB  2DAD               	goto	u128_20
  3842  05AC                     u128_21:
  3843  05AC  2DB1               	goto	i1l537
  3844  05AD                     u128_20:
  3845  05AD                     i1l1697:
  3846  05AD  0872               	movf	___wmul@multiplicand,w
  3847  05AE  07F4               	addwf	___wmul@product,f
  3848  05AF  0873               	movf	___wmul@multiplicand+1,w
  3849  05B0  3DF5               	addwfc	___wmul@product+1,f
  3850  05B1                     i1l537:
  3851  05B1  3001               	movlw	1
  3852  05B2                     u129_25:
  3853  05B2  35F2               	lslf	___wmul@multiplicand,f
  3854  05B3  0DF3               	rlf	___wmul@multiplicand+1,f
  3855  05B4  0B89               	decfsz	9,f
  3856  05B5  2DB2               	goto	u129_25
  3857  05B6                     i1l1699:
  3858  05B6  3001               	movlw	1
  3859  05B7                     u130_25:
  3860  05B7  36F1               	lsrf	___wmul@multiplier+1,f
  3861  05B8  0CF0               	rrf	___wmul@multiplier,f
  3862  05B9  0B89               	decfsz	9,f
  3863  05BA  2DB7               	goto	u130_25
  3864  05BB                     i1l1701:
  3865  05BB  0870               	movf	___wmul@multiplier,w
  3866  05BC  0471               	iorwf	___wmul@multiplier+1,w
  3867  05BD  1D03               	btfss	3,2
  3868  05BE  2DC0               	goto	u131_21
  3869  05BF  2DC1               	goto	u131_20
  3870  05C0                     u131_21:
  3871  05C0  2DA9               	goto	i1l1695
  3872  05C1                     u131_20:
  3873  05C1                     i1l1703:
  3874  05C1  0875               	movf	___wmul@product+1,w
  3875  05C2  00F1               	movwf	?___wmul+1
  3876  05C3  0874               	movf	___wmul@product,w
  3877  05C4  00F0               	movwf	?___wmul
  3878  05C5                     i1l539:
  3879  05C5  0008               	return
  3880  05C6                     __end_of___wmul:
  3881                           
  3882                           	psect	text14
  3883  0549                     __ptext14:	
  3884 ;; *************** function ___lmul *****************
  3885 ;; Defined at:
  3886 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;  multiplier      4    0[COMMON] unsigned long 
  3889 ;;  multiplicand    4    4[COMMON] unsigned long 
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;  product         4    8[COMMON] unsigned long 
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  4    0[COMMON] unsigned long 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3901 ;;      Params:         8       0       0       0       0       0
  3902 ;;      Locals:         4       0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0       0
  3904 ;;      Totals:        12       0       0       0       0       0
  3905 ;;Total ram usage:       12 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_runPotScaling
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914  0549                     ___lmul:	
  3915                           ;psect for function ___lmul
  3916                           
  3917  0549                     i1l1707:	
  3918                           ;incstack = 0
  3919                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  3920                           
  3921  0549  3000               	movlw	0
  3922  054A  00FB               	movwf	___lmul@product+3
  3923  054B  3000               	movlw	0
  3924  054C  00FA               	movwf	___lmul@product+2
  3925  054D  3000               	movlw	0
  3926  054E  00F9               	movwf	___lmul@product+1
  3927  054F  3000               	movlw	0
  3928  0550  00F8               	movwf	___lmul@product
  3929  0551                     i1l1709:
  3930  0551  1C70               	btfss	___lmul@multiplier,0
  3931  0552  2D54               	goto	u132_21
  3932  0553  2D55               	goto	u132_20
  3933  0554                     u132_21:
  3934  0554  2D5D               	goto	i1l1713
  3935  0555                     u132_20:
  3936  0555                     i1l1711:
  3937  0555  0874               	movf	___lmul@multiplicand,w
  3938  0556  07F8               	addwf	___lmul@product,f
  3939  0557  0875               	movf	___lmul@multiplicand+1,w
  3940  0558  3DF9               	addwfc	___lmul@product+1,f
  3941  0559  0876               	movf	___lmul@multiplicand+2,w
  3942  055A  3DFA               	addwfc	___lmul@product+2,f
  3943  055B  0877               	movf	___lmul@multiplicand+3,w
  3944  055C  3DFB               	addwfc	___lmul@product+3,f
  3945  055D                     i1l1713:
  3946  055D  3001               	movlw	1
  3947  055E                     u133_25:
  3948  055E  35F4               	lslf	___lmul@multiplicand,f
  3949  055F  0DF5               	rlf	___lmul@multiplicand+1,f
  3950  0560  0DF6               	rlf	___lmul@multiplicand+2,f
  3951  0561  0DF7               	rlf	___lmul@multiplicand+3,f
  3952  0562  0B89               	decfsz	9,f
  3953  0563  2D5E               	goto	u133_25
  3954  0564                     i1l1715:
  3955  0564  3001               	movlw	1
  3956  0565                     u134_25:
  3957  0565  36F3               	lsrf	___lmul@multiplier+3,f
  3958  0566  0CF2               	rrf	___lmul@multiplier+2,f
  3959  0567  0CF1               	rrf	___lmul@multiplier+1,f
  3960  0568  0CF0               	rrf	___lmul@multiplier,f
  3961  0569  0B89               	decfsz	9,f
  3962  056A  2D65               	goto	u134_25
  3963  056B  0873               	movf	___lmul@multiplier+3,w
  3964  056C  0472               	iorwf	___lmul@multiplier+2,w
  3965  056D  0471               	iorwf	___lmul@multiplier+1,w
  3966  056E  0470               	iorwf	___lmul@multiplier,w
  3967  056F  1D03               	skipz
  3968  0570  2D72               	goto	u135_21
  3969  0571  2D73               	goto	u135_20
  3970  0572                     u135_21:
  3971  0572  2D51               	goto	i1l1709
  3972  0573                     u135_20:
  3973  0573                     i1l1717:
  3974  0573  087B               	movf	___lmul@product+3,w
  3975  0574  00F3               	movwf	?___lmul+3
  3976  0575  087A               	movf	___lmul@product+2,w
  3977  0576  00F2               	movwf	?___lmul+2
  3978  0577  0879               	movf	___lmul@product+1,w
  3979  0578  00F1               	movwf	?___lmul+1
  3980  0579  0878               	movf	___lmul@product,w
  3981  057A  00F0               	movwf	?___lmul
  3982  057B                     i1l551:
  3983  057B  0008               	return
  3984  057C                     __end_of___lmul:
  3985                           
  3986                           	psect	text15
  3987  03EF                     __ptext15:	
  3988 ;; *************** function ___lldiv *****************
  3989 ;; Defined at:
  3990 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  divisor         4    6[COMMON] unsigned long 
  3993 ;;  dividend        4   10[COMMON] unsigned long 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  quotient        4    1[BANK0 ] unsigned long 
  3996 ;;  counter         1    5[BANK0 ] unsigned char 
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  4    6[COMMON] unsigned long 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2, status,0
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4006 ;;      Params:         8       0       0       0       0       0
  4007 ;;      Locals:         0       5       0       0       0       0
  4008 ;;      Temps:          0       1       0       0       0       0
  4009 ;;      Totals:         8       6       0       0       0       0
  4010 ;;Total ram usage:       14 bytes
  4011 ;; Hardware stack levels used: 1
  4012 ;; This function calls:
  4013 ;;		Nothing
  4014 ;; This function is called by:
  4015 ;;		_runPotScaling
  4016 ;; This function uses a non-reentrant model
  4017 ;;
  4018                           
  4019  03EF                     ___lldiv:	
  4020                           ;psect for function ___lldiv
  4021                           
  4022  03EF                     i1l1721:	
  4023                           ;incstack = 0
  4024                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4025                           
  4026  03EF  3000               	movlw	0
  4027  03F0  0020               	movlb	0	; select bank0
  4028  03F1  00A4               	movwf	___lldiv@quotient+3
  4029  03F2  3000               	movlw	0
  4030  03F3  00A3               	movwf	___lldiv@quotient+2
  4031  03F4  3000               	movlw	0
  4032  03F5  00A2               	movwf	___lldiv@quotient+1
  4033  03F6  3000               	movlw	0
  4034  03F7  00A1               	movwf	___lldiv@quotient
  4035  03F8  0879               	movf	___lldiv@divisor+3,w
  4036  03F9  0478               	iorwf	___lldiv@divisor+2,w
  4037  03FA  0477               	iorwf	___lldiv@divisor+1,w
  4038  03FB  0476               	iorwf	___lldiv@divisor,w
  4039  03FC  1903               	skipnz
  4040  03FD  2BFF               	goto	u136_21
  4041  03FE  2C00               	goto	u136_20
  4042  03FF                     u136_21:
  4043  03FF  2C41               	goto	i1l1741
  4044  0400                     u136_20:
  4045  0400                     i1l1723:
  4046  0400  01A5               	clrf	___lldiv@counter
  4047  0401  0AA5               	incf	___lldiv@counter,f
  4048  0402  2C0E               	goto	i1l1727
  4049  0403                     i1l1725:
  4050  0403  3001               	movlw	1
  4051  0404                     u137_25:
  4052  0404  35F6               	lslf	___lldiv@divisor,f
  4053  0405  0DF7               	rlf	___lldiv@divisor+1,f
  4054  0406  0DF8               	rlf	___lldiv@divisor+2,f
  4055  0407  0DF9               	rlf	___lldiv@divisor+3,f
  4056  0408  0B89               	decfsz	9,f
  4057  0409  2C04               	goto	u137_25
  4058  040A  3001               	movlw	1
  4059  040B  00A0               	movwf	??___lldiv
  4060  040C  0820               	movf	??___lldiv,w
  4061  040D  07A5               	addwf	___lldiv@counter,f
  4062  040E                     i1l1727:
  4063  040E  1FF9               	btfss	___lldiv@divisor+3,7
  4064  040F  2C11               	goto	u138_21
  4065  0410  2C12               	goto	u138_20
  4066  0411                     u138_21:
  4067  0411  2C03               	goto	i1l1725
  4068  0412                     u138_20:
  4069  0412                     i1l1729:
  4070  0412  3001               	movlw	1
  4071  0413                     u139_25:
  4072  0413  35A1               	lslf	___lldiv@quotient,f
  4073  0414  0DA2               	rlf	___lldiv@quotient+1,f
  4074  0415  0DA3               	rlf	___lldiv@quotient+2,f
  4075  0416  0DA4               	rlf	___lldiv@quotient+3,f
  4076  0417  0B89               	decfsz	9,f
  4077  0418  2C13               	goto	u139_25
  4078  0419                     i1l1731:
  4079  0419  0879               	movf	___lldiv@divisor+3,w
  4080  041A  027D               	subwf	___lldiv@dividend+3,w
  4081  041B  1D03               	skipz
  4082  041C  2C27               	goto	u140_25
  4083  041D  0878               	movf	___lldiv@divisor+2,w
  4084  041E  027C               	subwf	___lldiv@dividend+2,w
  4085  041F  1D03               	skipz
  4086  0420  2C27               	goto	u140_25
  4087  0421  0877               	movf	___lldiv@divisor+1,w
  4088  0422  027B               	subwf	___lldiv@dividend+1,w
  4089  0423  1D03               	skipz
  4090  0424  2C27               	goto	u140_25
  4091  0425  0876               	movf	___lldiv@divisor,w
  4092  0426  027A               	subwf	___lldiv@dividend,w
  4093  0427                     u140_25:
  4094  0427  1C03               	skipc
  4095  0428  2C2A               	goto	u140_21
  4096  0429  2C2B               	goto	u140_20
  4097  042A                     u140_21:
  4098  042A  2C34               	goto	i1l1737
  4099  042B                     u140_20:
  4100  042B                     i1l1733:
  4101  042B  0876               	movf	___lldiv@divisor,w
  4102  042C  02FA               	subwf	___lldiv@dividend,f
  4103  042D  0877               	movf	___lldiv@divisor+1,w
  4104  042E  3BFB               	subwfb	___lldiv@dividend+1,f
  4105  042F  0878               	movf	___lldiv@divisor+2,w
  4106  0430  3BFC               	subwfb	___lldiv@dividend+2,f
  4107  0431  0879               	movf	___lldiv@divisor+3,w
  4108  0432  3BFD               	subwfb	___lldiv@dividend+3,f
  4109  0433                     i1l1735:
  4110  0433  1421               	bsf	___lldiv@quotient,0
  4111  0434                     i1l1737:
  4112  0434  3001               	movlw	1
  4113  0435                     u141_25:
  4114  0435  36F9               	lsrf	___lldiv@divisor+3,f
  4115  0436  0CF8               	rrf	___lldiv@divisor+2,f
  4116  0437  0CF7               	rrf	___lldiv@divisor+1,f
  4117  0438  0CF6               	rrf	___lldiv@divisor,f
  4118  0439  0B89               	decfsz	9,f
  4119  043A  2C35               	goto	u141_25
  4120  043B                     i1l1739:
  4121  043B  3001               	movlw	1
  4122  043C  02A5               	subwf	___lldiv@counter,f
  4123  043D  1D03               	btfss	3,2
  4124  043E  2C40               	goto	u142_21
  4125  043F  2C41               	goto	u142_20
  4126  0440                     u142_21:
  4127  0440  2C12               	goto	i1l1729
  4128  0441                     u142_20:
  4129  0441                     i1l1741:
  4130  0441  0824               	movf	___lldiv@quotient+3,w
  4131  0442  00F9               	movwf	?___lldiv+3
  4132  0443  0823               	movf	___lldiv@quotient+2,w
  4133  0444  00F8               	movwf	?___lldiv+2
  4134  0445  0822               	movf	___lldiv@quotient+1,w
  4135  0446  00F7               	movwf	?___lldiv+1
  4136  0447  0821               	movf	___lldiv@quotient,w
  4137  0448  00F6               	movwf	?___lldiv
  4138  0449                     i1l573:
  4139  0449  0008               	return
  4140  044A                     __end_of___lldiv:
  4141                           
  4142                           	psect	text16
  4143  044A                     __ptext16:	
  4144 ;; *************** function _readFilteredFreqPot *****************
  4145 ;; Defined at:
  4146 ;;		line 39 in file "Potentiometer.c"
  4147 ;; Parameters:    Size  Location     Type
  4148 ;;		None
  4149 ;; Auto vars:     Size  Location     Type
  4150 ;;  i               1    8[BANK0 ] unsigned char 
  4151 ;;  i               1    9[BANK0 ] unsigned char 
  4152 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4153 ;; Return value:  Size  Location     Type
  4154 ;;                  2   11[COMMON] unsigned short 
  4155 ;; Registers used:
  4156 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4157 ;; Tracked objects:
  4158 ;;		On entry : 0/0
  4159 ;;		On exit  : 0/0
  4160 ;;		Unchanged: 0/0
  4161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4162 ;;      Params:         2       0       0       0       0       0
  4163 ;;      Locals:         0       6       0       0       0       0
  4164 ;;      Temps:          0       4       0       0       0       0
  4165 ;;      Totals:         2      10       0       0       0       0
  4166 ;;Total ram usage:       12 bytes
  4167 ;; Hardware stack levels used: 1
  4168 ;; Hardware stack levels required when called: 1
  4169 ;; This function calls:
  4170 ;;		_readADCRaw
  4171 ;; This function is called by:
  4172 ;;		_Tick980Hz
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           
  4176  044A                     _readFilteredFreqPot:	
  4177                           ;psect for function _readFilteredFreqPot
  4178                           
  4179  044A                     i1l1817:	
  4180                           ;incstack = 0
  4181                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4182                           
  4183                           
  4184                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4185  044A  0020               	movlb	0	; select bank0
  4186  044B  01A9               	clrf	readFilteredFreqPot@i
  4187  044C                     i1l1823:
  4188  044C  3529               	lslf	readFilteredFreqPot@i,w
  4189  044D  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4190  044E  0086               	movwf	6
  4191  044F  3001               	movlw	1	; select bank2/3
  4192  0450  0087               	movwf	7
  4193  0451  3529               	lslf	readFilteredFreqPot@i,w
  4194  0452  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4195  0453  0084               	movwf	4
  4196  0454  3001               	movlw	1	; select bank2/3
  4197  0455  0085               	movwf	5
  4198  0456  3F40               	moviw [0]fsr1
  4199  0457  3F80               	movwi [0]fsr0
  4200  0458  3F41               	moviw [1]fsr1
  4201  0459  3F81               	movwi [1]fsr0
  4202  045A                     i1l1825:
  4203  045A  3001               	movlw	1
  4204  045B  00A0               	movwf	??_readFilteredFreqPot
  4205  045C  0820               	movf	??_readFilteredFreqPot,w
  4206  045D  07A9               	addwf	readFilteredFreqPot@i,f
  4207  045E                     i1l1827:
  4208  045E  300F               	movlw	15
  4209  045F  0229               	subwf	readFilteredFreqPot@i,w
  4210  0460  1C03               	skipc
  4211  0461  2C63               	goto	u157_21
  4212  0462  2C64               	goto	u157_20
  4213  0463                     u157_21:
  4214  0463  2C4C               	goto	i1l1823
  4215  0464                     u157_20:
  4216  0464                     i1l1829:
  4217                           
  4218                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4219  0464  300A               	movlw	10
  4220  0465  3183  232E  3184   	fcall	_readADCRaw
  4221  0468  0871               	movf	?_readADCRaw+1,w
  4222  0469  0022               	movlb	2	; select bank2
  4223  046A  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4224  046B  0870               	movf	?_readADCRaw,w
  4225  046C  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4226  046D                     i1l1831:
  4227                           
  4228                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4229  046D  3000               	movlw	0
  4230  046E  0020               	movlb	0	; select bank0
  4231  046F  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4232  0470  3000               	movlw	0
  4233  0471  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4234  0472  3000               	movlw	0
  4235  0473  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4236  0474  3000               	movlw	0
  4237  0475  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4238  0476                     i1l1833:
  4239                           
  4240                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4241  0476  01A8               	clrf	readFilteredFreqPot@i_700
  4242  0477                     i1l1839:
  4243  0477  3528               	lslf	readFilteredFreqPot@i_700,w
  4244  0478  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4245  0479  0086               	movwf	6
  4246  047A  3001               	movlw	1	; select bank2/3
  4247  047B  0087               	movwf	7
  4248  047C  3F40               	moviw [0]fsr1
  4249  047D  00A0               	movwf	??_readFilteredFreqPot
  4250  047E  3F41               	moviw [1]fsr1
  4251  047F  00A1               	movwf	??_readFilteredFreqPot+1
  4252  0480  0820               	movf	??_readFilteredFreqPot,w
  4253  0481  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4254  0482  0821               	movf	??_readFilteredFreqPot+1,w
  4255  0483  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4256  0484  3000               	movlw	0
  4257  0485  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4258  0486  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4259  0487                     i1l1841:
  4260  0487  3001               	movlw	1
  4261  0488  00A0               	movwf	??_readFilteredFreqPot
  4262  0489  0820               	movf	??_readFilteredFreqPot,w
  4263  048A  07A8               	addwf	readFilteredFreqPot@i_700,f
  4264  048B                     i1l1843:
  4265  048B  3010               	movlw	16
  4266  048C  0228               	subwf	readFilteredFreqPot@i_700,w
  4267  048D  1C03               	skipc
  4268  048E  2C90               	goto	u158_21
  4269  048F  2C91               	goto	u158_20
  4270  0490                     u158_21:
  4271  0490  2C77               	goto	i1l1839
  4272  0491                     u158_20:
  4273  0491                     i1l1845:
  4274                           
  4275                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4276  0491  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4277  0492  00A0               	movwf	??_readFilteredFreqPot
  4278  0493  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4279  0494  00A1               	movwf	??_readFilteredFreqPot+1
  4280  0495  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4281  0496  00A2               	movwf	??_readFilteredFreqPot+2
  4282  0497  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4283  0498  00A3               	movwf	??_readFilteredFreqPot+3
  4284  0499  3004               	movlw	4
  4285  049A                     u159_25:
  4286  049A  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4287  049B  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4288  049C  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4289  049D  0CA0               	rrf	??_readFilteredFreqPot,f
  4290  049E                     u159_20:
  4291  049E  0B89               	decfsz	9,f
  4292  049F  2C9A               	goto	u159_25
  4293  04A0  0821               	movf	??_readFilteredFreqPot+1,w
  4294  04A1  00FC               	movwf	?_readFilteredFreqPot+1
  4295  04A2  0820               	movf	??_readFilteredFreqPot,w
  4296  04A3  00FB               	movwf	?_readFilteredFreqPot
  4297  04A4                     i1l331:
  4298  04A4  0008               	return
  4299  04A5                     __end_of_readFilteredFreqPot:
  4300                           
  4301                           	psect	text17
  4302  04A5                     __ptext17:	
  4303 ;; *************** function _readFilteredDutyPot *****************
  4304 ;; Defined at:
  4305 ;;		line 25 in file "Potentiometer.c"
  4306 ;; Parameters:    Size  Location     Type
  4307 ;;		None
  4308 ;; Auto vars:     Size  Location     Type
  4309 ;;  i               1    8[BANK0 ] unsigned char 
  4310 ;;  i               1    9[BANK0 ] unsigned char 
  4311 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  2   11[COMMON] unsigned short 
  4314 ;; Registers used:
  4315 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4321 ;;      Params:         2       0       0       0       0       0
  4322 ;;      Locals:         0       6       0       0       0       0
  4323 ;;      Temps:          0       4       0       0       0       0
  4324 ;;      Totals:         2      10       0       0       0       0
  4325 ;;Total ram usage:       12 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; Hardware stack levels required when called: 1
  4328 ;; This function calls:
  4329 ;;		_readADCRaw
  4330 ;; This function is called by:
  4331 ;;		_Tick980Hz
  4332 ;; This function uses a non-reentrant model
  4333 ;;
  4334                           
  4335  04A5                     _readFilteredDutyPot:	
  4336                           ;psect for function _readFilteredDutyPot
  4337                           
  4338  04A5                     i1l1785:	
  4339                           ;incstack = 0
  4340                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4341                           
  4342                           
  4343                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4344  04A5  0020               	movlb	0	; select bank0
  4345  04A6  01A9               	clrf	readFilteredDutyPot@i
  4346  04A7                     i1l1791:
  4347  04A7  3529               	lslf	readFilteredDutyPot@i,w
  4348  04A8  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4349  04A9  0086               	movwf	6
  4350  04AA  3001               	movlw	1	; select bank2/3
  4351  04AB  0087               	movwf	7
  4352  04AC  3529               	lslf	readFilteredDutyPot@i,w
  4353  04AD  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4354  04AE  0084               	movwf	4
  4355  04AF  3001               	movlw	1	; select bank2/3
  4356  04B0  0085               	movwf	5
  4357  04B1  3F40               	moviw [0]fsr1
  4358  04B2  3F80               	movwi [0]fsr0
  4359  04B3  3F41               	moviw [1]fsr1
  4360  04B4  3F81               	movwi [1]fsr0
  4361  04B5                     i1l1793:
  4362  04B5  3001               	movlw	1
  4363  04B6  00A0               	movwf	??_readFilteredDutyPot
  4364  04B7  0820               	movf	??_readFilteredDutyPot,w
  4365  04B8  07A9               	addwf	readFilteredDutyPot@i,f
  4366  04B9                     i1l1795:
  4367  04B9  300F               	movlw	15
  4368  04BA  0229               	subwf	readFilteredDutyPot@i,w
  4369  04BB  1C03               	skipc
  4370  04BC  2CBE               	goto	u154_21
  4371  04BD  2CBF               	goto	u154_20
  4372  04BE                     u154_21:
  4373  04BE  2CA7               	goto	i1l1791
  4374  04BF                     u154_20:
  4375  04BF                     i1l1797:
  4376                           
  4377                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4378  04BF  3009               	movlw	9
  4379  04C0  3183  232E  3184   	fcall	_readADCRaw
  4380  04C3  0871               	movf	?_readADCRaw+1,w
  4381  04C4  0022               	movlb	2	; select bank2
  4382  04C5  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4383  04C6  0870               	movf	?_readADCRaw,w
  4384  04C7  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4385  04C8                     i1l1799:
  4386                           
  4387                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4388  04C8  3000               	movlw	0
  4389  04C9  0020               	movlb	0	; select bank0
  4390  04CA  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4391  04CB  3000               	movlw	0
  4392  04CC  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4393  04CD  3000               	movlw	0
  4394  04CE  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4395  04CF  3000               	movlw	0
  4396  04D0  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4397  04D1                     i1l1801:
  4398                           
  4399                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4400  04D1  01A8               	clrf	readFilteredDutyPot@i_696
  4401  04D2                     i1l1807:
  4402  04D2  3528               	lslf	readFilteredDutyPot@i_696,w
  4403  04D3  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4404  04D4  0086               	movwf	6
  4405  04D5  3001               	movlw	1	; select bank2/3
  4406  04D6  0087               	movwf	7
  4407  04D7  3F40               	moviw [0]fsr1
  4408  04D8  00A0               	movwf	??_readFilteredDutyPot
  4409  04D9  3F41               	moviw [1]fsr1
  4410  04DA  00A1               	movwf	??_readFilteredDutyPot+1
  4411  04DB  0820               	movf	??_readFilteredDutyPot,w
  4412  04DC  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4413  04DD  0821               	movf	??_readFilteredDutyPot+1,w
  4414  04DE  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4415  04DF  3000               	movlw	0
  4416  04E0  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4417  04E1  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4418  04E2                     i1l1809:
  4419  04E2  3001               	movlw	1
  4420  04E3  00A0               	movwf	??_readFilteredDutyPot
  4421  04E4  0820               	movf	??_readFilteredDutyPot,w
  4422  04E5  07A8               	addwf	readFilteredDutyPot@i_696,f
  4423  04E6                     i1l1811:
  4424  04E6  3010               	movlw	16
  4425  04E7  0228               	subwf	readFilteredDutyPot@i_696,w
  4426  04E8  1C03               	skipc
  4427  04E9  2CEB               	goto	u155_21
  4428  04EA  2CEC               	goto	u155_20
  4429  04EB                     u155_21:
  4430  04EB  2CD2               	goto	i1l1807
  4431  04EC                     u155_20:
  4432  04EC                     i1l1813:
  4433                           
  4434                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4435  04EC  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4436  04ED  00A0               	movwf	??_readFilteredDutyPot
  4437  04EE  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4438  04EF  00A1               	movwf	??_readFilteredDutyPot+1
  4439  04F0  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4440  04F1  00A2               	movwf	??_readFilteredDutyPot+2
  4441  04F2  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4442  04F3  00A3               	movwf	??_readFilteredDutyPot+3
  4443  04F4  3004               	movlw	4
  4444  04F5                     u156_25:
  4445  04F5  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4446  04F6  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4447  04F7  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4448  04F8  0CA0               	rrf	??_readFilteredDutyPot,f
  4449  04F9                     u156_20:
  4450  04F9  0B89               	decfsz	9,f
  4451  04FA  2CF5               	goto	u156_25
  4452  04FB  0821               	movf	??_readFilteredDutyPot+1,w
  4453  04FC  00FC               	movwf	?_readFilteredDutyPot+1
  4454  04FD  0820               	movf	??_readFilteredDutyPot,w
  4455  04FE  00FB               	movwf	?_readFilteredDutyPot
  4456  04FF                     i1l324:
  4457  04FF  0008               	return
  4458  0500                     __end_of_readFilteredDutyPot:
  4459                           
  4460                           	psect	text18
  4461  032E                     __ptext18:	
  4462 ;; *************** function _readADCRaw *****************
  4463 ;; Defined at:
  4464 ;;		line 71 in file "ADC.c"
  4465 ;; Parameters:    Size  Location     Type
  4466 ;;  gpioNumber      1    wreg     const enum E2798
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4469 ;;  i               1    9[COMMON] unsigned char 
  4470 ;;  i               1    8[COMMON] unsigned char 
  4471 ;;  returnValue     2    4[COMMON] unsigned int 
  4472 ;;  gpioValid       1    7[COMMON] unsigned char 
  4473 ;;  channel         1    6[COMMON] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  2    0[COMMON] unsigned short 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4483 ;;      Params:         2       0       0       0       0       0
  4484 ;;      Locals:         7       0       0       0       0       0
  4485 ;;      Temps:          2       0       0       0       0       0
  4486 ;;      Totals:        11       0       0       0       0       0
  4487 ;;Total ram usage:       11 bytes
  4488 ;; Hardware stack levels used: 1
  4489 ;; This function calls:
  4490 ;;		Nothing
  4491 ;; This function is called by:
  4492 ;;		_readFilteredDutyPot
  4493 ;;		_readFilteredFreqPot
  4494 ;;		_readFilteredIDS
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498  032E                     _readADCRaw:	
  4499                           ;psect for function _readADCRaw
  4500                           
  4501                           
  4502                           ;incstack = 0
  4503                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4504                           ;readADCRaw@gpioNumber stored from wreg
  4505  032E  00FA               	movwf	readADCRaw@gpioNumber
  4506  032F                     i1l1617:
  4507                           
  4508                           ;ADC.c: 72:     uint8_t channel = 0;
  4509  032F  01F6               	clrf	readADCRaw@channel
  4510                           
  4511                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4512  0330  01F7               	clrf	readADCRaw@gpioValid
  4513  0331                     i1l1619:
  4514                           
  4515                           ;ADC.c: 75:     if(gpioNumber < 4){
  4516  0331  3004               	movlw	4
  4517  0332  027A               	subwf	readADCRaw@gpioNumber,w
  4518  0333  1803               	skipnc
  4519  0334  2B36               	goto	u113_21
  4520  0335  2B37               	goto	u113_20
  4521  0336                     u113_21:
  4522  0336  2B3D               	goto	i1l208
  4523  0337                     u113_20:
  4524  0337                     i1l1621:
  4525                           
  4526                           ;ADC.c: 76:         channel = gpioNumber;
  4527  0337  087A               	movf	readADCRaw@gpioNumber,w
  4528  0338  00F2               	movwf	??_readADCRaw
  4529  0339  0872               	movf	??_readADCRaw,w
  4530  033A  00F6               	movwf	readADCRaw@channel
  4531  033B                     i1l1623:
  4532                           
  4533                           ;ADC.c: 77:         gpioValid = 1;
  4534  033B  01F7               	clrf	readADCRaw@gpioValid
  4535  033C  0AF7               	incf	readADCRaw@gpioValid,f
  4536  033D                     i1l208:	
  4537                           ;ADC.c: 78:     }
  4538                           
  4539                           
  4540                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4541  033D  3009               	movlw	9
  4542  033E  027A               	subwf	readADCRaw@gpioNumber,w
  4543  033F  1C03               	skipc
  4544  0340  2B42               	goto	u114_21
  4545  0341  2B43               	goto	u114_20
  4546  0342                     u114_21:
  4547  0342  2B50               	goto	i1l209
  4548  0343                     u114_20:
  4549  0343                     i1l1625:
  4550  0343  3010               	movlw	16
  4551  0344  027A               	subwf	readADCRaw@gpioNumber,w
  4552  0345  1803               	skipnc
  4553  0346  2B48               	goto	u115_21
  4554  0347  2B49               	goto	u115_20
  4555  0348                     u115_21:
  4556  0348  2B50               	goto	i1l209
  4557  0349                     u115_20:
  4558  0349                     i1l1627:
  4559                           
  4560                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4561  0349  087A               	movf	readADCRaw@gpioNumber,w
  4562  034A  3C14               	sublw	20
  4563  034B  00F2               	movwf	??_readADCRaw
  4564  034C  0872               	movf	??_readADCRaw,w
  4565  034D  00F6               	movwf	readADCRaw@channel
  4566  034E                     i1l1629:
  4567                           
  4568                           ;ADC.c: 81:         gpioValid = 1;
  4569  034E  01F7               	clrf	readADCRaw@gpioValid
  4570  034F  0AF7               	incf	readADCRaw@gpioValid,f
  4571  0350                     i1l209:	
  4572                           ;ADC.c: 82:     }
  4573                           
  4574                           
  4575                           ;ADC.c: 83:     if(gpioValid){
  4576  0350  0877               	movf	readADCRaw@gpioValid,w
  4577  0351  1903               	btfsc	3,2
  4578  0352  2B54               	goto	u116_21
  4579  0353  2B55               	goto	u116_20
  4580  0354                     u116_21:
  4581  0354  2B8F               	goto	i1l219
  4582  0355                     u116_20:
  4583  0355                     i1l1631:
  4584                           
  4585                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4586  0355  0021               	movlb	1	; select bank1
  4587  0356  081D               	movf	29,w	;volatile
  4588  0357                     i1l1633:
  4589                           
  4590                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4591  0357  3083               	movlw	131
  4592  0358  00F2               	movwf	??_readADCRaw
  4593  0359  0872               	movf	??_readADCRaw,w
  4594  035A  059D               	andwf	29,f	;volatile
  4595  035B                     i1l1635:
  4596                           
  4597                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4598  035B  0876               	movf	readADCRaw@channel,w	;volatile
  4599  035C  00F2               	movwf	??_readADCRaw
  4600  035D  3001               	movlw	1
  4601  035E                     u117_25:
  4602  035E  35F2               	lslf	??_readADCRaw,f
  4603  035F  3EFF               	addlw	-1
  4604  0360  1D03               	skipz
  4605  0361  2B5E               	goto	u117_25
  4606  0362  3572               	lslf	??_readADCRaw,w
  4607  0363  00F3               	movwf	??_readADCRaw+1
  4608  0364  0873               	movf	??_readADCRaw+1,w
  4609  0365  049D               	iorwf	29,f	;volatile
  4610  0366                     i1l1637:
  4611                           
  4612                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4613  0366  01F8               	clrf	readADCRaw@i
  4614  0367                     i1l1643:
  4615  0367  3001               	movlw	1
  4616  0368  00F2               	movwf	??_readADCRaw
  4617  0369  0872               	movf	??_readADCRaw,w
  4618  036A  07F8               	addwf	readADCRaw@i,f
  4619  036B                     i1l1645:
  4620  036B  3008               	movlw	8
  4621  036C  0278               	subwf	readADCRaw@i,w
  4622  036D  1C03               	skipc
  4623  036E  2B70               	goto	u118_21
  4624  036F  2B71               	goto	u118_20
  4625  0370                     u118_21:
  4626  0370  2B67               	goto	i1l1643
  4627  0371                     u118_20:
  4628  0371                     i1l213:
  4629                           
  4630                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4631  0371  0021               	movlb	1	; select bank1
  4632  0372  149D               	bsf	29,1	;volatile
  4633  0373                     i1l214:	
  4634                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4635                           
  4636  0373  189D               	btfsc	29,1	;volatile
  4637  0374  2B76               	goto	u119_21
  4638  0375  2B77               	goto	u119_20
  4639  0376                     u119_21:
  4640  0376  2B73               	goto	i1l214
  4641  0377                     u119_20:
  4642  0377                     i1l1647:
  4643                           
  4644                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4645  0377  081C               	movf	28,w	;volatile
  4646  0378  00F5               	movwf	readADCRaw@returnValue+1
  4647  0379  081B               	movf	27,w	;volatile
  4648  037A  00F4               	movwf	readADCRaw@returnValue
  4649  037B                     i1l1649:
  4650                           
  4651                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4652  037B  3083               	movlw	131
  4653  037C  00F2               	movwf	??_readADCRaw
  4654  037D  0872               	movf	??_readADCRaw,w
  4655  037E  059D               	andwf	29,f	;volatile
  4656  037F                     i1l1651:
  4657                           
  4658                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4659  037F  159D               	bsf	29,3	;volatile
  4660  0380                     i1l1653:
  4661                           
  4662                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4663  0380  01F9               	clrf	readADCRaw@i_614
  4664  0381                     i1l1659:
  4665  0381  3001               	movlw	1
  4666  0382  00F2               	movwf	??_readADCRaw
  4667  0383  0872               	movf	??_readADCRaw,w
  4668  0384  07F9               	addwf	readADCRaw@i_614,f
  4669  0385                     i1l1661:
  4670  0385  3008               	movlw	8
  4671  0386  0279               	subwf	readADCRaw@i_614,w
  4672  0387  1C03               	skipc
  4673  0388  2B8A               	goto	u120_21
  4674  0389  2B8B               	goto	u120_20
  4675  038A                     u120_21:
  4676  038A  2B81               	goto	i1l1659
  4677  038B                     u120_20:
  4678  038B                     i1l1663:
  4679                           
  4680                           ;ADC.c: 97:             return returnValue;
  4681  038B  0875               	movf	readADCRaw@returnValue+1,w
  4682  038C  00F1               	movwf	?_readADCRaw+1
  4683  038D  0874               	movf	readADCRaw@returnValue,w
  4684  038E  00F0               	movwf	?_readADCRaw
  4685  038F                     i1l219:
  4686  038F  0008               	return
  4687  0390                     __end_of_readADCRaw:
  4688                           
  4689                           	psect	text19
  4690  0615                     __ptext19:	
  4691 ;; *************** function _currentTripRead *****************
  4692 ;; Defined at:
  4693 ;;		line 21 in file "CurrentSensor.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;		None
  4696 ;; Auto vars:     Size  Location     Type
  4697 ;;		None
  4698 ;; Return value:  Size  Location     Type
  4699 ;;                  1    wreg      unsigned char 
  4700 ;; Registers used:
  4701 ;;		wreg, status,2, status,0, pclath, cstack
  4702 ;; Tracked objects:
  4703 ;;		On entry : 0/0
  4704 ;;		On exit  : 0/0
  4705 ;;		Unchanged: 0/0
  4706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4707 ;;      Params:         0       0       0       0       0       0
  4708 ;;      Locals:         1       0       0       0       0       0
  4709 ;;      Temps:          0       0       0       0       0       0
  4710 ;;      Totals:         1       0       0       0       0       0
  4711 ;;Total ram usage:        1 bytes
  4712 ;; Hardware stack levels used: 1
  4713 ;; Hardware stack levels required when called: 1
  4714 ;; This function calls:
  4715 ;;		_readGPIO
  4716 ;; This function is called by:
  4717 ;;		_Tick980Hz
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721  0615                     _currentTripRead:	
  4722                           ;psect for function _currentTripRead
  4723                           
  4724  0615                     i1l1745:	
  4725                           ;incstack = 0
  4726                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4727                           
  4728                           
  4729                           ;CurrentSensor.c: 22:     return readGPIO(pinRA3) || readGPIO(pinRA1);
  4730  0615  01F6               	clrf	_currentTripRead$738
  4731  0616  0AF6               	incf	_currentTripRead$738,f
  4732  0617                     i1l1747:
  4733  0617  3003               	movlw	3
  4734  0618  3185  2500  3186   	fcall	_readGPIO
  4735  061B  3A00               	xorlw	0
  4736  061C  1D03               	skipz
  4737  061D  2E1F               	goto	u143_21
  4738  061E  2E20               	goto	u143_20
  4739  061F                     u143_21:
  4740  061F  2E2A               	goto	i1l1753
  4741  0620                     u143_20:
  4742  0620                     i1l1749:
  4743  0620  3001               	movlw	1
  4744  0621  3185  2500  3186   	fcall	_readGPIO
  4745  0624  3A00               	xorlw	0
  4746  0625  1D03               	skipz
  4747  0626  2E28               	goto	u144_21
  4748  0627  2E29               	goto	u144_20
  4749  0628                     u144_21:
  4750  0628  2E2A               	goto	i1l1753
  4751  0629                     u144_20:
  4752  0629                     i1l1751:
  4753  0629  01F6               	clrf	_currentTripRead$738
  4754  062A                     i1l1753:
  4755  062A  0876               	movf	_currentTripRead$738,w
  4756  062B                     i1l373:
  4757  062B  0008               	return
  4758  062C                     __end_of_currentTripRead:
  4759                           
  4760                           	psect	text20
  4761  0500                     __ptext20:	
  4762 ;; *************** function _readGPIO *****************
  4763 ;; Defined at:
  4764 ;;		line 79 in file "GPIO.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  gpioNumber      1    wreg     const enum E2798
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;  gpioNumber      1    4[COMMON] const enum E2798
  4769 ;;  portNumber      1    5[COMMON] unsigned char 
  4770 ;;  portType        1    3[COMMON] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      _Bool 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4780 ;;      Params:         0       0       0       0       0       0
  4781 ;;      Locals:         3       0       0       0       0       0
  4782 ;;      Temps:          3       0       0       0       0       0
  4783 ;;      Totals:         6       0       0       0       0       0
  4784 ;;Total ram usage:        6 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_currentTripRead
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793  0500                     _readGPIO:	
  4794                           ;psect for function _readGPIO
  4795                           
  4796                           
  4797                           ;incstack = 0
  4798                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  4799                           ;readGPIO@gpioNumber stored from wreg
  4800  0500  00F4               	movwf	readGPIO@gpioNumber
  4801  0501                     i1l1667:
  4802                           
  4803                           ;GPIO.c: 81:     uint8_t portType = 0;
  4804  0501  01F3               	clrf	readGPIO@portType
  4805  0502                     i1l1669:
  4806                           
  4807                           ;GPIO.c: 82:     if(gpioNumber > 7){
  4808  0502  3008               	movlw	8
  4809  0503  0274               	subwf	readGPIO@gpioNumber,w
  4810  0504  1C03               	skipc
  4811  0505  2D07               	goto	u121_21
  4812  0506  2D08               	goto	u121_20
  4813  0507                     u121_21:
  4814  0507  2D10               	goto	i1l1675
  4815  0508                     u121_20:
  4816  0508                     i1l1671:
  4817                           
  4818                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  4819  0508  0874               	movf	readGPIO@gpioNumber,w
  4820  0509  3EF8               	addlw	248
  4821  050A  00F0               	movwf	??_readGPIO
  4822  050B  0870               	movf	??_readGPIO,w
  4823  050C  00F5               	movwf	readGPIO@portNumber
  4824  050D                     i1l1673:
  4825                           
  4826                           ;GPIO.c: 84:         portType = 1;
  4827  050D  01F3               	clrf	readGPIO@portType
  4828  050E  0AF3               	incf	readGPIO@portType,f
  4829                           
  4830                           ;GPIO.c: 85:     }
  4831  050F  2D15               	goto	i1l1679
  4832  0510                     i1l1675:
  4833                           
  4834                           ;GPIO.c: 87:         portNumber = gpioNumber;
  4835  0510  0874               	movf	readGPIO@gpioNumber,w
  4836  0511  00F0               	movwf	??_readGPIO
  4837  0512  0870               	movf	??_readGPIO,w
  4838  0513  00F5               	movwf	readGPIO@portNumber
  4839  0514                     i1l1677:
  4840                           
  4841                           ;GPIO.c: 88:         portType = 0;
  4842  0514  01F3               	clrf	readGPIO@portType
  4843  0515                     i1l1679:
  4844                           
  4845                           ;GPIO.c: 91:     if(portType == 0){
  4846  0515  0873               	movf	readGPIO@portType,w
  4847  0516  1D03               	btfss	3,2
  4848  0517  2D19               	goto	u122_21
  4849  0518  2D1A               	goto	u122_20
  4850  0519                     u122_21:
  4851  0519  2D2F               	goto	i1l1687
  4852  051A                     u122_20:
  4853  051A                     i1l1681:
  4854                           
  4855                           ;GPIO.c: 92:         return ((PORTA &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4856  051A  3001               	movlw	1
  4857  051B  00F0               	movwf	??_readGPIO
  4858  051C  0A75               	incf	readGPIO@portNumber,w
  4859  051D  2D1F               	goto	u123_24
  4860  051E                     u123_25:
  4861  051E  35F0               	lslf	??_readGPIO,f
  4862  051F                     u123_24:
  4863  051F  0B89               	decfsz	9,f
  4864  0520  2D1E               	goto	u123_25
  4865  0521  0870               	movf	??_readGPIO,w
  4866  0522  00F1               	movwf	??_readGPIO+1
  4867  0523  0871               	movf	??_readGPIO+1,w
  4868  0524  0020               	movlb	0	; select bank0
  4869  0525  058C               	andwf	12,f	;volatile
  4870  0526  080C               	movf	12,w	;volatile
  4871  0527  00F2               	movwf	??_readGPIO+2
  4872  0528  0A75               	incf	readGPIO@portNumber,w
  4873  0529  2D2B               	goto	u124_24
  4874  052A                     u124_25:
  4875  052A  36F2               	lsrf	??_readGPIO+2,f
  4876  052B                     u124_24:
  4877  052B  0B89               	decfsz	9,f
  4878  052C  2D2A               	goto	u124_25
  4879  052D  0872               	movf	??_readGPIO+2,w
  4880  052E  2D48               	goto	i1l286
  4881  052F                     i1l1687:
  4882  052F  0373               	decf	readGPIO@portType,w
  4883  0530  1D03               	btfss	3,2
  4884  0531  2D33               	goto	u125_21
  4885  0532  2D34               	goto	u125_20
  4886  0533                     u125_21:
  4887  0533  2D48               	goto	i1l286
  4888  0534                     u125_20:
  4889  0534                     i1l1689:
  4890                           
  4891                           ;GPIO.c: 95:         return ((PORTB &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  4892  0534  3001               	movlw	1
  4893  0535  00F0               	movwf	??_readGPIO
  4894  0536  0A75               	incf	readGPIO@portNumber,w
  4895  0537  2D39               	goto	u126_24
  4896  0538                     u126_25:
  4897  0538  35F0               	lslf	??_readGPIO,f
  4898  0539                     u126_24:
  4899  0539  0B89               	decfsz	9,f
  4900  053A  2D38               	goto	u126_25
  4901  053B  0870               	movf	??_readGPIO,w
  4902  053C  00F1               	movwf	??_readGPIO+1
  4903  053D  0871               	movf	??_readGPIO+1,w
  4904  053E  0020               	movlb	0	; select bank0
  4905  053F  058D               	andwf	13,f	;volatile
  4906  0540  080D               	movf	13,w	;volatile
  4907  0541  00F2               	movwf	??_readGPIO+2
  4908  0542  0A75               	incf	readGPIO@portNumber,w
  4909  0543  2D45               	goto	u127_24
  4910  0544                     u127_25:
  4911  0544  36F2               	lsrf	??_readGPIO+2,f
  4912  0545                     u127_24:
  4913  0545  0B89               	decfsz	9,f
  4914  0546  2D44               	goto	u127_25
  4915  0547  0872               	movf	??_readGPIO+2,w
  4916  0548                     i1l286:
  4917  0548  0008               	return
  4918  0549                     __end_of_readGPIO:
  4919  007E                     btemp	set	126	;btemp
  4920  007E                     int$flags	set	126
  4921  007E                     wtemp0	set	126
  4922                           
  4923                           	psect	idloc
  4924                           
  4925                           ;Config register IDLOC0 @ 0x8000
  4926                           ;	unspecified, using default values
  4927  8000                     	org	32768
  4928  8000  3FFF               	dw	16383
  4929                           
  4930                           ;Config register IDLOC1 @ 0x8001
  4931                           ;	unspecified, using default values
  4932  8001                     	org	32769
  4933  8001  3FFF               	dw	16383
  4934                           
  4935                           ;Config register IDLOC2 @ 0x8002
  4936                           ;	unspecified, using default values
  4937  8002                     	org	32770
  4938  8002  3FFF               	dw	16383
  4939                           
  4940                           ;Config register IDLOC3 @ 0x8003
  4941                           ;	unspecified, using default values
  4942  8003                     	org	32771
  4943  8003  3FFF               	dw	16383
  4944                           
  4945                           	psect	config
  4946                           
  4947                           ;Config register CONFIG1 @ 0x8007
  4948                           ;	Oscillator Selection
  4949                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  4950                           ;	Watchdog Timer Enable
  4951                           ;	WDTE = OFF, WDT disabled
  4952                           ;	Power-up Timer Enable
  4953                           ;	PWRTE = OFF, PWRT disabled
  4954                           ;	MCLR Pin Function Select
  4955                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  4956                           ;	Flash Program Memory Code Protection
  4957                           ;	CP = OFF, Program memory code protection is disabled
  4958                           ;	Data Memory Code Protection
  4959                           ;	CPD = OFF, Data memory code protection is disabled
  4960                           ;	Brown-out Reset Enable
  4961                           ;	BOREN = ON, Brown-out Reset enabled
  4962                           ;	Clock Out Enable
  4963                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  4964                           ;	Internal/External Switchover
  4965                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4966                           ;	Fail-Safe Clock Monitor Enable
  4967                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4968  8007                     	org	32775
  4969  8007  0FA4               	dw	4004
  4970                           
  4971                           ;Config register CONFIG2 @ 0x8008
  4972                           ;	Flash Memory Self-Write Protection
  4973                           ;	WRT = OFF, Write protection off
  4974                           ;	PLL Enable
  4975                           ;	PLLEN = OFF, 4x PLL disabled
  4976                           ;	Stack Overflow/Underflow Reset Enable
  4977                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  4978                           ;	Brown-out Reset Voltage Selection
  4979                           ;	BORV = 0x1, unprogrammed default
  4980                           ;	Low-Voltage Programming Enable
  4981                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  4982  8008                     	org	32776
  4983  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      53
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    2356
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     596
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0     869
                   _initialiseADCPin
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     596
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3674
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (4) _writeGPIO                                            6     5      1     400
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      1     1      0     228
                                              6 COMMON     1     1      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             6     6      0     204
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   _writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C3      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 11:16:27 2023

                                 l88 05DF                                   l89 05DF  
                ___wmul@multiplicand 0072                                  l200 02EB  
                                l107 0247                                  l140 05FD  
                                l205 032D                                  l317 0656  
                                l165 065E                                  l266 02C3  
                                l196 066A                                  l368 0614  
                                _PR2 001B                                  u920 0251  
                                u921 0250                                  u930 0263  
                                u931 0262                                  u940 0268  
                                u941 0267                                  u954 026D  
                                u955 026C                                  u980 0296  
                                u964 027A                                  u981 0295  
                                u965 0279                                  u990 029B  
                                u974 0288                                  u991 029A  
                                u975 0287                                  wreg 0009  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2011 05CD                                 l2013 05D0  
                               l2015 05D3                                 l2007 05C6  
                               l2105 0224                                 l2017 05D6  
                               l2009 05CA                                 l2019 05D9  
                               l1601 02DC                                 l1611 02F5  
                               l1603 02E2                                 l1613 030F  
                               l1605 02E7                                 l1615 0314  
                               l1607 02E9                                 l1609 02F0  
                               l1561 024A                                 l1571 025D  
                               l1563 024B                                 l1581 0291  
                               l1573 025E                                 l1565 0251  
                               l1901 01CE                                 l1591 02C9  
                               l1583 0296                                 l1575 0263  
                               l1567 0256                                 l1911 01E4  
                               l1903 01D3                                 l1593 02CF  
                               l1585 029B                                 l1577 0268  
                               l1569 0259                                 l1921 0201  
                               l1913 01EE                                 l1905 01D4  
                               l1595 02D3                                 l1587 02B6  
                               l1579 0283                                 l1923 0202  
                               l1915 01F3                                 l1907 01DE  
                               l1597 02D4                                 l1589 02C6  
                               l1925 020C                                 l1917 01F4  
                               l1909 01E3                                 l1933 021C  
                               l1941 05E2                                 l1599 02D6  
                               l1927 0211                                 l1919 01FE  
                               l1871 017E                                 l1863 016F  
                               l1951 05ED                                 l1943 05E5  
                               l1929 0212                                 l1881 0194  
                               l1873 0183                                 l1865 0170  
                               l1961 05F7                                 l1953 05F0  
                               l1945 05E7                                 l1971 064E  
                               l1891 01B3                                 l1883 019E  
                               l1875 0184                                 l1867 0173  
                               l1955 05F2                                 l1947 05E9  
                               l1963 0657                                 l1893 01B4  
                               l1885 01A3                                 l1877 018E  
                               l1869 0174                                 l1957 05F4  
                               l1949 05EB                                 l1965 065C  
                               l1967 0665                                 l1895 01BE  
                               l1887 01A4                                 l1879 0193  
                               l1959 05F5                                 l1969 05FE  
                               l1897 01C3                                 l1889 01AE  
                               l1899 01C4                                 STR_1 062C  
                               STR_3 063E                                 u1100 0314  
                               u1004 02A0                                 u1101 0313  
                               u1005 029F                                 u1030 02CF  
                               u1014 02AD                                 u1031 02CE  
                               u1015 02AC                                 u1040 02DC  
                               u1024 02BB                                 u1041 02DB  
                               u1025 02BA                                 u1114 0319  
                               u1050 02E2                                 u1115 0318  
                               u1051 02E1                                 u1124 0326  
                               u1060 02F0                                 u1125 0325  
                               u1061 02EF                                 u1070 02F5  
                               u1071 02F4                                 u1084 02FA  
                               u1085 02F9                                 _LATA 010C  
                               u1094 0307                                 _LATB 010D  
                               u1095 0306                                 i1l83 006A  
                               i1l78 005A                      _filteredFreqPot 0043  
                    _filteredDutyPot 0041                                 _main 05C6  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 006C  
          ??_setupInternalOscillator 0033                                ?_main 0039  
                    __end_of___lldiv 044A                                i1l213 0371  
                              i1l214 0373                                i1l143 05A6  
                              i1l208 033D                                i1l209 0350  
                              i1l219 038F                                i1l331 04A4  
                              i1l324 04FF                                i1l335 0151  
                              i1l280 03EE                                i1l337 016C  
                              i1l373 062B                                i1l286 0548  
                              i1l551 057B                                i1l537 05B1  
                              i1l539 05C5                                i1l573 0449  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                              u90_20 05A4                                u90_21 05A1  
                              u91_24 05A6                  ___lmul@multiplicand 0074  
                        readADCRaw@i 0078                 readFilteredFreqPot@i 0029  
           readFilteredDutyPot@i_696 0028                                status 0003  
                              wtemp0 007E               initialiseGPIO@portType 0036  
                _initialiseADCModule 0665                 readFilteredDutyPot@i 0029  
         initialiseADCPin@gpioNumber 0038                      __initialization 006E  
                       __end_of_main 05E2                    ?_initialiseADCPin 0070  
                             ??_main 003D                   ??_initialiseADCPin 0033  
               ?_initialiseADCModule 0070           ??_initialiseCurrentSensors 0039  
    __end_of_setupInternalOscillator 0248  setupInternalOscillator@selectedFreq 0035  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADRESH 009C                               _ADRESL 009B  
                             _CCPR1L 0291                               _ANSELA 018C  
                             _ANSELB 018D                               i1l2001 0064  
                             i1l2003 0065                               i1l2005 0069  
                             u120_20 038B                               u120_21 038A  
                             i1l1621 0337                               i1l1701 05BB  
                             i1l1631 0355                               i1l1623 033B  
                             i1l1711 0555                               i1l1703 05C1  
                             u121_20 0508                               u113_20 0337  
                             u121_21 0507                               i1l1633 0357  
                             i1l1625 0343                               u113_21 0336  
                             i1l1617 032F                               i1l1801 04D1  
                             i1l1721 03EF                               i1l1713 055D  
                             i1l1651 037F                               i1l1643 0367  
                             i1l1635 035B                               i1l1627 0349  
                             i1l1619 0331                               i1l1811 04E6  
                             i1l1731 0419                               i1l1723 0400  
                             i1l1715 0564                               i1l1707 0549  
                             i1l1555 057C                               i1l1661 0385  
                             i1l1653 0380                               i1l1645 036B  
                             i1l1637 0366                               i1l1629 034E  
                             i1l1813 04EC                               i1l1733 042B  
                             i1l1725 0403                               i1l1741 0441  
                             i1l1717 0573                               i1l1709 0551  
                             i1l1557 057F                               i1l1671 0508  
                             i1l1751 0629                               i1l1663 038B  
                             i1l1647 0377                               i1l1807 04D2  
                             i1l1831 046D                               i1l1823 044C  
                             i1l1735 0433                               i1l1727 040E  
                             i1l1559 058A                               u122_20 051A  
                             u114_20 0343                               i1l1681 051A  
                             u122_21 0519                               i1l1673 050D  
                             i1l1753 062A                               i1l1745 0615  
                             i1l1649 037B                               u114_21 0342  
                             i1l1809 04E2                               i1l1841 0487  
                             i1l1833 0476                               i1l1825 045A  
                             i1l1817 044A                               i1l1737 0434  
                             i1l1729 0412                               i1l1761 0398  
                             i1l1675 0510                               i1l1667 0501  
                             i1l1747 0617                               i1l1659 0381  
                             i1l1843 048B                               i1l1827 045E  
                             i1l1739 043B                               i1l1851 0095  
                             i1l1771 03AA                               i1l1763 039D  
                             i1l1677 0514                               i1l1669 0502  
                             i1l1749 0620                               i1l1845 0491  
                             i1l1829 0464                               u130_25 05B7  
                             i1l1693 05A7                               i1l1861 016A  
                             i1l1853 0143                               i1l1781 03D4  
                             i1l1773 03AF                               i1l1765 03A0  
                             i1l1757 0391                               i1l1687 052F  
                             i1l1679 0515                               i1l1791 04A7  
                             i1l1839 0477                               i1l1695 05A9  
                             i1l1855 014D                               i1l1783 03E1  
                             i1l1775 03BC                               i1l1767 03A4  
                             i1l1759 0392                               u115_20 0349  
                             u131_20 05C1                               i1l1689 0534  
                             u115_21 0348                               i1l1793 04B5  
                             i1l1785 04A5                               u131_21 05C0  
                             i1l1697 05AD                               i1l1857 015B  
                             i1l1849 008A                               i1l1777 03CA  
                             i1l1769 03A5                               i1l1795 04B9  
                             i1l1699 05B6                               i1l1859 015F  
                             i1l1779 03CF                               u123_24 051F  
                             u123_25 051E                               i1l1797 04BF  
                             i1l1981 0020                               i1l1973 0006  
                             i1l1799 04C8                               i1l1991 003E  
                             i1l1983 0025                               i1l1975 000E  
                             u116_20 0355                               u140_20 042B  
                             u132_20 0555                               u116_21 0354  
                             u140_21 042A                               u132_21 0554  
                             i1l1993 0046                               i1l1985 002B  
                             i1l1977 0013                               i1l1995 004B  
                             i1l1987 0030                               i1l1979 001A  
                             u124_24 052B                               u124_25 052A  
                             u140_25 0427                               i1l1997 004F  
                             i1l1989 0036                               i1l1999 004F  
                             u125_20 0534                               u125_21 0533  
                             u117_25 035E                               u141_25 0435  
                             u133_25 055E                               u118_20 0371  
                             u142_20 0441                               u150_20 03CF  
                             u118_21 0370                               u142_21 0440  
                             u150_21 03CE                               u126_24 0539  
                             u126_25 0538                               u134_25 0565  
                             u143_20 0620                               u119_20 0377  
                             u135_20 0573                               u151_20 03D4  
                             u143_21 061F                               u119_21 0376  
                             u135_21 0572                               u151_21 03D3  
                             u127_24 0545                               u127_25 0544  
                             u144_20 0629                               u136_20 0400  
                             u128_20 05AD                               u160_20 0095  
                             u144_21 0628                               u136_21 03FF  
                             u128_21 05AC                               u160_21 0094  
                             u152_24 03D9                               u152_25 03D8  
                             u161_20 00B6                               u145_20 0398  
                             u145_21 0397                               u153_24 03E6  
                             u137_25 0404                               u129_25 05B2  
                             u161_25 00B2                               u153_25 03E5  
                             u154_20 04BF                               u138_20 0412  
                             u162_20 00E3                               u146_20 03AA  
                             u170_20 0056                               u154_21 04BE  
                             u138_21 0411                               u146_21 03A9  
                             u170_21 0054                               u162_25 00DF  
                             u155_20 04EC                               u163_20 014D  
                             u147_20 03AF                               u171_20 0057  
                             u155_21 04EB                               u163_21 014C  
                             u147_21 03AE                               u139_25 0413  
                             u163_25 0149                               u156_20 04F9  
                             u164_20 015B                               u172_20 0060  
                             u164_21 015A                               u172_21 005E  
                             u148_24 03B4                               u156_25 04F5  
                             u164_25 0157                               u148_25 03B3  
                             u157_20 0464                               u173_20 0061  
                             u165_20 000E                               u157_21 0463  
                             u165_21 000D                               u149_24 03C1  
                             u149_25 03C0                               u158_20 0491  
                             u166_20 0020                               u158_21 0490  
                             u166_21 001F                               u159_20 049E  
                             u167_20 002B                               u167_21 002A  
                             u159_25 049A                               u168_20 0030  
                             u168_21 002F                               u169_20 004B  
                             u169_21 004A                      ??_runPotScaling 0026  
            initialiseGPIO@direction 0033                     readGPIO@portType 0073  
                readADCRaw@gpioValid 0077                               ___lmul 0549  
                             ___wmul 05A7                            ??___lldiv 0020  
                   __end_of_readGPIO 0549            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 064E  
         initialiseADCPin@portNumber 0037                     __end_of_setupPWM 05FE  
                    _currentTripRead 0615              __end_of__initialization 0086  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
                      _currentILFIFO 00A0                       _OPTION_REGbits 0095  
                  __end_of_Tick980Hz 006C                           __pbssBANK0 003D  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                         __pmaintext 05C6                              ?___lmul 0070  
                            ?___wmul 0070                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 062C          __end_of_setPWMDutyandPeriod 05A7  
   __end_of_initialiseCurrentSensors 0615             initialiseADCPin@portType 0036  
                         _filteredIL 0045                            ?_readGPIO 0070  
                         _readADCRaw 032E                  _readFilteredFreqPot 044A  
                _readFilteredDutyPot 04A5                            ?_setupPWM 0070  
               readADCRaw@gpioNumber 007A             initialiseGPIO@gpioNumber 0037  
                            ___lldiv 03EF                 ?_readFilteredFreqPot 007B  
                            __ptext1 0657                              __ptext2 05E2  
                            __ptext3 016D                              __ptext4 064E  
                            __ptext5 05FE                              __ptext6 0248  
                            __ptext7 02C4                              __ptext8 0665  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                            _setDuty 004D                              clrloop0 0660  
               end_of_initialization 0086                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
         ??_initialisePotentiometers 0039                           _prevPeriod 0053  
                  writeGPIO@portType 0073                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 03EF             initialiseGPIO@portNumber 0038  
                        ?_readADCRaw 0070                          _CCP1CONbits 0293  
              __end_of_runPotScaling 016D            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 057C          __end_of_initialiseADCModule 066B  
                     __end_of___wmul 05C6                       _clockFrequency 003D  
                start_initialization 006E         __end_of_setupTimer0Interrupt 065F  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                           ??___wmul 0074                            ___latbits 0001  
                      __pcstackBANK0 0020                           ?_Tick980Hz 0070  
                   _initialiseADCPin 02C4                   readGPIO@gpioNumber 0074  
                     _initialiseGPIO 0248     __end_of_initialisePotentiometers 0657  
                           ?___lldiv 0076                      readADCRaw@i_614 0079  
                          _latestIL1 0049      readFilteredDutyPot@sumOfSamples 0024  
                     ___wmul@product 0074               __end_of_initialiseGPIO 02C4  
                          clear_ram0 065F                            _setPeriod 0054  
                           _PIE1bits 0091                             _PIR1bits 0011  
       setPWMDutyandPeriod@dutyCycle 0070                 _setupTimer0Interrupt 0657  
                _currentTripRead$738 0076                          _filteredIDS 0047  
                         _ADCON0bits 009D                    ___wmul@multiplier 0070  
                 readGPIO@portNumber 0075                          _freqPotFIFO 0140  
                          _writeGPIO 0390                          ??_Tick980Hz 0032  
                  ___lmul@multiplier 0070                  _readILCurrentADCRaw 0000  
                       ??_readADCRaw 0072                      ?_initialiseGPIO 0033  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 04A5          __end_of_readFilteredDutyPot 0500  
               runPotScaling@maxDuty 002E                 runPotScaling@minDuty 0030  
                writeGPIO@gpioNumber 0074                   __end_of_readADCRaw 0390  
           readFilteredFreqPot@i_700 0028                           ?_writeGPIO 0070  
                           __ptext10 0390                             __ptext11 008A  
                           __ptext20 0500                             __ptext12 057C  
                           __ptext13 05A7                             __ptext14 0549  
                           __ptext15 03EF                             __ptext16 044A  
                           __ptext17 04A5                             __ptext18 032E  
                           __ptext19 0615            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 0120                             _readGPIO 0500  
                      _timerSlotHalf 0051                         _PSTR1CONbits 0296  
                           _prevDuty 004B                             _setupPWM 05E2  
                           int$flags 007E             __end_of_initialiseADCPin 032E  
                           main@argc 0039                             main@argv 003B  
    readFilteredFreqPot@sumOfSamples 0024                     _timerSlotQuarter 0050  
                         _INTCONbits 000B                  writeGPIO@portNumber 0075  
                           intlevel1 0000             _initialiseCurrentSensors 05FE  
                   ___lldiv@dividend 007A               ??_setupTimer0Interrupt 0033  
                         _OSCCONbits 0099                          _potSetCount 0052  
                _setPWMDutyandPeriod 057C              _setupInternalOscillator 016D  
                      _emergencyStop 004F                        __pstringtext1 062C  
                      __pstringtext2 063E                        __pstringtext3 0000  
                         _OPTION_REG 0095                     ___lldiv@quotient 0021  
                writeGPIO@writeValue 0070                          ??_writeGPIO 0071  
               ?_setPWMDutyandPeriod 0070                readADCRaw@returnValue 0074  
                  ??_currentTripRead 0076                        _runPotScaling 008A  
