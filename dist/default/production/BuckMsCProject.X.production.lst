

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 17:44:36 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	intentry,global,class=CODE,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text22,local,class=CODE,merge=1,delta=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    51                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.40
    56                           ; Generated 17/11/2021 GMT
    57                           ; 
    58                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1827 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  011E                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0219                     	;# 
   191  021A                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0298                     	;# 
   206  0298                     	;# 
   207  0299                     	;# 
   208  029A                     	;# 
   209  029B                     	;# 
   210  029C                     	;# 
   211  029C                     	;# 
   212  029D                     	;# 
   213  029E                     	;# 
   214  029E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0318                     	;# 
   220  0318                     	;# 
   221  0319                     	;# 
   222  031A                     	;# 
   223  0394                     	;# 
   224  0395                     	;# 
   225  0396                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  011E                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019C                     	;# 
   327  019C                     	;# 
   328  019D                     	;# 
   329  019E                     	;# 
   330  019F                     	;# 
   331  020C                     	;# 
   332  020D                     	;# 
   333  0211                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0212                     	;# 
   337  0213                     	;# 
   338  0213                     	;# 
   339  0214                     	;# 
   340  0214                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0215                     	;# 
   344  0216                     	;# 
   345  0216                     	;# 
   346  0217                     	;# 
   347  0217                     	;# 
   348  0219                     	;# 
   349  021A                     	;# 
   350  021B                     	;# 
   351  021C                     	;# 
   352  021D                     	;# 
   353  021E                     	;# 
   354  021F                     	;# 
   355  0291                     	;# 
   356  0291                     	;# 
   357  0292                     	;# 
   358  0293                     	;# 
   359  0294                     	;# 
   360  0295                     	;# 
   361  0295                     	;# 
   362  0296                     	;# 
   363  0298                     	;# 
   364  0298                     	;# 
   365  0299                     	;# 
   366  029A                     	;# 
   367  029B                     	;# 
   368  029C                     	;# 
   369  029C                     	;# 
   370  029D                     	;# 
   371  029E                     	;# 
   372  029E                     	;# 
   373  0311                     	;# 
   374  0311                     	;# 
   375  0312                     	;# 
   376  0313                     	;# 
   377  0318                     	;# 
   378  0318                     	;# 
   379  0319                     	;# 
   380  031A                     	;# 
   381  0394                     	;# 
   382  0395                     	;# 
   383  0396                     	;# 
   384  039A                     	;# 
   385  039C                     	;# 
   386  039D                     	;# 
   387  039E                     	;# 
   388  039F                     	;# 
   389  0415                     	;# 
   390  0416                     	;# 
   391  0417                     	;# 
   392  041C                     	;# 
   393  041D                     	;# 
   394  041E                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0113                     	;# 
   457  0114                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011E                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  020D                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0219                     	;# 
   507  021A                     	;# 
   508  021B                     	;# 
   509  021C                     	;# 
   510  021D                     	;# 
   511  021E                     	;# 
   512  021F                     	;# 
   513  0291                     	;# 
   514  0291                     	;# 
   515  0292                     	;# 
   516  0293                     	;# 
   517  0294                     	;# 
   518  0295                     	;# 
   519  0295                     	;# 
   520  0296                     	;# 
   521  0298                     	;# 
   522  0298                     	;# 
   523  0299                     	;# 
   524  029A                     	;# 
   525  029B                     	;# 
   526  029C                     	;# 
   527  029C                     	;# 
   528  029D                     	;# 
   529  029E                     	;# 
   530  029E                     	;# 
   531  0311                     	;# 
   532  0311                     	;# 
   533  0312                     	;# 
   534  0313                     	;# 
   535  0318                     	;# 
   536  0318                     	;# 
   537  0319                     	;# 
   538  031A                     	;# 
   539  0394                     	;# 
   540  0395                     	;# 
   541  0396                     	;# 
   542  039A                     	;# 
   543  039C                     	;# 
   544  039D                     	;# 
   545  039E                     	;# 
   546  039F                     	;# 
   547  0415                     	;# 
   548  0416                     	;# 
   549  0417                     	;# 
   550  041C                     	;# 
   551  041D                     	;# 
   552  041E                     	;# 
   553  0FE4                     	;# 
   554  0FE5                     	;# 
   555  0FE6                     	;# 
   556  0FE7                     	;# 
   557  0FE8                     	;# 
   558  0FE9                     	;# 
   559  0FEA                     	;# 
   560  0FEB                     	;# 
   561  0FED                     	;# 
   562  0FEE                     	;# 
   563  0FEF                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  0091                     	;# 
   596  0092                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009B                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  010C                     	;# 
   611  010D                     	;# 
   612  0111                     	;# 
   613  0112                     	;# 
   614  0113                     	;# 
   615  0114                     	;# 
   616  0115                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0118                     	;# 
   620  0119                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011D                     	;# 
   624  011E                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  0191                     	;# 
   628  0191                     	;# 
   629  0192                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0199                     	;# 
   637  019A                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019E                     	;# 
   646  019F                     	;# 
   647  020C                     	;# 
   648  020D                     	;# 
   649  0211                     	;# 
   650  0211                     	;# 
   651  0212                     	;# 
   652  0212                     	;# 
   653  0213                     	;# 
   654  0213                     	;# 
   655  0214                     	;# 
   656  0214                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  0219                     	;# 
   665  021A                     	;# 
   666  021B                     	;# 
   667  021C                     	;# 
   668  021D                     	;# 
   669  021E                     	;# 
   670  021F                     	;# 
   671  0291                     	;# 
   672  0291                     	;# 
   673  0292                     	;# 
   674  0293                     	;# 
   675  0294                     	;# 
   676  0295                     	;# 
   677  0295                     	;# 
   678  0296                     	;# 
   679  0298                     	;# 
   680  0298                     	;# 
   681  0299                     	;# 
   682  029A                     	;# 
   683  029B                     	;# 
   684  029C                     	;# 
   685  029C                     	;# 
   686  029D                     	;# 
   687  029E                     	;# 
   688  029E                     	;# 
   689  0311                     	;# 
   690  0311                     	;# 
   691  0312                     	;# 
   692  0313                     	;# 
   693  0318                     	;# 
   694  0318                     	;# 
   695  0319                     	;# 
   696  031A                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  039A                     	;# 
   701  039C                     	;# 
   702  039D                     	;# 
   703  039E                     	;# 
   704  039F                     	;# 
   705  0415                     	;# 
   706  0416                     	;# 
   707  0417                     	;# 
   708  041C                     	;# 
   709  041D                     	;# 
   710  041E                     	;# 
   711  0FE4                     	;# 
   712  0FE5                     	;# 
   713  0FE6                     	;# 
   714  0FE7                     	;# 
   715  0FE8                     	;# 
   716  0FE9                     	;# 
   717  0FEA                     	;# 
   718  0FEB                     	;# 
   719  0FED                     	;# 
   720  0FEE                     	;# 
   721  0FEF                     	;# 
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0008                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  008C                     	;# 
   752  008D                     	;# 
   753  0091                     	;# 
   754  0092                     	;# 
   755  0093                     	;# 
   756  0094                     	;# 
   757  0095                     	;# 
   758  0096                     	;# 
   759  0097                     	;# 
   760  0098                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  010C                     	;# 
   769  010D                     	;# 
   770  0111                     	;# 
   771  0112                     	;# 
   772  0113                     	;# 
   773  0114                     	;# 
   774  0115                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0118                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  018C                     	;# 
   784  018D                     	;# 
   785  0191                     	;# 
   786  0191                     	;# 
   787  0192                     	;# 
   788  0193                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0194                     	;# 
   792  0195                     	;# 
   793  0196                     	;# 
   794  0199                     	;# 
   795  019A                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019C                     	;# 
   801  019C                     	;# 
   802  019D                     	;# 
   803  019E                     	;# 
   804  019F                     	;# 
   805  020C                     	;# 
   806  020D                     	;# 
   807  0211                     	;# 
   808  0211                     	;# 
   809  0212                     	;# 
   810  0212                     	;# 
   811  0213                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0214                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0219                     	;# 
   823  021A                     	;# 
   824  021B                     	;# 
   825  021C                     	;# 
   826  021D                     	;# 
   827  021E                     	;# 
   828  021F                     	;# 
   829  0291                     	;# 
   830  0291                     	;# 
   831  0292                     	;# 
   832  0293                     	;# 
   833  0294                     	;# 
   834  0295                     	;# 
   835  0295                     	;# 
   836  0296                     	;# 
   837  0298                     	;# 
   838  0298                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029B                     	;# 
   842  029C                     	;# 
   843  029C                     	;# 
   844  029D                     	;# 
   845  029E                     	;# 
   846  029E                     	;# 
   847  0311                     	;# 
   848  0311                     	;# 
   849  0312                     	;# 
   850  0313                     	;# 
   851  0318                     	;# 
   852  0318                     	;# 
   853  0319                     	;# 
   854  031A                     	;# 
   855  0394                     	;# 
   856  0395                     	;# 
   857  0396                     	;# 
   858  039A                     	;# 
   859  039C                     	;# 
   860  039D                     	;# 
   861  039E                     	;# 
   862  039F                     	;# 
   863  0415                     	;# 
   864  0416                     	;# 
   865  0417                     	;# 
   866  041C                     	;# 
   867  041D                     	;# 
   868  041E                     	;# 
   869  0FE4                     	;# 
   870  0FE5                     	;# 
   871  0FE6                     	;# 
   872  0FE7                     	;# 
   873  0FE8                     	;# 
   874  0FE9                     	;# 
   875  0FEA                     	;# 
   876  0FEB                     	;# 
   877  0FED                     	;# 
   878  0FEE                     	;# 
   879  0FEF                     	;# 
   880  0000                     	;# 
   881  0001                     	;# 
   882  0002                     	;# 
   883  0003                     	;# 
   884  0004                     	;# 
   885  0005                     	;# 
   886  0006                     	;# 
   887  0007                     	;# 
   888  0008                     	;# 
   889  0009                     	;# 
   890  000A                     	;# 
   891  000B                     	;# 
   892  000C                     	;# 
   893  000D                     	;# 
   894  0011                     	;# 
   895  0012                     	;# 
   896  0013                     	;# 
   897  0014                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0094                     	;# 
   915  0095                     	;# 
   916  0096                     	;# 
   917  0097                     	;# 
   918  0098                     	;# 
   919  0099                     	;# 
   920  009A                     	;# 
   921  009B                     	;# 
   922  009B                     	;# 
   923  009C                     	;# 
   924  009D                     	;# 
   925  009E                     	;# 
   926  010C                     	;# 
   927  010D                     	;# 
   928  0111                     	;# 
   929  0112                     	;# 
   930  0113                     	;# 
   931  0114                     	;# 
   932  0115                     	;# 
   933  0116                     	;# 
   934  0117                     	;# 
   935  0118                     	;# 
   936  0119                     	;# 
   937  011A                     	;# 
   938  011B                     	;# 
   939  011D                     	;# 
   940  011E                     	;# 
   941  018C                     	;# 
   942  018D                     	;# 
   943  0191                     	;# 
   944  0191                     	;# 
   945  0192                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0193                     	;# 
   949  0194                     	;# 
   950  0195                     	;# 
   951  0196                     	;# 
   952  0199                     	;# 
   953  019A                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019C                     	;# 
   959  019C                     	;# 
   960  019D                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  020C                     	;# 
   964  020D                     	;# 
   965  0211                     	;# 
   966  0211                     	;# 
   967  0212                     	;# 
   968  0212                     	;# 
   969  0213                     	;# 
   970  0213                     	;# 
   971  0214                     	;# 
   972  0214                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  0219                     	;# 
   981  021A                     	;# 
   982  021B                     	;# 
   983  021C                     	;# 
   984  021D                     	;# 
   985  021E                     	;# 
   986  021F                     	;# 
   987  0291                     	;# 
   988  0291                     	;# 
   989  0292                     	;# 
   990  0293                     	;# 
   991  0294                     	;# 
   992  0295                     	;# 
   993  0295                     	;# 
   994  0296                     	;# 
   995  0298                     	;# 
   996  0298                     	;# 
   997  0299                     	;# 
   998  029A                     	;# 
   999  029B                     	;# 
  1000  029C                     	;# 
  1001  029C                     	;# 
  1002  029D                     	;# 
  1003  029E                     	;# 
  1004  029E                     	;# 
  1005  0311                     	;# 
  1006  0311                     	;# 
  1007  0312                     	;# 
  1008  0313                     	;# 
  1009  0318                     	;# 
  1010  0318                     	;# 
  1011  0319                     	;# 
  1012  031A                     	;# 
  1013  0394                     	;# 
  1014  0395                     	;# 
  1015  0396                     	;# 
  1016  039A                     	;# 
  1017  039C                     	;# 
  1018  039D                     	;# 
  1019  039E                     	;# 
  1020  039F                     	;# 
  1021  0415                     	;# 
  1022  0416                     	;# 
  1023  0417                     	;# 
  1024  041C                     	;# 
  1025  041D                     	;# 
  1026  041E                     	;# 
  1027  0FE4                     	;# 
  1028  0FE5                     	;# 
  1029  0FE6                     	;# 
  1030  0FE7                     	;# 
  1031  0FE8                     	;# 
  1032  0FE9                     	;# 
  1033  0FEA                     	;# 
  1034  0FEB                     	;# 
  1035  0FED                     	;# 
  1036  0FEE                     	;# 
  1037  0FEF                     	;# 
  1038  0000                     	;# 
  1039  0001                     	;# 
  1040  0002                     	;# 
  1041  0003                     	;# 
  1042  0004                     	;# 
  1043  0005                     	;# 
  1044  0006                     	;# 
  1045  0007                     	;# 
  1046  0008                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  0011                     	;# 
  1053  0012                     	;# 
  1054  0013                     	;# 
  1055  0014                     	;# 
  1056  0015                     	;# 
  1057  0016                     	;# 
  1058  0016                     	;# 
  1059  0017                     	;# 
  1060  0018                     	;# 
  1061  0019                     	;# 
  1062  001A                     	;# 
  1063  001B                     	;# 
  1064  001C                     	;# 
  1065  001E                     	;# 
  1066  001F                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  0091                     	;# 
  1070  0092                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  0111                     	;# 
  1087  0112                     	;# 
  1088  0113                     	;# 
  1089  0114                     	;# 
  1090  0115                     	;# 
  1091  0116                     	;# 
  1092  0117                     	;# 
  1093  0118                     	;# 
  1094  0119                     	;# 
  1095  011A                     	;# 
  1096  011B                     	;# 
  1097  011D                     	;# 
  1098  011E                     	;# 
  1099  018C                     	;# 
  1100  018D                     	;# 
  1101  0191                     	;# 
  1102  0191                     	;# 
  1103  0192                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0193                     	;# 
  1107  0194                     	;# 
  1108  0195                     	;# 
  1109  0196                     	;# 
  1110  0199                     	;# 
  1111  019A                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019C                     	;# 
  1117  019C                     	;# 
  1118  019D                     	;# 
  1119  019E                     	;# 
  1120  019F                     	;# 
  1121  020C                     	;# 
  1122  020D                     	;# 
  1123  0211                     	;# 
  1124  0211                     	;# 
  1125  0212                     	;# 
  1126  0212                     	;# 
  1127  0213                     	;# 
  1128  0213                     	;# 
  1129  0214                     	;# 
  1130  0214                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  0219                     	;# 
  1139  021A                     	;# 
  1140  021B                     	;# 
  1141  021C                     	;# 
  1142  021D                     	;# 
  1143  021E                     	;# 
  1144  021F                     	;# 
  1145  0291                     	;# 
  1146  0291                     	;# 
  1147  0292                     	;# 
  1148  0293                     	;# 
  1149  0294                     	;# 
  1150  0295                     	;# 
  1151  0295                     	;# 
  1152  0296                     	;# 
  1153  0298                     	;# 
  1154  0298                     	;# 
  1155  0299                     	;# 
  1156  029A                     	;# 
  1157  029B                     	;# 
  1158  029C                     	;# 
  1159  029C                     	;# 
  1160  029D                     	;# 
  1161  029E                     	;# 
  1162  029E                     	;# 
  1163  0311                     	;# 
  1164  0311                     	;# 
  1165  0312                     	;# 
  1166  0313                     	;# 
  1167  0318                     	;# 
  1168  0318                     	;# 
  1169  0319                     	;# 
  1170  031A                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  039A                     	;# 
  1175  039C                     	;# 
  1176  039D                     	;# 
  1177  039E                     	;# 
  1178  039F                     	;# 
  1179  0415                     	;# 
  1180  0416                     	;# 
  1181  0417                     	;# 
  1182  041C                     	;# 
  1183  041D                     	;# 
  1184  041E                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0013                     	;# 
  1213  0014                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  001E                     	;# 
  1224  001F                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0097                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011A                     	;# 
  1254  011B                     	;# 
  1255  011D                     	;# 
  1256  011E                     	;# 
  1257  018C                     	;# 
  1258  018D                     	;# 
  1259  0191                     	;# 
  1260  0191                     	;# 
  1261  0192                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0193                     	;# 
  1265  0194                     	;# 
  1266  0195                     	;# 
  1267  0196                     	;# 
  1268  0199                     	;# 
  1269  019A                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019C                     	;# 
  1275  019C                     	;# 
  1276  019D                     	;# 
  1277  019E                     	;# 
  1278  019F                     	;# 
  1279  020C                     	;# 
  1280  020D                     	;# 
  1281  0211                     	;# 
  1282  0211                     	;# 
  1283  0212                     	;# 
  1284  0212                     	;# 
  1285  0213                     	;# 
  1286  0213                     	;# 
  1287  0214                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0219                     	;# 
  1297  021A                     	;# 
  1298  021B                     	;# 
  1299  021C                     	;# 
  1300  021D                     	;# 
  1301  021E                     	;# 
  1302  021F                     	;# 
  1303  0291                     	;# 
  1304  0291                     	;# 
  1305  0292                     	;# 
  1306  0293                     	;# 
  1307  0294                     	;# 
  1308  0295                     	;# 
  1309  0295                     	;# 
  1310  0296                     	;# 
  1311  0298                     	;# 
  1312  0298                     	;# 
  1313  0299                     	;# 
  1314  029A                     	;# 
  1315  029B                     	;# 
  1316  029C                     	;# 
  1317  029C                     	;# 
  1318  029D                     	;# 
  1319  029E                     	;# 
  1320  029E                     	;# 
  1321  0311                     	;# 
  1322  0311                     	;# 
  1323  0312                     	;# 
  1324  0313                     	;# 
  1325  0318                     	;# 
  1326  0318                     	;# 
  1327  0319                     	;# 
  1328  031A                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  039A                     	;# 
  1333  039C                     	;# 
  1334  039D                     	;# 
  1335  039E                     	;# 
  1336  039F                     	;# 
  1337  0415                     	;# 
  1338  0416                     	;# 
  1339  0417                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  0FE4                     	;# 
  1344  0FE5                     	;# 
  1345  0FE6                     	;# 
  1346  0FE7                     	;# 
  1347  0FE8                     	;# 
  1348  0FE9                     	;# 
  1349  0FEA                     	;# 
  1350  0FEB                     	;# 
  1351  0FED                     	;# 
  1352  0FEE                     	;# 
  1353  0FEF                     	;# 
  1354  0000                     	;# 
  1355  0001                     	;# 
  1356  0002                     	;# 
  1357  0003                     	;# 
  1358  0004                     	;# 
  1359  0005                     	;# 
  1360  0006                     	;# 
  1361  0007                     	;# 
  1362  0008                     	;# 
  1363  0009                     	;# 
  1364  000A                     	;# 
  1365  000B                     	;# 
  1366  000C                     	;# 
  1367  000D                     	;# 
  1368  0011                     	;# 
  1369  0012                     	;# 
  1370  0013                     	;# 
  1371  0014                     	;# 
  1372  0015                     	;# 
  1373  0016                     	;# 
  1374  0016                     	;# 
  1375  0017                     	;# 
  1376  0018                     	;# 
  1377  0019                     	;# 
  1378  001A                     	;# 
  1379  001B                     	;# 
  1380  001C                     	;# 
  1381  001E                     	;# 
  1382  001F                     	;# 
  1383  008C                     	;# 
  1384  008D                     	;# 
  1385  0091                     	;# 
  1386  0092                     	;# 
  1387  0093                     	;# 
  1388  0094                     	;# 
  1389  0095                     	;# 
  1390  0096                     	;# 
  1391  0097                     	;# 
  1392  0098                     	;# 
  1393  0099                     	;# 
  1394  009A                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  010C                     	;# 
  1401  010D                     	;# 
  1402  0111                     	;# 
  1403  0112                     	;# 
  1404  0113                     	;# 
  1405  0114                     	;# 
  1406  0115                     	;# 
  1407  0116                     	;# 
  1408  0117                     	;# 
  1409  0118                     	;# 
  1410  0119                     	;# 
  1411  011A                     	;# 
  1412  011B                     	;# 
  1413  011D                     	;# 
  1414  011E                     	;# 
  1415  018C                     	;# 
  1416  018D                     	;# 
  1417  0191                     	;# 
  1418  0191                     	;# 
  1419  0192                     	;# 
  1420  0193                     	;# 
  1421  0193                     	;# 
  1422  0193                     	;# 
  1423  0194                     	;# 
  1424  0195                     	;# 
  1425  0196                     	;# 
  1426  0199                     	;# 
  1427  019A                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019B                     	;# 
  1431  019B                     	;# 
  1432  019C                     	;# 
  1433  019C                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019F                     	;# 
  1437  020C                     	;# 
  1438  020D                     	;# 
  1439  0211                     	;# 
  1440  0211                     	;# 
  1441  0212                     	;# 
  1442  0212                     	;# 
  1443  0213                     	;# 
  1444  0213                     	;# 
  1445  0214                     	;# 
  1446  0214                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0215                     	;# 
  1450  0216                     	;# 
  1451  0216                     	;# 
  1452  0217                     	;# 
  1453  0217                     	;# 
  1454  0219                     	;# 
  1455  021A                     	;# 
  1456  021B                     	;# 
  1457  021C                     	;# 
  1458  021D                     	;# 
  1459  021E                     	;# 
  1460  021F                     	;# 
  1461  0291                     	;# 
  1462  0291                     	;# 
  1463  0292                     	;# 
  1464  0293                     	;# 
  1465  0294                     	;# 
  1466  0295                     	;# 
  1467  0295                     	;# 
  1468  0296                     	;# 
  1469  0298                     	;# 
  1470  0298                     	;# 
  1471  0299                     	;# 
  1472  029A                     	;# 
  1473  029B                     	;# 
  1474  029C                     	;# 
  1475  029C                     	;# 
  1476  029D                     	;# 
  1477  029E                     	;# 
  1478  029E                     	;# 
  1479  0311                     	;# 
  1480  0311                     	;# 
  1481  0312                     	;# 
  1482  0313                     	;# 
  1483  0318                     	;# 
  1484  0318                     	;# 
  1485  0319                     	;# 
  1486  031A                     	;# 
  1487  0394                     	;# 
  1488  0395                     	;# 
  1489  0396                     	;# 
  1490  039A                     	;# 
  1491  039C                     	;# 
  1492  039D                     	;# 
  1493  039E                     	;# 
  1494  039F                     	;# 
  1495  0415                     	;# 
  1496  0416                     	;# 
  1497  0417                     	;# 
  1498  041C                     	;# 
  1499  041D                     	;# 
  1500  041E                     	;# 
  1501  0FE4                     	;# 
  1502  0FE5                     	;# 
  1503  0FE6                     	;# 
  1504  0FE7                     	;# 
  1505  0FE8                     	;# 
  1506  0FE9                     	;# 
  1507  0FEA                     	;# 
  1508  0FEB                     	;# 
  1509  0FED                     	;# 
  1510  0FEE                     	;# 
  1511  0FEF                     	;# 
  1512  0000                     	;# 
  1513  0001                     	;# 
  1514  0002                     	;# 
  1515  0003                     	;# 
  1516  0004                     	;# 
  1517  0005                     	;# 
  1518  0006                     	;# 
  1519  0007                     	;# 
  1520  0008                     	;# 
  1521  0009                     	;# 
  1522  000A                     	;# 
  1523  000B                     	;# 
  1524  000C                     	;# 
  1525  000D                     	;# 
  1526  0011                     	;# 
  1527  0012                     	;# 
  1528  0013                     	;# 
  1529  0014                     	;# 
  1530  0015                     	;# 
  1531  0016                     	;# 
  1532  0016                     	;# 
  1533  0017                     	;# 
  1534  0018                     	;# 
  1535  0019                     	;# 
  1536  001A                     	;# 
  1537  001B                     	;# 
  1538  001C                     	;# 
  1539  001E                     	;# 
  1540  001F                     	;# 
  1541  008C                     	;# 
  1542  008D                     	;# 
  1543  0091                     	;# 
  1544  0092                     	;# 
  1545  0093                     	;# 
  1546  0094                     	;# 
  1547  0095                     	;# 
  1548  0096                     	;# 
  1549  0097                     	;# 
  1550  0098                     	;# 
  1551  0099                     	;# 
  1552  009A                     	;# 
  1553  009B                     	;# 
  1554  009B                     	;# 
  1555  009C                     	;# 
  1556  009D                     	;# 
  1557  009E                     	;# 
  1558  010C                     	;# 
  1559  010D                     	;# 
  1560  0111                     	;# 
  1561  0112                     	;# 
  1562  0113                     	;# 
  1563  0114                     	;# 
  1564  0115                     	;# 
  1565  0116                     	;# 
  1566  0117                     	;# 
  1567  0118                     	;# 
  1568  0119                     	;# 
  1569  011A                     	;# 
  1570  011B                     	;# 
  1571  011D                     	;# 
  1572  011E                     	;# 
  1573  018C                     	;# 
  1574  018D                     	;# 
  1575  0191                     	;# 
  1576  0191                     	;# 
  1577  0192                     	;# 
  1578  0193                     	;# 
  1579  0193                     	;# 
  1580  0193                     	;# 
  1581  0194                     	;# 
  1582  0195                     	;# 
  1583  0196                     	;# 
  1584  0199                     	;# 
  1585  019A                     	;# 
  1586  019B                     	;# 
  1587  019B                     	;# 
  1588  019B                     	;# 
  1589  019B                     	;# 
  1590  019C                     	;# 
  1591  019C                     	;# 
  1592  019D                     	;# 
  1593  019E                     	;# 
  1594  019F                     	;# 
  1595  020C                     	;# 
  1596  020D                     	;# 
  1597  0211                     	;# 
  1598  0211                     	;# 
  1599  0212                     	;# 
  1600  0212                     	;# 
  1601  0213                     	;# 
  1602  0213                     	;# 
  1603  0214                     	;# 
  1604  0214                     	;# 
  1605  0215                     	;# 
  1606  0215                     	;# 
  1607  0215                     	;# 
  1608  0216                     	;# 
  1609  0216                     	;# 
  1610  0217                     	;# 
  1611  0217                     	;# 
  1612  0219                     	;# 
  1613  021A                     	;# 
  1614  021B                     	;# 
  1615  021C                     	;# 
  1616  021D                     	;# 
  1617  021E                     	;# 
  1618  021F                     	;# 
  1619  0291                     	;# 
  1620  0291                     	;# 
  1621  0292                     	;# 
  1622  0293                     	;# 
  1623  0294                     	;# 
  1624  0295                     	;# 
  1625  0295                     	;# 
  1626  0296                     	;# 
  1627  0298                     	;# 
  1628  0298                     	;# 
  1629  0299                     	;# 
  1630  029A                     	;# 
  1631  029B                     	;# 
  1632  029C                     	;# 
  1633  029C                     	;# 
  1634  029D                     	;# 
  1635  029E                     	;# 
  1636  029E                     	;# 
  1637  0311                     	;# 
  1638  0311                     	;# 
  1639  0312                     	;# 
  1640  0313                     	;# 
  1641  0318                     	;# 
  1642  0318                     	;# 
  1643  0319                     	;# 
  1644  031A                     	;# 
  1645  0394                     	;# 
  1646  0395                     	;# 
  1647  0396                     	;# 
  1648  039A                     	;# 
  1649  039C                     	;# 
  1650  039D                     	;# 
  1651  039E                     	;# 
  1652  039F                     	;# 
  1653  0415                     	;# 
  1654  0416                     	;# 
  1655  0417                     	;# 
  1656  041C                     	;# 
  1657  041D                     	;# 
  1658  041E                     	;# 
  1659  0FE4                     	;# 
  1660  0FE5                     	;# 
  1661  0FE6                     	;# 
  1662  0FE7                     	;# 
  1663  0FE8                     	;# 
  1664  0FE9                     	;# 
  1665  0FEA                     	;# 
  1666  0FEB                     	;# 
  1667  0FED                     	;# 
  1668  0FEE                     	;# 
  1669  0FEF                     	;# 
  1670  000D                     _PORTB	set	13
  1671  000C                     _PORTA	set	12
  1672  001C                     _T2CONbits	set	28
  1673  001B                     _PR2	set	27
  1674  0011                     _PIR1bits	set	17
  1675  000B                     _INTCONbits	set	11
  1676  009B                     _ADRESL	set	155
  1677  009C                     _ADRESH	set	156
  1678  009D                     _ADCON0bits	set	157
  1679  008D                     _TRISB	set	141
  1680  008C                     _TRISA	set	140
  1681  009E                     _ADCON1	set	158
  1682  009D                     _ADCON0	set	157
  1683  0095                     _OPTION_REG	set	149
  1684  0095                     _OPTION_REGbits	set	149
  1685  0091                     _PIE1bits	set	145
  1686  0099                     _OSCCONbits	set	153
  1687  010D                     _LATB	set	269
  1688  010C                     _LATA	set	268
  1689  011D                     _APFCON0bits	set	285
  1690  018D                     _ANSELB	set	397
  1691  018C                     _ANSELA	set	396
  1692  0293                     _CCP1CONbits	set	659
  1693  0296                     _PSTR1CONbits	set	662
  1694  0291                     _CCPR1L	set	657
  1695  0293                     _CCP1CON	set	659
  1696                           
  1697                           	psect	stringtext1
  1698  07FF                     __pstringtext1:
  1699  07FF                     STR_1:
  1700  07FF  3428               	retlw	40	;'('
  1701  0800  3428               	retlw	40	;'('
  1702  0801  3449               	retlw	73	;'I'
  1703  0802  344E               	retlw	78	;'N'
  1704  0803  3454               	retlw	84	;'T'
  1705  0804  3443               	retlw	67	;'C'
  1706  0805  344F               	retlw	79	;'O'
  1707  0806  344E               	retlw	78	;'N'
  1708  0807  3429               	retlw	41	;')'
  1709  0808  3426               	retlw	38	;'&'
  1710  0809  3430               	retlw	48	;'0'
  1711  080A  3437               	retlw	55	;'7'
  1712  080B  3446               	retlw	70	;'F'
  1713  080C  3468               	retlw	104	;'h'
  1714  080D  3429               	retlw	41	;')'
  1715  080E  342C               	retlw	44	;','
  1716  080F  3432               	retlw	50	;'2'
  1717  0810  3400               	retlw	0
  1718                           
  1719                           	psect	stringtext2
  1720  0811                     __pstringtext2:
  1721  0811                     STR_3:
  1722  0811  3428               	retlw	40	;'('
  1723  0812  3428               	retlw	40	;'('
  1724  0813  3450               	retlw	80	;'P'
  1725  0814  3449               	retlw	73	;'I'
  1726  0815  3452               	retlw	82	;'R'
  1727  0816  3431               	retlw	49	;'1'
  1728  0817  3429               	retlw	41	;')'
  1729  0818  3426               	retlw	38	;'&'
  1730  0819  3430               	retlw	48	;'0'
  1731  081A  3437               	retlw	55	;'7'
  1732  081B  3446               	retlw	70	;'F'
  1733  081C  3468               	retlw	104	;'h'
  1734  081D  3429               	retlw	41	;')'
  1735  081E  342C               	retlw	44	;','
  1736  081F  3432               	retlw	50	;'2'
  1737  0820  3400               	retlw	0
  1738                           
  1739                           	psect	stringtext3
  1740  0000                     __pstringtext3:
  1741  0811                     
  1742                           	psect	cinit
  1743  0087                     start_initialization:	
  1744                           ; #config settings
  1745                           
  1746  0087                     __initialization:
  1747                           
  1748                           ; Clear objects allocated to BANK0
  1749  0087  3040               	movlw	low __pbssBANK0
  1750  0088  0084               	movwf	4
  1751  0089  3000               	movlw	high __pbssBANK0
  1752  008A  0085               	movwf	5
  1753  008B  301C               	movlw	28
  1754  008C  318F  279A  3180   	fcall	clear_ram0
  1755                           
  1756                           ; Clear objects allocated to BANK1
  1757  008F  30A0               	movlw	low __pbssBANK1
  1758  0090  0084               	movwf	4
  1759  0091  3000               	movlw	high __pbssBANK1
  1760  0092  0085               	movwf	5
  1761  0093  3040               	movlw	64
  1762  0094  318F  279A  3180   	fcall	clear_ram0
  1763                           
  1764                           ; Clear objects allocated to BANK2
  1765  0097  3020               	movlw	low __pbssBANK2
  1766  0098  0084               	movwf	4
  1767  0099  3001               	movlw	high __pbssBANK2
  1768  009A  0085               	movwf	5
  1769  009B  3040               	movlw	64
  1770  009C  318F  279A  3180   	fcall	clear_ram0
  1771                           
  1772                           ; Clear objects allocated to BANK3
  1773  009F  30A0               	movlw	low __pbssBANK3
  1774  00A0  0084               	movwf	4
  1775  00A1  3001               	movlw	high __pbssBANK3
  1776  00A2  0085               	movwf	5
  1777  00A3  3020               	movlw	32
  1778  00A4  318F  279A  3180   	fcall	clear_ram0
  1779  00A7                     end_of_initialization:	
  1780                           ;End of C runtime variable initialization code
  1781                           
  1782  00A7                     __end_of__initialization:
  1783  00A7  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1784  00A8  0020               	movlb	0
  1785  00A9  3186  2EE6         	ljmp	_main	;jump to C main() function
  1786                           
  1787                           	psect	bssBANK0
  1788  0040                     __pbssBANK0:
  1789  0040                     _clockFrequency:
  1790  0040                     	ds	4
  1791  0044                     _filteredDutyPot:
  1792  0044                     	ds	2
  1793  0046                     _filteredFreqPot:
  1794  0046                     	ds	2
  1795  0048                     _filteredVout:
  1796  0048                     	ds	2
  1797  004A                     _filteredIL:
  1798  004A                     	ds	2
  1799  004C                     _filteredIDS:
  1800  004C                     	ds	2
  1801  004E                     _latestIL:
  1802  004E                     	ds	2
  1803  0050                     _prevDuty:
  1804  0050                     	ds	2
  1805  0052                     _setDuty:
  1806  0052                     	ds	2
  1807  0054                     _timerSlotQuarter:
  1808  0054                     	ds	1
  1809  0055                     _timerSlotHalf:
  1810  0055                     	ds	1
  1811  0056                     _potSetCount:
  1812  0056                     	ds	1
  1813  0057                     _tripIL:
  1814  0057                     	ds	1
  1815  0058                     _tripIDS:
  1816  0058                     	ds	1
  1817  0059                     _prevPeriod:
  1818  0059                     	ds	1
  1819  005A                     _currentState:
  1820  005A                     	ds	1
  1821  005B                     _setPeriod:
  1822  005B                     	ds	1
  1823                           
  1824                           	psect	bssBANK1
  1825  00A0                     __pbssBANK1:
  1826  00A0                     _currentILFIFO:
  1827  00A0                     	ds	32
  1828  00C0                     _currentIDSFIFO:
  1829  00C0                     	ds	32
  1830                           
  1831                           	psect	bssBANK2
  1832  0120                     __pbssBANK2:
  1833  0120                     _freqPotFIFO:
  1834  0120                     	ds	32
  1835  0140                     _voutFIFO:
  1836  0140                     	ds	32
  1837                           
  1838                           	psect	bssBANK3
  1839  01A0                     __pbssBANK3:
  1840  01A0                     _dutyPotFIFO:
  1841  01A0                     	ds	32
  1842                           
  1843                           	psect	clrtext
  1844  0F9A                     clear_ram0:	
  1845                           ;	Called with FSR0 containing the base address, and
  1846                           ;	WREG with the size to clear
  1847                           
  1848  0F9A  0064               	clrwdt	;clear the watchdog before getting into this loop
  1849  0F9B                     clrloop0:
  1850  0F9B  0180               	clrf	0	;clear RAM location pointed to by FSR
  1851  0F9C  3101               	addfsr 0,1
  1852  0F9D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1853  0F9E  2F9B               	goto	clrloop0	;have we reached the end yet?
  1854  0F9F  3400               	retlw	0	;all done for this memory range, return
  1855                           
  1856                           	psect	cstackCOMMON
  1857  0070                     __pcstackCOMMON:
  1858  0070                     ?_currentTripRead:
  1859  0070                     ?_transToOverCurrentFault:	
  1860                           ; 1 bytes @ 0x0
  1861                           
  1862  0070                     ??_transToOverCurrentFault:	
  1863                           ; 1 bytes @ 0x0
  1864                           
  1865  0070                     ?_setPWMDutyandPeriod:	
  1866                           ; 1 bytes @ 0x0
  1867                           
  1868  0070                     ?_controlRoutine:	
  1869                           ; 1 bytes @ 0x0
  1870                           
  1871  0070                     ?_runPotScaling:	
  1872                           ; 1 bytes @ 0x0
  1873                           
  1874  0070                     ?_setupInternalOscillator:	
  1875                           ; 1 bytes @ 0x0
  1876                           
  1877  0070                     ?_setupPWM:	
  1878                           ; 1 bytes @ 0x0
  1879                           
  1880  0070                     ?_setupTimer0Interrupt:	
  1881                           ; 1 bytes @ 0x0
  1882                           
  1883  0070                     ?_initialiseADCModule:	
  1884                           ; 1 bytes @ 0x0
  1885                           
  1886  0070                     ?_initialiseCurrentSensors:	
  1887                           ; 1 bytes @ 0x0
  1888                           
  1889  0070                     ?_initialisePotentiometers:	
  1890                           ; 1 bytes @ 0x0
  1891                           
  1892  0070                     ?_readGPIO:	
  1893                           ; 1 bytes @ 0x0
  1894                           
  1895  0070                     ?_transToVoltageModeControl:	
  1896                           ; 1 bytes @ 0x0
  1897                           
  1898  0070                     ?_transToCurrentModeControl:	
  1899                           ; 1 bytes @ 0x0
  1900                           
  1901  0070                     ?_transToPotControl:	
  1902                           ; 1 bytes @ 0x0
  1903                           
  1904  0070                     ?_runVoltageModeControl:	
  1905                           ; 1 bytes @ 0x0
  1906                           
  1907  0070                     ?_runCurrentModeControl:	
  1908                           ; 1 bytes @ 0x0
  1909                           
  1910  0070                     ?_currentTripReset:	
  1911                           ; 1 bytes @ 0x0
  1912                           
  1913  0070                     ?_Tick980Hz:	
  1914                           ; 1 bytes @ 0x0
  1915                           
  1916  0070                     ?_initialiseADCPin:	
  1917                           ; 1 bytes @ 0x0
  1918                           
  1919  0070                     ?i1_writeGPIO:	
  1920                           ; 1 bytes @ 0x0
  1921                           
  1922  0070                     ?i1_readGPIO:	
  1923                           ; 1 bytes @ 0x0
  1924                           
  1925  0070                     ??i1_readGPIO:	
  1926                           ; 1 bytes @ 0x0
  1927                           
  1928  0070                     ?_readFilteredIL:	
  1929                           ; 1 bytes @ 0x0
  1930                           
  1931  0070                     ?_readILCurrentADCRaw:	
  1932                           ; 2 bytes @ 0x0
  1933                           
  1934  0070                     ?_readADCRaw:	
  1935                           ; 2 bytes @ 0x0
  1936                           
  1937  0070                     ?___wmul:	
  1938                           ; 2 bytes @ 0x0
  1939                           
  1940  0070                     ?___lmul:	
  1941                           ; 2 bytes @ 0x0
  1942                           
  1943  0070                     i1writeGPIO@writeValue:	
  1944                           ; 4 bytes @ 0x0
  1945                           
  1946  0070                     setPWMDutyandPeriod@dutyCycle:	
  1947                           ; 1 bytes @ 0x0
  1948                           
  1949  0070                     ___wmul@multiplier:	
  1950                           ; 2 bytes @ 0x0
  1951                           
  1952  0070                     ___lmul@multiplier:	
  1953                           ; 2 bytes @ 0x0
  1954                           
  1955                           
  1956                           ; 4 bytes @ 0x0
  1957  0070                     	ds	1
  1958  0071                     ??i1_writeGPIO:
  1959                           
  1960                           ; 1 bytes @ 0x1
  1961  0071                     	ds	1
  1962  0072                     ??_readFilteredIL:
  1963  0072                     ??_readILCurrentADCRaw:	
  1964                           ; 1 bytes @ 0x2
  1965                           
  1966  0072                     ??_readADCRaw:	
  1967                           ; 1 bytes @ 0x2
  1968                           
  1969  0072                     setPWMDutyandPeriod@period:	
  1970                           ; 1 bytes @ 0x2
  1971                           
  1972  0072                     i1readGPIO@readA:	
  1973                           ; 1 bytes @ 0x2
  1974                           
  1975  0072                     ___wmul@multiplicand:	
  1976                           ; 1 bytes @ 0x2
  1977                           
  1978                           
  1979                           ; 2 bytes @ 0x2
  1980  0072                     	ds	1
  1981  0073                     ??_setPWMDutyandPeriod:
  1982  0073                     i1writeGPIO@portType:	
  1983                           ; 1 bytes @ 0x3
  1984                           
  1985  0073                     i1readGPIO@returnValueA:	
  1986                           ; 1 bytes @ 0x3
  1987                           
  1988                           
  1989                           ; 1 bytes @ 0x3
  1990  0073                     	ds	1
  1991  0074                     ??___wmul:
  1992  0074                     i1writeGPIO@gpioNumber:	
  1993                           ; 1 bytes @ 0x4
  1994                           
  1995  0074                     i1readGPIO@readB:	
  1996                           ; 1 bytes @ 0x4
  1997                           
  1998  0074                     readADCRaw@returnValue:	
  1999                           ; 1 bytes @ 0x4
  2000                           
  2001  0074                     ___wmul@product:	
  2002                           ; 2 bytes @ 0x4
  2003                           
  2004  0074                     ___lmul@multiplicand:	
  2005                           ; 2 bytes @ 0x4
  2006                           
  2007                           
  2008                           ; 4 bytes @ 0x4
  2009  0074                     	ds	1
  2010  0075                     i1writeGPIO@portNumber:
  2011  0075                     i1readGPIO@returnValueB:	
  2012                           ; 1 bytes @ 0x5
  2013                           
  2014                           
  2015                           ; 1 bytes @ 0x5
  2016  0075                     	ds	1
  2017  0076                     ?_convertRawToMilliAmps:
  2018  0076                     ?_convertRawToDeciVolts:	
  2019                           ; 2 bytes @ 0x6
  2020                           
  2021  0076                     ?___lldiv:	
  2022                           ; 2 bytes @ 0x6
  2023                           
  2024  0076                     readADCRaw@channel:	
  2025                           ; 4 bytes @ 0x6
  2026                           
  2027  0076                     i1readGPIO@portNumber:	
  2028                           ; 1 bytes @ 0x6
  2029                           
  2030  0076                     convertRawToDeciVolts@rawValue:	
  2031                           ; 1 bytes @ 0x6
  2032                           
  2033  0076                     convertRawToMilliAmps@rawValue:	
  2034                           ; 2 bytes @ 0x6
  2035                           
  2036  0076                     readFilteredIL@sumOfSamples:	
  2037                           ; 2 bytes @ 0x6
  2038                           
  2039  0076                     ___lldiv@divisor:	
  2040                           ; 4 bytes @ 0x6
  2041                           
  2042                           
  2043                           ; 4 bytes @ 0x6
  2044  0076                     	ds	1
  2045  0077                     readADCRaw@gpioValid:
  2046  0077                     i1readGPIO@portType:	
  2047                           ; 1 bytes @ 0x7
  2048                           
  2049                           
  2050                           ; 1 bytes @ 0x7
  2051  0077                     	ds	1
  2052  0078                     ??_convertRawToMilliAmps:
  2053  0078                     ??_convertRawToDeciVolts:	
  2054                           ; 1 bytes @ 0x8
  2055                           
  2056  0078                     ??___lmul:	
  2057                           ; 1 bytes @ 0x8
  2058                           
  2059  0078                     readADCRaw@i:	
  2060                           ; 1 bytes @ 0x8
  2061                           
  2062  0078                     i1readGPIO@gpioNumber:	
  2063                           ; 1 bytes @ 0x8
  2064                           
  2065  0078                     convertRawToMilliAmps@offsetted:	
  2066                           ; 1 bytes @ 0x8
  2067                           
  2068  0078                     ___lmul@product:	
  2069                           ; 2 bytes @ 0x8
  2070                           
  2071                           
  2072                           ; 4 bytes @ 0x8
  2073  0078                     	ds	1
  2074  0079                     ??_currentTripRead:
  2075  0079                     readADCRaw@i_678:	
  2076                           ; 1 bytes @ 0x9
  2077                           
  2078                           
  2079                           ; 1 bytes @ 0x9
  2080  0079                     	ds	1
  2081  007A                     readADCRaw@gpioNumber:
  2082  007A                     _currentTripRead$916:	
  2083                           ; 1 bytes @ 0xA
  2084                           
  2085  007A                     readFilteredIL@i_924:	
  2086                           ; 1 bytes @ 0xA
  2087                           
  2088  007A                     convertRawToDeciVolts@offsetted:	
  2089                           ; 1 bytes @ 0xA
  2090                           
  2091  007A                     convertRawToMilliAmps@returnValuemA:	
  2092                           ; 2 bytes @ 0xA
  2093                           
  2094  007A                     ___lldiv@dividend:	
  2095                           ; 2 bytes @ 0xA
  2096                           
  2097                           
  2098                           ; 4 bytes @ 0xA
  2099  007A                     	ds	1
  2100  007B                     ?_readFilteredVout:
  2101  007B                     ?_readFilteredDutyPot:	
  2102                           ; 2 bytes @ 0xB
  2103                           
  2104  007B                     ?_readFilteredFreqPot:	
  2105                           ; 2 bytes @ 0xB
  2106                           
  2107  007B                     readFilteredIL@i:	
  2108                           ; 2 bytes @ 0xB
  2109                           
  2110                           
  2111                           ; 1 bytes @ 0xB
  2112  007B                     	ds	1
  2113  007C                     ??_runCurrentModeControl:
  2114  007C                     convertRawToDeciVolts@returnValuedV:	
  2115                           ; 1 bytes @ 0xC
  2116                           
  2117                           
  2118                           ; 2 bytes @ 0xC
  2119  007C                     	ds	2
  2120  007E                     ??_controlRoutine:
  2121  007E                     ??_runVoltageModeControl:	
  2122                           ; 1 bytes @ 0xE
  2123                           
  2124                           
  2125                           	psect	cstackBANK0
  2126  0020                     __pcstackBANK0:	
  2127                           ; 1 bytes @ 0xE
  2128                           
  2129  0020                     ??_readFilteredVout:
  2130  0020                     ??_readFilteredDutyPot:	
  2131                           ; 1 bytes @ 0x0
  2132                           
  2133  0020                     ??_readFilteredFreqPot:	
  2134                           ; 1 bytes @ 0x0
  2135                           
  2136  0020                     ??___lldiv:	
  2137                           ; 1 bytes @ 0x0
  2138                           
  2139                           
  2140                           ; 1 bytes @ 0x0
  2141  0020                     	ds	1
  2142  0021                     ___lldiv@quotient:
  2143                           
  2144                           ; 4 bytes @ 0x1
  2145  0021                     	ds	3
  2146  0024                     readFilteredDutyPot@sumOfSamples:
  2147  0024                     readFilteredFreqPot@sumOfSamples:	
  2148                           ; 4 bytes @ 0x4
  2149                           
  2150  0024                     readFilteredVout@sumOfSamples:	
  2151                           ; 4 bytes @ 0x4
  2152                           
  2153                           
  2154                           ; 4 bytes @ 0x4
  2155  0024                     	ds	1
  2156  0025                     ___lldiv@counter:
  2157                           
  2158                           ; 1 bytes @ 0x5
  2159  0025                     	ds	1
  2160  0026                     ??_runPotScaling:
  2161                           
  2162                           ; 1 bytes @ 0x6
  2163  0026                     	ds	2
  2164  0028                     readFilteredDutyPot@i_777:
  2165  0028                     readFilteredFreqPot@i_781:	
  2166                           ; 1 bytes @ 0x8
  2167                           
  2168  0028                     readFilteredVout@i_840:	
  2169                           ; 1 bytes @ 0x8
  2170                           
  2171                           
  2172                           ; 1 bytes @ 0x8
  2173  0028                     	ds	1
  2174  0029                     readFilteredDutyPot@i:
  2175  0029                     readFilteredFreqPot@i:	
  2176                           ; 1 bytes @ 0x9
  2177                           
  2178  0029                     readFilteredVout@i:	
  2179                           ; 1 bytes @ 0x9
  2180                           
  2181                           
  2182                           ; 1 bytes @ 0x9
  2183  0029                     	ds	5
  2184  002E                     runPotScaling@maxDuty:
  2185                           
  2186                           ; 2 bytes @ 0xE
  2187  002E                     	ds	2
  2188  0030                     runPotScaling@minDuty:
  2189                           
  2190                           ; 2 bytes @ 0x10
  2191  0030                     	ds	2
  2192  0032                     ??_Tick980Hz:
  2193                           
  2194                           ; 1 bytes @ 0x12
  2195  0032                     	ds	1
  2196  0033                     ?_writeGPIO:
  2197  0033                     ??_setupInternalOscillator:	
  2198                           ; 1 bytes @ 0x13
  2199                           
  2200  0033                     ??_setupTimer0Interrupt:	
  2201                           ; 1 bytes @ 0x13
  2202                           
  2203  0033                     ??_initialiseADCModule:	
  2204                           ; 1 bytes @ 0x13
  2205                           
  2206  0033                     ?_initialiseGPIO:	
  2207                           ; 1 bytes @ 0x13
  2208                           
  2209  0033                     ??_readGPIO:	
  2210                           ; 1 bytes @ 0x13
  2211                           
  2212  0033                     ??_transToVoltageModeControl:	
  2213                           ; 1 bytes @ 0x13
  2214                           
  2215  0033                     ??_transToCurrentModeControl:	
  2216                           ; 1 bytes @ 0x13
  2217                           
  2218  0033                     ??_transToPotControl:	
  2219                           ; 1 bytes @ 0x13
  2220                           
  2221  0033                     ??_initialiseADCPin:	
  2222                           ; 1 bytes @ 0x13
  2223                           
  2224  0033                     initialiseGPIO@direction:	
  2225                           ; 1 bytes @ 0x13
  2226                           
  2227  0033                     writeGPIO@writeValue:	
  2228                           ; 1 bytes @ 0x13
  2229                           
  2230                           
  2231                           ; 1 bytes @ 0x13
  2232  0033                     	ds	1
  2233  0034                     ??_writeGPIO:
  2234  0034                     ??_initialiseGPIO:	
  2235                           ; 1 bytes @ 0x14
  2236                           
  2237                           
  2238                           ; 1 bytes @ 0x14
  2239  0034                     	ds	1
  2240  0035                     setupInternalOscillator@selectedFreq:
  2241  0035                     initialiseADCPin@gpioValid:	
  2242                           ; 1 bytes @ 0x15
  2243                           
  2244  0035                     readGPIO@readA:	
  2245                           ; 1 bytes @ 0x15
  2246                           
  2247                           
  2248                           ; 1 bytes @ 0x15
  2249  0035                     	ds	1
  2250  0036                     initialiseADCPin@portType:
  2251  0036                     initialiseGPIO@portType:	
  2252                           ; 1 bytes @ 0x16
  2253                           
  2254  0036                     writeGPIO@portType:	
  2255                           ; 1 bytes @ 0x16
  2256                           
  2257  0036                     readGPIO@returnValueA:	
  2258                           ; 1 bytes @ 0x16
  2259                           
  2260                           
  2261                           ; 1 bytes @ 0x16
  2262  0036                     	ds	1
  2263  0037                     initialiseADCPin@portNumber:
  2264  0037                     initialiseGPIO@gpioNumber:	
  2265                           ; 1 bytes @ 0x17
  2266                           
  2267  0037                     writeGPIO@gpioNumber:	
  2268                           ; 1 bytes @ 0x17
  2269                           
  2270  0037                     readGPIO@readB:	
  2271                           ; 1 bytes @ 0x17
  2272                           
  2273                           
  2274                           ; 1 bytes @ 0x17
  2275  0037                     	ds	1
  2276  0038                     initialiseADCPin@gpioNumber:
  2277  0038                     initialiseGPIO@portNumber:	
  2278                           ; 1 bytes @ 0x18
  2279                           
  2280  0038                     writeGPIO@portNumber:	
  2281                           ; 1 bytes @ 0x18
  2282                           
  2283  0038                     readGPIO@returnValueB:	
  2284                           ; 1 bytes @ 0x18
  2285                           
  2286                           
  2287                           ; 1 bytes @ 0x18
  2288  0038                     	ds	1
  2289  0039                     ??_setupPWM:
  2290  0039                     ??_initialiseCurrentSensors:	
  2291                           ; 1 bytes @ 0x19
  2292                           
  2293  0039                     ??_initialisePotentiometers:	
  2294                           ; 1 bytes @ 0x19
  2295                           
  2296  0039                     ??_currentTripReset:	
  2297                           ; 1 bytes @ 0x19
  2298                           
  2299  0039                     readGPIO@portNumber:	
  2300                           ; 1 bytes @ 0x19
  2301                           
  2302                           
  2303                           ; 1 bytes @ 0x19
  2304  0039                     	ds	1
  2305  003A                     readGPIO@portType:
  2306                           
  2307                           ; 1 bytes @ 0x1A
  2308  003A                     	ds	1
  2309  003B                     readGPIO@gpioNumber:
  2310                           
  2311                           ; 1 bytes @ 0x1B
  2312  003B                     	ds	1
  2313  003C                     ?_main:
  2314  003C                     main@argc:	
  2315                           ; 2 bytes @ 0x1C
  2316                           
  2317                           
  2318                           ; 2 bytes @ 0x1C
  2319  003C                     	ds	2
  2320  003E                     main@argv:
  2321                           
  2322                           ; 2 bytes @ 0x1E
  2323  003E                     	ds	2
  2324  0040                     ??_main:
  2325                           
  2326                           	psect	maintext
  2327  06E6                     __pmaintext:	
  2328                           ; 1 bytes @ 0x20
  2329 ;;
  2330 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2331 ;;
  2332 ;; *************** function _main *****************
  2333 ;; Defined at:
  2334 ;;		line 103 in file "main.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;  argc            2   28[BANK0 ] int 
  2337 ;;  argv            2   30[BANK0 ] PTR PTR unsigned char 
  2338 ;; Auto vars:     Size  Location     Type
  2339 ;;		None
  2340 ;; Return value:  Size  Location     Type
  2341 ;;                  2   28[BANK0 ] int 
  2342 ;; Registers used:
  2343 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2344 ;; Tracked objects:
  2345 ;;		On entry : B1F/0
  2346 ;;		On exit  : 0/0
  2347 ;;		Unchanged: 0/0
  2348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2349 ;;      Params:         0       4       0       0       0       0
  2350 ;;      Locals:         0       0       0       0       0       0
  2351 ;;      Temps:          0       0       0       0       0       0
  2352 ;;      Totals:         0       4       0       0       0       0
  2353 ;;Total ram usage:        4 bytes
  2354 ;; Hardware stack levels required when called: 8
  2355 ;; This function calls:
  2356 ;;		_initialiseADCModule
  2357 ;;		_initialiseCurrentSensors
  2358 ;;		_initialiseGPIO
  2359 ;;		_initialisePotentiometers
  2360 ;;		_readGPIO
  2361 ;;		_setupInternalOscillator
  2362 ;;		_setupPWM
  2363 ;;		_setupTimer0Interrupt
  2364 ;;		_transToCurrentModeControl
  2365 ;;		_transToPotControl
  2366 ;;		_transToVoltageModeControl
  2367 ;; This function is called by:
  2368 ;;		Startup code after reset
  2369 ;; This function uses a non-reentrant model
  2370 ;;
  2371                           
  2372  06E6                     _main:	
  2373                           ;psect for function _main
  2374                           
  2375  06E6                     l2480:	
  2376                           ;incstack = 0
  2377                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2378                           
  2379                           
  2380                           ;main.c: 105:     setupInternalOscillator(freq32M);
  2381  06E6  300A               	movlw	10
  2382  06E7  3181  2187  3186   	fcall	_setupInternalOscillator
  2383  06EA                     l2482:
  2384                           
  2385                           ;main.c: 107:     setupPWM();
  2386  06EA  3187  27CD  3186   	fcall	_setupPWM
  2387  06ED                     l2484:
  2388                           
  2389                           ;main.c: 108:     setupTimer0Interrupt();
  2390  06ED  318F  27A0  3186   	fcall	_setupTimer0Interrupt
  2391  06F0                     l2486:
  2392                           
  2393                           ;main.c: 109:     initialiseADCModule();
  2394  06F0  318F  2788  3186   	fcall	_initialiseADCModule
  2395  06F3                     l2488:
  2396                           
  2397                           ;main.c: 110:     initialiseCurrentSensors();
  2398  06F3  3187  278E  3186   	fcall	_initialiseCurrentSensors
  2399  06F6                     l2490:
  2400                           
  2401                           ;main.c: 111:     initialisePotentiometers();
  2402  06F6  318F  27C3  3186   	fcall	_initialisePotentiometers
  2403  06F9                     l2492:
  2404                           
  2405                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  2406  06F9  0020               	movlb	0	; select bank0
  2407  06FA  01B3               	clrf	initialiseGPIO@direction
  2408  06FB  300C               	movlw	12
  2409  06FC  3182  2262  3186   	fcall	_initialiseGPIO
  2410  06FF                     l2494:
  2411                           
  2412                           ;main.c: 114:         if(1) transToVoltageModeControl();
  2413  06FF  3008               	movlw	8
  2414  0700  3186  266F  3186   	fcall	_readGPIO
  2415  0703  3A01               	xorlw	1
  2416  0704  1903               	skipnz
  2417  0705  2F07               	goto	u2261
  2418  0706  2F08               	goto	u2260
  2419  0707                     u2261:
  2420  0707  2F0F               	goto	l2498
  2421  0708                     u2260:
  2422  0708                     l2496:
  2423  0708  318F  2794  3186   	fcall	_transToVoltageModeControl
  2424  070B                     l112:	
  2425                           ;main.c: 115:         if(~1) transToCurrentModeControl();
  2426                           
  2427  070B  318F  278E  3186   	fcall	_transToCurrentModeControl
  2428  070E  2F12               	goto	l115
  2429  070F                     l2498:
  2430  070F  318F  2784  3186   	fcall	_transToPotControl
  2431  0712                     l115:	
  2432                           ;main.c: 119:     while(1){
  2433                           
  2434  0712  2F12               	goto	l115
  2435  0713  3180  2885         	ljmp	start
  2436  0715                     __end_of_main:
  2437                           
  2438                           	psect	text1
  2439  0F94                     __ptext1:	
  2440 ;; *************** function _transToVoltageModeControl *****************
  2441 ;; Defined at:
  2442 ;;		line 27 in file "StateMachine.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2456 ;;      Params:         0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0
  2458 ;;      Temps:          0       1       0       0       0       0
  2459 ;;      Totals:         0       1       0       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 5
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470  0F94                     _transToVoltageModeControl:	
  2471                           ;psect for function _transToVoltageModeControl
  2472                           
  2473  0F94                     l2416:	
  2474                           ;incstack = 0
  2475                           ; Regs used in _transToVoltageModeControl: [wreg]
  2476                           
  2477                           
  2478                           ;StateMachine.c: 28:     currentState = voltageModeControl;
  2479  0F94  3002               	movlw	2
  2480  0F95  0020               	movlb	0	; select bank0
  2481  0F96  00B3               	movwf	??_transToVoltageModeControl
  2482  0F97  0833               	movf	??_transToVoltageModeControl,w
  2483  0F98  00DA               	movwf	_currentState
  2484  0F99                     l518:
  2485  0F99  0008               	return
  2486  0F9A                     __end_of_transToVoltageModeControl:
  2487                           
  2488                           	psect	text2
  2489  0F84                     __ptext2:	
  2490 ;; *************** function _transToPotControl *****************
  2491 ;; Defined at:
  2492 ;;		line 18 in file "StateMachine.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;		None
  2495 ;; Auto vars:     Size  Location     Type
  2496 ;;		None
  2497 ;; Return value:  Size  Location     Type
  2498 ;;                  1    wreg      void 
  2499 ;; Registers used:
  2500 ;;		None
  2501 ;; Tracked objects:
  2502 ;;		On entry : 0/0
  2503 ;;		On exit  : 0/0
  2504 ;;		Unchanged: 0/0
  2505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2506 ;;      Params:         0       0       0       0       0       0
  2507 ;;      Locals:         0       0       0       0       0       0
  2508 ;;      Temps:          0       0       0       0       0       0
  2509 ;;      Totals:         0       0       0       0       0       0
  2510 ;;Total ram usage:        0 bytes
  2511 ;; Hardware stack levels used: 1
  2512 ;; Hardware stack levels required when called: 5
  2513 ;; This function calls:
  2514 ;;		Nothing
  2515 ;; This function is called by:
  2516 ;;		_main
  2517 ;; This function uses a non-reentrant model
  2518 ;;
  2519                           
  2520  0F84                     _transToPotControl:	
  2521                           ;psect for function _transToPotControl
  2522                           
  2523  0F84                     l2420:	
  2524                           ;incstack = 0
  2525                           ; Regs used in _transToPotControl: []
  2526                           
  2527                           
  2528                           ;StateMachine.c: 19:     currentState = potControl;
  2529  0F84  0020               	movlb	0	; select bank0
  2530  0F85  01DA               	clrf	_currentState
  2531  0F86  0ADA               	incf	_currentState,f
  2532  0F87                     l515:
  2533  0F87  0008               	return
  2534  0F88                     __end_of_transToPotControl:
  2535                           
  2536                           	psect	text3
  2537  0F8E                     __ptext3:	
  2538 ;; *************** function _transToCurrentModeControl *****************
  2539 ;; Defined at:
  2540 ;;		line 36 in file "StateMachine.c"
  2541 ;; Parameters:    Size  Location     Type
  2542 ;;		None
  2543 ;; Auto vars:     Size  Location     Type
  2544 ;;		None
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  1    wreg      void 
  2547 ;; Registers used:
  2548 ;;		wreg
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2554 ;;      Params:         0       0       0       0       0       0
  2555 ;;      Locals:         0       0       0       0       0       0
  2556 ;;      Temps:          0       1       0       0       0       0
  2557 ;;      Totals:         0       1       0       0       0       0
  2558 ;;Total ram usage:        1 bytes
  2559 ;; Hardware stack levels used: 1
  2560 ;; Hardware stack levels required when called: 5
  2561 ;; This function calls:
  2562 ;;		Nothing
  2563 ;; This function is called by:
  2564 ;;		_main
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568  0F8E                     _transToCurrentModeControl:	
  2569                           ;psect for function _transToCurrentModeControl
  2570                           
  2571  0F8E                     l2418:	
  2572                           ;incstack = 0
  2573                           ; Regs used in _transToCurrentModeControl: [wreg]
  2574                           
  2575                           
  2576                           ;StateMachine.c: 37:     currentState = currentModeControl;
  2577  0F8E  3003               	movlw	3
  2578  0F8F  0020               	movlb	0	; select bank0
  2579  0F90  00B3               	movwf	??_transToCurrentModeControl
  2580  0F91  0833               	movf	??_transToCurrentModeControl,w
  2581  0F92  00DA               	movwf	_currentState
  2582  0F93                     l521:
  2583  0F93  0008               	return
  2584  0F94                     __end_of_transToCurrentModeControl:
  2585                           
  2586                           	psect	text4
  2587  0FA0                     __ptext4:	
  2588 ;; *************** function _setupTimer0Interrupt *****************
  2589 ;; Defined at:
  2590 ;;		line 17 in file "Timer0.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2604 ;;      Params:         0       0       0       0       0       0
  2605 ;;      Locals:         0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0
  2607 ;;      Totals:         0       0       0       0       0       0
  2608 ;;Total ram usage:        0 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 5
  2611 ;; This function calls:
  2612 ;;		Nothing
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618  0FA0                     _setupTimer0Interrupt:	
  2619                           ;psect for function _setupTimer0Interrupt
  2620                           
  2621  0FA0                     l2372:	
  2622                           ;incstack = 0
  2623                           ; Regs used in _setupTimer0Interrupt: [wreg]
  2624                           
  2625                           
  2626                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  2627  0FA0  178B               	bsf	11,7	;volatile
  2628                           
  2629                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  2630  0FA1  168B               	bsf	11,5	;volatile
  2631                           
  2632                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  2633  0FA2  0021               	movlb	1	; select bank1
  2634  0FA3  1295               	bcf	21,5	;volatile
  2635                           
  2636                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  2637  0FA4  1195               	bcf	21,3	;volatile
  2638  0FA5                     l2374:
  2639                           
  2640                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  2641  0FA5  3004               	movlw	4
  2642  0FA6  0095               	movwf	21	;volatile
  2643  0FA7                     l196:
  2644  0FA7  0008               	return
  2645  0FA8                     __end_of_setupTimer0Interrupt:
  2646                           
  2647                           	psect	text5
  2648  07CD                     __ptext5:	
  2649 ;; *************** function _setupPWM *****************
  2650 ;; Defined at:
  2651 ;;		line 16 in file "PWM.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;		None
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, status,2, status,0, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2665 ;;      Params:         0       0       0       0       0       0
  2666 ;;      Locals:         0       0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0
  2668 ;;      Totals:         0       0       0       0       0       0
  2669 ;;Total ram usage:        0 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 6
  2672 ;; This function calls:
  2673 ;;		_initialiseGPIO
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679  07CD                     _setupPWM:	
  2680                           ;psect for function _setupPWM
  2681                           
  2682  07CD                     l2348:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2685                           
  2686                           
  2687                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2688  07CD  300C               	movlw	12
  2689  07CE  0025               	movlb	5	; select bank5
  2690  07CF  0093               	movwf	19	;volatile
  2691  07D0                     l2350:
  2692                           
  2693                           ;PWM.c: 20:     PR2 = 0;
  2694  07D0  0020               	movlb	0	; select bank0
  2695  07D1  019B               	clrf	27	;volatile
  2696  07D2                     l2352:
  2697                           
  2698                           ;PWM.c: 21:     CCPR1L = 0;
  2699  07D2  0025               	movlb	5	; select bank5
  2700  07D3  0191               	clrf	17	;volatile
  2701  07D4                     l2354:
  2702                           
  2703                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2704  07D4  0022               	movlb	2	; select bank2
  2705  07D5  151D               	bsf	29,2	;volatile
  2706  07D6                     l2356:
  2707                           
  2708                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2709  07D6  0025               	movlb	5	; select bank5
  2710  07D7  1596               	bsf	22,3	;volatile
  2711  07D8                     l2358:
  2712                           
  2713                           ;PWM.c: 25:     PSTR1CONbits.STR1A = 0;
  2714  07D8  1016               	bcf	22,0	;volatile
  2715  07D9                     l2360:
  2716                           
  2717                           ;PWM.c: 27:     T2CONbits.T2CKPS = 0b00;
  2718  07D9  30FC               	movlw	-4
  2719  07DA  0020               	movlb	0	; select bank0
  2720  07DB  059C               	andwf	28,f	;volatile
  2721  07DC                     l2362:
  2722                           
  2723                           ;PWM.c: 28:     PIE1bits.TMR2IE = 0;
  2724  07DC  0021               	movlb	1	; select bank1
  2725  07DD  1091               	bcf	17,1	;volatile
  2726  07DE                     l2364:
  2727                           
  2728                           ;PWM.c: 29:     T2CONbits.TMR2ON = 1;
  2729  07DE  0020               	movlb	0	; select bank0
  2730  07DF  151C               	bsf	28,2	;volatile
  2731  07E0                     l2366:
  2732                           
  2733                           ;PWM.c: 31:     INTCONbits.PEIE = 1;
  2734  07E0  170B               	bsf	11,6	;volatile
  2735  07E1                     l2368:
  2736                           
  2737                           ;PWM.c: 32:     PIE1bits.CCP1IE = 1;
  2738  07E1  0021               	movlb	1	; select bank1
  2739  07E2  1511               	bsf	17,2	;volatile
  2740  07E3                     l2370:
  2741                           
  2742                           ;PWM.c: 36:     initialiseGPIO(pinRA6, 0);
  2743  07E3  0020               	movlb	0	; select bank0
  2744  07E4  01B3               	clrf	initialiseGPIO@direction
  2745  07E5  3006               	movlw	6
  2746  07E6  3182  2262  3187   	fcall	_initialiseGPIO
  2747  07E9                     l169:
  2748  07E9  0008               	return
  2749  07EA                     __end_of_setupPWM:
  2750                           
  2751                           	psect	text6
  2752  0187                     __ptext6:	
  2753 ;; *************** function _setupInternalOscillator *****************
  2754 ;; Defined at:
  2755 ;;		line 130 in file "main.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  selectedFreq    1    wreg     const enum E2840
  2758 ;; Auto vars:     Size  Location     Type
  2759 ;;  selectedFreq    1   21[BANK0 ] const enum E2840
  2760 ;; Return value:  Size  Location     Type
  2761 ;;                  1    wreg      void 
  2762 ;; Registers used:
  2763 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2764 ;; Tracked objects:
  2765 ;;		On entry : 0/0
  2766 ;;		On exit  : 0/0
  2767 ;;		Unchanged: 0/0
  2768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2769 ;;      Params:         0       0       0       0       0       0
  2770 ;;      Locals:         0       1       0       0       0       0
  2771 ;;      Temps:          0       2       0       0       0       0
  2772 ;;      Totals:         0       3       0       0       0       0
  2773 ;;Total ram usage:        3 bytes
  2774 ;; Hardware stack levels used: 1
  2775 ;; Hardware stack levels required when called: 5
  2776 ;; This function calls:
  2777 ;;		Nothing
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783  0187                     _setupInternalOscillator:	
  2784                           ;psect for function _setupInternalOscillator
  2785                           
  2786                           
  2787                           ;incstack = 0
  2788                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2789                           ;setupInternalOscillator@selectedFreq stored from wreg
  2790  0187  0020               	movlb	0	; select bank0
  2791  0188  00B5               	movwf	setupInternalOscillator@selectedFreq
  2792  0189                     l2270:
  2793                           
  2794                           ;main.c: 134:     switch(selectedFreq){
  2795  0189  2A36               	goto	l2340
  2796  018A                     l2272:
  2797  018A  3087               	movlw	-121
  2798  018B  0021               	movlb	1	; select bank1
  2799  018C  0599               	andwf	25,f	;volatile
  2800  018D                     l2274:
  2801  018D  1399               	bcf	25,7	;volatile
  2802  018E                     l2276:
  2803  018E  3000               	movlw	0
  2804  018F  0020               	movlb	0	; select bank0
  2805  0190  00C3               	movwf	_clockFrequency+3
  2806  0191  3000               	movlw	0
  2807  0192  00C2               	movwf	_clockFrequency+2
  2808  0193  3079               	movlw	121
  2809  0194  00C1               	movwf	_clockFrequency+1
  2810  0195  3018               	movlw	24
  2811  0196  00C0               	movwf	_clockFrequency
  2812  0197  2A61               	goto	l134
  2813  0198                     l2278:
  2814  0198  0021               	movlb	1	; select bank1
  2815  0199  0819               	movf	25,w	;volatile
  2816  019A  3987               	andlw	-121
  2817  019B  3820               	iorlw	32
  2818  019C  0099               	movwf	25	;volatile
  2819  019D                     l2280:
  2820  019D  1399               	bcf	25,7	;volatile
  2821  019E                     l2282:
  2822  019E  3000               	movlw	0
  2823  019F  0020               	movlb	0	; select bank0
  2824  01A0  00C3               	movwf	_clockFrequency+3
  2825  01A1  3000               	movlw	0
  2826  01A2  00C2               	movwf	_clockFrequency+2
  2827  01A3  30F4               	movlw	244
  2828  01A4  00C1               	movwf	_clockFrequency+1
  2829  01A5  3024               	movlw	36
  2830  01A6  00C0               	movwf	_clockFrequency
  2831  01A7  2A61               	goto	l134
  2832  01A8                     l2284:
  2833  01A8  0021               	movlb	1	; select bank1
  2834  01A9  0819               	movf	25,w	;volatile
  2835  01AA  3987               	andlw	-121
  2836  01AB  3828               	iorlw	40
  2837  01AC  0099               	movwf	25	;volatile
  2838  01AD                     l2286:
  2839  01AD  1399               	bcf	25,7	;volatile
  2840  01AE                     l2288:
  2841  01AE  3000               	movlw	0
  2842  01AF  0020               	movlb	0	; select bank0
  2843  01B0  00C3               	movwf	_clockFrequency+3
  2844  01B1  3001               	movlw	1
  2845  01B2  00C2               	movwf	_clockFrequency+2
  2846  01B3  30E8               	movlw	232
  2847  01B4  00C1               	movwf	_clockFrequency+1
  2848  01B5  3048               	movlw	72
  2849  01B6  00C0               	movwf	_clockFrequency
  2850  01B7  2A61               	goto	l134
  2851  01B8                     l2290:
  2852  01B8  0021               	movlb	1	; select bank1
  2853  01B9  0819               	movf	25,w	;volatile
  2854  01BA  3987               	andlw	-121
  2855  01BB  3830               	iorlw	48
  2856  01BC  0099               	movwf	25	;volatile
  2857  01BD                     l2292:
  2858  01BD  1399               	bcf	25,7	;volatile
  2859  01BE                     l2294:
  2860  01BE  3000               	movlw	0
  2861  01BF  0020               	movlb	0	; select bank0
  2862  01C0  00C3               	movwf	_clockFrequency+3
  2863  01C1  3003               	movlw	3
  2864  01C2  00C2               	movwf	_clockFrequency+2
  2865  01C3  30D0               	movlw	208
  2866  01C4  00C1               	movwf	_clockFrequency+1
  2867  01C5  3090               	movlw	144
  2868  01C6  00C0               	movwf	_clockFrequency
  2869  01C7  2A61               	goto	l134
  2870  01C8                     l2296:
  2871  01C8  0021               	movlb	1	; select bank1
  2872  01C9  0819               	movf	25,w	;volatile
  2873  01CA  3987               	andlw	-121
  2874  01CB  3838               	iorlw	56
  2875  01CC  0099               	movwf	25	;volatile
  2876  01CD                     l2298:
  2877  01CD  1399               	bcf	25,7	;volatile
  2878  01CE                     l2300:
  2879  01CE  3000               	movlw	0
  2880  01CF  0020               	movlb	0	; select bank0
  2881  01D0  00C3               	movwf	_clockFrequency+3
  2882  01D1  3007               	movlw	7
  2883  01D2  00C2               	movwf	_clockFrequency+2
  2884  01D3  30A1               	movlw	161
  2885  01D4  00C1               	movwf	_clockFrequency+1
  2886  01D5  3020               	movlw	32
  2887  01D6  00C0               	movwf	_clockFrequency
  2888  01D7  2A61               	goto	l134
  2889  01D8                     l2302:
  2890  01D8  0021               	movlb	1	; select bank1
  2891  01D9  0819               	movf	25,w	;volatile
  2892  01DA  3987               	andlw	-121
  2893  01DB  3858               	iorlw	88
  2894  01DC  0099               	movwf	25	;volatile
  2895  01DD                     l2304:
  2896  01DD  1399               	bcf	25,7	;volatile
  2897  01DE                     l2306:
  2898  01DE  3000               	movlw	0
  2899  01DF  0020               	movlb	0	; select bank0
  2900  01E0  00C3               	movwf	_clockFrequency+3
  2901  01E1  300F               	movlw	15
  2902  01E2  00C2               	movwf	_clockFrequency+2
  2903  01E3  3042               	movlw	66
  2904  01E4  00C1               	movwf	_clockFrequency+1
  2905  01E5  3040               	movlw	64
  2906  01E6  00C0               	movwf	_clockFrequency
  2907  01E7  2A61               	goto	l134
  2908  01E8                     l2308:
  2909  01E8  0021               	movlb	1	; select bank1
  2910  01E9  0819               	movf	25,w	;volatile
  2911  01EA  3987               	andlw	-121
  2912  01EB  3860               	iorlw	96
  2913  01EC  0099               	movwf	25	;volatile
  2914  01ED                     l2310:
  2915  01ED  1399               	bcf	25,7	;volatile
  2916  01EE                     l2312:
  2917  01EE  3000               	movlw	0
  2918  01EF  0020               	movlb	0	; select bank0
  2919  01F0  00C3               	movwf	_clockFrequency+3
  2920  01F1  301E               	movlw	30
  2921  01F2  00C2               	movwf	_clockFrequency+2
  2922  01F3  3084               	movlw	132
  2923  01F4  00C1               	movwf	_clockFrequency+1
  2924  01F5  3080               	movlw	128
  2925  01F6  00C0               	movwf	_clockFrequency
  2926  01F7  2A61               	goto	l134
  2927  01F8                     l2314:
  2928  01F8  0021               	movlb	1	; select bank1
  2929  01F9  0819               	movf	25,w	;volatile
  2930  01FA  3987               	andlw	-121
  2931  01FB  3868               	iorlw	104
  2932  01FC  0099               	movwf	25	;volatile
  2933  01FD                     l2316:
  2934  01FD  1399               	bcf	25,7	;volatile
  2935  01FE                     l2318:
  2936  01FE  3000               	movlw	0
  2937  01FF  0020               	movlb	0	; select bank0
  2938  0200  00C3               	movwf	_clockFrequency+3
  2939  0201  303D               	movlw	61
  2940  0202  00C2               	movwf	_clockFrequency+2
  2941  0203  3009               	movlw	9
  2942  0204  00C1               	movwf	_clockFrequency+1
  2943  0205  3000               	movlw	0
  2944  0206  00C0               	movwf	_clockFrequency
  2945  0207  2A61               	goto	l134
  2946  0208                     l2320:
  2947  0208  0021               	movlb	1	; select bank1
  2948  0209  0819               	movf	25,w	;volatile
  2949  020A  3987               	andlw	-121
  2950  020B  3870               	iorlw	112
  2951  020C  0099               	movwf	25	;volatile
  2952  020D                     l2322:
  2953  020D  1399               	bcf	25,7	;volatile
  2954  020E                     l2324:
  2955  020E  3000               	movlw	0
  2956  020F  0020               	movlb	0	; select bank0
  2957  0210  00C3               	movwf	_clockFrequency+3
  2958  0211  307A               	movlw	122
  2959  0212  00C2               	movwf	_clockFrequency+2
  2960  0213  3012               	movlw	18
  2961  0214  00C1               	movwf	_clockFrequency+1
  2962  0215  3000               	movlw	0
  2963  0216  00C0               	movwf	_clockFrequency
  2964  0217  2A61               	goto	l134
  2965  0218                     l2326:
  2966  0218  3078               	movlw	120
  2967  0219  0021               	movlb	1	; select bank1
  2968  021A  0499               	iorwf	25,f	;volatile
  2969  021B                     l2328:
  2970  021B  1399               	bcf	25,7	;volatile
  2971  021C                     l2330:
  2972  021C  3000               	movlw	0
  2973  021D  0020               	movlb	0	; select bank0
  2974  021E  00C3               	movwf	_clockFrequency+3
  2975  021F  30F4               	movlw	244
  2976  0220  00C2               	movwf	_clockFrequency+2
  2977  0221  3024               	movlw	36
  2978  0222  00C1               	movwf	_clockFrequency+1
  2979  0223  3000               	movlw	0
  2980  0224  00C0               	movwf	_clockFrequency
  2981  0225  2A61               	goto	l134
  2982  0226                     l2332:
  2983  0226  0021               	movlb	1	; select bank1
  2984  0227  0819               	movf	25,w	;volatile
  2985  0228  3987               	andlw	-121
  2986  0229  3870               	iorlw	112
  2987  022A  0099               	movwf	25	;volatile
  2988  022B                     l2334:
  2989  022B  1799               	bsf	25,7	;volatile
  2990  022C                     l2336:
  2991  022C  3001               	movlw	1
  2992  022D  0020               	movlb	0	; select bank0
  2993  022E  00C3               	movwf	_clockFrequency+3
  2994  022F  30E8               	movlw	232
  2995  0230  00C2               	movwf	_clockFrequency+2
  2996  0231  3048               	movlw	72
  2997  0232  00C1               	movwf	_clockFrequency+1
  2998  0233  3000               	movlw	0
  2999  0234  00C0               	movwf	_clockFrequency
  3000  0235  2A61               	goto	l134
  3001  0236                     l2340:
  3002  0236  0835               	movf	setupInternalOscillator@selectedFreq,w
  3003  0237  00B3               	movwf	??_setupInternalOscillator
  3004  0238  01B4               	clrf	??_setupInternalOscillator+1
  3005                           
  3006                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3007                           ; Switch size 1, requested type "simple"
  3008                           ; Number of cases is 1, Range of values is 0 to 0
  3009                           ; switch strategies available:
  3010                           ; Name         Instructions Cycles
  3011                           ; simple_byte            4     3 (average)
  3012                           ; direct_byte            8     6 (fixed)
  3013                           ; jumptable            260     6 (fixed)
  3014                           ;	Chosen strategy is simple_byte
  3015  0239  0834               	movf	??_setupInternalOscillator+1,w
  3016  023A  3A00               	xorlw	0	; case 0
  3017  023B  1903               	skipnz
  3018  023C  2A3E               	goto	l2558
  3019  023D  2A61               	goto	l134
  3020  023E                     l2558:
  3021                           
  3022                           ; Switch size 1, requested type "simple"
  3023                           ; Number of cases is 11, Range of values is 0 to 10
  3024                           ; switch strategies available:
  3025                           ; Name         Instructions Cycles
  3026                           ; direct_byte           28     6 (fixed)
  3027                           ; simple_byte           34    18 (average)
  3028                           ; jumptable            260     6 (fixed)
  3029                           ;	Chosen strategy is simple_byte
  3030  023E  0833               	movf	??_setupInternalOscillator,w
  3031  023F  3A00               	xorlw	0	; case 0
  3032  0240  1903               	skipnz
  3033  0241  298A               	goto	l2272
  3034  0242  3A01               	xorlw	1	; case 1
  3035  0243  1903               	skipnz
  3036  0244  2998               	goto	l2278
  3037  0245  3A03               	xorlw	3	; case 2
  3038  0246  1903               	skipnz
  3039  0247  29A8               	goto	l2284
  3040  0248  3A01               	xorlw	1	; case 3
  3041  0249  1903               	skipnz
  3042  024A  29B8               	goto	l2290
  3043  024B  3A07               	xorlw	7	; case 4
  3044  024C  1903               	skipnz
  3045  024D  29C8               	goto	l2296
  3046  024E  3A01               	xorlw	1	; case 5
  3047  024F  1903               	skipnz
  3048  0250  29D8               	goto	l2302
  3049  0251  3A03               	xorlw	3	; case 6
  3050  0252  1903               	skipnz
  3051  0253  29E8               	goto	l2308
  3052  0254  3A01               	xorlw	1	; case 7
  3053  0255  1903               	skipnz
  3054  0256  29F8               	goto	l2314
  3055  0257  3A0F               	xorlw	15	; case 8
  3056  0258  1903               	skipnz
  3057  0259  2A08               	goto	l2320
  3058  025A  3A01               	xorlw	1	; case 9
  3059  025B  1903               	skipnz
  3060  025C  2A18               	goto	l2326
  3061  025D  3A03               	xorlw	3	; case 10
  3062  025E  1903               	skipnz
  3063  025F  2A26               	goto	l2332
  3064  0260  2A61               	goto	l134
  3065  0261                     l134:
  3066  0261  0008               	return
  3067  0262                     __end_of_setupInternalOscillator:
  3068                           
  3069                           	psect	text7
  3070  066F                     __ptext7:	
  3071 ;; *************** function _readGPIO *****************
  3072 ;; Defined at:
  3073 ;;		line 79 in file "GPIO.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  gpioNumber      1    wreg     const enum E2798
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  gpioNumber      1   27[BANK0 ] const enum E2798
  3078 ;;  returnValueB    1   24[BANK0 ] unsigned char 
  3079 ;;  readB           1   23[BANK0 ] unsigned char 
  3080 ;;  returnValueA    1   22[BANK0 ] unsigned char 
  3081 ;;  readA           1   21[BANK0 ] unsigned char 
  3082 ;;  portType        1   26[BANK0 ] unsigned char 
  3083 ;;  portNumber      1   25[BANK0 ] unsigned char 
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      _Bool 
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3093 ;;      Params:         0       0       0       0       0       0
  3094 ;;      Locals:         0       7       0       0       0       0
  3095 ;;      Temps:          0       2       0       0       0       0
  3096 ;;      Totals:         0       9       0       0       0       0
  3097 ;;Total ram usage:        9 bytes
  3098 ;; Hardware stack levels used: 1
  3099 ;; Hardware stack levels required when called: 5
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107  066F                     _readGPIO:	
  3108                           ;psect for function _readGPIO
  3109                           
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  3113                           ;readGPIO@gpioNumber stored from wreg
  3114  066F  0020               	movlb	0	; select bank0
  3115  0670  00BB               	movwf	readGPIO@gpioNumber
  3116  0671                     l2382:
  3117                           
  3118                           ;GPIO.c: 81:     uint8_t portType = 0;
  3119  0671  01BA               	clrf	readGPIO@portType
  3120  0672                     l2384:
  3121                           
  3122                           ;GPIO.c: 82:     if(gpioNumber > 7){
  3123  0672  3008               	movlw	8
  3124  0673  023B               	subwf	readGPIO@gpioNumber,w
  3125  0674  1C03               	skipc
  3126  0675  2E77               	goto	u2031
  3127  0676  2E78               	goto	u2030
  3128  0677                     u2031:
  3129  0677  2E80               	goto	l2390
  3130  0678                     u2030:
  3131  0678                     l2386:
  3132                           
  3133                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  3134  0678  083B               	movf	readGPIO@gpioNumber,w
  3135  0679  3EF8               	addlw	248
  3136  067A  00B3               	movwf	??_readGPIO
  3137  067B  0833               	movf	??_readGPIO,w
  3138  067C  00B9               	movwf	readGPIO@portNumber
  3139  067D                     l2388:
  3140                           
  3141                           ;GPIO.c: 84:         portType = 1;
  3142  067D  01BA               	clrf	readGPIO@portType
  3143  067E  0ABA               	incf	readGPIO@portType,f
  3144                           
  3145                           ;GPIO.c: 85:     }
  3146  067F  2E85               	goto	l2394
  3147  0680                     l2390:
  3148                           
  3149                           ;GPIO.c: 87:         portNumber = gpioNumber;
  3150  0680  083B               	movf	readGPIO@gpioNumber,w
  3151  0681  00B3               	movwf	??_readGPIO
  3152  0682  0833               	movf	??_readGPIO,w
  3153  0683  00B9               	movwf	readGPIO@portNumber
  3154  0684                     l2392:
  3155                           
  3156                           ;GPIO.c: 88:         portType = 0;
  3157  0684  01BA               	clrf	readGPIO@portType
  3158  0685                     l2394:
  3159                           
  3160                           ;GPIO.c: 91:     if(portType == 0){
  3161  0685  083A               	movf	readGPIO@portType,w
  3162  0686  1D03               	btfss	3,2
  3163  0687  2E89               	goto	u2041
  3164  0688  2E8A               	goto	u2040
  3165  0689                     u2041:
  3166  0689  2E9C               	goto	l2406
  3167  068A                     u2040:
  3168  068A                     l2396:
  3169                           
  3170                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  3171  068A  080C               	movf	12,w	;volatile
  3172  068B  00B3               	movwf	??_readGPIO
  3173  068C  0833               	movf	??_readGPIO,w
  3174  068D  00B5               	movwf	readGPIO@readA
  3175  068E                     l2398:
  3176                           
  3177                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  3178  068E  0835               	movf	readGPIO@readA,w
  3179  068F  00B3               	movwf	??_readGPIO
  3180  0690  0A39               	incf	readGPIO@portNumber,w
  3181  0691  2E93               	goto	u2054
  3182  0692                     u2055:
  3183  0692  36B3               	lsrf	??_readGPIO,f
  3184  0693                     u2054:
  3185  0693  0B89               	decfsz	9,f
  3186  0694  2E92               	goto	u2055
  3187  0695  0833               	movf	??_readGPIO,w
  3188  0696  3901               	andlw	1
  3189  0697  00B4               	movwf	??_readGPIO+1
  3190  0698  0834               	movf	??_readGPIO+1,w
  3191  0699  00B6               	movwf	readGPIO@returnValueA
  3192  069A                     l2400:
  3193                           
  3194                           ;GPIO.c: 94:         return returnValueA;
  3195  069A  0836               	movf	readGPIO@returnValueA,w
  3196  069B  2EB2               	goto	l321
  3197  069C                     l2406:
  3198  069C  033A               	decf	readGPIO@portType,w
  3199  069D  1D03               	btfss	3,2
  3200  069E  2EA0               	goto	u2061
  3201  069F  2EA1               	goto	u2060
  3202  06A0                     u2061:
  3203  06A0  2EB2               	goto	l321
  3204  06A1                     u2060:
  3205  06A1                     l2408:
  3206                           
  3207                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  3208  06A1  080D               	movf	13,w	;volatile
  3209  06A2  00B3               	movwf	??_readGPIO
  3210  06A3  0833               	movf	??_readGPIO,w
  3211  06A4  00B7               	movwf	readGPIO@readB
  3212  06A5                     l2410:
  3213                           
  3214                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  3215  06A5  0837               	movf	readGPIO@readB,w
  3216  06A6  00B3               	movwf	??_readGPIO
  3217  06A7  0A39               	incf	readGPIO@portNumber,w
  3218  06A8  2EAA               	goto	u2074
  3219  06A9                     u2075:
  3220  06A9  36B3               	lsrf	??_readGPIO,f
  3221  06AA                     u2074:
  3222  06AA  0B89               	decfsz	9,f
  3223  06AB  2EA9               	goto	u2075
  3224  06AC  0833               	movf	??_readGPIO,w
  3225  06AD  3901               	andlw	1
  3226  06AE  00B4               	movwf	??_readGPIO+1
  3227  06AF  0834               	movf	??_readGPIO+1,w
  3228  06B0  00B8               	movwf	readGPIO@returnValueB
  3229  06B1                     l2412:
  3230                           
  3231                           ;GPIO.c: 99:         return returnValueB;
  3232  06B1  0838               	movf	readGPIO@returnValueB,w
  3233  06B2                     l321:
  3234  06B2  0008               	return
  3235  06B3                     __end_of_readGPIO:
  3236                           
  3237                           	psect	text8
  3238  0FC3                     __ptext8:	
  3239 ;; *************** function _initialisePotentiometers *****************
  3240 ;; Defined at:
  3241 ;;		line 15 in file "Potentiometer.c"
  3242 ;; Parameters:    Size  Location     Type
  3243 ;;		None
  3244 ;; Auto vars:     Size  Location     Type
  3245 ;;		None
  3246 ;; Return value:  Size  Location     Type
  3247 ;;                  1    wreg      void 
  3248 ;; Registers used:
  3249 ;;		wreg, status,2, status,0, pclath, cstack
  3250 ;; Tracked objects:
  3251 ;;		On entry : 0/0
  3252 ;;		On exit  : 0/0
  3253 ;;		Unchanged: 0/0
  3254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3255 ;;      Params:         0       0       0       0       0       0
  3256 ;;      Locals:         0       0       0       0       0       0
  3257 ;;      Temps:          0       0       0       0       0       0
  3258 ;;      Totals:         0       0       0       0       0       0
  3259 ;;Total ram usage:        0 bytes
  3260 ;; Hardware stack levels used: 1
  3261 ;; Hardware stack levels required when called: 6
  3262 ;; This function calls:
  3263 ;;		_initialiseADCPin
  3264 ;; This function is called by:
  3265 ;;		_main
  3266 ;; This function uses a non-reentrant model
  3267 ;;
  3268                           
  3269  0FC3                     _initialisePotentiometers:	
  3270                           ;psect for function _initialisePotentiometers
  3271                           
  3272  0FC3                     l2380:	
  3273                           ;incstack = 0
  3274                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  3275                           
  3276                           
  3277                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  3278  0FC3  3009               	movlw	9
  3279  0FC4  3182  22DE  318F   	fcall	_initialiseADCPin
  3280                           
  3281                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  3282  0FC7  300A               	movlw	10
  3283  0FC8  3182  22DE  318F   	fcall	_initialiseADCPin
  3284  0FCB                     l352:
  3285  0FCB  0008               	return
  3286  0FCC                     __end_of_initialisePotentiometers:
  3287                           
  3288                           	psect	text9
  3289  078E                     __ptext9:	
  3290 ;; *************** function _initialiseCurrentSensors *****************
  3291 ;; Defined at:
  3292 ;;		line 17 in file "CurrentSensor.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0, pclath, cstack
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/0
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3306 ;;      Params:         0       0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0
  3308 ;;      Temps:          0       0       0       0       0       0
  3309 ;;      Totals:         0       0       0       0       0       0
  3310 ;;Total ram usage:        0 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 7
  3313 ;; This function calls:
  3314 ;;		_currentTripReset
  3315 ;;		_initialiseADCPin
  3316 ;;		_initialiseGPIO
  3317 ;; This function is called by:
  3318 ;;		_main
  3319 ;; This function uses a non-reentrant model
  3320 ;;
  3321                           
  3322  078E                     _initialiseCurrentSensors:	
  3323                           ;psect for function _initialiseCurrentSensors
  3324                           
  3325  078E                     l2378:	
  3326                           ;incstack = 0
  3327                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  3328                           
  3329                           
  3330                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  3331  078E  0020               	movlb	0	; select bank0
  3332  078F  01B3               	clrf	initialiseGPIO@direction
  3333  0790  0AB3               	incf	initialiseGPIO@direction,f
  3334  0791  3003               	movlw	3
  3335  0792  3182  2262  3187   	fcall	_initialiseGPIO
  3336                           
  3337                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  3338  0795  0020               	movlb	0	; select bank0
  3339  0796  01B3               	clrf	initialiseGPIO@direction
  3340  0797  0AB3               	incf	initialiseGPIO@direction,f
  3341  0798  3001               	movlw	1
  3342  0799  3182  2262  3187   	fcall	_initialiseGPIO
  3343                           
  3344                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  3345  079C  3000               	movlw	0
  3346  079D  3182  22DE  3187   	fcall	_initialiseADCPin
  3347                           
  3348                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA2);
  3349  07A0  3002               	movlw	2
  3350  07A1  3182  22DE  3187   	fcall	_initialiseADCPin
  3351                           
  3352                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  3353  07A4  0020               	movlb	0	; select bank0
  3354  07A5  01B3               	clrf	initialiseGPIO@direction
  3355  07A6  300B               	movlw	11
  3356  07A7  3182  2262  3187   	fcall	_initialiseGPIO
  3357                           
  3358                           ;CurrentSensor.c: 23:     currentTripReset();
  3359  07AA  318F  27D8  3187   	fcall	_currentTripReset
  3360  07AD                     l475:
  3361  07AD  0008               	return
  3362  07AE                     __end_of_initialiseCurrentSensors:
  3363                           
  3364                           	psect	text10
  3365  0262                     __ptext10:	
  3366 ;; *************** function _initialiseGPIO *****************
  3367 ;; Defined at:
  3368 ;;		line 18 in file "GPIO.c"
  3369 ;; Parameters:    Size  Location     Type
  3370 ;;  gpioNumber      1    wreg     const enum E2798
  3371 ;;  direction       1   19[BANK0 ] unsigned char 
  3372 ;; Auto vars:     Size  Location     Type
  3373 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  3374 ;;  portNumber      1   24[BANK0 ] unsigned char 
  3375 ;;  portType        1   22[BANK0 ] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3385 ;;      Params:         0       1       0       0       0       0
  3386 ;;      Locals:         0       3       0       0       0       0
  3387 ;;      Temps:          0       2       0       0       0       0
  3388 ;;      Totals:         0       6       0       0       0       0
  3389 ;;Total ram usage:        6 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 5
  3392 ;; This function calls:
  3393 ;;		Nothing
  3394 ;; This function is called by:
  3395 ;;		_main
  3396 ;;		_setupPWM
  3397 ;;		_initialiseCurrentSensors
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401  0262                     _initialiseGPIO:	
  3402                           ;psect for function _initialiseGPIO
  3403                           
  3404                           
  3405                           ;incstack = 0
  3406                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  3407                           ;initialiseGPIO@gpioNumber stored from wreg
  3408  0262  0020               	movlb	0	; select bank0
  3409  0263  00B7               	movwf	initialiseGPIO@gpioNumber
  3410  0264                     l1904:
  3411                           
  3412                           ;GPIO.c: 20:     uint8_t portType = 0;
  3413  0264  01B6               	clrf	initialiseGPIO@portType
  3414  0265                     l1906:
  3415                           
  3416                           ;GPIO.c: 21:     if(gpioNumber > 7){
  3417  0265  3008               	movlw	8
  3418  0266  0237               	subwf	initialiseGPIO@gpioNumber,w
  3419  0267  1C03               	skipc
  3420  0268  2A6A               	goto	u1291
  3421  0269  2A6B               	goto	u1290
  3422  026A                     u1291:
  3423  026A  2A73               	goto	l1912
  3424  026B                     u1290:
  3425  026B                     l1908:
  3426                           
  3427                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  3428  026B  0837               	movf	initialiseGPIO@gpioNumber,w
  3429  026C  3EF8               	addlw	248
  3430  026D  00B4               	movwf	??_initialiseGPIO
  3431  026E  0834               	movf	??_initialiseGPIO,w
  3432  026F  00B8               	movwf	initialiseGPIO@portNumber
  3433  0270                     l1910:
  3434                           
  3435                           ;GPIO.c: 23:         portType = 1;
  3436  0270  01B6               	clrf	initialiseGPIO@portType
  3437  0271  0AB6               	incf	initialiseGPIO@portType,f
  3438                           
  3439                           ;GPIO.c: 24:     }
  3440  0272  2A78               	goto	l1916
  3441  0273                     l1912:
  3442                           
  3443                           ;GPIO.c: 26:         portNumber = gpioNumber;
  3444  0273  0837               	movf	initialiseGPIO@gpioNumber,w
  3445  0274  00B4               	movwf	??_initialiseGPIO
  3446  0275  0834               	movf	??_initialiseGPIO,w
  3447  0276  00B8               	movwf	initialiseGPIO@portNumber
  3448  0277                     l1914:
  3449                           
  3450                           ;GPIO.c: 27:         portType = 0;
  3451  0277  01B6               	clrf	initialiseGPIO@portType
  3452  0278                     l1916:
  3453                           
  3454                           ;GPIO.c: 30:     if(portType == 0){
  3455  0278  0836               	movf	initialiseGPIO@portType,w
  3456  0279  1D03               	btfss	3,2
  3457  027A  2A7C               	goto	u1301
  3458  027B  2A7D               	goto	u1300
  3459  027C                     u1301:
  3460  027C  2AAB               	goto	l1924
  3461  027D                     u1300:
  3462  027D                     l1918:
  3463                           
  3464                           ;GPIO.c: 31:         if(direction){
  3465  027D  0833               	movf	initialiseGPIO@direction,w
  3466  027E  1903               	btfsc	3,2
  3467  027F  2A81               	goto	u1311
  3468  0280  2A82               	goto	u1310
  3469  0281                     u1311:
  3470  0281  2A9D               	goto	l1922
  3471  0282                     u1310:
  3472  0282                     l1920:
  3473                           
  3474                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  3475  0282  3001               	movlw	1
  3476  0283  00B4               	movwf	??_initialiseGPIO
  3477  0284  0A38               	incf	initialiseGPIO@portNumber,w
  3478  0285  2A87               	goto	u1324
  3479  0286                     u1325:
  3480  0286  35B4               	lslf	??_initialiseGPIO,f
  3481  0287                     u1324:
  3482  0287  0B89               	decfsz	9,f
  3483  0288  2A86               	goto	u1325
  3484  0289  0834               	movf	??_initialiseGPIO,w
  3485  028A  00B5               	movwf	??_initialiseGPIO+1
  3486  028B  0835               	movf	??_initialiseGPIO+1,w
  3487  028C  0021               	movlb	1	; select bank1
  3488  028D  048C               	iorwf	12,f	;volatile
  3489                           
  3490                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  3491  028E  3001               	movlw	1
  3492  028F  0020               	movlb	0	; select bank0
  3493  0290  00B4               	movwf	??_initialiseGPIO
  3494  0291  0A38               	incf	initialiseGPIO@portNumber,w
  3495  0292  2A94               	goto	u1334
  3496  0293                     u1335:
  3497  0293  35B4               	lslf	??_initialiseGPIO,f
  3498  0294                     u1334:
  3499  0294  0B89               	decfsz	9,f
  3500  0295  2A93               	goto	u1335
  3501  0296  0834               	movf	??_initialiseGPIO,w
  3502  0297  3AFF               	xorlw	255
  3503  0298  00B5               	movwf	??_initialiseGPIO+1
  3504  0299  0835               	movf	??_initialiseGPIO+1,w
  3505  029A  0023               	movlb	3	; select bank3
  3506  029B  058C               	andwf	12,f	;volatile
  3507                           
  3508                           ;GPIO.c: 34:         }
  3509  029C  2ADD               	goto	l301
  3510  029D                     l1922:
  3511  029D  3001               	movlw	1
  3512  029E  00B4               	movwf	??_initialiseGPIO
  3513  029F  0A38               	incf	initialiseGPIO@portNumber,w
  3514  02A0  2AA2               	goto	u1344
  3515  02A1                     u1345:
  3516  02A1  35B4               	lslf	??_initialiseGPIO,f
  3517  02A2                     u1344:
  3518  02A2  0B89               	decfsz	9,f
  3519  02A3  2AA1               	goto	u1345
  3520  02A4  0834               	movf	??_initialiseGPIO,w
  3521  02A5  3AFF               	xorlw	255
  3522  02A6  00B5               	movwf	??_initialiseGPIO+1
  3523  02A7  0835               	movf	??_initialiseGPIO+1,w
  3524  02A8  0021               	movlb	1	; select bank1
  3525  02A9  058C               	andwf	12,f	;volatile
  3526  02AA  2ADD               	goto	l301
  3527  02AB                     l1924:
  3528  02AB  0336               	decf	initialiseGPIO@portType,w
  3529  02AC  1D03               	btfss	3,2
  3530  02AD  2AAF               	goto	u1351
  3531  02AE  2AB0               	goto	u1350
  3532  02AF                     u1351:
  3533  02AF  2ADD               	goto	l301
  3534  02B0                     u1350:
  3535  02B0                     l1926:
  3536                           
  3537                           ;GPIO.c: 38:         if(direction){
  3538  02B0  0833               	movf	initialiseGPIO@direction,w
  3539  02B1  1903               	btfsc	3,2
  3540  02B2  2AB4               	goto	u1361
  3541  02B3  2AB5               	goto	u1360
  3542  02B4                     u1361:
  3543  02B4  2AD0               	goto	l1930
  3544  02B5                     u1360:
  3545  02B5                     l1928:
  3546                           
  3547                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  3548  02B5  3001               	movlw	1
  3549  02B6  00B4               	movwf	??_initialiseGPIO
  3550  02B7  0A38               	incf	initialiseGPIO@portNumber,w
  3551  02B8  2ABA               	goto	u1374
  3552  02B9                     u1375:
  3553  02B9  35B4               	lslf	??_initialiseGPIO,f
  3554  02BA                     u1374:
  3555  02BA  0B89               	decfsz	9,f
  3556  02BB  2AB9               	goto	u1375
  3557  02BC  0834               	movf	??_initialiseGPIO,w
  3558  02BD  00B5               	movwf	??_initialiseGPIO+1
  3559  02BE  0835               	movf	??_initialiseGPIO+1,w
  3560  02BF  0021               	movlb	1	; select bank1
  3561  02C0  048D               	iorwf	13,f	;volatile
  3562                           
  3563                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  3564  02C1  3001               	movlw	1
  3565  02C2  0020               	movlb	0	; select bank0
  3566  02C3  00B4               	movwf	??_initialiseGPIO
  3567  02C4  0A38               	incf	initialiseGPIO@portNumber,w
  3568  02C5  2AC7               	goto	u1384
  3569  02C6                     u1385:
  3570  02C6  35B4               	lslf	??_initialiseGPIO,f
  3571  02C7                     u1384:
  3572  02C7  0B89               	decfsz	9,f
  3573  02C8  2AC6               	goto	u1385
  3574  02C9  0834               	movf	??_initialiseGPIO,w
  3575  02CA  3AFF               	xorlw	255
  3576  02CB  00B5               	movwf	??_initialiseGPIO+1
  3577  02CC  0835               	movf	??_initialiseGPIO+1,w
  3578  02CD  0023               	movlb	3	; select bank3
  3579  02CE  058D               	andwf	13,f	;volatile
  3580                           
  3581                           ;GPIO.c: 41:         }
  3582  02CF  2ADD               	goto	l301
  3583  02D0                     l1930:
  3584  02D0  3001               	movlw	1
  3585  02D1  00B4               	movwf	??_initialiseGPIO
  3586  02D2  0A38               	incf	initialiseGPIO@portNumber,w
  3587  02D3  2AD5               	goto	u1394
  3588  02D4                     u1395:
  3589  02D4  35B4               	lslf	??_initialiseGPIO,f
  3590  02D5                     u1394:
  3591  02D5  0B89               	decfsz	9,f
  3592  02D6  2AD4               	goto	u1395
  3593  02D7  0834               	movf	??_initialiseGPIO,w
  3594  02D8  3AFF               	xorlw	255
  3595  02D9  00B5               	movwf	??_initialiseGPIO+1
  3596  02DA  0835               	movf	??_initialiseGPIO+1,w
  3597  02DB  0021               	movlb	1	; select bank1
  3598  02DC  058D               	andwf	13,f	;volatile
  3599  02DD                     l301:
  3600  02DD  0008               	return
  3601  02DE                     __end_of_initialiseGPIO:
  3602                           
  3603                           	psect	text11
  3604  02DE                     __ptext11:	
  3605 ;; *************** function _initialiseADCPin *****************
  3606 ;; Defined at:
  3607 ;;		line 37 in file "ADC.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;  gpioNumber      1    wreg     const enum E2798
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  3612 ;;  portNumber      1   23[BANK0 ] unsigned char 
  3613 ;;  portType        1   22[BANK0 ] unsigned char 
  3614 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  3615 ;; Return value:  Size  Location     Type
  3616 ;;                  1    wreg      void 
  3617 ;; Registers used:
  3618 ;;		wreg, status,2, status,0
  3619 ;; Tracked objects:
  3620 ;;		On entry : 0/0
  3621 ;;		On exit  : 0/0
  3622 ;;		Unchanged: 0/0
  3623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3624 ;;      Params:         0       0       0       0       0       0
  3625 ;;      Locals:         0       4       0       0       0       0
  3626 ;;      Temps:          0       2       0       0       0       0
  3627 ;;      Totals:         0       6       0       0       0       0
  3628 ;;Total ram usage:        6 bytes
  3629 ;; Hardware stack levels used: 1
  3630 ;; Hardware stack levels required when called: 5
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_initialisePotentiometers
  3635 ;;		_initialiseCurrentSensors
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639  02DE                     _initialiseADCPin:	
  3640                           ;psect for function _initialiseADCPin
  3641                           
  3642                           
  3643                           ;incstack = 0
  3644                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  3645                           ;initialiseADCPin@gpioNumber stored from wreg
  3646  02DE  0020               	movlb	0	; select bank0
  3647  02DF  00B8               	movwf	initialiseADCPin@gpioNumber
  3648  02E0                     l1932:
  3649                           
  3650                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3651  02E0  01B7               	clrf	initialiseADCPin@portNumber
  3652                           
  3653                           ;ADC.c: 40:     uint8_t portType = 0;
  3654  02E1  01B6               	clrf	initialiseADCPin@portType
  3655                           
  3656                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3657  02E2  01B5               	clrf	initialiseADCPin@gpioValid
  3658  02E3                     l1934:
  3659                           
  3660                           ;ADC.c: 43:     if(gpioNumber < 4){
  3661  02E3  3004               	movlw	4
  3662  02E4  0238               	subwf	initialiseADCPin@gpioNumber,w
  3663  02E5  1803               	skipnc
  3664  02E6  2AE8               	goto	u1401
  3665  02E7  2AE9               	goto	u1400
  3666  02E8                     u1401:
  3667  02E8  2AF0               	goto	l1942
  3668  02E9                     u1400:
  3669  02E9                     l1936:
  3670                           
  3671                           ;ADC.c: 44:         portNumber = gpioNumber;
  3672  02E9  0838               	movf	initialiseADCPin@gpioNumber,w
  3673  02EA  00B3               	movwf	??_initialiseADCPin
  3674  02EB  0833               	movf	??_initialiseADCPin,w
  3675  02EC  00B7               	movwf	initialiseADCPin@portNumber
  3676  02ED                     l1938:
  3677                           
  3678                           ;ADC.c: 45:         portType = 0;
  3679  02ED  01B6               	clrf	initialiseADCPin@portType
  3680  02EE                     l1940:
  3681                           
  3682                           ;ADC.c: 46:         gpioValid = 1;
  3683  02EE  01B5               	clrf	initialiseADCPin@gpioValid
  3684  02EF  0AB5               	incf	initialiseADCPin@gpioValid,f
  3685  02F0                     l1942:
  3686                           
  3687                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3688  02F0  3009               	movlw	9
  3689  02F1  0238               	subwf	initialiseADCPin@gpioNumber,w
  3690  02F2  1C03               	skipc
  3691  02F3  2AF5               	goto	u1411
  3692  02F4  2AF6               	goto	u1410
  3693  02F5                     u1411:
  3694  02F5  2B05               	goto	l233
  3695  02F6                     u1410:
  3696  02F6                     l1944:
  3697  02F6  3010               	movlw	16
  3698  02F7  0238               	subwf	initialiseADCPin@gpioNumber,w
  3699  02F8  1803               	skipnc
  3700  02F9  2AFB               	goto	u1421
  3701  02FA  2AFC               	goto	u1420
  3702  02FB                     u1421:
  3703  02FB  2B05               	goto	l233
  3704  02FC                     u1420:
  3705  02FC                     l1946:
  3706                           
  3707                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3708  02FC  0838               	movf	initialiseADCPin@gpioNumber,w
  3709  02FD  3EF8               	addlw	248
  3710  02FE  00B3               	movwf	??_initialiseADCPin
  3711  02FF  0833               	movf	??_initialiseADCPin,w
  3712  0300  00B7               	movwf	initialiseADCPin@portNumber
  3713  0301                     l1948:
  3714                           
  3715                           ;ADC.c: 51:         portType = 1;
  3716  0301  01B6               	clrf	initialiseADCPin@portType
  3717  0302  0AB6               	incf	initialiseADCPin@portType,f
  3718  0303                     l1950:
  3719                           
  3720                           ;ADC.c: 52:         gpioValid = 1;
  3721  0303  01B5               	clrf	initialiseADCPin@gpioValid
  3722  0304  0AB5               	incf	initialiseADCPin@gpioValid,f
  3723  0305                     l233:	
  3724                           ;ADC.c: 53:     }
  3725                           
  3726                           
  3727                           ;ADC.c: 55:     if(gpioValid){
  3728  0305  0835               	movf	initialiseADCPin@gpioValid,w
  3729  0306  1903               	btfsc	3,2
  3730  0307  2B09               	goto	u1431
  3731  0308  2B0A               	goto	u1430
  3732  0309                     u1431:
  3733  0309  2B47               	goto	l238
  3734  030A                     u1430:
  3735  030A                     l1952:
  3736                           
  3737                           ;ADC.c: 56:         if(portType == 0){
  3738  030A  0836               	movf	initialiseADCPin@portType,w
  3739  030B  1D03               	btfss	3,2
  3740  030C  2B0E               	goto	u1441
  3741  030D  2B0F               	goto	u1440
  3742  030E                     u1441:
  3743  030E  2B29               	goto	l1956
  3744  030F                     u1440:
  3745  030F                     l1954:
  3746                           
  3747                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3748  030F  3001               	movlw	1
  3749  0310  00B3               	movwf	??_initialiseADCPin
  3750  0311  0A37               	incf	initialiseADCPin@portNumber,w
  3751  0312  2B14               	goto	u1454
  3752  0313                     u1455:
  3753  0313  35B3               	lslf	??_initialiseADCPin,f
  3754  0314                     u1454:
  3755  0314  0B89               	decfsz	9,f
  3756  0315  2B13               	goto	u1455
  3757  0316  0833               	movf	??_initialiseADCPin,w
  3758  0317  00B4               	movwf	??_initialiseADCPin+1
  3759  0318  0834               	movf	??_initialiseADCPin+1,w
  3760  0319  0021               	movlb	1	; select bank1
  3761  031A  048C               	iorwf	12,f	;volatile
  3762                           
  3763                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3764  031B  3001               	movlw	1
  3765  031C  0020               	movlb	0	; select bank0
  3766  031D  00B3               	movwf	??_initialiseADCPin
  3767  031E  0A37               	incf	initialiseADCPin@portNumber,w
  3768  031F  2B21               	goto	u1464
  3769  0320                     u1465:
  3770  0320  35B3               	lslf	??_initialiseADCPin,f
  3771  0321                     u1464:
  3772  0321  0B89               	decfsz	9,f
  3773  0322  2B20               	goto	u1465
  3774  0323  0833               	movf	??_initialiseADCPin,w
  3775  0324  00B4               	movwf	??_initialiseADCPin+1
  3776  0325  0834               	movf	??_initialiseADCPin+1,w
  3777  0326  0023               	movlb	3	; select bank3
  3778  0327  048C               	iorwf	12,f	;volatile
  3779                           
  3780                           ;ADC.c: 59:         }
  3781  0328  2B47               	goto	l238
  3782  0329                     l1956:
  3783  0329  0336               	decf	initialiseADCPin@portType,w
  3784  032A  1D03               	btfss	3,2
  3785  032B  2B2D               	goto	u1471
  3786  032C  2B2E               	goto	u1470
  3787  032D                     u1471:
  3788  032D  2B47               	goto	l238
  3789  032E                     u1470:
  3790  032E                     l1958:
  3791                           
  3792                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3793  032E  3001               	movlw	1
  3794  032F  00B3               	movwf	??_initialiseADCPin
  3795  0330  0A37               	incf	initialiseADCPin@portNumber,w
  3796  0331  2B33               	goto	u1484
  3797  0332                     u1485:
  3798  0332  35B3               	lslf	??_initialiseADCPin,f
  3799  0333                     u1484:
  3800  0333  0B89               	decfsz	9,f
  3801  0334  2B32               	goto	u1485
  3802  0335  0833               	movf	??_initialiseADCPin,w
  3803  0336  00B4               	movwf	??_initialiseADCPin+1
  3804  0337  0834               	movf	??_initialiseADCPin+1,w
  3805  0338  0021               	movlb	1	; select bank1
  3806  0339  048D               	iorwf	13,f	;volatile
  3807                           
  3808                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3809  033A  3001               	movlw	1
  3810  033B  0020               	movlb	0	; select bank0
  3811  033C  00B3               	movwf	??_initialiseADCPin
  3812  033D  0A37               	incf	initialiseADCPin@portNumber,w
  3813  033E  2B40               	goto	u1494
  3814  033F                     u1495:
  3815  033F  35B3               	lslf	??_initialiseADCPin,f
  3816  0340                     u1494:
  3817  0340  0B89               	decfsz	9,f
  3818  0341  2B3F               	goto	u1495
  3819  0342  0833               	movf	??_initialiseADCPin,w
  3820  0343  00B4               	movwf	??_initialiseADCPin+1
  3821  0344  0834               	movf	??_initialiseADCPin+1,w
  3822  0345  0023               	movlb	3	; select bank3
  3823  0346  048D               	iorwf	13,f	;volatile
  3824  0347                     l238:
  3825  0347  0008               	return
  3826  0348                     __end_of_initialiseADCPin:
  3827                           
  3828                           	psect	text12
  3829  0FD8                     __ptext12:	
  3830 ;; *************** function _currentTripReset *****************
  3831 ;; Defined at:
  3832 ;;		line 70 in file "CurrentSensor.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;		None
  3835 ;; Auto vars:     Size  Location     Type
  3836 ;;		None
  3837 ;; Return value:  Size  Location     Type
  3838 ;;                  1    wreg      void 
  3839 ;; Registers used:
  3840 ;;		wreg, status,2, status,0, pclath, cstack
  3841 ;; Tracked objects:
  3842 ;;		On entry : 0/0
  3843 ;;		On exit  : 0/0
  3844 ;;		Unchanged: 0/0
  3845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3846 ;;      Params:         0       0       0       0       0       0
  3847 ;;      Locals:         0       0       0       0       0       0
  3848 ;;      Temps:          0       0       0       0       0       0
  3849 ;;      Totals:         0       0       0       0       0       0
  3850 ;;Total ram usage:        0 bytes
  3851 ;; Hardware stack levels used: 1
  3852 ;; Hardware stack levels required when called: 6
  3853 ;; This function calls:
  3854 ;;		_writeGPIO
  3855 ;; This function is called by:
  3856 ;;		_initialiseCurrentSensors
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860  0FD8                     _currentTripReset:	
  3861                           ;psect for function _currentTripReset
  3862                           
  3863  0FD8                     l2014:	
  3864                           ;incstack = 0
  3865                           ; Regs used in _currentTripReset: [wreg+status,2+status,0+pclath+cstack]
  3866                           
  3867                           
  3868                           ;CurrentSensor.c: 71:     writeGPIO(pinRB3, 0);
  3869  0FD8  0020               	movlb	0	; select bank0
  3870  0FD9  01B3               	clrf	writeGPIO@writeValue
  3871  0FDA  300B               	movlw	11
  3872  0FDB  3183  23AA  318F   	fcall	_writeGPIO
  3873  0FDE                     l2016:
  3874                           
  3875                           ;CurrentSensor.c: 72:      _delay((unsigned long)((2)*(freq32M/4000000.0)));
  3876                           ;CurrentSensor.c: 73:     writeGPIO(pinRB3, 1);
  3877  0FDE  0020               	movlb	0	; select bank0
  3878  0FDF  01B3               	clrf	writeGPIO@writeValue
  3879  0FE0  0AB3               	incf	writeGPIO@writeValue,f
  3880  0FE1  300B               	movlw	11
  3881  0FE2  3183  23AA  318F   	fcall	_writeGPIO
  3882  0FE5                     l497:
  3883  0FE5  0008               	return
  3884  0FE6                     __end_of_currentTripReset:
  3885                           
  3886                           	psect	text13
  3887  03AA                     __ptext13:	
  3888 ;; *************** function _writeGPIO *****************
  3889 ;; Defined at:
  3890 ;;		line 52 in file "GPIO.c"
  3891 ;; Parameters:    Size  Location     Type
  3892 ;;  gpioNumber      1    wreg     const enum E2798
  3893 ;;  writeValue      1   19[BANK0 ] unsigned char 
  3894 ;; Auto vars:     Size  Location     Type
  3895 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  3896 ;;  portNumber      1   24[BANK0 ] unsigned char 
  3897 ;;  portType        1   22[BANK0 ] unsigned char 
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, status,2, status,0
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3907 ;;      Params:         0       1       0       0       0       0
  3908 ;;      Locals:         0       3       0       0       0       0
  3909 ;;      Temps:          0       2       0       0       0       0
  3910 ;;      Totals:         0       6       0       0       0       0
  3911 ;;Total ram usage:        6 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 5
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_currentTripReset
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921  03AA                     _writeGPIO:	
  3922                           ;psect for function _writeGPIO
  3923                           
  3924                           
  3925                           ;incstack = 0
  3926                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  3927                           ;writeGPIO@gpioNumber stored from wreg
  3928  03AA  0020               	movlb	0	; select bank0
  3929  03AB  00B7               	movwf	writeGPIO@gpioNumber
  3930  03AC                     l1860:
  3931                           
  3932                           ;GPIO.c: 54:     uint8_t portType = 0;
  3933  03AC  01B6               	clrf	writeGPIO@portType
  3934  03AD                     l1862:
  3935                           
  3936                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3937  03AD  3008               	movlw	8
  3938  03AE  0237               	subwf	writeGPIO@gpioNumber,w
  3939  03AF  1C03               	skipc
  3940  03B0  2BB2               	goto	u1191
  3941  03B1  2BB3               	goto	u1190
  3942  03B2                     u1191:
  3943  03B2  2BBB               	goto	l1868
  3944  03B3                     u1190:
  3945  03B3                     l1864:
  3946                           
  3947                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3948  03B3  0837               	movf	writeGPIO@gpioNumber,w
  3949  03B4  3EF8               	addlw	248
  3950  03B5  00B4               	movwf	??_writeGPIO
  3951  03B6  0834               	movf	??_writeGPIO,w
  3952  03B7  00B8               	movwf	writeGPIO@portNumber
  3953  03B8                     l1866:
  3954                           
  3955                           ;GPIO.c: 57:         portType = 1;
  3956  03B8  01B6               	clrf	writeGPIO@portType
  3957  03B9  0AB6               	incf	writeGPIO@portType,f
  3958                           
  3959                           ;GPIO.c: 58:     }
  3960  03BA  2BC0               	goto	l1872
  3961  03BB                     l1868:
  3962                           
  3963                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3964  03BB  0837               	movf	writeGPIO@gpioNumber,w
  3965  03BC  00B4               	movwf	??_writeGPIO
  3966  03BD  0834               	movf	??_writeGPIO,w
  3967  03BE  00B8               	movwf	writeGPIO@portNumber
  3968  03BF                     l1870:
  3969                           
  3970                           ;GPIO.c: 61:         portType = 0;
  3971  03BF  01B6               	clrf	writeGPIO@portType
  3972  03C0                     l1872:
  3973                           
  3974                           ;GPIO.c: 64:     if(portType == 0){
  3975  03C0  0836               	movf	writeGPIO@portType,w
  3976  03C1  1D03               	btfss	3,2
  3977  03C2  2BC4               	goto	u1201
  3978  03C3  2BC5               	goto	u1200
  3979  03C4                     u1201:
  3980  03C4  2BE5               	goto	l1880
  3981  03C5                     u1200:
  3982  03C5                     l1874:
  3983                           
  3984                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3985  03C5  0833               	movf	writeGPIO@writeValue,w
  3986  03C6  1903               	btfsc	3,2
  3987  03C7  2BC9               	goto	u1211
  3988  03C8  2BCA               	goto	u1210
  3989  03C9                     u1211:
  3990  03C9  2BD7               	goto	l1878
  3991  03CA                     u1210:
  3992  03CA                     l1876:
  3993  03CA  3001               	movlw	1
  3994  03CB  00B4               	movwf	??_writeGPIO
  3995  03CC  0A38               	incf	writeGPIO@portNumber,w
  3996  03CD  2BCF               	goto	u1224
  3997  03CE                     u1225:
  3998  03CE  35B4               	lslf	??_writeGPIO,f
  3999  03CF                     u1224:
  4000  03CF  0B89               	decfsz	9,f
  4001  03D0  2BCE               	goto	u1225
  4002  03D1  0834               	movf	??_writeGPIO,w
  4003  03D2  00B5               	movwf	??_writeGPIO+1
  4004  03D3  0835               	movf	??_writeGPIO+1,w
  4005  03D4  0022               	movlb	2	; select bank2
  4006  03D5  048C               	iorwf	12,f	;volatile
  4007  03D6  2C09               	goto	l315
  4008  03D7                     l1878:
  4009  03D7  3001               	movlw	1
  4010  03D8  00B4               	movwf	??_writeGPIO
  4011  03D9  0A38               	incf	writeGPIO@portNumber,w
  4012  03DA  2BDC               	goto	u1234
  4013  03DB                     u1235:
  4014  03DB  35B4               	lslf	??_writeGPIO,f
  4015  03DC                     u1234:
  4016  03DC  0B89               	decfsz	9,f
  4017  03DD  2BDB               	goto	u1235
  4018  03DE  0834               	movf	??_writeGPIO,w
  4019  03DF  3AFF               	xorlw	255
  4020  03E0  00B5               	movwf	??_writeGPIO+1
  4021  03E1  0835               	movf	??_writeGPIO+1,w
  4022  03E2  0022               	movlb	2	; select bank2
  4023  03E3  058C               	andwf	12,f	;volatile
  4024  03E4  2C09               	goto	l315
  4025  03E5                     l1880:
  4026  03E5  0336               	decf	writeGPIO@portType,w
  4027  03E6  1D03               	btfss	3,2
  4028  03E7  2BE9               	goto	u1241
  4029  03E8  2BEA               	goto	u1240
  4030  03E9                     u1241:
  4031  03E9  2C09               	goto	l315
  4032  03EA                     u1240:
  4033  03EA                     l1882:
  4034                           
  4035                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  4036  03EA  0833               	movf	writeGPIO@writeValue,w
  4037  03EB  1903               	btfsc	3,2
  4038  03EC  2BEE               	goto	u1251
  4039  03ED  2BEF               	goto	u1250
  4040  03EE                     u1251:
  4041  03EE  2BFC               	goto	l1886
  4042  03EF                     u1250:
  4043  03EF                     l1884:
  4044  03EF  3001               	movlw	1
  4045  03F0  00B4               	movwf	??_writeGPIO
  4046  03F1  0A38               	incf	writeGPIO@portNumber,w
  4047  03F2  2BF4               	goto	u1264
  4048  03F3                     u1265:
  4049  03F3  35B4               	lslf	??_writeGPIO,f
  4050  03F4                     u1264:
  4051  03F4  0B89               	decfsz	9,f
  4052  03F5  2BF3               	goto	u1265
  4053  03F6  0834               	movf	??_writeGPIO,w
  4054  03F7  00B5               	movwf	??_writeGPIO+1
  4055  03F8  0835               	movf	??_writeGPIO+1,w
  4056  03F9  0022               	movlb	2	; select bank2
  4057  03FA  048D               	iorwf	13,f	;volatile
  4058  03FB  2C09               	goto	l315
  4059  03FC                     l1886:
  4060  03FC  3001               	movlw	1
  4061  03FD  00B4               	movwf	??_writeGPIO
  4062  03FE  0A38               	incf	writeGPIO@portNumber,w
  4063  03FF  2C01               	goto	u1274
  4064  0400                     u1275:
  4065  0400  35B4               	lslf	??_writeGPIO,f
  4066  0401                     u1274:
  4067  0401  0B89               	decfsz	9,f
  4068  0402  2C00               	goto	u1275
  4069  0403  0834               	movf	??_writeGPIO,w
  4070  0404  3AFF               	xorlw	255
  4071  0405  00B5               	movwf	??_writeGPIO+1
  4072  0406  0835               	movf	??_writeGPIO+1,w
  4073  0407  0022               	movlb	2	; select bank2
  4074  0408  058D               	andwf	13,f	;volatile
  4075  0409                     l315:
  4076  0409  0008               	return
  4077  040A                     __end_of_writeGPIO:
  4078                           
  4079                           	psect	text14
  4080  0F88                     __ptext14:	
  4081 ;; *************** function _initialiseADCModule *****************
  4082 ;; Defined at:
  4083 ;;		line 14 in file "ADC.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		wreg
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4097 ;;      Params:         0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used: 1
  4103 ;; Hardware stack levels required when called: 5
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111  0F88                     _initialiseADCModule:	
  4112                           ;psect for function _initialiseADCModule
  4113                           
  4114  0F88                     l2376:	
  4115                           ;incstack = 0
  4116                           ; Regs used in _initialiseADCModule: [wreg]
  4117                           
  4118                           
  4119                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  4120  0F88  3001               	movlw	1
  4121  0F89  0021               	movlb	1	; select bank1
  4122  0F8A  009D               	movwf	29	;volatile
  4123                           
  4124                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  4125  0F8B  3080               	movlw	128
  4126  0F8C  009E               	movwf	30	;volatile
  4127  0F8D                     l229:
  4128  0F8D  0008               	return
  4129  0F8E                     __end_of_initialiseADCModule:
  4130                           
  4131                           	psect	intentry
  4132  0004                     __pintentry:	
  4133 ;; *************** function _Tick980Hz *****************
  4134 ;; Defined at:
  4135 ;;		line 41 in file "main.c"
  4136 ;; Parameters:    Size  Location     Type
  4137 ;;		None
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;		None
  4140 ;; Return value:  Size  Location     Type
  4141 ;;                  1    wreg      void 
  4142 ;; Registers used:
  4143 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4144 ;; Tracked objects:
  4145 ;;		On entry : 0/0
  4146 ;;		On exit  : 0/0
  4147 ;;		Unchanged: 0/0
  4148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4149 ;;      Params:         0       0       0       0       0       0
  4150 ;;      Locals:         0       0       0       0       0       0
  4151 ;;      Temps:          0       1       0       0       0       0
  4152 ;;      Totals:         0       1       0       0       0       0
  4153 ;;Total ram usage:        1 bytes
  4154 ;; Hardware stack levels used: 1
  4155 ;; Hardware stack levels required when called: 4
  4156 ;; This function calls:
  4157 ;;		_controlRoutine
  4158 ;;		_currentTripRead
  4159 ;;		_readFilteredDutyPot
  4160 ;;		_readFilteredFreqPot
  4161 ;;		_readFilteredIL
  4162 ;;		_readFilteredVout
  4163 ;;		_readILCurrentADCRaw
  4164 ;;		_runPotScaling
  4165 ;;		_setPWMDutyandPeriod
  4166 ;;		_transToOverCurrentFault
  4167 ;;		i1_writeGPIO
  4168 ;; This function is called by:
  4169 ;;		Interrupt level 1
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173  0004                     _Tick980Hz:
  4174                           
  4175                           ;incstack = 0
  4176  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4177                           
  4178                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4179  0005  3180               	pagesel	$
  4180  0006                     i1l2450:
  4181                           
  4182                           ;main.c: 52:         if(currentTripRead() == 1){
  4183  0006  3187  2715  3180   	fcall	_currentTripRead
  4184  0009  3A01               	xorlw	1
  4185  000A  1D03               	skipz
  4186  000B  280D               	goto	u217_21
  4187  000C  280E               	goto	u217_20
  4188  000D                     u217_21:
  4189  000D  2811               	goto	i1l100
  4190  000E                     u217_20:
  4191  000E                     i1l2452:
  4192                           
  4193                           ;main.c: 53:             transToOverCurrentFault();
  4194  000E  318F  27BA  3180   	fcall	_transToOverCurrentFault
  4195  0011                     i1l100:	
  4196                           ;main.c: 54:         }
  4197                           
  4198                           
  4199                           ;main.c: 55:         setPWMDutyandPeriod(setDuty, setPeriod);
  4200  0011  0020               	movlb	0	; select bank0
  4201  0012  0853               	movf	_setDuty+1,w
  4202  0013  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  4203  0014  0852               	movf	_setDuty,w
  4204  0015  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  4205  0016  085B               	movf	_setPeriod,w
  4206  0017  00B2               	movwf	??_Tick980Hz
  4207  0018  0832               	movf	??_Tick980Hz,w
  4208  0019  00F2               	movwf	setPWMDutyandPeriod@period
  4209  001A  3187  2742  3180   	fcall	_setPWMDutyandPeriod
  4210  001D                     i1l2454:
  4211                           
  4212                           ;main.c: 58:         if(timerSlotHalf == 0){
  4213  001D  0020               	movlb	0	; select bank0
  4214  001E  0855               	movf	_timerSlotHalf,w	;volatile
  4215  001F  1D03               	btfss	3,2
  4216  0020  2822               	goto	u218_21
  4217  0021  2823               	goto	u218_20
  4218  0022                     u218_21:
  4219  0022  282B               	goto	i1l2458
  4220  0023                     u218_20:
  4221  0023                     i1l2456:
  4222                           
  4223                           ;main.c: 60:             writeGPIO(pinRB4, 0);
  4224  0023  01F0               	clrf	i1writeGPIO@writeValue
  4225  0024  300C               	movlw	12
  4226  0025  3184  240A  3180   	fcall	i1_writeGPIO
  4227                           
  4228                           ;main.c: 61:             controlRoutine();
  4229  0028  3187  27EA  3180   	fcall	_controlRoutine
  4230  002B                     i1l2458:
  4231                           
  4232                           ;main.c: 63:         if(timerSlotHalf == 1){
  4233  002B  0020               	movlb	0	; select bank0
  4234  002C  0355               	decf	_timerSlotHalf,w	;volatile
  4235  002D  1D03               	btfss	3,2
  4236  002E  2830               	goto	u219_21
  4237  002F  2831               	goto	u219_20
  4238  0030                     u219_21:
  4239  0030  286F               	goto	i1l2472
  4240  0031                     u219_20:
  4241  0031                     i1l2460:
  4242                           
  4243                           ;main.c: 65:             filteredIL = readFilteredIL();
  4244  0031  3185  25D5  3180   	fcall	_readFilteredIL
  4245  0034  0871               	movf	?_readFilteredIL+1,w
  4246  0035  0020               	movlb	0	; select bank0
  4247  0036  00CB               	movwf	_filteredIL+1
  4248  0037  0870               	movf	?_readFilteredIL,w
  4249  0038  00CA               	movwf	_filteredIL
  4250                           
  4251                           ;main.c: 67:             filteredVout = readFilteredVout();
  4252  0039  3184  24C4  3180   	fcall	_readFilteredVout
  4253  003C  087C               	movf	?_readFilteredVout+1,w
  4254  003D  0020               	movlb	0	; select bank0
  4255  003E  00C9               	movwf	_filteredVout+1
  4256  003F  087B               	movf	?_readFilteredVout,w
  4257  0040  00C8               	movwf	_filteredVout
  4258  0041                     i1l2462:
  4259                           
  4260                           ;main.c: 70:             if(timerSlotQuarter == 0){
  4261  0041  0854               	movf	_timerSlotQuarter,w	;volatile
  4262  0042  1D03               	btfss	3,2
  4263  0043  2845               	goto	u220_21
  4264  0044  2846               	goto	u220_20
  4265  0045                     u220_21:
  4266  0045  284F               	goto	i1l2466
  4267  0046                     u220_20:
  4268  0046                     i1l2464:
  4269                           
  4270                           ;main.c: 72:                 writeGPIO(pinRB4, 1);
  4271  0046  01F0               	clrf	i1writeGPIO@writeValue
  4272  0047  0AF0               	incf	i1writeGPIO@writeValue,f
  4273  0048  300C               	movlw	12
  4274  0049  3184  240A  3180   	fcall	i1_writeGPIO
  4275                           
  4276                           ;main.c: 73:                 runPotScaling();
  4277  004C  3180  20AB  3180   	fcall	_runPotScaling
  4278  004F                     i1l2466:
  4279                           
  4280                           ;main.c: 76:             if(timerSlotQuarter == 1){
  4281  004F  0020               	movlb	0	; select bank0
  4282  0050  0354               	decf	_timerSlotQuarter,w	;volatile
  4283  0051  1D03               	btfss	3,2
  4284  0052  2854               	goto	u221_21
  4285  0053  2855               	goto	u221_20
  4286  0054                     u221_21:
  4287  0054  2865               	goto	i1l2470
  4288  0055                     u221_20:
  4289  0055                     i1l2468:
  4290                           
  4291                           ;main.c: 78:                 filteredDutyPot = readFilteredDutyPot();
  4292  0055  3185  257A  3180   	fcall	_readFilteredDutyPot
  4293  0058  087C               	movf	?_readFilteredDutyPot+1,w
  4294  0059  0020               	movlb	0	; select bank0
  4295  005A  00C5               	movwf	_filteredDutyPot+1
  4296  005B  087B               	movf	?_readFilteredDutyPot,w
  4297  005C  00C4               	movwf	_filteredDutyPot
  4298                           
  4299                           ;main.c: 79:                 filteredFreqPot = readFilteredFreqPot();
  4300  005D  3185  251F  3180   	fcall	_readFilteredFreqPot
  4301  0060  087C               	movf	?_readFilteredFreqPot+1,w
  4302  0061  0020               	movlb	0	; select bank0
  4303  0062  00C7               	movwf	_filteredFreqPot+1
  4304  0063  087B               	movf	?_readFilteredFreqPot,w
  4305  0064  00C6               	movwf	_filteredFreqPot
  4306  0065                     i1l2470:
  4307                           
  4308                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  4309  0065  0354               	decf	_timerSlotQuarter,w	;volatile
  4310  0066  1D03               	btfss	3,2
  4311  0067  2869               	goto	u222_21
  4312  0068  286B               	goto	u222_20
  4313  0069                     u222_21:
  4314  0069  3001               	movlw	1
  4315  006A  286C               	goto	u223_20
  4316  006B                     u222_20:
  4317  006B  3000               	movlw	0
  4318  006C                     u223_20:
  4319  006C  00B2               	movwf	??_Tick980Hz
  4320  006D  0832               	movf	??_Tick980Hz,w
  4321  006E  00D4               	movwf	_timerSlotQuarter	;volatile
  4322  006F                     i1l2472:
  4323                           
  4324                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  4325  006F  0355               	decf	_timerSlotHalf,w	;volatile
  4326  0070  1D03               	btfss	3,2
  4327  0071  2873               	goto	u224_21
  4328  0072  2875               	goto	u224_20
  4329  0073                     u224_21:
  4330  0073  3001               	movlw	1
  4331  0074  2876               	goto	u225_20
  4332  0075                     u224_20:
  4333  0075  3000               	movlw	0
  4334  0076                     u225_20:
  4335  0076  00B2               	movwf	??_Tick980Hz
  4336  0077  0832               	movf	??_Tick980Hz,w
  4337  0078  00D5               	movwf	_timerSlotHalf	;volatile
  4338  0079                     i1l2474:
  4339                           
  4340                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  4341  0079  110B               	bcf	11,2	;volatile
  4342  007A                     i1l2476:
  4343                           
  4344                           ;main.c: 91:         latestIL = readILCurrentADCRaw();
  4345  007A  318F  27CC  3180   	fcall	_readILCurrentADCRaw
  4346  007D  0871               	movf	?_readILCurrentADCRaw+1,w
  4347  007E  0020               	movlb	0	; select bank0
  4348  007F  00CF               	movwf	_latestIL+1	;volatile
  4349  0080  0870               	movf	?_readILCurrentADCRaw,w
  4350  0081  00CE               	movwf	_latestIL	;volatile
  4351  0082                     i1l2478:
  4352                           
  4353                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  4354  0082  1111               	bcf	17,2	;volatile
  4355  0083                     i1l106:
  4356  0083  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4357  0084  0009               	retfie
  4358  0085                     __end_of_Tick980Hz:
  4359                           
  4360                           	psect	text16
  4361  040A                     __ptext16:	
  4362 ;; *************** function i1_writeGPIO *****************
  4363 ;; Defined at:
  4364 ;;		line 52 in file "GPIO.c"
  4365 ;; Parameters:    Size  Location     Type
  4366 ;;  gpioNumber      1    wreg     const enum E2798
  4367 ;;  writeValue      1    0[COMMON] unsigned char 
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;  gpioNumber      1    4[COMMON] const enum E2798
  4370 ;;  portNumber      1    5[COMMON] unsigned char 
  4371 ;;  portType        1    3[COMMON] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, status,0
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4381 ;;      Params:         1       0       0       0       0       0
  4382 ;;      Locals:         3       0       0       0       0       0
  4383 ;;      Temps:          2       0       0       0       0       0
  4384 ;;      Totals:         6       0       0       0       0       0
  4385 ;;Total ram usage:        6 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; This function calls:
  4388 ;;		Nothing
  4389 ;; This function is called by:
  4390 ;;		_Tick980Hz
  4391 ;; This function uses a non-reentrant model
  4392 ;;
  4393                           
  4394  040A                     i1_writeGPIO:	
  4395                           ;psect for function i1_writeGPIO
  4396                           
  4397                           
  4398                           ;incstack = 0
  4399                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  4400                           ;i1writeGPIO@gpioNumber stored from wreg
  4401  040A  00F4               	movwf	i1writeGPIO@gpioNumber
  4402  040B                     i1l2422:
  4403                           
  4404                           ;GPIO.c: 54:     uint8_t portType = 0;
  4405  040B  01F3               	clrf	i1writeGPIO@portType
  4406  040C                     i1l2424:
  4407                           
  4408                           ;GPIO.c: 55:     if(gpioNumber > 7){
  4409  040C  3008               	movlw	8
  4410  040D  0274               	subwf	i1writeGPIO@gpioNumber,w
  4411  040E  1C03               	skipc
  4412  040F  2C11               	goto	u208_21
  4413  0410  2C12               	goto	u208_20
  4414  0411                     u208_21:
  4415  0411  2C1A               	goto	i1l2430
  4416  0412                     u208_20:
  4417  0412                     i1l2426:
  4418                           
  4419                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  4420  0412  0874               	movf	i1writeGPIO@gpioNumber,w
  4421  0413  3EF8               	addlw	248
  4422  0414  00F1               	movwf	??i1_writeGPIO
  4423  0415  0871               	movf	??i1_writeGPIO,w
  4424  0416  00F5               	movwf	i1writeGPIO@portNumber
  4425  0417                     i1l2428:
  4426                           
  4427                           ;GPIO.c: 57:         portType = 1;
  4428  0417  01F3               	clrf	i1writeGPIO@portType
  4429  0418  0AF3               	incf	i1writeGPIO@portType,f
  4430                           
  4431                           ;GPIO.c: 58:     }
  4432  0419  2C1F               	goto	i1l2434
  4433  041A                     i1l2430:
  4434                           
  4435                           ;GPIO.c: 60:         portNumber = gpioNumber;
  4436  041A  0874               	movf	i1writeGPIO@gpioNumber,w
  4437  041B  00F1               	movwf	??i1_writeGPIO
  4438  041C  0871               	movf	??i1_writeGPIO,w
  4439  041D  00F5               	movwf	i1writeGPIO@portNumber
  4440  041E                     i1l2432:
  4441                           
  4442                           ;GPIO.c: 61:         portType = 0;
  4443  041E  01F3               	clrf	i1writeGPIO@portType
  4444  041F                     i1l2434:
  4445                           
  4446                           ;GPIO.c: 64:     if(portType == 0){
  4447  041F  0873               	movf	i1writeGPIO@portType,w
  4448  0420  1D03               	btfss	3,2
  4449  0421  2C23               	goto	u209_21
  4450  0422  2C24               	goto	u209_20
  4451  0423                     u209_21:
  4452  0423  2C44               	goto	i1l2442
  4453  0424                     u209_20:
  4454  0424                     i1l2436:
  4455                           
  4456                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  4457  0424  0870               	movf	i1writeGPIO@writeValue,w
  4458  0425  1903               	btfsc	3,2
  4459  0426  2C28               	goto	u210_21
  4460  0427  2C29               	goto	u210_20
  4461  0428                     u210_21:
  4462  0428  2C36               	goto	i1l2440
  4463  0429                     u210_20:
  4464  0429                     i1l2438:
  4465  0429  3001               	movlw	1
  4466  042A  00F1               	movwf	??i1_writeGPIO
  4467  042B  0A75               	incf	i1writeGPIO@portNumber,w
  4468  042C  2C2E               	goto	u211_24
  4469  042D                     u211_25:
  4470  042D  35F1               	lslf	??i1_writeGPIO,f
  4471  042E                     u211_24:
  4472  042E  0B89               	decfsz	9,f
  4473  042F  2C2D               	goto	u211_25
  4474  0430  0871               	movf	??i1_writeGPIO,w
  4475  0431  00F2               	movwf	??i1_writeGPIO+1
  4476  0432  0872               	movf	??i1_writeGPIO+1,w
  4477  0433  0022               	movlb	2	; select bank2
  4478  0434  048C               	iorwf	12,f	;volatile
  4479  0435  2C68               	goto	i1l315
  4480  0436                     i1l2440:
  4481  0436  3001               	movlw	1
  4482  0437  00F1               	movwf	??i1_writeGPIO
  4483  0438  0A75               	incf	i1writeGPIO@portNumber,w
  4484  0439  2C3B               	goto	u212_24
  4485  043A                     u212_25:
  4486  043A  35F1               	lslf	??i1_writeGPIO,f
  4487  043B                     u212_24:
  4488  043B  0B89               	decfsz	9,f
  4489  043C  2C3A               	goto	u212_25
  4490  043D  0871               	movf	??i1_writeGPIO,w
  4491  043E  3AFF               	xorlw	255
  4492  043F  00F2               	movwf	??i1_writeGPIO+1
  4493  0440  0872               	movf	??i1_writeGPIO+1,w
  4494  0441  0022               	movlb	2	; select bank2
  4495  0442  058C               	andwf	12,f	;volatile
  4496  0443  2C68               	goto	i1l315
  4497  0444                     i1l2442:
  4498  0444  0373               	decf	i1writeGPIO@portType,w
  4499  0445  1D03               	btfss	3,2
  4500  0446  2C48               	goto	u213_21
  4501  0447  2C49               	goto	u213_20
  4502  0448                     u213_21:
  4503  0448  2C68               	goto	i1l315
  4504  0449                     u213_20:
  4505  0449                     i1l2444:
  4506                           
  4507                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  4508  0449  0870               	movf	i1writeGPIO@writeValue,w
  4509  044A  1903               	btfsc	3,2
  4510  044B  2C4D               	goto	u214_21
  4511  044C  2C4E               	goto	u214_20
  4512  044D                     u214_21:
  4513  044D  2C5B               	goto	i1l2448
  4514  044E                     u214_20:
  4515  044E                     i1l2446:
  4516  044E  3001               	movlw	1
  4517  044F  00F1               	movwf	??i1_writeGPIO
  4518  0450  0A75               	incf	i1writeGPIO@portNumber,w
  4519  0451  2C53               	goto	u215_24
  4520  0452                     u215_25:
  4521  0452  35F1               	lslf	??i1_writeGPIO,f
  4522  0453                     u215_24:
  4523  0453  0B89               	decfsz	9,f
  4524  0454  2C52               	goto	u215_25
  4525  0455  0871               	movf	??i1_writeGPIO,w
  4526  0456  00F2               	movwf	??i1_writeGPIO+1
  4527  0457  0872               	movf	??i1_writeGPIO+1,w
  4528  0458  0022               	movlb	2	; select bank2
  4529  0459  048D               	iorwf	13,f	;volatile
  4530  045A  2C68               	goto	i1l315
  4531  045B                     i1l2448:
  4532  045B  3001               	movlw	1
  4533  045C  00F1               	movwf	??i1_writeGPIO
  4534  045D  0A75               	incf	i1writeGPIO@portNumber,w
  4535  045E  2C60               	goto	u216_24
  4536  045F                     u216_25:
  4537  045F  35F1               	lslf	??i1_writeGPIO,f
  4538  0460                     u216_24:
  4539  0460  0B89               	decfsz	9,f
  4540  0461  2C5F               	goto	u216_25
  4541  0462  0871               	movf	??i1_writeGPIO,w
  4542  0463  3AFF               	xorlw	255
  4543  0464  00F2               	movwf	??i1_writeGPIO+1
  4544  0465  0872               	movf	??i1_writeGPIO+1,w
  4545  0466  0022               	movlb	2	; select bank2
  4546  0467  058D               	andwf	13,f	;volatile
  4547  0468                     i1l315:
  4548  0468  0008               	return
  4549  0469                     __end_ofi1_writeGPIO:
  4550                           
  4551                           	psect	text17
  4552  0FBA                     __ptext17:	
  4553 ;; *************** function _transToOverCurrentFault *****************
  4554 ;; Defined at:
  4555 ;;		line 45 in file "StateMachine.c"
  4556 ;; Parameters:    Size  Location     Type
  4557 ;;		None
  4558 ;; Auto vars:     Size  Location     Type
  4559 ;;		None
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  1    wreg      void 
  4562 ;; Registers used:
  4563 ;;		wreg, status,2
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4569 ;;      Params:         0       0       0       0       0       0
  4570 ;;      Locals:         0       0       0       0       0       0
  4571 ;;      Temps:          1       0       0       0       0       0
  4572 ;;      Totals:         1       0       0       0       0       0
  4573 ;;Total ram usage:        1 bytes
  4574 ;; Hardware stack levels used: 1
  4575 ;; This function calls:
  4576 ;;		Nothing
  4577 ;; This function is called by:
  4578 ;;		_Tick980Hz
  4579 ;; This function uses a non-reentrant model
  4580 ;;
  4581                           
  4582  0FBA                     _transToOverCurrentFault:	
  4583                           ;psect for function _transToOverCurrentFault
  4584                           
  4585  0FBA                     i1l2104:	
  4586                           ;incstack = 0
  4587                           ; Regs used in _transToOverCurrentFault: [wreg+status,2]
  4588                           
  4589                           
  4590                           ;StateMachine.c: 46:     setDuty = 0;
  4591  0FBA  0020               	movlb	0	; select bank0
  4592  0FBB  01D2               	clrf	_setDuty
  4593  0FBC  01D3               	clrf	_setDuty+1
  4594                           
  4595                           ;StateMachine.c: 47:     setPeriod = 0;
  4596  0FBD  01DB               	clrf	_setPeriod
  4597  0FBE                     i1l2106:
  4598                           
  4599                           ;StateMachine.c: 48:     currentState = overCurrentFault;
  4600  0FBE  3004               	movlw	4
  4601  0FBF  00F0               	movwf	??_transToOverCurrentFault
  4602  0FC0  0870               	movf	??_transToOverCurrentFault,w
  4603  0FC1  00DA               	movwf	_currentState
  4604  0FC2                     i1l524:
  4605  0FC2  0008               	return
  4606  0FC3                     __end_of_transToOverCurrentFault:
  4607                           
  4608                           	psect	text18
  4609  0742                     __ptext18:	
  4610 ;; *************** function _setPWMDutyandPeriod *****************
  4611 ;; Defined at:
  4612 ;;		line 49 in file "PWM.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  dutyCycle       2    0[COMMON] unsigned short 
  4615 ;;  period          1    2[COMMON] unsigned char 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;		None
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      void 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4627 ;;      Params:         3       0       0       0       0       0
  4628 ;;      Locals:         0       0       0       0       0       0
  4629 ;;      Temps:          2       0       0       0       0       0
  4630 ;;      Totals:         5       0       0       0       0       0
  4631 ;;Total ram usage:        5 bytes
  4632 ;; Hardware stack levels used: 1
  4633 ;; This function calls:
  4634 ;;		Nothing
  4635 ;; This function is called by:
  4636 ;;		_Tick980Hz
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640  0742                     _setPWMDutyandPeriod:	
  4641                           ;psect for function _setPWMDutyandPeriod
  4642                           
  4643  0742                     i1l2108:	
  4644                           ;incstack = 0
  4645                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  4646                           
  4647                           
  4648                           ;PWM.c: 50:     PR2 = period;
  4649  0742  0872               	movf	setPWMDutyandPeriod@period,w
  4650  0743  0020               	movlb	0	; select bank0
  4651  0744  009B               	movwf	27	;volatile
  4652  0745                     i1l2110:
  4653                           
  4654                           ;PWM.c: 51:     CCPR1L = dutyCycle >> 2;
  4655  0745  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  4656  0746  00F4               	movwf	??_setPWMDutyandPeriod+1
  4657  0747  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4658  0748  00F3               	movwf	??_setPWMDutyandPeriod
  4659  0749  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4660  074A  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4661  074B  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  4662  074C  0CF3               	rrf	??_setPWMDutyandPeriod,f
  4663  074D  0873               	movf	??_setPWMDutyandPeriod,w
  4664  074E  0025               	movlb	5	; select bank5
  4665  074F  0091               	movwf	17	;volatile
  4666  0750                     i1l2112:
  4667                           
  4668                           ;PWM.c: 52:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  4669  0750  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  4670  0751  3901               	andlw	1
  4671  0752  00F3               	movwf	??_setPWMDutyandPeriod
  4672  0753  0EF3               	swapf	??_setPWMDutyandPeriod,f
  4673  0754  0813               	movf	19,w	;volatile
  4674  0755  0673               	xorwf	??_setPWMDutyandPeriod,w
  4675  0756  39EF               	andlw	-17
  4676  0757  0673               	xorwf	??_setPWMDutyandPeriod,w
  4677  0758  0093               	movwf	19	;volatile
  4678                           
  4679                           ;PWM.c: 53:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4680  0759  3002               	movlw	2
  4681  075A  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4682  075B  00F3               	movwf	??_setPWMDutyandPeriod
  4683  075C  3000               	movlw	0
  4684  075D  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4685  075E  00F4               	movwf	??_setPWMDutyandPeriod+1
  4686  075F  3000               	movlw	0
  4687  0760  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4688  0761  3002               	movlw	2
  4689  0762  1903               	skipnz
  4690  0763  0273               	subwf	??_setPWMDutyandPeriod,w
  4691  0764  1803               	skipnc
  4692  0765  2F67               	goto	u180_21
  4693  0766  2F6A               	goto	u180_20
  4694  0767                     u180_21:
  4695  0767  0025               	movlb	5	; select bank5
  4696  0768  1693               	bsf	19,5	;volatile
  4697  0769  2F6C               	goto	u181_24
  4698  076A                     u180_20:
  4699  076A  0025               	movlb	5	; select bank5
  4700  076B  1293               	bcf	19,5	;volatile
  4701  076C                     u181_24:
  4702  076C                     i1l172:
  4703  076C  0008               	return
  4704  076D                     __end_of_setPWMDutyandPeriod:
  4705                           
  4706                           	psect	text19
  4707  00AB                     __ptext19:	
  4708 ;; *************** function _runPotScaling *****************
  4709 ;; Defined at:
  4710 ;;		line 55 in file "Potentiometer.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;		None
  4713 ;; Auto vars:     Size  Location     Type
  4714 ;;  minDuty         2   16[BANK0 ] unsigned short 
  4715 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;                  1    wreg      void 
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, pclath, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4725 ;;      Params:         0       0       0       0       0       0
  4726 ;;      Locals:         0       4       0       0       0       0
  4727 ;;      Temps:          0       8       0       0       0       0
  4728 ;;      Totals:         0      12       0       0       0       0
  4729 ;;Total ram usage:       12 bytes
  4730 ;; Hardware stack levels used: 1
  4731 ;; Hardware stack levels required when called: 1
  4732 ;; This function calls:
  4733 ;;		___lldiv
  4734 ;;		___lmul
  4735 ;;		___wmul
  4736 ;; This function is called by:
  4737 ;;		_Tick980Hz
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741  00AB                     _runPotScaling:	
  4742                           ;psect for function _runPotScaling
  4743                           
  4744  00AB                     i1l2184:	
  4745                           ;incstack = 0
  4746                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  4747                           
  4748                           
  4749                           ;Potentiometer.c: 57:     if(currentState == potControl){
  4750  00AB  0020               	movlb	0	; select bank0
  4751  00AC  035A               	decf	_currentState,w
  4752  00AD  1D03               	btfss	3,2
  4753  00AE  28B0               	goto	u190_21
  4754  00AF  28B1               	goto	u190_20
  4755  00B0                     u190_21:
  4756  00B0  2986               	goto	i1l373
  4757  00B1                     u190_20:
  4758  00B1                     i1l2186:
  4759                           
  4760                           ;Potentiometer.c: 58:         potSetCount++;
  4761  00B1  3001               	movlw	1
  4762  00B2  00A6               	movwf	??_runPotScaling
  4763  00B3  0826               	movf	??_runPotScaling,w
  4764  00B4  07D6               	addwf	_potSetCount,f
  4765                           
  4766                           ;Potentiometer.c: 60:         if(potSetCount == 32){
  4767  00B5  3020               	movlw	32
  4768  00B6  0656               	xorwf	_potSetCount,w
  4769  00B7  1D03               	btfss	3,2
  4770  00B8  28BA               	goto	u191_21
  4771  00B9  28BB               	goto	u191_20
  4772  00BA                     u191_21:
  4773  00BA  2986               	goto	i1l373
  4774  00BB                     u191_20:
  4775  00BB                     i1l2188:
  4776                           
  4777                           ;Potentiometer.c: 62:             setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint
      +                          32_t)(159u - 15u)) >> 10 ) + 15u;
  4778  00BB  0846               	movf	_filteredFreqPot,w
  4779  00BC  3ED3               	addlw	211
  4780  00BD  00F0               	movwf	___lmul@multiplier
  4781  00BE  30FF               	movlw	255
  4782  00BF  3D47               	addwfc	_filteredFreqPot+1,w
  4783  00C0  00F1               	movwf	___lmul@multiplier+1
  4784  00C1  01F2               	clrf	___lmul@multiplier+2
  4785  00C2  01F3               	clrf	___lmul@multiplier+3
  4786  00C3  3000               	movlw	0
  4787  00C4  00F7               	movwf	___lmul@multiplicand+3
  4788  00C5  3000               	movlw	0
  4789  00C6  00F6               	movwf	___lmul@multiplicand+2
  4790  00C7  3000               	movlw	0
  4791  00C8  00F5               	movwf	___lmul@multiplicand+1
  4792  00C9  3090               	movlw	144
  4793  00CA  00F4               	movwf	___lmul@multiplicand
  4794  00CB  3186  26B3  3180   	fcall	___lmul
  4795  00CE  0870               	movf	?___lmul,w
  4796  00CF  0020               	movlb	0	; select bank0
  4797  00D0  00A6               	movwf	??_runPotScaling
  4798  00D1  0871               	movf	?___lmul+1,w
  4799  00D2  00A7               	movwf	??_runPotScaling+1
  4800  00D3  0872               	movf	?___lmul+2,w
  4801  00D4  00A8               	movwf	??_runPotScaling+2
  4802  00D5  0873               	movf	?___lmul+3,w
  4803  00D6  00A9               	movwf	??_runPotScaling+3
  4804  00D7  300A               	movlw	10
  4805  00D8                     u192_25:
  4806  00D8  36A9               	lsrf	??_runPotScaling+3,f
  4807  00D9  0CA8               	rrf	??_runPotScaling+2,f
  4808  00DA  0CA7               	rrf	??_runPotScaling+1,f
  4809  00DB  0CA6               	rrf	??_runPotScaling,f
  4810  00DC                     u192_20:
  4811  00DC  0B89               	decfsz	9,f
  4812  00DD  28D8               	goto	u192_25
  4813  00DE  0826               	movf	??_runPotScaling,w
  4814  00DF  3E0F               	addlw	15
  4815  00E0  00AA               	movwf	??_runPotScaling+4
  4816  00E1  082A               	movf	??_runPotScaling+4,w
  4817  00E2  00DB               	movwf	_setPeriod
  4818                           
  4819                           ;Potentiometer.c: 64:             setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) *
      +                           (uint32_t)setPeriod )) >> 8;
  4820  00E3  0844               	movf	_filteredDutyPot,w
  4821  00E4  3ED3               	addlw	211
  4822  00E5  00F0               	movwf	___lmul@multiplier
  4823  00E6  30FF               	movlw	255
  4824  00E7  3D45               	addwfc	_filteredDutyPot+1,w
  4825  00E8  00F1               	movwf	___lmul@multiplier+1
  4826  00E9  01F2               	clrf	___lmul@multiplier+2
  4827  00EA  01F3               	clrf	___lmul@multiplier+3
  4828  00EB  085B               	movf	_setPeriod,w
  4829  00EC  00A6               	movwf	??_runPotScaling
  4830  00ED  01A7               	clrf	??_runPotScaling+1
  4831  00EE  01A8               	clrf	??_runPotScaling+2
  4832  00EF  01A9               	clrf	??_runPotScaling+3
  4833  00F0  0829               	movf	??_runPotScaling+3,w
  4834  00F1  00F7               	movwf	___lmul@multiplicand+3
  4835  00F2  0828               	movf	??_runPotScaling+2,w
  4836  00F3  00F6               	movwf	___lmul@multiplicand+2
  4837  00F4  0827               	movf	??_runPotScaling+1,w
  4838  00F5  00F5               	movwf	___lmul@multiplicand+1
  4839  00F6  0826               	movf	??_runPotScaling,w
  4840  00F7  00F4               	movwf	___lmul@multiplicand
  4841  00F8  3186  26B3  3180   	fcall	___lmul
  4842  00FB  0870               	movf	?___lmul,w
  4843  00FC  0020               	movlb	0	; select bank0
  4844  00FD  00AA               	movwf	??_runPotScaling+4
  4845  00FE  0871               	movf	?___lmul+1,w
  4846  00FF  00AB               	movwf	??_runPotScaling+5
  4847  0100  0872               	movf	?___lmul+2,w
  4848  0101  00AC               	movwf	??_runPotScaling+6
  4849  0102  0873               	movf	?___lmul+3,w
  4850  0103  00AD               	movwf	??_runPotScaling+7
  4851  0104  3008               	movlw	8
  4852  0105                     u193_25:
  4853  0105  36AD               	lsrf	??_runPotScaling+7,f
  4854  0106  0CAC               	rrf	??_runPotScaling+6,f
  4855  0107  0CAB               	rrf	??_runPotScaling+5,f
  4856  0108  0CAA               	rrf	??_runPotScaling+4,f
  4857  0109                     u193_20:
  4858  0109  0B89               	decfsz	9,f
  4859  010A  2905               	goto	u193_25
  4860  010B  082B               	movf	??_runPotScaling+5,w
  4861  010C  00D3               	movwf	_setDuty+1
  4862  010D  082A               	movf	??_runPotScaling+4,w
  4863  010E  00D2               	movwf	_setDuty
  4864                           
  4865                           ;Potentiometer.c: 67:             uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t)
      +                           90) * setPeriod)) / 25);
  4866  010F  3000               	movlw	0
  4867  0110  00F9               	movwf	___lldiv@divisor+3
  4868  0111  3000               	movlw	0
  4869  0112  00F8               	movwf	___lldiv@divisor+2
  4870  0113  3000               	movlw	0
  4871  0114  00F7               	movwf	___lldiv@divisor+1
  4872  0115  3019               	movlw	25
  4873  0116  00F6               	movwf	___lldiv@divisor
  4874  0117  305A               	movlw	90
  4875  0118  00F2               	movwf	___wmul@multiplicand
  4876  0119  3000               	movlw	0
  4877  011A  00F3               	movwf	___wmul@multiplicand+1
  4878  011B  085B               	movf	_setPeriod,w
  4879  011C  00A6               	movwf	??_runPotScaling
  4880  011D  01A7               	clrf	??_runPotScaling+1
  4881  011E  0826               	movf	??_runPotScaling,w
  4882  011F  00F0               	movwf	___wmul@multiplier
  4883  0120  0827               	movf	??_runPotScaling+1,w
  4884  0121  00F1               	movwf	___wmul@multiplier+1
  4885  0122  3187  27AE  3180   	fcall	___wmul
  4886  0125  0870               	movf	?___wmul,w
  4887  0126  0020               	movlb	0	; select bank0
  4888  0127  00A8               	movwf	??_runPotScaling+2
  4889  0128  0871               	movf	?___wmul+1,w
  4890  0129  00A9               	movwf	??_runPotScaling+3
  4891  012A  01AA               	clrf	??_runPotScaling+4
  4892  012B  01AB               	clrf	??_runPotScaling+5
  4893  012C  082B               	movf	??_runPotScaling+5,w
  4894  012D  00FD               	movwf	___lldiv@dividend+3
  4895  012E  082A               	movf	??_runPotScaling+4,w
  4896  012F  00FC               	movwf	___lldiv@dividend+2
  4897  0130  0829               	movf	??_runPotScaling+3,w
  4898  0131  00FB               	movwf	___lldiv@dividend+1
  4899  0132  0828               	movf	??_runPotScaling+2,w
  4900  0133  00FA               	movwf	___lldiv@dividend
  4901  0134  3184  2469  3180   	fcall	___lldiv
  4902  0137  0877               	movf	?___lldiv+1,w
  4903  0138  0020               	movlb	0	; select bank0
  4904  0139  00AF               	movwf	runPotScaling@maxDuty+1
  4905  013A  0876               	movf	?___lldiv,w
  4906  013B  00AE               	movwf	runPotScaling@maxDuty
  4907                           
  4908                           ;Potentiometer.c: 68:             uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t)
      +                           10) * setPeriod)) / 25);
  4909  013C  3000               	movlw	0
  4910  013D  00F9               	movwf	___lldiv@divisor+3
  4911  013E  3000               	movlw	0
  4912  013F  00F8               	movwf	___lldiv@divisor+2
  4913  0140  3000               	movlw	0
  4914  0141  00F7               	movwf	___lldiv@divisor+1
  4915  0142  3019               	movlw	25
  4916  0143  00F6               	movwf	___lldiv@divisor
  4917  0144  300A               	movlw	10
  4918  0145  00F2               	movwf	___wmul@multiplicand
  4919  0146  3000               	movlw	0
  4920  0147  00F3               	movwf	___wmul@multiplicand+1
  4921  0148  085B               	movf	_setPeriod,w
  4922  0149  00A6               	movwf	??_runPotScaling
  4923  014A  01A7               	clrf	??_runPotScaling+1
  4924  014B  0826               	movf	??_runPotScaling,w
  4925  014C  00F0               	movwf	___wmul@multiplier
  4926  014D  0827               	movf	??_runPotScaling+1,w
  4927  014E  00F1               	movwf	___wmul@multiplier+1
  4928  014F  3187  27AE  3180   	fcall	___wmul
  4929  0152  0870               	movf	?___wmul,w
  4930  0153  0020               	movlb	0	; select bank0
  4931  0154  00A8               	movwf	??_runPotScaling+2
  4932  0155  0871               	movf	?___wmul+1,w
  4933  0156  00A9               	movwf	??_runPotScaling+3
  4934  0157  01AA               	clrf	??_runPotScaling+4
  4935  0158  01AB               	clrf	??_runPotScaling+5
  4936  0159  082B               	movf	??_runPotScaling+5,w
  4937  015A  00FD               	movwf	___lldiv@dividend+3
  4938  015B  082A               	movf	??_runPotScaling+4,w
  4939  015C  00FC               	movwf	___lldiv@dividend+2
  4940  015D  0829               	movf	??_runPotScaling+3,w
  4941  015E  00FB               	movwf	___lldiv@dividend+1
  4942  015F  0828               	movf	??_runPotScaling+2,w
  4943  0160  00FA               	movwf	___lldiv@dividend
  4944  0161  3184  2469  3180   	fcall	___lldiv
  4945  0164  0877               	movf	?___lldiv+1,w
  4946  0165  0020               	movlb	0	; select bank0
  4947  0166  00B1               	movwf	runPotScaling@minDuty+1
  4948  0167  0876               	movf	?___lldiv,w
  4949  0168  00B0               	movwf	runPotScaling@minDuty
  4950  0169                     i1l2190:
  4951                           
  4952                           ;Potentiometer.c: 69:             if(setDuty > maxDuty) setDuty = maxDuty;
  4953  0169  0853               	movf	_setDuty+1,w
  4954  016A  022F               	subwf	runPotScaling@maxDuty+1,w
  4955  016B  1D03               	skipz
  4956  016C  296F               	goto	u194_25
  4957  016D  0852               	movf	_setDuty,w
  4958  016E  022E               	subwf	runPotScaling@maxDuty,w
  4959  016F                     u194_25:
  4960  016F  1803               	skipnc
  4961  0170  2972               	goto	u194_21
  4962  0171  2973               	goto	u194_20
  4963  0172                     u194_21:
  4964  0172  2977               	goto	i1l371
  4965  0173                     u194_20:
  4966  0173                     i1l2192:
  4967  0173  082F               	movf	runPotScaling@maxDuty+1,w
  4968  0174  00D3               	movwf	_setDuty+1
  4969  0175  082E               	movf	runPotScaling@maxDuty,w
  4970  0176  00D2               	movwf	_setDuty
  4971  0177                     i1l371:
  4972                           
  4973                           ;Potentiometer.c: 70:             if(setDuty < minDuty) setDuty = minDuty;
  4974  0177  0831               	movf	runPotScaling@minDuty+1,w
  4975  0178  0253               	subwf	_setDuty+1,w
  4976  0179  1D03               	skipz
  4977  017A  297D               	goto	u195_25
  4978  017B  0830               	movf	runPotScaling@minDuty,w
  4979  017C  0252               	subwf	_setDuty,w
  4980  017D                     u195_25:
  4981  017D  1803               	skipnc
  4982  017E  2980               	goto	u195_21
  4983  017F  2981               	goto	u195_20
  4984  0180                     u195_21:
  4985  0180  2985               	goto	i1l2196
  4986  0181                     u195_20:
  4987  0181                     i1l2194:
  4988  0181  0831               	movf	runPotScaling@minDuty+1,w
  4989  0182  00D3               	movwf	_setDuty+1
  4990  0183  0830               	movf	runPotScaling@minDuty,w
  4991  0184  00D2               	movwf	_setDuty
  4992  0185                     i1l2196:
  4993                           
  4994                           ;Potentiometer.c: 72:             potSetCount = 0;
  4995  0185  01D6               	clrf	_potSetCount
  4996  0186                     i1l373:
  4997  0186  0008               	return
  4998  0187                     __end_of_runPotScaling:
  4999                           
  5000                           	psect	text20
  5001  06B3                     __ptext20:	
  5002 ;; *************** function ___lmul *****************
  5003 ;; Defined at:
  5004 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  multiplier      4    0[COMMON] unsigned long 
  5007 ;;  multiplicand    4    4[COMMON] unsigned long 
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  product         4    8[COMMON] unsigned long 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  4    0[COMMON] unsigned long 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5019 ;;      Params:         8       0       0       0       0       0
  5020 ;;      Locals:         4       0       0       0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0
  5022 ;;      Totals:        12       0       0       0       0       0
  5023 ;;Total ram usage:       12 bytes
  5024 ;; Hardware stack levels used: 1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_runPotScaling
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032  06B3                     ___lmul:	
  5033                           ;psect for function ___lmul
  5034                           
  5035  06B3                     i1l2018:	
  5036                           ;incstack = 0
  5037                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5038                           
  5039  06B3  3000               	movlw	0
  5040  06B4  00FB               	movwf	___lmul@product+3
  5041  06B5  3000               	movlw	0
  5042  06B6  00FA               	movwf	___lmul@product+2
  5043  06B7  3000               	movlw	0
  5044  06B8  00F9               	movwf	___lmul@product+1
  5045  06B9  3000               	movlw	0
  5046  06BA  00F8               	movwf	___lmul@product
  5047  06BB                     i1l2020:
  5048  06BB  1C70               	btfss	___lmul@multiplier,0
  5049  06BC  2EBE               	goto	u158_21
  5050  06BD  2EBF               	goto	u158_20
  5051  06BE                     u158_21:
  5052  06BE  2EC7               	goto	i1l2024
  5053  06BF                     u158_20:
  5054  06BF                     i1l2022:
  5055  06BF  0874               	movf	___lmul@multiplicand,w
  5056  06C0  07F8               	addwf	___lmul@product,f
  5057  06C1  0875               	movf	___lmul@multiplicand+1,w
  5058  06C2  3DF9               	addwfc	___lmul@product+1,f
  5059  06C3  0876               	movf	___lmul@multiplicand+2,w
  5060  06C4  3DFA               	addwfc	___lmul@product+2,f
  5061  06C5  0877               	movf	___lmul@multiplicand+3,w
  5062  06C6  3DFB               	addwfc	___lmul@product+3,f
  5063  06C7                     i1l2024:
  5064  06C7  3001               	movlw	1
  5065  06C8                     u159_25:
  5066  06C8  35F4               	lslf	___lmul@multiplicand,f
  5067  06C9  0DF5               	rlf	___lmul@multiplicand+1,f
  5068  06CA  0DF6               	rlf	___lmul@multiplicand+2,f
  5069  06CB  0DF7               	rlf	___lmul@multiplicand+3,f
  5070  06CC  0B89               	decfsz	9,f
  5071  06CD  2EC8               	goto	u159_25
  5072  06CE                     i1l2026:
  5073  06CE  3001               	movlw	1
  5074  06CF                     u160_25:
  5075  06CF  36F3               	lsrf	___lmul@multiplier+3,f
  5076  06D0  0CF2               	rrf	___lmul@multiplier+2,f
  5077  06D1  0CF1               	rrf	___lmul@multiplier+1,f
  5078  06D2  0CF0               	rrf	___lmul@multiplier,f
  5079  06D3  0B89               	decfsz	9,f
  5080  06D4  2ECF               	goto	u160_25
  5081  06D5  0873               	movf	___lmul@multiplier+3,w
  5082  06D6  0472               	iorwf	___lmul@multiplier+2,w
  5083  06D7  0471               	iorwf	___lmul@multiplier+1,w
  5084  06D8  0470               	iorwf	___lmul@multiplier,w
  5085  06D9  1D03               	skipz
  5086  06DA  2EDC               	goto	u161_21
  5087  06DB  2EDD               	goto	u161_20
  5088  06DC                     u161_21:
  5089  06DC  2EBB               	goto	i1l2020
  5090  06DD                     u161_20:
  5091  06DD                     i1l2028:
  5092  06DD  087B               	movf	___lmul@product+3,w
  5093  06DE  00F3               	movwf	?___lmul+3
  5094  06DF  087A               	movf	___lmul@product+2,w
  5095  06E0  00F2               	movwf	?___lmul+2
  5096  06E1  0879               	movf	___lmul@product+1,w
  5097  06E2  00F1               	movwf	?___lmul+1
  5098  06E3  0878               	movf	___lmul@product,w
  5099  06E4  00F0               	movwf	?___lmul
  5100  06E5                     i1l688:
  5101  06E5  0008               	return
  5102  06E6                     __end_of___lmul:
  5103                           
  5104                           	psect	text21
  5105  0469                     __ptext21:	
  5106 ;; *************** function ___lldiv *****************
  5107 ;; Defined at:
  5108 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  5109 ;; Parameters:    Size  Location     Type
  5110 ;;  divisor         4    6[COMMON] unsigned long 
  5111 ;;  dividend        4   10[COMMON] unsigned long 
  5112 ;; Auto vars:     Size  Location     Type
  5113 ;;  quotient        4    1[BANK0 ] unsigned long 
  5114 ;;  counter         1    5[BANK0 ] unsigned char 
  5115 ;; Return value:  Size  Location     Type
  5116 ;;                  4    6[COMMON] unsigned long 
  5117 ;; Registers used:
  5118 ;;		wreg, status,2, status,0
  5119 ;; Tracked objects:
  5120 ;;		On entry : 0/0
  5121 ;;		On exit  : 0/0
  5122 ;;		Unchanged: 0/0
  5123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5124 ;;      Params:         8       0       0       0       0       0
  5125 ;;      Locals:         0       5       0       0       0       0
  5126 ;;      Temps:          0       1       0       0       0       0
  5127 ;;      Totals:         8       6       0       0       0       0
  5128 ;;Total ram usage:       14 bytes
  5129 ;; Hardware stack levels used: 1
  5130 ;; This function calls:
  5131 ;;		Nothing
  5132 ;; This function is called by:
  5133 ;;		_runPotScaling
  5134 ;; This function uses a non-reentrant model
  5135 ;;
  5136                           
  5137  0469                     ___lldiv:	
  5138                           ;psect for function ___lldiv
  5139                           
  5140  0469                     i1l2032:	
  5141                           ;incstack = 0
  5142                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5143                           
  5144  0469  3000               	movlw	0
  5145  046A  0020               	movlb	0	; select bank0
  5146  046B  00A4               	movwf	___lldiv@quotient+3
  5147  046C  3000               	movlw	0
  5148  046D  00A3               	movwf	___lldiv@quotient+2
  5149  046E  3000               	movlw	0
  5150  046F  00A2               	movwf	___lldiv@quotient+1
  5151  0470  3000               	movlw	0
  5152  0471  00A1               	movwf	___lldiv@quotient
  5153  0472  0879               	movf	___lldiv@divisor+3,w
  5154  0473  0478               	iorwf	___lldiv@divisor+2,w
  5155  0474  0477               	iorwf	___lldiv@divisor+1,w
  5156  0475  0476               	iorwf	___lldiv@divisor,w
  5157  0476  1903               	skipnz
  5158  0477  2C79               	goto	u162_21
  5159  0478  2C7A               	goto	u162_20
  5160  0479                     u162_21:
  5161  0479  2CBB               	goto	i1l2052
  5162  047A                     u162_20:
  5163  047A                     i1l2034:
  5164  047A  01A5               	clrf	___lldiv@counter
  5165  047B  0AA5               	incf	___lldiv@counter,f
  5166  047C  2C88               	goto	i1l2038
  5167  047D                     i1l2036:
  5168  047D  3001               	movlw	1
  5169  047E                     u163_25:
  5170  047E  35F6               	lslf	___lldiv@divisor,f
  5171  047F  0DF7               	rlf	___lldiv@divisor+1,f
  5172  0480  0DF8               	rlf	___lldiv@divisor+2,f
  5173  0481  0DF9               	rlf	___lldiv@divisor+3,f
  5174  0482  0B89               	decfsz	9,f
  5175  0483  2C7E               	goto	u163_25
  5176  0484  3001               	movlw	1
  5177  0485  00A0               	movwf	??___lldiv
  5178  0486  0820               	movf	??___lldiv,w
  5179  0487  07A5               	addwf	___lldiv@counter,f
  5180  0488                     i1l2038:
  5181  0488  1FF9               	btfss	___lldiv@divisor+3,7
  5182  0489  2C8B               	goto	u164_21
  5183  048A  2C8C               	goto	u164_20
  5184  048B                     u164_21:
  5185  048B  2C7D               	goto	i1l2036
  5186  048C                     u164_20:
  5187  048C                     i1l2040:
  5188  048C  3001               	movlw	1
  5189  048D                     u165_25:
  5190  048D  35A1               	lslf	___lldiv@quotient,f
  5191  048E  0DA2               	rlf	___lldiv@quotient+1,f
  5192  048F  0DA3               	rlf	___lldiv@quotient+2,f
  5193  0490  0DA4               	rlf	___lldiv@quotient+3,f
  5194  0491  0B89               	decfsz	9,f
  5195  0492  2C8D               	goto	u165_25
  5196  0493                     i1l2042:
  5197  0493  0879               	movf	___lldiv@divisor+3,w
  5198  0494  027D               	subwf	___lldiv@dividend+3,w
  5199  0495  1D03               	skipz
  5200  0496  2CA1               	goto	u166_25
  5201  0497  0878               	movf	___lldiv@divisor+2,w
  5202  0498  027C               	subwf	___lldiv@dividend+2,w
  5203  0499  1D03               	skipz
  5204  049A  2CA1               	goto	u166_25
  5205  049B  0877               	movf	___lldiv@divisor+1,w
  5206  049C  027B               	subwf	___lldiv@dividend+1,w
  5207  049D  1D03               	skipz
  5208  049E  2CA1               	goto	u166_25
  5209  049F  0876               	movf	___lldiv@divisor,w
  5210  04A0  027A               	subwf	___lldiv@dividend,w
  5211  04A1                     u166_25:
  5212  04A1  1C03               	skipc
  5213  04A2  2CA4               	goto	u166_21
  5214  04A3  2CA5               	goto	u166_20
  5215  04A4                     u166_21:
  5216  04A4  2CAE               	goto	i1l2048
  5217  04A5                     u166_20:
  5218  04A5                     i1l2044:
  5219  04A5  0876               	movf	___lldiv@divisor,w
  5220  04A6  02FA               	subwf	___lldiv@dividend,f
  5221  04A7  0877               	movf	___lldiv@divisor+1,w
  5222  04A8  3BFB               	subwfb	___lldiv@dividend+1,f
  5223  04A9  0878               	movf	___lldiv@divisor+2,w
  5224  04AA  3BFC               	subwfb	___lldiv@dividend+2,f
  5225  04AB  0879               	movf	___lldiv@divisor+3,w
  5226  04AC  3BFD               	subwfb	___lldiv@dividend+3,f
  5227  04AD                     i1l2046:
  5228  04AD  1421               	bsf	___lldiv@quotient,0
  5229  04AE                     i1l2048:
  5230  04AE  3001               	movlw	1
  5231  04AF                     u167_25:
  5232  04AF  36F9               	lsrf	___lldiv@divisor+3,f
  5233  04B0  0CF8               	rrf	___lldiv@divisor+2,f
  5234  04B1  0CF7               	rrf	___lldiv@divisor+1,f
  5235  04B2  0CF6               	rrf	___lldiv@divisor,f
  5236  04B3  0B89               	decfsz	9,f
  5237  04B4  2CAF               	goto	u167_25
  5238  04B5                     i1l2050:
  5239  04B5  3001               	movlw	1
  5240  04B6  02A5               	subwf	___lldiv@counter,f
  5241  04B7  1D03               	btfss	3,2
  5242  04B8  2CBA               	goto	u168_21
  5243  04B9  2CBB               	goto	u168_20
  5244  04BA                     u168_21:
  5245  04BA  2C8C               	goto	i1l2040
  5246  04BB                     u168_20:
  5247  04BB                     i1l2052:
  5248  04BB  0824               	movf	___lldiv@quotient+3,w
  5249  04BC  00F9               	movwf	?___lldiv+3
  5250  04BD  0823               	movf	___lldiv@quotient+2,w
  5251  04BE  00F8               	movwf	?___lldiv+2
  5252  04BF  0822               	movf	___lldiv@quotient+1,w
  5253  04C0  00F7               	movwf	?___lldiv+1
  5254  04C1  0821               	movf	___lldiv@quotient,w
  5255  04C2  00F6               	movwf	?___lldiv
  5256  04C3                     i1l710:
  5257  04C3  0008               	return
  5258  04C4                     __end_of___lldiv:
  5259                           
  5260                           	psect	text22
  5261  0FCC                     __ptext22:	
  5262 ;; *************** function _readILCurrentADCRaw *****************
  5263 ;; Defined at:
  5264 ;;		line 108 in file "ADC.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;		None
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;		None
  5269 ;; Return value:  Size  Location     Type
  5270 ;;                  2    0[COMMON] unsigned short 
  5271 ;; Registers used:
  5272 ;;		wreg
  5273 ;; Tracked objects:
  5274 ;;		On entry : 0/0
  5275 ;;		On exit  : 0/0
  5276 ;;		Unchanged: 0/0
  5277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5278 ;;      Params:         2       0       0       0       0       0
  5279 ;;      Locals:         0       0       0       0       0       0
  5280 ;;      Temps:          0       0       0       0       0       0
  5281 ;;      Totals:         2       0       0       0       0       0
  5282 ;;Total ram usage:        2 bytes
  5283 ;; Hardware stack levels used: 1
  5284 ;; This function calls:
  5285 ;;		Nothing
  5286 ;; This function is called by:
  5287 ;;		_Tick980Hz
  5288 ;; This function uses a non-reentrant model
  5289 ;;
  5290                           
  5291  0FCC                     _readILCurrentADCRaw:	
  5292                           ;psect for function _readILCurrentADCRaw
  5293                           
  5294  0FCC                     i1l2262:	
  5295                           ;incstack = 0
  5296                           ; Regs used in _readILCurrentADCRaw: [wreg]
  5297                           
  5298                           
  5299                           ;ADC.c: 110:     if(~ADCON0bits.GO_nDONE){
  5300  0FCC  0021               	movlb	1	; select bank1
  5301  0FCD  081D               	movf	29,w	;volatile
  5302  0FCE                     i1l2264:
  5303                           
  5304                           ;ADC.c: 111:         ADCON0bits.GO_nDONE = 1;
  5305  0FCE  149D               	bsf	29,1	;volatile
  5306  0FCF                     i1l256:	
  5307                           ;ADC.c: 112:         while(ADCON0bits.GO_nDONE);
  5308                           
  5309  0FCF  189D               	btfsc	29,1	;volatile
  5310  0FD0  2FD2               	goto	u202_21
  5311  0FD1  2FD3               	goto	u202_20
  5312  0FD2                     u202_21:
  5313  0FD2  2FCF               	goto	i1l256
  5314  0FD3                     u202_20:
  5315  0FD3                     i1l2266:
  5316                           
  5317                           ;ADC.c: 113:         return ((ADRESH<<8)+ADRESL);
  5318  0FD3  081C               	movf	28,w	;volatile
  5319  0FD4  00F1               	movwf	?_readILCurrentADCRaw+1
  5320  0FD5  081B               	movf	27,w	;volatile
  5321  0FD6  00F0               	movwf	?_readILCurrentADCRaw
  5322  0FD7                     i1l259:
  5323  0FD7  0008               	return
  5324  0FD8                     __end_of_readILCurrentADCRaw:
  5325                           
  5326                           	psect	text23
  5327  04C4                     __ptext23:	
  5328 ;; *************** function _readFilteredVout *****************
  5329 ;; Defined at:
  5330 ;;		line 20 in file "Controller.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;  i               1    8[BANK0 ] unsigned char 
  5335 ;;  i               1    9[BANK0 ] unsigned char 
  5336 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5337 ;; Return value:  Size  Location     Type
  5338 ;;                  2   11[COMMON] unsigned short 
  5339 ;; Registers used:
  5340 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5341 ;; Tracked objects:
  5342 ;;		On entry : 0/0
  5343 ;;		On exit  : 0/0
  5344 ;;		Unchanged: 0/0
  5345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5346 ;;      Params:         2       0       0       0       0       0
  5347 ;;      Locals:         0       6       0       0       0       0
  5348 ;;      Temps:          0       4       0       0       0       0
  5349 ;;      Totals:         2      10       0       0       0       0
  5350 ;;Total ram usage:       12 bytes
  5351 ;; Hardware stack levels used: 1
  5352 ;; Hardware stack levels required when called: 1
  5353 ;; This function calls:
  5354 ;;		_readADCRaw
  5355 ;; This function is called by:
  5356 ;;		_Tick980Hz
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360  04C4                     _readFilteredVout:	
  5361                           ;psect for function _readFilteredVout
  5362                           
  5363  04C4                     i1l2152:	
  5364                           ;incstack = 0
  5365                           ; Regs used in _readFilteredVout: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5366                           
  5367                           
  5368                           ;Controller.c: 21:     for(uint8_t i=0; i<16 -1; i++) voutFIFO[i] = voutFIFO[i+1];
  5369  04C4  0020               	movlb	0	; select bank0
  5370  04C5  01A9               	clrf	readFilteredVout@i
  5371  04C6                     i1l2158:
  5372  04C6  3529               	lslf	readFilteredVout@i,w
  5373  04C7  3E42               	addlw	(low ((_voutFIFO| (0+256)+2)))& (0+255)
  5374  04C8  0086               	movwf	6
  5375  04C9  3001               	movlw	1	; select bank2/3
  5376  04CA  0087               	movwf	7
  5377  04CB  3529               	lslf	readFilteredVout@i,w
  5378  04CC  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  5379  04CD  0084               	movwf	4
  5380  04CE  3001               	movlw	1	; select bank2/3
  5381  04CF  0085               	movwf	5
  5382  04D0  3F40               	moviw [0]fsr1
  5383  04D1  3F80               	movwi [0]fsr0
  5384  04D2  3F41               	moviw [1]fsr1
  5385  04D3  3F81               	movwi [1]fsr0
  5386  04D4                     i1l2160:
  5387  04D4  3001               	movlw	1
  5388  04D5  00A0               	movwf	??_readFilteredVout
  5389  04D6  0820               	movf	??_readFilteredVout,w
  5390  04D7  07A9               	addwf	readFilteredVout@i,f
  5391  04D8                     i1l2162:
  5392  04D8  300F               	movlw	15
  5393  04D9  0229               	subwf	readFilteredVout@i,w
  5394  04DA  1C03               	skipc
  5395  04DB  2CDD               	goto	u187_21
  5396  04DC  2CDE               	goto	u187_20
  5397  04DD                     u187_21:
  5398  04DD  2CC6               	goto	i1l2158
  5399  04DE                     u187_20:
  5400  04DE                     i1l2164:
  5401                           
  5402                           ;Controller.c: 22:     voutFIFO[16 -1] = readADCRaw(pinRA4);
  5403  04DE  3004               	movlw	4
  5404  04DF  3183  2348  3184   	fcall	_readADCRaw
  5405  04E2  0871               	movf	?_readADCRaw+1,w
  5406  04E3  0022               	movlb	2	; select bank2
  5407  04E4  00DF               	movwf	((_voutFIFO+1)^(0+256)+30)
  5408  04E5  0870               	movf	?_readADCRaw,w
  5409  04E6  00DE               	movwf	(_voutFIFO^(0+256)+30)
  5410  04E7                     i1l2166:
  5411                           
  5412                           ;Controller.c: 23:     uint32_t sumOfSamples = 0;
  5413  04E7  3000               	movlw	0
  5414  04E8  0020               	movlb	0	; select bank0
  5415  04E9  00A7               	movwf	readFilteredVout@sumOfSamples+3
  5416  04EA  3000               	movlw	0
  5417  04EB  00A6               	movwf	readFilteredVout@sumOfSamples+2
  5418  04EC  3000               	movlw	0
  5419  04ED  00A5               	movwf	readFilteredVout@sumOfSamples+1
  5420  04EE  3000               	movlw	0
  5421  04EF  00A4               	movwf	readFilteredVout@sumOfSamples
  5422  04F0                     i1l2168:
  5423                           
  5424                           ;Controller.c: 24:     for(uint8_t i=0; i<16; i++) sumOfSamples += voutFIFO[i];
  5425  04F0  01A8               	clrf	readFilteredVout@i_840
  5426  04F1                     i1l2174:
  5427  04F1  3528               	lslf	readFilteredVout@i_840,w
  5428  04F2  3E40               	addlw	(low (_voutFIFO| (0+256)))& (0+255)
  5429  04F3  0086               	movwf	6
  5430  04F4  3001               	movlw	1	; select bank2/3
  5431  04F5  0087               	movwf	7
  5432  04F6  3F40               	moviw [0]fsr1
  5433  04F7  00A0               	movwf	??_readFilteredVout
  5434  04F8  3F41               	moviw [1]fsr1
  5435  04F9  00A1               	movwf	??_readFilteredVout+1
  5436  04FA  0820               	movf	??_readFilteredVout,w
  5437  04FB  07A4               	addwf	readFilteredVout@sumOfSamples,f
  5438  04FC  0821               	movf	??_readFilteredVout+1,w
  5439  04FD  3DA5               	addwfc	readFilteredVout@sumOfSamples+1,f
  5440  04FE  3000               	movlw	0
  5441  04FF  3DA6               	addwfc	readFilteredVout@sumOfSamples+2,f
  5442  0500  3DA7               	addwfc	readFilteredVout@sumOfSamples+3,f
  5443  0501                     i1l2176:
  5444  0501  3001               	movlw	1
  5445  0502  00A0               	movwf	??_readFilteredVout
  5446  0503  0820               	movf	??_readFilteredVout,w
  5447  0504  07A8               	addwf	readFilteredVout@i_840,f
  5448  0505                     i1l2178:
  5449  0505  3010               	movlw	16
  5450  0506  0228               	subwf	readFilteredVout@i_840,w
  5451  0507  1C03               	skipc
  5452  0508  2D0A               	goto	u188_21
  5453  0509  2D0B               	goto	u188_20
  5454  050A                     u188_21:
  5455  050A  2CF1               	goto	i1l2174
  5456  050B                     u188_20:
  5457  050B                     i1l2180:
  5458                           
  5459                           ;Controller.c: 26:     return (sumOfSamples >> 4);
  5460  050B  0824               	movf	readFilteredVout@sumOfSamples,w
  5461  050C  00A0               	movwf	??_readFilteredVout
  5462  050D  0825               	movf	readFilteredVout@sumOfSamples+1,w
  5463  050E  00A1               	movwf	??_readFilteredVout+1
  5464  050F  0826               	movf	readFilteredVout@sumOfSamples+2,w
  5465  0510  00A2               	movwf	??_readFilteredVout+2
  5466  0511  0827               	movf	readFilteredVout@sumOfSamples+3,w
  5467  0512  00A3               	movwf	??_readFilteredVout+3
  5468  0513  3004               	movlw	4
  5469  0514                     u189_25:
  5470  0514  36A3               	lsrf	??_readFilteredVout+3,f
  5471  0515  0CA2               	rrf	??_readFilteredVout+2,f
  5472  0516  0CA1               	rrf	??_readFilteredVout+1,f
  5473  0517  0CA0               	rrf	??_readFilteredVout,f
  5474  0518                     u189_20:
  5475  0518  0B89               	decfsz	9,f
  5476  0519  2D14               	goto	u189_25
  5477  051A  0821               	movf	??_readFilteredVout+1,w
  5478  051B  00FC               	movwf	?_readFilteredVout+1
  5479  051C  0820               	movf	??_readFilteredVout,w
  5480  051D  00FB               	movwf	?_readFilteredVout
  5481  051E                     i1l418:
  5482  051E  0008               	return
  5483  051F                     __end_of_readFilteredVout:
  5484                           
  5485                           	psect	text24
  5486  05D5                     __ptext24:	
  5487 ;; *************** function _readFilteredIL *****************
  5488 ;; Defined at:
  5489 ;;		line 55 in file "CurrentSensor.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;		None
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  i               1   10[COMMON] unsigned char 
  5494 ;;  i               1   11[COMMON] unsigned char 
  5495 ;;  sumOfSamples    4    6[COMMON] unsigned long 
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  2    0[COMMON] unsigned short 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5500 ;; Tracked objects:
  5501 ;;		On entry : 0/0
  5502 ;;		On exit  : 0/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5505 ;;      Params:         2       0       0       0       0       0
  5506 ;;      Locals:         6       0       0       0       0       0
  5507 ;;      Temps:          4       0       0       0       0       0
  5508 ;;      Totals:        12       0       0       0       0       0
  5509 ;;Total ram usage:       12 bytes
  5510 ;; Hardware stack levels used: 1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_Tick980Hz
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518  05D5                     _readFilteredIL:	
  5519                           ;psect for function _readFilteredIL
  5520                           
  5521  05D5                     i1l2122:	
  5522                           ;incstack = 0
  5523                           ; Regs used in _readFilteredIL: [wreg-fsr1h+status,2+status,0]
  5524                           
  5525                           
  5526                           ;CurrentSensor.c: 56:     for(uint8_t i=0; i<16 -1; i++) currentILFIFO[i] = currentILFIF
      +                          O[i+1];
  5527  05D5  01FB               	clrf	readFilteredIL@i
  5528  05D6                     i1l2128:
  5529  05D6  357B               	lslf	readFilteredIL@i,w
  5530  05D7  3EA2               	addlw	(low ((_currentILFIFO| 0+2)))& (0+255)
  5531  05D8  0086               	movwf	6
  5532  05D9  0187               	clrf	7
  5533  05DA  357B               	lslf	readFilteredIL@i,w
  5534  05DB  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  5535  05DC  0084               	movwf	4
  5536  05DD  0185               	clrf	5
  5537  05DE  3F40               	moviw [0]fsr1
  5538  05DF  3F80               	movwi [0]fsr0
  5539  05E0  3F41               	moviw [1]fsr1
  5540  05E1  3F81               	movwi [1]fsr0
  5541  05E2                     i1l2130:
  5542  05E2  3001               	movlw	1
  5543  05E3  00F2               	movwf	??_readFilteredIL
  5544  05E4  0872               	movf	??_readFilteredIL,w
  5545  05E5  07FB               	addwf	readFilteredIL@i,f
  5546  05E6                     i1l2132:
  5547  05E6  300F               	movlw	15
  5548  05E7  027B               	subwf	readFilteredIL@i,w
  5549  05E8  1C03               	skipc
  5550  05E9  2DEB               	goto	u184_21
  5551  05EA  2DEC               	goto	u184_20
  5552  05EB                     u184_21:
  5553  05EB  2DD6               	goto	i1l2128
  5554  05EC                     u184_20:
  5555  05EC                     i1l2134:
  5556                           
  5557                           ;CurrentSensor.c: 57:     currentILFIFO[16 -1] = latestIL;
  5558  05EC  0020               	movlb	0	; select bank0
  5559  05ED  084F               	movf	_latestIL+1,w	;volatile
  5560  05EE  0021               	movlb	1	; select bank1
  5561  05EF  00BF               	movwf	((_currentILFIFO+1)^(0+128)+30)
  5562  05F0  0020               	movlb	0	; select bank0
  5563  05F1  084E               	movf	_latestIL,w	;volatile
  5564  05F2  0021               	movlb	1	; select bank1
  5565  05F3  00BE               	movwf	(_currentILFIFO^(0+128)+30)
  5566                           
  5567                           ;CurrentSensor.c: 58:     uint32_t sumOfSamples = 0;
  5568  05F4  3000               	movlw	0
  5569  05F5  00F9               	movwf	readFilteredIL@sumOfSamples+3
  5570  05F6  3000               	movlw	0
  5571  05F7  00F8               	movwf	readFilteredIL@sumOfSamples+2
  5572  05F8  3000               	movlw	0
  5573  05F9  00F7               	movwf	readFilteredIL@sumOfSamples+1
  5574  05FA  3000               	movlw	0
  5575  05FB  00F6               	movwf	readFilteredIL@sumOfSamples
  5576  05FC                     i1l2136:
  5577                           
  5578                           ;CurrentSensor.c: 59:     for(uint8_t i=0; i<16; i++) sumOfSamples += currentILFIFO[i];
  5579  05FC  01FA               	clrf	readFilteredIL@i_924
  5580  05FD                     i1l2142:
  5581  05FD  357A               	lslf	readFilteredIL@i_924,w
  5582  05FE  3EA0               	addlw	(low (_currentILFIFO| 0))& (0+255)
  5583  05FF  0086               	movwf	6
  5584  0600  0187               	clrf	7
  5585  0601  3F40               	moviw [0]fsr1
  5586  0602  00F2               	movwf	??_readFilteredIL
  5587  0603  3F41               	moviw [1]fsr1
  5588  0604  00F3               	movwf	??_readFilteredIL+1
  5589  0605  0872               	movf	??_readFilteredIL,w
  5590  0606  07F6               	addwf	readFilteredIL@sumOfSamples,f
  5591  0607  0873               	movf	??_readFilteredIL+1,w
  5592  0608  3DF7               	addwfc	readFilteredIL@sumOfSamples+1,f
  5593  0609  3000               	movlw	0
  5594  060A  3DF8               	addwfc	readFilteredIL@sumOfSamples+2,f
  5595  060B  3DF9               	addwfc	readFilteredIL@sumOfSamples+3,f
  5596  060C                     i1l2144:
  5597  060C  3001               	movlw	1
  5598  060D  00F2               	movwf	??_readFilteredIL
  5599  060E  0872               	movf	??_readFilteredIL,w
  5600  060F  07FA               	addwf	readFilteredIL@i_924,f
  5601  0610                     i1l2146:
  5602  0610  3010               	movlw	16
  5603  0611  027A               	subwf	readFilteredIL@i_924,w
  5604  0612  1C03               	skipc
  5605  0613  2E15               	goto	u185_21
  5606  0614  2E16               	goto	u185_20
  5607  0615                     u185_21:
  5608  0615  2DFD               	goto	i1l2142
  5609  0616                     u185_20:
  5610  0616                     i1l2148:
  5611                           
  5612                           ;CurrentSensor.c: 61:     return (sumOfSamples >> 4);
  5613  0616  0876               	movf	readFilteredIL@sumOfSamples,w
  5614  0617  00F2               	movwf	??_readFilteredIL
  5615  0618  0877               	movf	readFilteredIL@sumOfSamples+1,w
  5616  0619  00F3               	movwf	??_readFilteredIL+1
  5617  061A  0878               	movf	readFilteredIL@sumOfSamples+2,w
  5618  061B  00F4               	movwf	??_readFilteredIL+2
  5619  061C  0879               	movf	readFilteredIL@sumOfSamples+3,w
  5620  061D  00F5               	movwf	??_readFilteredIL+3
  5621  061E  3004               	movlw	4
  5622  061F                     u186_25:
  5623  061F  36F5               	lsrf	??_readFilteredIL+3,f
  5624  0620  0CF4               	rrf	??_readFilteredIL+2,f
  5625  0621  0CF3               	rrf	??_readFilteredIL+1,f
  5626  0622  0CF2               	rrf	??_readFilteredIL,f
  5627  0623                     u186_20:
  5628  0623  0B89               	decfsz	9,f
  5629  0624  2E1F               	goto	u186_25
  5630  0625  0873               	movf	??_readFilteredIL+1,w
  5631  0626  00F1               	movwf	?_readFilteredIL+1
  5632  0627  0872               	movf	??_readFilteredIL,w
  5633  0628  00F0               	movwf	?_readFilteredIL
  5634  0629                     i1l494:
  5635  0629  0008               	return
  5636  062A                     __end_of_readFilteredIL:
  5637                           
  5638                           	psect	text25
  5639  051F                     __ptext25:	
  5640 ;; *************** function _readFilteredFreqPot *****************
  5641 ;; Defined at:
  5642 ;;		line 39 in file "Potentiometer.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;		None
  5645 ;; Auto vars:     Size  Location     Type
  5646 ;;  i               1    8[BANK0 ] unsigned char 
  5647 ;;  i               1    9[BANK0 ] unsigned char 
  5648 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5649 ;; Return value:  Size  Location     Type
  5650 ;;                  2   11[COMMON] unsigned short 
  5651 ;; Registers used:
  5652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5653 ;; Tracked objects:
  5654 ;;		On entry : 0/0
  5655 ;;		On exit  : 0/0
  5656 ;;		Unchanged: 0/0
  5657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5658 ;;      Params:         2       0       0       0       0       0
  5659 ;;      Locals:         0       6       0       0       0       0
  5660 ;;      Temps:          0       4       0       0       0       0
  5661 ;;      Totals:         2      10       0       0       0       0
  5662 ;;Total ram usage:       12 bytes
  5663 ;; Hardware stack levels used: 1
  5664 ;; Hardware stack levels required when called: 1
  5665 ;; This function calls:
  5666 ;;		_readADCRaw
  5667 ;; This function is called by:
  5668 ;;		_Tick980Hz
  5669 ;; This function uses a non-reentrant model
  5670 ;;
  5671                           
  5672  051F                     _readFilteredFreqPot:	
  5673                           ;psect for function _readFilteredFreqPot
  5674                           
  5675  051F                     i1l2230:	
  5676                           ;incstack = 0
  5677                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5678                           
  5679                           
  5680                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  5681  051F  0020               	movlb	0	; select bank0
  5682  0520  01A9               	clrf	readFilteredFreqPot@i
  5683  0521                     i1l2236:
  5684  0521  3529               	lslf	readFilteredFreqPot@i,w
  5685  0522  3E22               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  5686  0523  0086               	movwf	6
  5687  0524  3001               	movlw	1	; select bank2/3
  5688  0525  0087               	movwf	7
  5689  0526  3529               	lslf	readFilteredFreqPot@i,w
  5690  0527  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5691  0528  0084               	movwf	4
  5692  0529  3001               	movlw	1	; select bank2/3
  5693  052A  0085               	movwf	5
  5694  052B  3F40               	moviw [0]fsr1
  5695  052C  3F80               	movwi [0]fsr0
  5696  052D  3F41               	moviw [1]fsr1
  5697  052E  3F81               	movwi [1]fsr0
  5698  052F                     i1l2238:
  5699  052F  3001               	movlw	1
  5700  0530  00A0               	movwf	??_readFilteredFreqPot
  5701  0531  0820               	movf	??_readFilteredFreqPot,w
  5702  0532  07A9               	addwf	readFilteredFreqPot@i,f
  5703  0533                     i1l2240:
  5704  0533  300F               	movlw	15
  5705  0534  0229               	subwf	readFilteredFreqPot@i,w
  5706  0535  1C03               	skipc
  5707  0536  2D38               	goto	u199_21
  5708  0537  2D39               	goto	u199_20
  5709  0538                     u199_21:
  5710  0538  2D21               	goto	i1l2236
  5711  0539                     u199_20:
  5712  0539                     i1l2242:
  5713                           
  5714                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  5715  0539  300A               	movlw	10
  5716  053A  3183  2348  3185   	fcall	_readADCRaw
  5717  053D  0871               	movf	?_readADCRaw+1,w
  5718  053E  0022               	movlb	2	; select bank2
  5719  053F  00BF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  5720  0540  0870               	movf	?_readADCRaw,w
  5721  0541  00BE               	movwf	(_freqPotFIFO^(0+256)+30)
  5722  0542                     i1l2244:
  5723                           
  5724                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  5725  0542  3000               	movlw	0
  5726  0543  0020               	movlb	0	; select bank0
  5727  0544  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  5728  0545  3000               	movlw	0
  5729  0546  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  5730  0547  3000               	movlw	0
  5731  0548  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  5732  0549  3000               	movlw	0
  5733  054A  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  5734  054B                     i1l2246:
  5735                           
  5736                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  5737  054B  01A8               	clrf	readFilteredFreqPot@i_781
  5738  054C                     i1l2252:
  5739  054C  3528               	lslf	readFilteredFreqPot@i_781,w
  5740  054D  3E20               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  5741  054E  0086               	movwf	6
  5742  054F  3001               	movlw	1	; select bank2/3
  5743  0550  0087               	movwf	7
  5744  0551  3F40               	moviw [0]fsr1
  5745  0552  00A0               	movwf	??_readFilteredFreqPot
  5746  0553  3F41               	moviw [1]fsr1
  5747  0554  00A1               	movwf	??_readFilteredFreqPot+1
  5748  0555  0820               	movf	??_readFilteredFreqPot,w
  5749  0556  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  5750  0557  0821               	movf	??_readFilteredFreqPot+1,w
  5751  0558  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  5752  0559  3000               	movlw	0
  5753  055A  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  5754  055B  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  5755  055C                     i1l2254:
  5756  055C  3001               	movlw	1
  5757  055D  00A0               	movwf	??_readFilteredFreqPot
  5758  055E  0820               	movf	??_readFilteredFreqPot,w
  5759  055F  07A8               	addwf	readFilteredFreqPot@i_781,f
  5760  0560                     i1l2256:
  5761  0560  3010               	movlw	16
  5762  0561  0228               	subwf	readFilteredFreqPot@i_781,w
  5763  0562  1C03               	skipc
  5764  0563  2D65               	goto	u200_21
  5765  0564  2D66               	goto	u200_20
  5766  0565                     u200_21:
  5767  0565  2D4C               	goto	i1l2252
  5768  0566                     u200_20:
  5769  0566                     i1l2258:
  5770                           
  5771                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  5772  0566  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  5773  0567  00A0               	movwf	??_readFilteredFreqPot
  5774  0568  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  5775  0569  00A1               	movwf	??_readFilteredFreqPot+1
  5776  056A  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  5777  056B  00A2               	movwf	??_readFilteredFreqPot+2
  5778  056C  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  5779  056D  00A3               	movwf	??_readFilteredFreqPot+3
  5780  056E  3004               	movlw	4
  5781  056F                     u201_25:
  5782  056F  36A3               	lsrf	??_readFilteredFreqPot+3,f
  5783  0570  0CA2               	rrf	??_readFilteredFreqPot+2,f
  5784  0571  0CA1               	rrf	??_readFilteredFreqPot+1,f
  5785  0572  0CA0               	rrf	??_readFilteredFreqPot,f
  5786  0573                     u201_20:
  5787  0573  0B89               	decfsz	9,f
  5788  0574  2D6F               	goto	u201_25
  5789  0575  0821               	movf	??_readFilteredFreqPot+1,w
  5790  0576  00FC               	movwf	?_readFilteredFreqPot+1
  5791  0577  0820               	movf	??_readFilteredFreqPot,w
  5792  0578  00FB               	movwf	?_readFilteredFreqPot
  5793  0579                     i1l366:
  5794  0579  0008               	return
  5795  057A                     __end_of_readFilteredFreqPot:
  5796                           
  5797                           	psect	text26
  5798  057A                     __ptext26:	
  5799 ;; *************** function _readFilteredDutyPot *****************
  5800 ;; Defined at:
  5801 ;;		line 25 in file "Potentiometer.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;		None
  5804 ;; Auto vars:     Size  Location     Type
  5805 ;;  i               1    8[BANK0 ] unsigned char 
  5806 ;;  i               1    9[BANK0 ] unsigned char 
  5807 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  2   11[COMMON] unsigned short 
  5810 ;; Registers used:
  5811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5817 ;;      Params:         2       0       0       0       0       0
  5818 ;;      Locals:         0       6       0       0       0       0
  5819 ;;      Temps:          0       4       0       0       0       0
  5820 ;;      Totals:         2      10       0       0       0       0
  5821 ;;Total ram usage:       12 bytes
  5822 ;; Hardware stack levels used: 1
  5823 ;; Hardware stack levels required when called: 1
  5824 ;; This function calls:
  5825 ;;		_readADCRaw
  5826 ;; This function is called by:
  5827 ;;		_Tick980Hz
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831  057A                     _readFilteredDutyPot:	
  5832                           ;psect for function _readFilteredDutyPot
  5833                           
  5834  057A                     i1l2198:	
  5835                           ;incstack = 0
  5836                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5837                           
  5838                           
  5839                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  5840  057A  0020               	movlb	0	; select bank0
  5841  057B  01A9               	clrf	readFilteredDutyPot@i
  5842  057C                     i1l2204:
  5843  057C  3529               	lslf	readFilteredDutyPot@i,w
  5844  057D  3EA2               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  5845  057E  0086               	movwf	6
  5846  057F  3001               	movlw	1	; select bank3/4
  5847  0580  0087               	movwf	7
  5848  0581  3529               	lslf	readFilteredDutyPot@i,w
  5849  0582  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5850  0583  0084               	movwf	4
  5851  0584  3001               	movlw	1	; select bank3/4
  5852  0585  0085               	movwf	5
  5853  0586  3F40               	moviw [0]fsr1
  5854  0587  3F80               	movwi [0]fsr0
  5855  0588  3F41               	moviw [1]fsr1
  5856  0589  3F81               	movwi [1]fsr0
  5857  058A                     i1l2206:
  5858  058A  3001               	movlw	1
  5859  058B  00A0               	movwf	??_readFilteredDutyPot
  5860  058C  0820               	movf	??_readFilteredDutyPot,w
  5861  058D  07A9               	addwf	readFilteredDutyPot@i,f
  5862  058E                     i1l2208:
  5863  058E  300F               	movlw	15
  5864  058F  0229               	subwf	readFilteredDutyPot@i,w
  5865  0590  1C03               	skipc
  5866  0591  2D93               	goto	u196_21
  5867  0592  2D94               	goto	u196_20
  5868  0593                     u196_21:
  5869  0593  2D7C               	goto	i1l2204
  5870  0594                     u196_20:
  5871  0594                     i1l2210:
  5872                           
  5873                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  5874  0594  3009               	movlw	9
  5875  0595  3183  2348  3185   	fcall	_readADCRaw
  5876  0598  0871               	movf	?_readADCRaw+1,w
  5877  0599  0023               	movlb	3	; select bank3
  5878  059A  00BF               	movwf	((_dutyPotFIFO+1)^(0+384)+30)
  5879  059B  0870               	movf	?_readADCRaw,w
  5880  059C  00BE               	movwf	(_dutyPotFIFO^(0+384)+30)
  5881  059D                     i1l2212:
  5882                           
  5883                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  5884  059D  3000               	movlw	0
  5885  059E  0020               	movlb	0	; select bank0
  5886  059F  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  5887  05A0  3000               	movlw	0
  5888  05A1  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  5889  05A2  3000               	movlw	0
  5890  05A3  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  5891  05A4  3000               	movlw	0
  5892  05A5  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  5893  05A6                     i1l2214:
  5894                           
  5895                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  5896  05A6  01A8               	clrf	readFilteredDutyPot@i_777
  5897  05A7                     i1l2220:
  5898  05A7  3528               	lslf	readFilteredDutyPot@i_777,w
  5899  05A8  3EA0               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  5900  05A9  0086               	movwf	6
  5901  05AA  3001               	movlw	1	; select bank3/4
  5902  05AB  0087               	movwf	7
  5903  05AC  3F40               	moviw [0]fsr1
  5904  05AD  00A0               	movwf	??_readFilteredDutyPot
  5905  05AE  3F41               	moviw [1]fsr1
  5906  05AF  00A1               	movwf	??_readFilteredDutyPot+1
  5907  05B0  0820               	movf	??_readFilteredDutyPot,w
  5908  05B1  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  5909  05B2  0821               	movf	??_readFilteredDutyPot+1,w
  5910  05B3  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  5911  05B4  3000               	movlw	0
  5912  05B5  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  5913  05B6  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  5914  05B7                     i1l2222:
  5915  05B7  3001               	movlw	1
  5916  05B8  00A0               	movwf	??_readFilteredDutyPot
  5917  05B9  0820               	movf	??_readFilteredDutyPot,w
  5918  05BA  07A8               	addwf	readFilteredDutyPot@i_777,f
  5919  05BB                     i1l2224:
  5920  05BB  3010               	movlw	16
  5921  05BC  0228               	subwf	readFilteredDutyPot@i_777,w
  5922  05BD  1C03               	skipc
  5923  05BE  2DC0               	goto	u197_21
  5924  05BF  2DC1               	goto	u197_20
  5925  05C0                     u197_21:
  5926  05C0  2DA7               	goto	i1l2220
  5927  05C1                     u197_20:
  5928  05C1                     i1l2226:
  5929                           
  5930                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  5931  05C1  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  5932  05C2  00A0               	movwf	??_readFilteredDutyPot
  5933  05C3  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  5934  05C4  00A1               	movwf	??_readFilteredDutyPot+1
  5935  05C5  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  5936  05C6  00A2               	movwf	??_readFilteredDutyPot+2
  5937  05C7  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  5938  05C8  00A3               	movwf	??_readFilteredDutyPot+3
  5939  05C9  3004               	movlw	4
  5940  05CA                     u198_25:
  5941  05CA  36A3               	lsrf	??_readFilteredDutyPot+3,f
  5942  05CB  0CA2               	rrf	??_readFilteredDutyPot+2,f
  5943  05CC  0CA1               	rrf	??_readFilteredDutyPot+1,f
  5944  05CD  0CA0               	rrf	??_readFilteredDutyPot,f
  5945  05CE                     u198_20:
  5946  05CE  0B89               	decfsz	9,f
  5947  05CF  2DCA               	goto	u198_25
  5948  05D0  0821               	movf	??_readFilteredDutyPot+1,w
  5949  05D1  00FC               	movwf	?_readFilteredDutyPot+1
  5950  05D2  0820               	movf	??_readFilteredDutyPot,w
  5951  05D3  00FB               	movwf	?_readFilteredDutyPot
  5952  05D4                     i1l359:
  5953  05D4  0008               	return
  5954  05D5                     __end_of_readFilteredDutyPot:
  5955                           
  5956                           	psect	text27
  5957  0348                     __ptext27:	
  5958 ;; *************** function _readADCRaw *****************
  5959 ;; Defined at:
  5960 ;;		line 71 in file "ADC.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  gpioNumber      1    wreg     const enum E2798
  5963 ;; Auto vars:     Size  Location     Type
  5964 ;;  gpioNumber      1   10[COMMON] const enum E2798
  5965 ;;  i               1    9[COMMON] unsigned char 
  5966 ;;  i               1    8[COMMON] unsigned char 
  5967 ;;  returnValue     2    4[COMMON] unsigned int 
  5968 ;;  gpioValid       1    7[COMMON] unsigned char 
  5969 ;;  channel         1    6[COMMON] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  2    0[COMMON] unsigned short 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5979 ;;      Params:         2       0       0       0       0       0
  5980 ;;      Locals:         7       0       0       0       0       0
  5981 ;;      Temps:          2       0       0       0       0       0
  5982 ;;      Totals:        11       0       0       0       0       0
  5983 ;;Total ram usage:       11 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_readFilteredDutyPot
  5989 ;;		_readFilteredFreqPot
  5990 ;;		_readFilteredVout
  5991 ;;		_readFilteredIDS
  5992 ;; This function uses a non-reentrant model
  5993 ;;
  5994                           
  5995  0348                     _readADCRaw:	
  5996                           ;psect for function _readADCRaw
  5997                           
  5998                           
  5999                           ;incstack = 0
  6000                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  6001                           ;readADCRaw@gpioNumber stored from wreg
  6002  0348  00FA               	movwf	readADCRaw@gpioNumber
  6003  0349                     i1l1960:
  6004                           
  6005                           ;ADC.c: 72:     uint8_t channel = 0;
  6006  0349  01F6               	clrf	readADCRaw@channel
  6007                           
  6008                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  6009  034A  01F7               	clrf	readADCRaw@gpioValid
  6010  034B                     i1l1962:
  6011                           
  6012                           ;ADC.c: 75:     if(gpioNumber < 4){
  6013  034B  3004               	movlw	4
  6014  034C  027A               	subwf	readADCRaw@gpioNumber,w
  6015  034D  1803               	skipnc
  6016  034E  2B50               	goto	u150_21
  6017  034F  2B51               	goto	u150_20
  6018  0350                     u150_21:
  6019  0350  2B57               	goto	i1l241
  6020  0351                     u150_20:
  6021  0351                     i1l1964:
  6022                           
  6023                           ;ADC.c: 76:         channel = gpioNumber;
  6024  0351  087A               	movf	readADCRaw@gpioNumber,w
  6025  0352  00F2               	movwf	??_readADCRaw
  6026  0353  0872               	movf	??_readADCRaw,w
  6027  0354  00F6               	movwf	readADCRaw@channel
  6028  0355                     i1l1966:
  6029                           
  6030                           ;ADC.c: 77:         gpioValid = 1;
  6031  0355  01F7               	clrf	readADCRaw@gpioValid
  6032  0356  0AF7               	incf	readADCRaw@gpioValid,f
  6033  0357                     i1l241:	
  6034                           ;ADC.c: 78:     }
  6035                           
  6036                           
  6037                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  6038  0357  3009               	movlw	9
  6039  0358  027A               	subwf	readADCRaw@gpioNumber,w
  6040  0359  1C03               	skipc
  6041  035A  2B5C               	goto	u151_21
  6042  035B  2B5D               	goto	u151_20
  6043  035C                     u151_21:
  6044  035C  2B6A               	goto	i1l242
  6045  035D                     u151_20:
  6046  035D                     i1l1968:
  6047  035D  3010               	movlw	16
  6048  035E  027A               	subwf	readADCRaw@gpioNumber,w
  6049  035F  1803               	skipnc
  6050  0360  2B62               	goto	u152_21
  6051  0361  2B63               	goto	u152_20
  6052  0362                     u152_21:
  6053  0362  2B6A               	goto	i1l242
  6054  0363                     u152_20:
  6055  0363                     i1l1970:
  6056                           
  6057                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  6058  0363  087A               	movf	readADCRaw@gpioNumber,w
  6059  0364  3C14               	sublw	20
  6060  0365  00F2               	movwf	??_readADCRaw
  6061  0366  0872               	movf	??_readADCRaw,w
  6062  0367  00F6               	movwf	readADCRaw@channel
  6063  0368                     i1l1972:
  6064                           
  6065                           ;ADC.c: 81:         gpioValid = 1;
  6066  0368  01F7               	clrf	readADCRaw@gpioValid
  6067  0369  0AF7               	incf	readADCRaw@gpioValid,f
  6068  036A                     i1l242:	
  6069                           ;ADC.c: 82:     }
  6070                           
  6071                           
  6072                           ;ADC.c: 83:     if(gpioValid){
  6073  036A  0877               	movf	readADCRaw@gpioValid,w
  6074  036B  1903               	btfsc	3,2
  6075  036C  2B6E               	goto	u153_21
  6076  036D  2B6F               	goto	u153_20
  6077  036E                     u153_21:
  6078  036E  2BA9               	goto	i1l252
  6079  036F                     u153_20:
  6080  036F                     i1l1974:
  6081                           
  6082                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  6083  036F  0021               	movlb	1	; select bank1
  6084  0370  081D               	movf	29,w	;volatile
  6085  0371                     i1l1976:
  6086                           
  6087                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  6088  0371  3083               	movlw	131
  6089  0372  00F2               	movwf	??_readADCRaw
  6090  0373  0872               	movf	??_readADCRaw,w
  6091  0374  059D               	andwf	29,f	;volatile
  6092  0375                     i1l1978:
  6093                           
  6094                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  6095  0375  0876               	movf	readADCRaw@channel,w	;volatile
  6096  0376  00F2               	movwf	??_readADCRaw
  6097  0377  3001               	movlw	1
  6098  0378                     u154_25:
  6099  0378  35F2               	lslf	??_readADCRaw,f
  6100  0379  3EFF               	addlw	-1
  6101  037A  1D03               	skipz
  6102  037B  2B78               	goto	u154_25
  6103  037C  3572               	lslf	??_readADCRaw,w
  6104  037D  00F3               	movwf	??_readADCRaw+1
  6105  037E  0873               	movf	??_readADCRaw+1,w
  6106  037F  049D               	iorwf	29,f	;volatile
  6107  0380                     i1l1980:
  6108                           
  6109                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  6110  0380  01F8               	clrf	readADCRaw@i
  6111  0381                     i1l1986:
  6112  0381  3001               	movlw	1
  6113  0382  00F2               	movwf	??_readADCRaw
  6114  0383  0872               	movf	??_readADCRaw,w
  6115  0384  07F8               	addwf	readADCRaw@i,f
  6116  0385                     i1l1988:
  6117  0385  3008               	movlw	8
  6118  0386  0278               	subwf	readADCRaw@i,w
  6119  0387  1C03               	skipc
  6120  0388  2B8A               	goto	u155_21
  6121  0389  2B8B               	goto	u155_20
  6122  038A                     u155_21:
  6123  038A  2B81               	goto	i1l1986
  6124  038B                     u155_20:
  6125  038B                     i1l246:
  6126                           
  6127                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  6128  038B  0021               	movlb	1	; select bank1
  6129  038C  149D               	bsf	29,1	;volatile
  6130  038D                     i1l247:	
  6131                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  6132                           
  6133  038D  189D               	btfsc	29,1	;volatile
  6134  038E  2B90               	goto	u156_21
  6135  038F  2B91               	goto	u156_20
  6136  0390                     u156_21:
  6137  0390  2B8D               	goto	i1l247
  6138  0391                     u156_20:
  6139  0391                     i1l1990:
  6140                           
  6141                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  6142  0391  081C               	movf	28,w	;volatile
  6143  0392  00F5               	movwf	readADCRaw@returnValue+1
  6144  0393  081B               	movf	27,w	;volatile
  6145  0394  00F4               	movwf	readADCRaw@returnValue
  6146  0395                     i1l1992:
  6147                           
  6148                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  6149  0395  3083               	movlw	131
  6150  0396  00F2               	movwf	??_readADCRaw
  6151  0397  0872               	movf	??_readADCRaw,w
  6152  0398  059D               	andwf	29,f	;volatile
  6153  0399                     i1l1994:
  6154                           
  6155                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  6156  0399  159D               	bsf	29,3	;volatile
  6157  039A                     i1l1996:
  6158                           
  6159                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  6160  039A  01F9               	clrf	readADCRaw@i_678
  6161  039B                     i1l2002:
  6162  039B  3001               	movlw	1
  6163  039C  00F2               	movwf	??_readADCRaw
  6164  039D  0872               	movf	??_readADCRaw,w
  6165  039E  07F9               	addwf	readADCRaw@i_678,f
  6166  039F                     i1l2004:
  6167  039F  3008               	movlw	8
  6168  03A0  0279               	subwf	readADCRaw@i_678,w
  6169  03A1  1C03               	skipc
  6170  03A2  2BA4               	goto	u157_21
  6171  03A3  2BA5               	goto	u157_20
  6172  03A4                     u157_21:
  6173  03A4  2B9B               	goto	i1l2002
  6174  03A5                     u157_20:
  6175  03A5                     i1l2006:
  6176                           
  6177                           ;ADC.c: 97:             return returnValue;
  6178  03A5  0875               	movf	readADCRaw@returnValue+1,w
  6179  03A6  00F1               	movwf	?_readADCRaw+1
  6180  03A7  0874               	movf	readADCRaw@returnValue,w
  6181  03A8  00F0               	movwf	?_readADCRaw
  6182  03A9                     i1l252:
  6183  03A9  0008               	return
  6184  03AA                     __end_of_readADCRaw:
  6185                           
  6186                           	psect	text28
  6187  0715                     __ptext28:	
  6188 ;; *************** function _currentTripRead *****************
  6189 ;; Defined at:
  6190 ;;		line 30 in file "CurrentSensor.c"
  6191 ;; Parameters:    Size  Location     Type
  6192 ;;		None
  6193 ;; Auto vars:     Size  Location     Type
  6194 ;;		None
  6195 ;; Return value:  Size  Location     Type
  6196 ;;                  1    wreg      _Bool 
  6197 ;; Registers used:
  6198 ;;		wreg, status,2, status,0, pclath, cstack
  6199 ;; Tracked objects:
  6200 ;;		On entry : 0/0
  6201 ;;		On exit  : 0/0
  6202 ;;		Unchanged: 0/0
  6203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6204 ;;      Params:         0       0       0       0       0       0
  6205 ;;      Locals:         1       0       0       0       0       0
  6206 ;;      Temps:          1       0       0       0       0       0
  6207 ;;      Totals:         2       0       0       0       0       0
  6208 ;;Total ram usage:        2 bytes
  6209 ;; Hardware stack levels used: 1
  6210 ;; Hardware stack levels required when called: 1
  6211 ;; This function calls:
  6212 ;;		i1_readGPIO
  6213 ;; This function is called by:
  6214 ;;		_Tick980Hz
  6215 ;; This function uses a non-reentrant model
  6216 ;;
  6217                           
  6218  0715                     _currentTripRead:	
  6219                           ;psect for function _currentTripRead
  6220                           
  6221  0715                     i1l2090:	
  6222                           ;incstack = 0
  6223                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  6224                           
  6225                           
  6226                           ;CurrentSensor.c: 31:     tripIDS = ~readGPIO(pinRA1);
  6227  0715  3001               	movlw	1
  6228  0716  3186  262A  3187   	fcall	i1_readGPIO
  6229  0719  3A01               	xorlw	1
  6230  071A  1D03               	skipz
  6231  071B  2F1D               	goto	u174_21
  6232  071C  2F1F               	goto	u174_20
  6233  071D                     u174_21:
  6234  071D  3001               	movlw	1
  6235  071E  2F20               	goto	u175_20
  6236  071F                     u174_20:
  6237  071F  3000               	movlw	0
  6238  0720                     u175_20:
  6239  0720  00F9               	movwf	??_currentTripRead
  6240  0721  0879               	movf	??_currentTripRead,w
  6241  0722  0020               	movlb	0	; select bank0
  6242  0723  00D8               	movwf	_tripIDS
  6243                           
  6244                           ;CurrentSensor.c: 32:     tripIL = ~readGPIO(pinRA3);
  6245  0724  3003               	movlw	3
  6246  0725  3186  262A  3187   	fcall	i1_readGPIO
  6247  0728  3A01               	xorlw	1
  6248  0729  1D03               	skipz
  6249  072A  2F2C               	goto	u176_21
  6250  072B  2F2E               	goto	u176_20
  6251  072C                     u176_21:
  6252  072C  3001               	movlw	1
  6253  072D  2F2F               	goto	u177_20
  6254  072E                     u176_20:
  6255  072E  3000               	movlw	0
  6256  072F                     u177_20:
  6257  072F  00F9               	movwf	??_currentTripRead
  6258  0730  0879               	movf	??_currentTripRead,w
  6259  0731  0020               	movlb	0	; select bank0
  6260  0732  00D7               	movwf	_tripIL
  6261  0733                     i1l2092:
  6262                           
  6263                           ;CurrentSensor.c: 33:     return (tripIL || tripIDS);
  6264  0733  01FA               	clrf	_currentTripRead$916
  6265  0734  0AFA               	incf	_currentTripRead$916,f
  6266  0735                     i1l2094:
  6267  0735  0857               	movf	_tripIL,w
  6268  0736  1D03               	btfss	3,2
  6269  0737  2F39               	goto	u178_21
  6270  0738  2F3A               	goto	u178_20
  6271  0739                     u178_21:
  6272  0739  2F40               	goto	i1l2100
  6273  073A                     u178_20:
  6274  073A                     i1l2096:
  6275  073A  0858               	movf	_tripIDS,w
  6276  073B  1D03               	btfss	3,2
  6277  073C  2F3E               	goto	u179_21
  6278  073D  2F3F               	goto	u179_20
  6279  073E                     u179_21:
  6280  073E  2F40               	goto	i1l2100
  6281  073F                     u179_20:
  6282  073F                     i1l2098:
  6283  073F  01FA               	clrf	_currentTripRead$916
  6284  0740                     i1l2100:
  6285  0740  087A               	movf	_currentTripRead$916,w
  6286  0741                     i1l480:
  6287  0741  0008               	return
  6288  0742                     __end_of_currentTripRead:
  6289                           
  6290                           	psect	text29
  6291  062A                     __ptext29:	
  6292 ;; *************** function i1_readGPIO *****************
  6293 ;; Defined at:
  6294 ;;		line 79 in file "GPIO.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  gpioNumber      1    wreg     const enum E2798
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;  gpioNumber      1    8[COMMON] const enum E2798
  6299 ;;  portType        1    7[COMMON] unsigned char 
  6300 ;;  portNumber      1    6[COMMON] unsigned char 
  6301 ;;  returnValueB    1    5[COMMON] unsigned char 
  6302 ;;  readB           1    4[COMMON] unsigned char 
  6303 ;;  returnValueA    1    3[COMMON] unsigned char 
  6304 ;;  readA           1    2[COMMON] unsigned char 
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      _Bool 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6314 ;;      Params:         0       0       0       0       0       0
  6315 ;;      Locals:         7       0       0       0       0       0
  6316 ;;      Temps:          2       0       0       0       0       0
  6317 ;;      Totals:         9       0       0       0       0       0
  6318 ;;Total ram usage:        9 bytes
  6319 ;; Hardware stack levels used: 1
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_currentTripRead
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327  062A                     i1_readGPIO:	
  6328                           ;psect for function i1_readGPIO
  6329                           
  6330                           
  6331                           ;incstack = 0
  6332                           ; Regs used in i1_readGPIO: [wreg+status,2+status,0]
  6333                           ;i1readGPIO@gpioNumber stored from wreg
  6334  062A  00F8               	movwf	i1readGPIO@gpioNumber
  6335  062B                     i1l2056:
  6336                           
  6337                           ;GPIO.c: 81:     uint8_t portType = 0;
  6338  062B  01F7               	clrf	i1readGPIO@portType
  6339  062C                     i1l2058:
  6340                           
  6341                           ;GPIO.c: 82:     if(gpioNumber > 7){
  6342  062C  3008               	movlw	8
  6343  062D  0278               	subwf	i1readGPIO@gpioNumber,w
  6344  062E  1C03               	skipc
  6345  062F  2E31               	goto	u169_21
  6346  0630  2E32               	goto	u169_20
  6347  0631                     u169_21:
  6348  0631  2E3A               	goto	i1l2064
  6349  0632                     u169_20:
  6350  0632                     i1l2060:
  6351                           
  6352                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  6353  0632  0878               	movf	i1readGPIO@gpioNumber,w
  6354  0633  3EF8               	addlw	248
  6355  0634  00F0               	movwf	??i1_readGPIO
  6356  0635  0870               	movf	??i1_readGPIO,w
  6357  0636  00F6               	movwf	i1readGPIO@portNumber
  6358  0637                     i1l2062:
  6359                           
  6360                           ;GPIO.c: 84:         portType = 1;
  6361  0637  01F7               	clrf	i1readGPIO@portType
  6362  0638  0AF7               	incf	i1readGPIO@portType,f
  6363                           
  6364                           ;GPIO.c: 85:     }
  6365  0639  2E3F               	goto	i1l2068
  6366  063A                     i1l2064:
  6367                           
  6368                           ;GPIO.c: 87:         portNumber = gpioNumber;
  6369  063A  0878               	movf	i1readGPIO@gpioNumber,w
  6370  063B  00F0               	movwf	??i1_readGPIO
  6371  063C  0870               	movf	??i1_readGPIO,w
  6372  063D  00F6               	movwf	i1readGPIO@portNumber
  6373  063E                     i1l2066:
  6374                           
  6375                           ;GPIO.c: 88:         portType = 0;
  6376  063E  01F7               	clrf	i1readGPIO@portType
  6377  063F                     i1l2068:
  6378                           
  6379                           ;GPIO.c: 91:     if(portType == 0){
  6380  063F  0877               	movf	i1readGPIO@portType,w
  6381  0640  1D03               	btfss	3,2
  6382  0641  2E43               	goto	u170_21
  6383  0642  2E44               	goto	u170_20
  6384  0643                     u170_21:
  6385  0643  2E57               	goto	i1l2080
  6386  0644                     u170_20:
  6387  0644                     i1l2070:
  6388                           
  6389                           ;GPIO.c: 92:         uint8_t readA = PORTA;
  6390  0644  0020               	movlb	0	; select bank0
  6391  0645  080C               	movf	12,w	;volatile
  6392  0646  00F0               	movwf	??i1_readGPIO
  6393  0647  0870               	movf	??i1_readGPIO,w
  6394  0648  00F2               	movwf	i1readGPIO@readA
  6395  0649                     i1l2072:
  6396                           
  6397                           ;GPIO.c: 93:         uint8_t returnValueA = ((readA >> ((uint8_t) portNumber)) & 1u);
  6398  0649  0872               	movf	i1readGPIO@readA,w
  6399  064A  00F0               	movwf	??i1_readGPIO
  6400  064B  0A76               	incf	i1readGPIO@portNumber,w
  6401  064C  2E4E               	goto	u171_24
  6402  064D                     u171_25:
  6403  064D  36F0               	lsrf	??i1_readGPIO,f
  6404  064E                     u171_24:
  6405  064E  0B89               	decfsz	9,f
  6406  064F  2E4D               	goto	u171_25
  6407  0650  0870               	movf	??i1_readGPIO,w
  6408  0651  3901               	andlw	1
  6409  0652  00F1               	movwf	??i1_readGPIO+1
  6410  0653  0871               	movf	??i1_readGPIO+1,w
  6411  0654  00F3               	movwf	i1readGPIO@returnValueA
  6412  0655                     i1l2074:
  6413                           
  6414                           ;GPIO.c: 94:         return returnValueA;
  6415  0655  0873               	movf	i1readGPIO@returnValueA,w
  6416  0656  2E6E               	goto	i1l321
  6417  0657                     i1l2080:
  6418  0657  0377               	decf	i1readGPIO@portType,w
  6419  0658  1D03               	btfss	3,2
  6420  0659  2E5B               	goto	u172_21
  6421  065A  2E5C               	goto	u172_20
  6422  065B                     u172_21:
  6423  065B  2E6E               	goto	i1l321
  6424  065C                     u172_20:
  6425  065C                     i1l2082:
  6426                           
  6427                           ;GPIO.c: 97:         uint8_t readB = PORTB;
  6428  065C  0020               	movlb	0	; select bank0
  6429  065D  080D               	movf	13,w	;volatile
  6430  065E  00F0               	movwf	??i1_readGPIO
  6431  065F  0870               	movf	??i1_readGPIO,w
  6432  0660  00F4               	movwf	i1readGPIO@readB
  6433  0661                     i1l2084:
  6434                           
  6435                           ;GPIO.c: 98:         uint8_t returnValueB = ((readB >> ((uint8_t) portNumber)) & 1u);
  6436  0661  0874               	movf	i1readGPIO@readB,w
  6437  0662  00F0               	movwf	??i1_readGPIO
  6438  0663  0A76               	incf	i1readGPIO@portNumber,w
  6439  0664  2E66               	goto	u173_24
  6440  0665                     u173_25:
  6441  0665  36F0               	lsrf	??i1_readGPIO,f
  6442  0666                     u173_24:
  6443  0666  0B89               	decfsz	9,f
  6444  0667  2E65               	goto	u173_25
  6445  0668  0870               	movf	??i1_readGPIO,w
  6446  0669  3901               	andlw	1
  6447  066A  00F1               	movwf	??i1_readGPIO+1
  6448  066B  0871               	movf	??i1_readGPIO+1,w
  6449  066C  00F5               	movwf	i1readGPIO@returnValueB
  6450  066D                     i1l2086:
  6451                           
  6452                           ;GPIO.c: 99:         return returnValueB;
  6453  066D  0875               	movf	i1readGPIO@returnValueB,w
  6454  066E                     i1l321:
  6455  066E  0008               	return
  6456  066F                     __end_ofi1_readGPIO:
  6457                           
  6458                           	psect	text30
  6459  07EA                     __ptext30:	
  6460 ;; *************** function _controlRoutine *****************
  6461 ;; Defined at:
  6462 ;;		line 45 in file "Controller.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;		None
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1    wreg      void 
  6469 ;; Registers used:
  6470 ;;		wreg, status,2, status,0, pclath, cstack
  6471 ;; Tracked objects:
  6472 ;;		On entry : 0/0
  6473 ;;		On exit  : 0/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6476 ;;      Params:         0       0       0       0       0       0
  6477 ;;      Locals:         0       0       0       0       0       0
  6478 ;;      Temps:          0       0       0       0       0       0
  6479 ;;      Totals:         0       0       0       0       0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used: 1
  6482 ;; Hardware stack levels required when called: 3
  6483 ;; This function calls:
  6484 ;;		_runCurrentModeControl
  6485 ;;		_runVoltageModeControl
  6486 ;; This function is called by:
  6487 ;;		_Tick980Hz
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491  07EA                     _controlRoutine:	
  6492                           ;psect for function _controlRoutine
  6493                           
  6494  07EA                     i1l2114:	
  6495                           ;incstack = 0
  6496                           ; Regs used in _controlRoutine: [wreg+status,2+status,0+pclath+cstack]
  6497                           
  6498                           
  6499                           ;Controller.c: 47:     if(currentState == voltageModeControl){
  6500  07EA  3002               	movlw	2
  6501  07EB  0020               	movlb	0	; select bank0
  6502  07EC  065A               	xorwf	_currentState,w
  6503  07ED  1D03               	btfss	3,2
  6504  07EE  2FF0               	goto	u182_21
  6505  07EF  2FF1               	goto	u182_20
  6506  07F0                     u182_21:
  6507  07F0  2FF4               	goto	i1l2118
  6508  07F1                     u182_20:
  6509  07F1                     i1l2116:
  6510                           
  6511                           ;Controller.c: 48:         runVoltageModeControl();
  6512  07F1  318F  27B1  3187   	fcall	_runVoltageModeControl
  6513  07F4                     i1l2118:
  6514                           
  6515                           ;Controller.c: 50:     if(currentState == currentModeControl){
  6516  07F4  3003               	movlw	3
  6517  07F5  0020               	movlb	0	; select bank0
  6518  07F6  065A               	xorwf	_currentState,w
  6519  07F7  1D03               	btfss	3,2
  6520  07F8  2FFA               	goto	u183_21
  6521  07F9  2FFB               	goto	u183_20
  6522  07FA                     u183_21:
  6523  07FA  2FFE               	goto	i1l426
  6524  07FB                     u183_20:
  6525  07FB                     i1l2120:
  6526                           
  6527                           ;Controller.c: 51:         runCurrentModeControl();
  6528  07FB  318F  27A8  3187   	fcall	_runCurrentModeControl
  6529  07FE                     i1l426:
  6530  07FE  0008               	return
  6531  07FF                     __end_of_controlRoutine:
  6532                           
  6533                           	psect	text31
  6534  0FB1                     __ptext31:	
  6535 ;; *************** function _runVoltageModeControl *****************
  6536 ;; Defined at:
  6537 ;;		line 60 in file "Controller.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;		None
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;  newVoltage      2    0        short 
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1    wreg      void 
  6544 ;; Registers used:
  6545 ;;		wreg, status,2, status,0, pclath, cstack
  6546 ;; Tracked objects:
  6547 ;;		On entry : 0/0
  6548 ;;		On exit  : 0/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6551 ;;      Params:         0       0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used: 1
  6557 ;; Hardware stack levels required when called: 2
  6558 ;; This function calls:
  6559 ;;		_convertRawToDeciVolts
  6560 ;; This function is called by:
  6561 ;;		_controlRoutine
  6562 ;; This function uses a non-reentrant model
  6563 ;;
  6564                           
  6565  0FB1                     _runVoltageModeControl:	
  6566                           ;psect for function _runVoltageModeControl
  6567                           
  6568  0FB1                     i1l2010:	
  6569                           ;incstack = 0
  6570                           ; Regs used in _runVoltageModeControl: [wreg+status,2+status,0+pclath+cstack]
  6571                           
  6572  0FB1  0020               	movlb	0	; select bank0
  6573  0FB2  0849               	movf	_filteredVout+1,w
  6574  0FB3  00F7               	movwf	convertRawToDeciVolts@rawValue+1
  6575  0FB4  0848               	movf	_filteredVout,w
  6576  0FB5  00F6               	movwf	convertRawToDeciVolts@rawValue
  6577  0FB6  3187  276D  318F   	fcall	_convertRawToDeciVolts
  6578  0FB9                     i1l429:
  6579  0FB9  0008               	return
  6580  0FBA                     __end_of_runVoltageModeControl:
  6581                           
  6582                           	psect	text32
  6583  076D                     __ptext32:	
  6584 ;; *************** function _convertRawToDeciVolts *****************
  6585 ;; Defined at:
  6586 ;;		line 34 in file "Controller.c"
  6587 ;; Parameters:    Size  Location     Type
  6588 ;;  rawValue        2    6[COMMON] unsigned short 
  6589 ;; Auto vars:     Size  Location     Type
  6590 ;;  returnValued    2   12[COMMON] short 
  6591 ;;  offsetted       2   10[COMMON] short 
  6592 ;; Return value:  Size  Location     Type
  6593 ;;                  2    6[COMMON] short 
  6594 ;; Registers used:
  6595 ;;		wreg, status,2, status,0, pclath, cstack
  6596 ;; Tracked objects:
  6597 ;;		On entry : 0/0
  6598 ;;		On exit  : 0/0
  6599 ;;		Unchanged: 0/0
  6600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6601 ;;      Params:         2       0       0       0       0       0
  6602 ;;      Locals:         4       0       0       0       0       0
  6603 ;;      Temps:          2       0       0       0       0       0
  6604 ;;      Totals:         8       0       0       0       0       0
  6605 ;;Total ram usage:        8 bytes
  6606 ;; Hardware stack levels used: 1
  6607 ;; Hardware stack levels required when called: 1
  6608 ;; This function calls:
  6609 ;;		___wmul
  6610 ;; This function is called by:
  6611 ;;		_runVoltageModeControl
  6612 ;; This function uses a non-reentrant model
  6613 ;;
  6614                           
  6615  076D                     _convertRawToDeciVolts:	
  6616                           ;psect for function _convertRawToDeciVolts
  6617                           
  6618  076D                     i1l1888:	
  6619                           ;incstack = 0
  6620                           ; Regs used in _convertRawToDeciVolts: [wreg+status,2+status,0+pclath+cstack]
  6621                           
  6622                           
  6623                           ;Controller.c: 35:     int16_t offsetted = (int16_t)(rawValue - 0u);
  6624  076D  0877               	movf	convertRawToDeciVolts@rawValue+1,w
  6625  076E  00FB               	movwf	convertRawToDeciVolts@offsetted+1
  6626  076F  0876               	movf	convertRawToDeciVolts@rawValue,w
  6627  0770  00FA               	movwf	convertRawToDeciVolts@offsetted
  6628  0771                     i1l1890:
  6629                           
  6630                           ;Controller.c: 36:     int16_t returnValuedV = (int32_t)(offsetted * 245u) >> 10u;
  6631  0771  087B               	movf	convertRawToDeciVolts@offsetted+1,w
  6632  0772  00F1               	movwf	___wmul@multiplier+1
  6633  0773  087A               	movf	convertRawToDeciVolts@offsetted,w
  6634  0774  00F0               	movwf	___wmul@multiplier
  6635  0775  30F5               	movlw	245
  6636  0776  00F2               	movwf	___wmul@multiplicand
  6637  0777  3000               	movlw	0
  6638  0778  00F3               	movwf	___wmul@multiplicand+1
  6639  0779  3187  27AE  3187   	fcall	___wmul
  6640  077C  0870               	movf	?___wmul,w
  6641  077D  00F8               	movwf	??_convertRawToDeciVolts
  6642  077E  0871               	movf	?___wmul+1,w
  6643  077F  00F9               	movwf	??_convertRawToDeciVolts+1
  6644  0780  300A               	movlw	10
  6645  0781                     u128_25:
  6646  0781  36F9               	lsrf	??_convertRawToDeciVolts+1,f
  6647  0782  0CF8               	rrf	??_convertRawToDeciVolts,f
  6648  0783  0B89               	decfsz	9,f
  6649  0784  2F81               	goto	u128_25
  6650  0785  0878               	movf	??_convertRawToDeciVolts,w
  6651  0786  00FC               	movwf	convertRawToDeciVolts@returnValuedV
  6652  0787  0879               	movf	??_convertRawToDeciVolts+1,w
  6653  0788  00FD               	movwf	convertRawToDeciVolts@returnValuedV+1
  6654  0789                     i1l1892:
  6655                           
  6656                           ;Controller.c: 37:     return returnValuedV;
  6657  0789  087D               	movf	convertRawToDeciVolts@returnValuedV+1,w
  6658  078A  00F7               	movwf	?_convertRawToDeciVolts+1
  6659  078B  087C               	movf	convertRawToDeciVolts@returnValuedV,w
  6660  078C  00F6               	movwf	?_convertRawToDeciVolts
  6661  078D                     i1l421:
  6662  078D  0008               	return
  6663  078E                     __end_of_convertRawToDeciVolts:
  6664                           
  6665                           	psect	text33
  6666  0FA8                     __ptext33:	
  6667 ;; *************** function _runCurrentModeControl *****************
  6668 ;; Defined at:
  6669 ;;		line 69 in file "Controller.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;		None
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  newCurrent      2    0        short 
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  1    wreg      void 
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0, pclath, cstack
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6683 ;;      Params:         0       0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0
  6686 ;;      Totals:         0       0       0       0       0       0
  6687 ;;Total ram usage:        0 bytes
  6688 ;; Hardware stack levels used: 1
  6689 ;; Hardware stack levels required when called: 2
  6690 ;; This function calls:
  6691 ;;		_convertRawToMilliAmps
  6692 ;; This function is called by:
  6693 ;;		_controlRoutine
  6694 ;; This function uses a non-reentrant model
  6695 ;;
  6696                           
  6697  0FA8                     _runCurrentModeControl:	
  6698                           ;psect for function _runCurrentModeControl
  6699                           
  6700  0FA8                     i1l2012:	
  6701                           ;incstack = 0
  6702                           ; Regs used in _runCurrentModeControl: [wreg+status,2+status,0+pclath+cstack]
  6703                           
  6704  0FA8  0020               	movlb	0	; select bank0
  6705  0FA9  084B               	movf	_filteredIL+1,w
  6706  0FAA  00F7               	movwf	convertRawToMilliAmps@rawValue+1
  6707  0FAB  084A               	movf	_filteredIL,w
  6708  0FAC  00F6               	movwf	convertRawToMilliAmps@rawValue
  6709  0FAD  318F  27E6  318F   	fcall	_convertRawToMilliAmps
  6710  0FB0                     i1l432:
  6711  0FB0  0008               	return
  6712  0FB1                     __end_of_runCurrentModeControl:
  6713                           
  6714                           	psect	text34
  6715  0FE6                     __ptext34:	
  6716 ;; *************** function _convertRawToMilliAmps *****************
  6717 ;; Defined at:
  6718 ;;		line 81 in file "CurrentSensor.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  rawValue        2    6[COMMON] unsigned short 
  6721 ;; Auto vars:     Size  Location     Type
  6722 ;;  returnValuem    2   10[COMMON] short 
  6723 ;;  offsetted       2    8[COMMON] short 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2    6[COMMON] short 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0, pclath, cstack
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6733 ;;      Params:         2       0       0       0       0       0
  6734 ;;      Locals:         4       0       0       0       0       0
  6735 ;;      Temps:          0       0       0       0       0       0
  6736 ;;      Totals:         6       0       0       0       0       0
  6737 ;;Total ram usage:        6 bytes
  6738 ;; Hardware stack levels used: 1
  6739 ;; Hardware stack levels required when called: 1
  6740 ;; This function calls:
  6741 ;;		___wmul
  6742 ;; This function is called by:
  6743 ;;		_runCurrentModeControl
  6744 ;; This function uses a non-reentrant model
  6745 ;;
  6746                           
  6747  0FE6                     _convertRawToMilliAmps:	
  6748                           ;psect for function _convertRawToMilliAmps
  6749                           
  6750  0FE6                     i1l1896:	
  6751                           ;incstack = 0
  6752                           ; Regs used in _convertRawToMilliAmps: [wreg+status,2+status,0+pclath+cstack]
  6753                           
  6754                           
  6755                           ;CurrentSensor.c: 82:     int16_t offsetted = (int16_t)(rawValue - 445);
  6756  0FE6  0876               	movf	convertRawToMilliAmps@rawValue,w
  6757  0FE7  3E43               	addlw	67
  6758  0FE8  00F8               	movwf	convertRawToMilliAmps@offsetted
  6759  0FE9  30FE               	movlw	254
  6760  0FEA  3D77               	addwfc	convertRawToMilliAmps@rawValue+1,w
  6761  0FEB  00F9               	movwf	convertRawToMilliAmps@offsetted+1
  6762  0FEC                     i1l1898:
  6763                           
  6764                           ;CurrentSensor.c: 83:     int16_t returnValuemA = (int32_t)(offsetted * 2857) >> 0;
  6765  0FEC  0879               	movf	convertRawToMilliAmps@offsetted+1,w
  6766  0FED  00F1               	movwf	___wmul@multiplier+1
  6767  0FEE  0878               	movf	convertRawToMilliAmps@offsetted,w
  6768  0FEF  00F0               	movwf	___wmul@multiplier
  6769  0FF0  3029               	movlw	41
  6770  0FF1  00F2               	movwf	___wmul@multiplicand
  6771  0FF2  300B               	movlw	11
  6772  0FF3  00F3               	movwf	___wmul@multiplicand+1
  6773  0FF4  3187  27AE  318F   	fcall	___wmul
  6774  0FF7  0871               	movf	?___wmul+1,w
  6775  0FF8  00FB               	movwf	convertRawToMilliAmps@returnValuemA+1
  6776  0FF9  0870               	movf	?___wmul,w
  6777  0FFA  00FA               	movwf	convertRawToMilliAmps@returnValuemA
  6778  0FFB                     i1l1900:
  6779                           
  6780                           ;CurrentSensor.c: 84:     return returnValuemA;
  6781  0FFB  087B               	movf	convertRawToMilliAmps@returnValuemA+1,w
  6782  0FFC  00F7               	movwf	?_convertRawToMilliAmps+1
  6783  0FFD  087A               	movf	convertRawToMilliAmps@returnValuemA,w
  6784  0FFE  00F6               	movwf	?_convertRawToMilliAmps
  6785  0FFF                     i1l500:
  6786  0FFF  0008               	return
  6787  1000                     __end_of_convertRawToMilliAmps:
  6788                           
  6789                           	psect	text35
  6790  07AE                     __ptext35:	
  6791 ;; *************** function ___wmul *****************
  6792 ;; Defined at:
  6793 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  6794 ;; Parameters:    Size  Location     Type
  6795 ;;  multiplier      2    0[COMMON] unsigned int 
  6796 ;;  multiplicand    2    2[COMMON] unsigned int 
  6797 ;; Auto vars:     Size  Location     Type
  6798 ;;  product         2    4[COMMON] unsigned int 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  2    0[COMMON] unsigned int 
  6801 ;; Registers used:
  6802 ;;		wreg, status,2, status,0
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  6808 ;;      Params:         4       0       0       0       0       0
  6809 ;;      Locals:         2       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0
  6811 ;;      Totals:         6       0       0       0       0       0
  6812 ;;Total ram usage:        6 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; This function calls:
  6815 ;;		Nothing
  6816 ;; This function is called by:
  6817 ;;		_runPotScaling
  6818 ;;		_convertRawToDeciVolts
  6819 ;;		_convertRawToMilliAmps
  6820 ;; This function uses a non-reentrant model
  6821 ;;
  6822                           
  6823  07AE                     ___wmul:	
  6824                           ;psect for function ___wmul
  6825                           
  6826  07AE                     i1l1846:	
  6827                           ;incstack = 0
  6828                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6829                           
  6830  07AE  01F4               	clrf	___wmul@product
  6831  07AF  01F5               	clrf	___wmul@product+1
  6832  07B0                     i1l1848:
  6833  07B0  1C70               	btfss	___wmul@multiplier,0
  6834  07B1  2FB3               	goto	u115_21
  6835  07B2  2FB4               	goto	u115_20
  6836  07B3                     u115_21:
  6837  07B3  2FB8               	goto	i1l674
  6838  07B4                     u115_20:
  6839  07B4                     i1l1850:
  6840  07B4  0872               	movf	___wmul@multiplicand,w
  6841  07B5  07F4               	addwf	___wmul@product,f
  6842  07B6  0873               	movf	___wmul@multiplicand+1,w
  6843  07B7  3DF5               	addwfc	___wmul@product+1,f
  6844  07B8                     i1l674:
  6845  07B8  3001               	movlw	1
  6846  07B9                     u116_25:
  6847  07B9  35F2               	lslf	___wmul@multiplicand,f
  6848  07BA  0DF3               	rlf	___wmul@multiplicand+1,f
  6849  07BB  0B89               	decfsz	9,f
  6850  07BC  2FB9               	goto	u116_25
  6851  07BD                     i1l1852:
  6852  07BD  3001               	movlw	1
  6853  07BE                     u117_25:
  6854  07BE  36F1               	lsrf	___wmul@multiplier+1,f
  6855  07BF  0CF0               	rrf	___wmul@multiplier,f
  6856  07C0  0B89               	decfsz	9,f
  6857  07C1  2FBE               	goto	u117_25
  6858  07C2                     i1l1854:
  6859  07C2  0870               	movf	___wmul@multiplier,w
  6860  07C3  0471               	iorwf	___wmul@multiplier+1,w
  6861  07C4  1D03               	btfss	3,2
  6862  07C5  2FC7               	goto	u118_21
  6863  07C6  2FC8               	goto	u118_20
  6864  07C7                     u118_21:
  6865  07C7  2FB0               	goto	i1l1848
  6866  07C8                     u118_20:
  6867  07C8                     i1l1856:
  6868  07C8  0875               	movf	___wmul@product+1,w
  6869  07C9  00F1               	movwf	?___wmul+1
  6870  07CA  0874               	movf	___wmul@product,w
  6871  07CB  00F0               	movwf	?___wmul
  6872  07CC                     i1l676:
  6873  07CC  0008               	return
  6874  07CD                     __end_of___wmul:
  6875  007E                     btemp	set	126	;btemp
  6876  007E                     int$flags	set	126
  6877  007E                     wtemp0	set	126
  6878                           
  6879                           	psect	idloc
  6880                           
  6881                           ;Config register IDLOC0 @ 0x8000
  6882                           ;	unspecified, using default values
  6883  8000                     	org	32768
  6884  8000  3FFF               	dw	16383
  6885                           
  6886                           ;Config register IDLOC1 @ 0x8001
  6887                           ;	unspecified, using default values
  6888  8001                     	org	32769
  6889  8001  3FFF               	dw	16383
  6890                           
  6891                           ;Config register IDLOC2 @ 0x8002
  6892                           ;	unspecified, using default values
  6893  8002                     	org	32770
  6894  8002  3FFF               	dw	16383
  6895                           
  6896                           ;Config register IDLOC3 @ 0x8003
  6897                           ;	unspecified, using default values
  6898  8003                     	org	32771
  6899  8003  3FFF               	dw	16383
  6900                           
  6901                           	psect	config
  6902                           
  6903                           ;Config register CONFIG1 @ 0x8007
  6904                           ;	Oscillator Selection
  6905                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  6906                           ;	Watchdog Timer Enable
  6907                           ;	WDTE = OFF, WDT disabled
  6908                           ;	Power-up Timer Enable
  6909                           ;	PWRTE = OFF, PWRT disabled
  6910                           ;	MCLR Pin Function Select
  6911                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  6912                           ;	Flash Program Memory Code Protection
  6913                           ;	CP = OFF, Program memory code protection is disabled
  6914                           ;	Data Memory Code Protection
  6915                           ;	CPD = OFF, Data memory code protection is disabled
  6916                           ;	Brown-out Reset Enable
  6917                           ;	BOREN = ON, Brown-out Reset enabled
  6918                           ;	Clock Out Enable
  6919                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  6920                           ;	Internal/External Switchover
  6921                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6922                           ;	Fail-Safe Clock Monitor Enable
  6923                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6924  8007                     	org	32775
  6925  8007  0FA4               	dw	4004
  6926                           
  6927                           ;Config register CONFIG2 @ 0x8008
  6928                           ;	Flash Memory Self-Write Protection
  6929                           ;	WRT = OFF, Write protection off
  6930                           ;	PLL Enable
  6931                           ;	PLLEN = OFF, 4x PLL disabled
  6932                           ;	Stack Overflow/Underflow Reset Enable
  6933                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  6934                           ;	Brown-out Reset Voltage Selection
  6935                           ;	BORV = 0x1, unprogrammed default
  6936                           ;	Low-Voltage Programming Enable
  6937                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  6938  8008                     	org	32776
  6939  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         188
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     32      60
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0      32
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredVout->_readADCRaw
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->i1_readGPIO
    _runVoltageModeControl->_convertRawToDeciVolts
    _convertRawToDeciVolts->___wmul
    _runCurrentModeControl->_convertRawToMilliAmps
    _convertRawToMilliAmps->___wmul

Critical Paths under _main in BANK0

    _main->_readGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _currentTripReset->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3336
                                             28 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
                           _readGPIO
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
          _transToCurrentModeControl
                  _transToPotControl
          _transToVoltageModeControl
 ---------------------------------------------------------------------------------
 (1) _transToVoltageModeControl                            1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _transToPotControl                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _transToCurrentModeControl                            1     1      0       0
                                             19 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _readGPIO                                             9     9      0     252
                                             19 BANK0      9     9      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1445
                   _currentTripReset
                   _initialiseADCPin
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) _currentTripReset                                     0     0      0     500
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (3) _writeGPIO                                            6     5      1     500
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Tick980Hz                                            1     1      0    5711
                                             18 BANK0      1     1      0
                     _controlRoutine
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                     _readFilteredIL
                   _readFilteredVout
                _readILCurrentADCRaw
                      _runPotScaling
                _setPWMDutyandPeriod
            _transToOverCurrentFault
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (5) i1_writeGPIO                                          6     5      1     300
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (5) _transToOverCurrentFault                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _setPWMDutyandPeriod                                  5     2      3     240
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) _runPotScaling                                       12    12      0    1652
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) _readILCurrentADCRaw                                  2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredVout                                    12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredIL                                      12    10      2     182
                                              0 COMMON    12    10      2
 ---------------------------------------------------------------------------------
 (5) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (6) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (5) _currentTripRead                                      2     2      0     276
                                              9 COMMON     2     2      0
                         i1_readGPIO
 ---------------------------------------------------------------------------------
 (6) i1_readGPIO                                           9     9      0     252
                                              0 COMMON     9     9      0
 ---------------------------------------------------------------------------------
 (5) _controlRoutine                                       0     0      0    1690
              _runCurrentModeControl
              _runVoltageModeControl
 ---------------------------------------------------------------------------------
 (6) _runVoltageModeControl                                2     2      0     845
              _convertRawToDeciVolts
 ---------------------------------------------------------------------------------
 (7) _convertRawToDeciVolts                                8     6      2     844
                                              6 COMMON     8     6      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) _runCurrentModeControl                                2     2      0     845
              _convertRawToMilliAmps
 ---------------------------------------------------------------------------------
 (7) _convertRawToMilliAmps                                6     4      2     844
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     700
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _currentTripReset
       _writeGPIO
     _initialiseADCPin
     _initialiseGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _readGPIO
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt
   _transToCurrentModeControl
   _transToPotControl
   _transToVoltageModeControl

 _Tick980Hz (ROOT)
   _controlRoutine
     _runCurrentModeControl
       _convertRawToMilliAmps
         ___wmul
     _runVoltageModeControl
       _convertRawToDeciVolts
         ___wmul
   _currentTripRead
     i1_readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _readFilteredIL
   _readFilteredVout
     _readADCRaw
   _readILCurrentADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
   _setPWMDutyandPeriod
   _transToOverCurrentFault
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      EA       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     20      3C       6       75.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0      20      12       40.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      EA      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 17:44:36 2023

                ___wmul@multiplicand 0072                                  l112 070B  
                                l115 0712                                  l301 02DD  
                                l134 0261                                  l233 0305  
                                l321 06B2                                  l315 0409  
                                l229 0F8D                                  l238 0347  
                                l352 0FCB                                  l169 07E9  
                                l521 0F93                                  l515 0F87  
                                l196 0FA7                                  l518 0F99  
                                l475 07AD                                  l497 0FE5  
                                _PR2 001B                    readFilteredVout@i 0029  
                                wreg 0009                  __end_ofi1_writeGPIO 0469  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                         i1_readGPIO 062A                                 l2014 0FD8  
                               l2016 0FDE                                 l2300 01CE  
                               l2310 01ED                                 l2302 01D8  
                               l2400 069A                                 l2320 0208  
                               l2312 01EE                                 l2304 01DD  
                               l2410 06A5                                 l2330 021C  
                               l2322 020D                                 l2314 01F8  
                               l2306 01DE                                 l2412 06B1  
                               l2332 0226                                 l2324 020E  
                               l2316 01FD                                 l2308 01E8  
                               l2340 0236                                 l2420 0F84  
                               l2406 069C                                 l2334 022B  
                               l2326 0218                                 l2318 01FE  
                               l2270 0189                                 l2350 07D0  
                               l2408 06A1                                 l2336 022C  
                               l2328 021B                                 l2280 019D  
                               l2272 018A                                 l2360 07D9  
                               l2352 07D2                                 l2416 0F94  
                               l2290 01B8                                 l2282 019E  
                               l2274 018D                                 l2370 07E3  
                               l2362 07DC                                 l2354 07D4  
                               l2418 0F8E                                 l2380 0FC3  
                               l2292 01BD                                 l2284 01A8  
                               l2276 018E                                 l2364 07DE  
                               l2356 07D6                                 l2348 07CD  
                               l2372 0FA0                                 l1910 0270  
                               l2390 0680                                 l2382 0671  
                               l2294 01BE                                 l2286 01AD  
                               l2278 0198                                 l2366 07E0  
                               l2358 07D8                                 l2374 0FA5  
                               l2376 0F88                                 l1920 0282  
                               l1912 0273                                 l1904 0264  
                               l2392 0684                                 l2384 0672  
                               l2296 01C8                                 l2288 01AE  
                               l2368 07E1                                 l2480 06E6  
                               l1930 02D0                                 l1922 029D  
                               l1914 0277                                 l1906 0265  
                               l2378 078E                                 l2394 0685  
                               l2386 0678                                 l2298 01CD  
                               l2490 06F6                                 l2482 06EA  
                               l1860 03AC                                 l1940 02EE  
                               l1932 02E0                                 l1924 02AB  
                               l1916 0278                                 l1908 026B  
                               l2396 068A                                 l2388 067D  
                               l2492 06F9                                 l2484 06ED  
                               l1870 03BF                                 l1862 03AD  
                               l1950 0303                                 l1942 02F0  
                               l1934 02E3                                 l1926 02B0  
                               l1918 027D                                 l2398 068E  
                               l2558 023E                                 l2494 06FF  
                               l2486 06F0                                 l1880 03E5  
                               l1872 03C0                                 l1864 03B3  
                               l1952 030A                                 l1944 02F6  
                               l1936 02E9                                 l1928 02B5  
                               l2496 0708                                 l2488 06F3  
                               l1882 03EA                                 l1874 03C5  
                               l1866 03B8                                 l1954 030F  
                               l1946 02FC                                 l1938 02ED  
                               l2498 070F                                 l1884 03EF  
                               l1876 03CA                                 l1868 03BB  
                               l1956 0329                                 l1948 0301  
                               l1886 03FC                                 l1878 03D7  
                               l1958 032E                                 STR_1 07FF  
                               STR_3 0811                                 u1200 03C5  
                               u1201 03C4                                 u1210 03CA  
                               u1211 03C9                                 u1300 027D  
                               u1301 027C                                 u1310 0282  
                               u2030 0678                                 u1311 0281  
                               u2031 0677                                 u1240 03EA  
                               u1224 03CF                                 u1400 02E9  
                               u2040 068A                                 u1241 03E9  
                               u1225 03CE                                 u1401 02E8  
                               u2041 0689                                 u1250 03EF  
                               u1234 03DC                                 u1410 02F6  
                               u1251 03EE                                 u1235 03DB  
                               u1411 02F5                                 u1420 02FC  
                               u1324 0287                                 u2060 06A1  
                               u1421 02FB                                 u1325 0286  
                               u2061 06A0                                 _LATA 010C  
                               u1190 03B3                                 u1430 030A  
                               u1350 02B0                                 u1334 0294  
                               u2054 0693                                 _LATB 010D  
                               u1191 03B2                                 u1431 0309  
                               u1351 02AF                                 u1335 0293  
                               u2055 0692                                 u1264 03F4  
                               u1440 030F                                 u1360 02B5  
                               u1344 02A2                                 u1265 03F3  
                               u1441 030E                                 u1361 02B4  
                               u1345 02A1                                 u1274 0401  
                               u1290 026B                                 u2074 06AA  
                               u1275 0400                                 u1291 026A  
                               u2075 06A9                                 u2260 0708  
                               u2261 0707                                 u1470 032E  
                               u1454 0314                                 u1374 02BA  
                               u1471 032D                                 u1455 0313  
                               u1375 02B9                                 u1464 0321  
                               u1384 02C7                                 u1465 0320  
                               u1385 02C6                                 u1394 02D5  
                               u1395 02D4                                 u1484 0333  
                               u1485 0332                                 u1494 0340  
                               u1495 033F            _transToVoltageModeControl 0F94  
                    _filteredFreqPot 0046                      _filteredDutyPot 0044  
                               _main 06E6                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 fsr1l 0006  
                               btemp 007E                       ?_runPotScaling 0070  
      convertRawToMilliAmps@rawValue 0076                                 start 0085  
          ??_setupInternalOscillator 0033                                ?_main 003C  
                    __end_of___lldiv 04C4                                i1l100 0011  
                              i1l106 0083                                i1l321 066E  
                              i1l241 0357                                i1l242 036A  
                              i1l315 0468                                i1l500 0FFF  
                              i1l252 03A9                                i1l172 076C  
                              i1l421 078D                                i1l246 038B  
                              i1l247 038D                                i1l432 0FB0  
                              i1l256 0FCF                                i1l426 07FE  
                              i1l418 051E                                i1l259 0FD7  
                              i1l371 0177                                i1l524 0FC2  
                              i1l429 0FB9                                i1l373 0186  
                              i1l366 0579                                i1l710 04C3  
                              i1l359 05D4                                i1l480 0741  
                              i1l494 0629                                i1l674 07B8  
                              i1l676 07CC                                i1l688 06E5  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
      convertRawToDeciVolts@rawValue 0076       convertRawToMilliAmps@offsetted 0078  
               readFilteredFreqPot@i 0029             readFilteredDutyPot@i_777 0028  
                              status 0003                                wtemp0 007E  
 convertRawToDeciVolts@returnValuedV 007C               initialiseGPIO@portType 0036  
                _initialiseADCModule 0F88                 readFilteredDutyPot@i 0029  
         initialiseADCPin@gpioNumber 0038                      __initialization 0087  
                       __end_of_main 0715                    ?_initialiseADCPin 0070  
                        i1_writeGPIO 040A                               ??_main 0040  
                 ??_initialiseADCPin 0033             __end_of_readFilteredVout 051F  
               ?_initialiseADCModule 0070           ??_initialiseCurrentSensors 0039  
    __end_of_setupInternalOscillator 0262  setupInternalOscillator@selectedFreq 0035  
                             _ADCON0 009D                               _ADCON1 009E  
                        ?i1_readGPIO 0070                               _ADRESH 009C  
                             _ADRESL 009B                               _CCPR1L 0291  
                             _ANSELA 018C                               _ANSELB 018D  
                             i1l2010 0FB1                               i1l2002 039B  
                             i1l2012 0FA8                               i1l2100 0740  
                             i1l2004 039F                               i1l2020 06BB  
                             i1l2006 03A5                               i1l2022 06BF  
                             i1l2110 0745                               i1l2120 07FB  
                             i1l2040 048C                               i1l2032 0469  
                             i1l2024 06C7                               i1l2112 0750  
                             i1l2104 0FBA                               i1l2114 07EA  
                             i1l2210 0594                               i1l2130 05E2  
                             i1l2122 05D5                               i1l2050 04B5  
                             i1l2042 0493                               i1l2034 047A  
                             i1l2026 06CE                               i1l2018 06B3  
                             i1l2106 0FBE                               i1l2116 07F1  
                             i1l2060 0632                               i1l2220 05A7  
                             i1l2212 059D                               i1l2204 057C  
                             i1l2132 05E6                               i1l2044 04A5  
                             i1l2036 047D                               i1l2052 04BB  
                             i1l2028 06DD                               i1l2108 0742  
                             i1l2118 07F4                               i1l2070 0644  
                             i1l2062 0637                               i1l2222 05B7  
                             i1l2214 05A6                               i1l2206 058A  
                             i1l2230 051F                               i1l2142 05FD  
                             i1l2134 05EC                               i1l2046 04AD  
                             i1l2038 0488                               i1l2072 0649  
                             i1l2080 0657                               i1l2064 063A  
                             i1l2056 062B                               i1l2224 05BB  
                             i1l2208 058E                               u200_20 0566  
                             i1l2240 0533                               i1l2144 060C  
                             i1l2136 05FC                               i1l2128 05D6  
                             i1l2160 04D4                               i1l2152 04C4  
                             i1l2048 04AE                               u200_21 0565  
                             i1l2082 065C                               i1l2074 0655  
                             i1l2066 063E                               i1l2058 062C  
                             i1l2090 0715                               i1l2226 05C1  
                             i1l2242 0539                               i1l2146 0610  
                             i1l2162 04D8                               i1l2084 0661  
                             i1l2068 063F                               i1l2092 0733  
                             i1l2252 054C                               i1l2244 0542  
                             i1l2236 0521                               i1l2148 0616  
                             i1l2180 050B                               i1l2164 04DE  
                             i1l2086 066D                               i1l2094 0735  
                             i1l2254 055C                               i1l2246 054B  
                             i1l2238 052F                               i1l2174 04F1  
                             i1l2166 04E7                               i1l2158 04C6  
                             i1l2262 0FCC                               i1l2190 0169  
                             i1l2430 041A                               i1l2422 040B  
                             i1l2096 073A                               u201_20 0573  
                             i1l2256 0560                               i1l2176 0501  
                             i1l2168 04F0                               i1l2264 0FCE  
                             i1l2192 0173                               i1l2184 00AB  
                             i1l2440 0436                               i1l2432 041E  
                             i1l2424 040C                               i1l2098 073F  
                             i1l2258 0566                               i1l2178 0505  
                             i1l2266 0FD3                               i1l2194 0181  
                             i1l2186 00B1                               i1l2442 0444  
                             i1l2434 041F                               i1l2426 0412  
                             i1l2450 0006                               i1l1900 0FFB  
                             i1l2196 0185                               i1l2188 00BB  
                             i1l2444 0449                               i1l2436 0424  
                             i1l2428 0417                               i1l2460 0031  
                             i1l2452 000E                               u201_25 056F  
                             i1l2198 057A                               i1l2446 044E  
                             i1l2438 0429                               i1l2470 0065  
                             i1l2462 0041                               i1l2454 001D  
                             u202_20 0FD3                               i1l2448 045B  
                             u210_20 0429                               i1l2464 0046  
                             i1l2472 006F                               i1l2456 0023  
                             u202_21 0FD2                               u210_21 0428  
                             i1l1850 07B4                               i1l2474 0079  
                             i1l2466 004F                               i1l2458 002B  
                             i1l1852 07BD                               i1l2476 007A  
                             i1l2468 0055                               i1l1854 07C2  
                             i1l1846 07AE                               i1l2478 0082  
                             i1l1856 07C8                               u115_20 07B4  
                             i1l1848 07B0                               i1l1960 0349  
                             u115_21 07B3                               i1l1890 0771  
                             i1l1970 0363                               i1l1962 034B  
                             i1l1892 0789                               i1l1980 0380  
                             i1l1972 0368                               i1l1964 0351  
                             u211_24 042E                               u211_25 042D  
                             i1l1990 0391                               i1l1974 036F  
                             i1l1966 0355                               i1l1896 0FE6  
                             i1l1888 076D                               i1l1992 0395  
                             i1l1976 0371                               i1l1968 035D  
                             u220_20 0046                               u220_21 0045  
                             i1l1898 0FEC                               i1l1994 0399  
                             i1l1986 0381                               i1l1978 0375  
                             i1l1996 039A                               i1l1988 0385  
                             u212_24 043B                               u116_25 07B9  
                             u212_25 043A                               u213_20 0449  
                             u221_20 0055                               u213_21 0448  
                             u221_21 0054                               u117_25 07BE  
                             u118_20 07C8                               u150_20 0351  
                             u214_20 044E                               u222_20 006B  
                             u118_21 07C7                               u150_21 0350  
                             u214_21 044D                               u222_21 0069  
                             u151_20 035D                               u223_20 006C  
                             u151_21 035C                               u215_24 0453  
                             u215_25 0452                               u152_20 0363  
                             u208_20 0412                               u224_20 0075  
                             u152_21 0362                               u208_21 0411  
                             u224_21 0073                               u216_24 0460  
                             u128_25 0781                               u160_25 06CF  
                             u216_25 045F                               u153_20 036F  
                             u161_20 06DD                               u209_20 0424  
                             u225_20 0076                               u217_20 000E  
                             u153_21 036E                               u161_21 06DC  
                             u209_21 0423                               u217_21 000D  
                             u170_20 0644                               u162_20 047A  
                             u218_20 0023                               u170_21 0643  
                             u162_21 0479                               u218_21 0022  
                             u154_25 0378                               u155_20 038B  
                             u219_20 0031                               u155_21 038A  
                             u219_21 0030                               u171_24 064E  
                             u171_25 064D                               u163_25 047E  
                             u172_20 065C                               u156_20 0391  
                             u164_20 048C                               u180_20 076A  
                             u172_21 065B                               u156_21 0390  
                             u164_21 048B                               u180_21 0767  
                             u157_20 03A5                               u157_21 03A4  
                             u173_24 0666                               u181_24 076C  
                             u173_25 0665                               u165_25 048D  
                             u182_20 07F1                               u174_20 071F  
                             u166_20 04A5                               u158_20 06BF  
                             u190_20 00B1                               u182_21 07F0  
                             u174_21 071D                               u166_21 04A4  
                             u158_21 06BE                               u190_21 00B0  
                             u166_25 04A1                               u183_20 07FB  
                             u175_20 0720                               u191_20 00BB  
                             u183_21 07FA                               u191_21 00BA  
                             u167_25 04AF                               u159_25 06C8  
                             u176_20 072E                               u184_20 05EC  
                             u168_20 04BB                               u192_20 00DC  
                             u176_21 072C                               u184_21 05EB  
                             u168_21 04BA                               u192_25 00D8  
                             u169_20 0632                               u177_20 072F  
                             u185_20 0616                               u193_20 0109  
                             u169_21 0631                               u185_21 0615  
                             u193_25 0105                               u178_20 073A  
                             u186_20 0623                               u194_20 0173  
                             u178_21 0739                               u194_21 0172  
                             u186_25 061F                               u194_25 016F  
                             u179_20 073F                               u187_20 04DE  
                             u195_20 0181                               u179_21 073E  
                             u187_21 04DD                               u195_21 0180  
                             u195_25 017D                               u196_20 0594  
                             u188_20 050B                               u196_21 0593  
                             u188_21 050A                      ??_runPotScaling 0026  
                             u197_20 05C1                               u189_20 0518  
                             u197_21 05C0                               u189_25 0514  
                             u198_20 05CE                               u198_25 05CA  
                             u199_20 0539                               u199_21 0538  
            initialiseGPIO@direction 0033                     readGPIO@portType 003A  
        __end_of_readILCurrentADCRaw 0FD8                  readADCRaw@gpioValid 0077  
                             ___lmul 06B3                               ___wmul 07AE  
                          ??___lldiv 0020                     __end_of_readGPIO 06B3  
                     _controlRoutine 07EA                               _tripIL 0057  
     convertRawToDeciVolts@offsetted 007A            setPWMDutyandPeriod@period 0072  
              ??_initialiseADCModule 0033             _initialisePotentiometers 0FC3  
              _convertRawToDeciVolts 076D           initialiseADCPin@portNumber 0037  
                   __end_of_setupPWM 07EA                      _currentTripRead 0715  
         ?_transToCurrentModeControl 0070              __end_of__initialization 00A7  
            ??_runCurrentModeControl 007C               __end_of_controlRoutine 07FF  
                     __pcstackCOMMON 0070            initialiseADCPin@gpioValid 0035  
              i1writeGPIO@gpioNumber 0074                _convertRawToMilliAmps 0FE6  
                      _currentILFIFO 00A0                       _OPTION_REGbits 0095  
                  __end_of_Tick980Hz 0085                _runVoltageModeControl 0FB1  
                         __pbssBANK0 0040                           __pbssBANK1 00A0  
                         __pbssBANK2 0120                           __pbssBANK3 01A0  
                         __pmaintext 06E6                      ?_controlRoutine 0070  
                            ?___lmul 0070                              ?___wmul 0070  
  __end_of_transToVoltageModeControl 0F9A                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 0742          __end_of_setPWMDutyandPeriod 076D  
             ?_convertRawToDeciVolts 0076     __end_of_initialiseCurrentSensors 07AE  
           initialiseADCPin@portType 0036              _transToOverCurrentFault 0FBA  
                 i1readGPIO@portType 0077                readFilteredVout@i_840 0028  
              i1writeGPIO@portNumber 0075                           _filteredIL 004A  
                          ?_readGPIO 0070                           _readADCRaw 0348  
                _readFilteredFreqPot 051F                 i1readGPIO@gpioNumber 0078  
                _readFilteredDutyPot 057A   convertRawToMilliAmps@returnValuemA 007A  
                          ?_setupPWM 0070                 readADCRaw@gpioNumber 007A  
           initialiseGPIO@gpioNumber 0037                              ___lldiv 0469  
             ?_convertRawToMilliAmps 0076                         ?i1_writeGPIO 0070  
               ?_readFilteredFreqPot 007B                              __ptext1 0F94  
                            __ptext2 0F84                              __ptext3 0F8E  
                            __ptext4 0FA0                              __ptext5 07CD  
                            __ptext6 0187                              __ptext7 066F  
                            __ptext8 0FC3                              __ptext9 078E  
               ?_readFilteredDutyPot 007B                            _T2CONbits 001C  
                  ?_readFilteredVout 007B                              _setDuty 0052  
              i1writeGPIO@writeValue 0070               ?_runVoltageModeControl 0070  
                            _tripIDS 0058                   ??_readFilteredVout 0020  
                       ??i1_readGPIO 0070                              clrloop0 0F9B  
               end_of_initialization 00A7                           ??_readGPIO 0033  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
                   _currentTripReset 0FD8           ??_initialisePotentiometers 0039  
                         _prevPeriod 0059                    writeGPIO@portType 0036  
                     _readFilteredIL 05D5                   __end_ofi1_readGPIO 066F  
              ??_readFilteredFreqPot 0020                ??_readFilteredDutyPot 0020  
               i1readGPIO@portNumber 0076                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 040A            ??_transToOverCurrentFault 0070  
           initialiseGPIO@portNumber 0038                         _filteredVout 0048  
        ??_transToCurrentModeControl 0033                          ?_readADCRaw 0070  
                  _transToPotControl 0F84                          _CCP1CONbits 0293  
                      readGPIO@readA 0035                        readGPIO@readB 0037  
              __end_of_runPotScaling 0187                   ?_transToPotControl 0070  
          ?_initialiseCurrentSensors 0070        __end_of_runCurrentModeControl 0FB1  
             __end_of_readFilteredIL 062A                  ??_transToPotControl 0033  
                     __end_of___lmul 06E6          __end_of_initialiseADCModule 0F8E  
                     __end_of___wmul 07CD                       _clockFrequency 0040  
                start_initialization 0087         __end_of_setupTimer0Interrupt 0FA8  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
          __end_of_transToPotControl 0F88                     ??_controlRoutine 007E  
    __end_of_transToOverCurrentFault 0FC3                          _APFCON0bits 011D  
                           ??___lmul 0078                             ??___wmul 0074  
                    ?_readFilteredIL 0070            _transToCurrentModeControl 0F8E  
            ??_convertRawToDeciVolts 0078                            ___latbits 0001  
                      __pcstackBANK0 0020                           ?_Tick980Hz 0070  
                   _initialiseADCPin 02DE                         _currentState 005A  
                 readGPIO@gpioNumber 003B                       _initialiseGPIO 0262  
            ??_convertRawToMilliAmps 0078                      i1readGPIO@readA 0072  
                    i1readGPIO@readB 0074     __end_of_initialisePotentiometers 0FCC  
                           ?___lldiv 0076           ?_transToVoltageModeControl 0070  
            ??_runVoltageModeControl 007E                      readADCRaw@i_678 0079  
           __end_of_currentTripReset 0FE6      readFilteredDutyPot@sumOfSamples 0024  
                     ___wmul@product 0074               __end_of_initialiseGPIO 02DE  
                          clear_ram0 0F9A                            _setPeriod 005B  
                           _PIE1bits 0091                             _PIR1bits 0011  
       setPWMDutyandPeriod@dutyCycle 0070                 _setupTimer0Interrupt 0FA0  
                _currentTripRead$916 007A                          _filteredIDS 004C  
                         _ADCON0bits 009D                    ___wmul@multiplier 0070  
                 readGPIO@portNumber 0039                          _freqPotFIFO 0120  
                          _writeGPIO 03AA                          ??_Tick980Hz 0032  
                  ___lmul@multiplier 0070                  _readILCurrentADCRaw 0FCC  
                       ??_readADCRaw 0072                      ?_initialiseGPIO 0033  
       readFilteredVout@sumOfSamples 0024                    readADCRaw@channel 0076  
              ?_setupTimer0Interrupt 0070          __end_of_readFilteredFreqPot 057A  
        __end_of_readFilteredDutyPot 05D5                 runPotScaling@maxDuty 002E  
               runPotScaling@minDuty 0030                 ?_readILCurrentADCRaw 0070  
                writeGPIO@gpioNumber 0037                   __end_of_readADCRaw 03AA  
           readFilteredFreqPot@i_781 0028                           ?_writeGPIO 0033  
                           __ptext10 0262                             __ptext11 02DE  
                           __ptext20 06B3                             __ptext12 0FD8  
                           __ptext21 0469                             __ptext13 03AA  
                           __ptext30 07EA                             __ptext22 0FCC  
                           __ptext14 0F88                             __ptext31 0FB1  
                           __ptext23 04C4                             __ptext32 076D  
                           __ptext24 05D5                             __ptext16 040A  
                           __ptext33 0FA8                             __ptext25 051F  
                           __ptext17 0FBA                             __ptext34 0FE6  
                           __ptext26 057A                             __ptext18 0742  
                           __ptext35 07AE                             __ptext27 0348  
                           __ptext19 00AB                             __ptext28 0715  
                           __ptext29 062A            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 01A0                  i1writeGPIO@portType 0073  
         readFilteredIL@sumOfSamples 0076                             _readGPIO 066F  
                           _latestIL 004E                     ??_readFilteredIL 0072  
                      _timerSlotHalf 0055                         _PSTR1CONbits 0296  
                           _prevDuty 0050                             _setupPWM 07CD  
              _runCurrentModeControl 0FA8                             int$flags 007E  
              ??_readILCurrentADCRaw 0072             __end_of_initialiseADCPin 0348  
                           main@argc 003C             ?_transToOverCurrentFault 0070  
                           main@argv 003E                             _voutFIFO 0140  
    readFilteredFreqPot@sumOfSamples 0024        __end_of_convertRawToDeciVolts 078E  
                   _timerSlotQuarter 0054                           _INTCONbits 000B  
  __end_of_transToCurrentModeControl 0F94                  writeGPIO@portNumber 0038  
                           intlevel1 0000             _initialiseCurrentSensors 078E  
                   ___lldiv@dividend 007A               i1readGPIO@returnValueA 0073  
             i1readGPIO@returnValueB 0075                     _readFilteredVout 04C4  
             ??_setupTimer0Interrupt 0033                           _OSCCONbits 0099  
                        _potSetCount 0056                  _setPWMDutyandPeriod 0742  
      __end_of_convertRawToMilliAmps 1000              _setupInternalOscillator 0187  
        ??_transToVoltageModeControl 0033                        ??i1_writeGPIO 0071  
                      __pstringtext1 07FF                        __pstringtext2 0811  
                      __pstringtext3 0000                           _OPTION_REG 0095  
                   ___lldiv@quotient 0021        __end_of_runVoltageModeControl 0FBA  
                writeGPIO@writeValue 0033                          ??_writeGPIO 0034  
               ?_setPWMDutyandPeriod 0070                    ?_currentTripReset 0070  
                 ??_currentTripReset 0039                readADCRaw@returnValue 0074  
                  ??_currentTripRead 0079                        _runPotScaling 00AB  
               readGPIO@returnValueA 0036                 readGPIO@returnValueB 0038  
                readFilteredIL@i_924 007A               ?_runCurrentModeControl 0070  
                    readFilteredIL@i 007B  
