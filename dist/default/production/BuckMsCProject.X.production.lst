

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 31 11:42:17 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    38                           	dabs	1,0x7E,2
    39  0000                     
    40                           ; Version 2.40
    41                           ; Generated 17/11/2021 GMT
    42                           ; 
    43                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F1827 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  0008                     	;# 
    84  0009                     	;# 
    85  000A                     	;# 
    86  000B                     	;# 
    87  000C                     	;# 
    88  000D                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0094                     	;# 
   110  0095                     	;# 
   111  0096                     	;# 
   112  0097                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009A                     	;# 
   116  009B                     	;# 
   117  009B                     	;# 
   118  009C                     	;# 
   119  009D                     	;# 
   120  009E                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  0111                     	;# 
   124  0112                     	;# 
   125  0113                     	;# 
   126  0114                     	;# 
   127  0115                     	;# 
   128  0116                     	;# 
   129  0117                     	;# 
   130  0118                     	;# 
   131  0119                     	;# 
   132  011A                     	;# 
   133  011B                     	;# 
   134  011D                     	;# 
   135  011E                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0191                     	;# 
   139  0191                     	;# 
   140  0192                     	;# 
   141  0193                     	;# 
   142  0193                     	;# 
   143  0193                     	;# 
   144  0194                     	;# 
   145  0195                     	;# 
   146  0196                     	;# 
   147  0199                     	;# 
   148  019A                     	;# 
   149  019B                     	;# 
   150  019B                     	;# 
   151  019B                     	;# 
   152  019B                     	;# 
   153  019C                     	;# 
   154  019C                     	;# 
   155  019D                     	;# 
   156  019E                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020D                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0216                     	;# 
   172  0216                     	;# 
   173  0217                     	;# 
   174  0217                     	;# 
   175  0219                     	;# 
   176  021A                     	;# 
   177  021B                     	;# 
   178  021C                     	;# 
   179  021D                     	;# 
   180  021E                     	;# 
   181  021F                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0298                     	;# 
   191  0298                     	;# 
   192  0299                     	;# 
   193  029A                     	;# 
   194  029B                     	;# 
   195  029C                     	;# 
   196  029C                     	;# 
   197  029D                     	;# 
   198  029E                     	;# 
   199  029E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0318                     	;# 
   205  0318                     	;# 
   206  0319                     	;# 
   207  031A                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  0011                     	;# 
   248  0012                     	;# 
   249  0013                     	;# 
   250  0014                     	;# 
   251  0015                     	;# 
   252  0016                     	;# 
   253  0016                     	;# 
   254  0017                     	;# 
   255  0018                     	;# 
   256  0019                     	;# 
   257  001A                     	;# 
   258  001B                     	;# 
   259  001C                     	;# 
   260  001E                     	;# 
   261  001F                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  0111                     	;# 
   282  0112                     	;# 
   283  0113                     	;# 
   284  0114                     	;# 
   285  0115                     	;# 
   286  0116                     	;# 
   287  0117                     	;# 
   288  0118                     	;# 
   289  0119                     	;# 
   290  011A                     	;# 
   291  011B                     	;# 
   292  011D                     	;# 
   293  011E                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0191                     	;# 
   297  0191                     	;# 
   298  0192                     	;# 
   299  0193                     	;# 
   300  0193                     	;# 
   301  0193                     	;# 
   302  0194                     	;# 
   303  0195                     	;# 
   304  0196                     	;# 
   305  0199                     	;# 
   306  019A                     	;# 
   307  019B                     	;# 
   308  019B                     	;# 
   309  019B                     	;# 
   310  019B                     	;# 
   311  019C                     	;# 
   312  019C                     	;# 
   313  019D                     	;# 
   314  019E                     	;# 
   315  019F                     	;# 
   316  020C                     	;# 
   317  020D                     	;# 
   318  0211                     	;# 
   319  0211                     	;# 
   320  0212                     	;# 
   321  0212                     	;# 
   322  0213                     	;# 
   323  0213                     	;# 
   324  0214                     	;# 
   325  0214                     	;# 
   326  0215                     	;# 
   327  0215                     	;# 
   328  0215                     	;# 
   329  0216                     	;# 
   330  0216                     	;# 
   331  0217                     	;# 
   332  0217                     	;# 
   333  0219                     	;# 
   334  021A                     	;# 
   335  021B                     	;# 
   336  021C                     	;# 
   337  021D                     	;# 
   338  021E                     	;# 
   339  021F                     	;# 
   340  0291                     	;# 
   341  0291                     	;# 
   342  0292                     	;# 
   343  0293                     	;# 
   344  0294                     	;# 
   345  0295                     	;# 
   346  0295                     	;# 
   347  0296                     	;# 
   348  0298                     	;# 
   349  0298                     	;# 
   350  0299                     	;# 
   351  029A                     	;# 
   352  029B                     	;# 
   353  029C                     	;# 
   354  029C                     	;# 
   355  029D                     	;# 
   356  029E                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  0394                     	;# 
   367  0395                     	;# 
   368  0396                     	;# 
   369  039A                     	;# 
   370  039C                     	;# 
   371  039D                     	;# 
   372  039E                     	;# 
   373  039F                     	;# 
   374  0415                     	;# 
   375  0416                     	;# 
   376  0417                     	;# 
   377  041C                     	;# 
   378  041D                     	;# 
   379  041E                     	;# 
   380  0FE4                     	;# 
   381  0FE5                     	;# 
   382  0FE6                     	;# 
   383  0FE7                     	;# 
   384  0FE8                     	;# 
   385  0FE9                     	;# 
   386  0FEA                     	;# 
   387  0FEB                     	;# 
   388  0FED                     	;# 
   389  0FEE                     	;# 
   390  0FEF                     	;# 
   391  0000                     	;# 
   392  0001                     	;# 
   393  0002                     	;# 
   394  0003                     	;# 
   395  0004                     	;# 
   396  0005                     	;# 
   397  0006                     	;# 
   398  0007                     	;# 
   399  0008                     	;# 
   400  0009                     	;# 
   401  000A                     	;# 
   402  000B                     	;# 
   403  000C                     	;# 
   404  000D                     	;# 
   405  0011                     	;# 
   406  0012                     	;# 
   407  0013                     	;# 
   408  0014                     	;# 
   409  0015                     	;# 
   410  0016                     	;# 
   411  0016                     	;# 
   412  0017                     	;# 
   413  0018                     	;# 
   414  0019                     	;# 
   415  001A                     	;# 
   416  001B                     	;# 
   417  001C                     	;# 
   418  001E                     	;# 
   419  001F                     	;# 
   420  008C                     	;# 
   421  008D                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  010C                     	;# 
   438  010D                     	;# 
   439  0111                     	;# 
   440  0112                     	;# 
   441  0113                     	;# 
   442  0114                     	;# 
   443  0115                     	;# 
   444  0116                     	;# 
   445  0117                     	;# 
   446  0118                     	;# 
   447  0119                     	;# 
   448  011A                     	;# 
   449  011B                     	;# 
   450  011D                     	;# 
   451  011E                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0191                     	;# 
   455  0191                     	;# 
   456  0192                     	;# 
   457  0193                     	;# 
   458  0193                     	;# 
   459  0193                     	;# 
   460  0194                     	;# 
   461  0195                     	;# 
   462  0196                     	;# 
   463  0199                     	;# 
   464  019A                     	;# 
   465  019B                     	;# 
   466  019B                     	;# 
   467  019B                     	;# 
   468  019B                     	;# 
   469  019C                     	;# 
   470  019C                     	;# 
   471  019D                     	;# 
   472  019E                     	;# 
   473  019F                     	;# 
   474  020C                     	;# 
   475  020D                     	;# 
   476  0211                     	;# 
   477  0211                     	;# 
   478  0212                     	;# 
   479  0212                     	;# 
   480  0213                     	;# 
   481  0213                     	;# 
   482  0214                     	;# 
   483  0214                     	;# 
   484  0215                     	;# 
   485  0215                     	;# 
   486  0215                     	;# 
   487  0216                     	;# 
   488  0216                     	;# 
   489  0217                     	;# 
   490  0217                     	;# 
   491  0219                     	;# 
   492  021A                     	;# 
   493  021B                     	;# 
   494  021C                     	;# 
   495  021D                     	;# 
   496  021E                     	;# 
   497  021F                     	;# 
   498  0291                     	;# 
   499  0291                     	;# 
   500  0292                     	;# 
   501  0293                     	;# 
   502  0294                     	;# 
   503  0295                     	;# 
   504  0295                     	;# 
   505  0296                     	;# 
   506  0298                     	;# 
   507  0298                     	;# 
   508  0299                     	;# 
   509  029A                     	;# 
   510  029B                     	;# 
   511  029C                     	;# 
   512  029C                     	;# 
   513  029D                     	;# 
   514  029E                     	;# 
   515  029E                     	;# 
   516  0311                     	;# 
   517  0311                     	;# 
   518  0312                     	;# 
   519  0313                     	;# 
   520  0318                     	;# 
   521  0318                     	;# 
   522  0319                     	;# 
   523  031A                     	;# 
   524  0394                     	;# 
   525  0395                     	;# 
   526  0396                     	;# 
   527  039A                     	;# 
   528  039C                     	;# 
   529  039D                     	;# 
   530  039E                     	;# 
   531  039F                     	;# 
   532  0415                     	;# 
   533  0416                     	;# 
   534  0417                     	;# 
   535  041C                     	;# 
   536  041D                     	;# 
   537  041E                     	;# 
   538  0FE4                     	;# 
   539  0FE5                     	;# 
   540  0FE6                     	;# 
   541  0FE7                     	;# 
   542  0FE8                     	;# 
   543  0FE9                     	;# 
   544  0FEA                     	;# 
   545  0FEB                     	;# 
   546  0FED                     	;# 
   547  0FEE                     	;# 
   548  0FEF                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0016                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001C                     	;# 
   576  001E                     	;# 
   577  001F                     	;# 
   578  008C                     	;# 
   579  008D                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0094                     	;# 
   584  0095                     	;# 
   585  0096                     	;# 
   586  0097                     	;# 
   587  0098                     	;# 
   588  0099                     	;# 
   589  009A                     	;# 
   590  009B                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  010C                     	;# 
   596  010D                     	;# 
   597  0111                     	;# 
   598  0112                     	;# 
   599  0113                     	;# 
   600  0114                     	;# 
   601  0115                     	;# 
   602  0116                     	;# 
   603  0117                     	;# 
   604  0118                     	;# 
   605  0119                     	;# 
   606  011A                     	;# 
   607  011B                     	;# 
   608  011D                     	;# 
   609  011E                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0191                     	;# 
   613  0191                     	;# 
   614  0192                     	;# 
   615  0193                     	;# 
   616  0193                     	;# 
   617  0193                     	;# 
   618  0194                     	;# 
   619  0195                     	;# 
   620  0196                     	;# 
   621  0199                     	;# 
   622  019A                     	;# 
   623  019B                     	;# 
   624  019B                     	;# 
   625  019B                     	;# 
   626  019B                     	;# 
   627  019C                     	;# 
   628  019C                     	;# 
   629  019D                     	;# 
   630  019E                     	;# 
   631  019F                     	;# 
   632  020C                     	;# 
   633  020D                     	;# 
   634  0211                     	;# 
   635  0211                     	;# 
   636  0212                     	;# 
   637  0212                     	;# 
   638  0213                     	;# 
   639  0213                     	;# 
   640  0214                     	;# 
   641  0214                     	;# 
   642  0215                     	;# 
   643  0215                     	;# 
   644  0215                     	;# 
   645  0216                     	;# 
   646  0216                     	;# 
   647  0217                     	;# 
   648  0217                     	;# 
   649  0219                     	;# 
   650  021A                     	;# 
   651  021B                     	;# 
   652  021C                     	;# 
   653  021D                     	;# 
   654  021E                     	;# 
   655  021F                     	;# 
   656  0291                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0293                     	;# 
   660  0294                     	;# 
   661  0295                     	;# 
   662  0295                     	;# 
   663  0296                     	;# 
   664  0298                     	;# 
   665  0298                     	;# 
   666  0299                     	;# 
   667  029A                     	;# 
   668  029B                     	;# 
   669  029C                     	;# 
   670  029C                     	;# 
   671  029D                     	;# 
   672  029E                     	;# 
   673  029E                     	;# 
   674  0311                     	;# 
   675  0311                     	;# 
   676  0312                     	;# 
   677  0313                     	;# 
   678  0318                     	;# 
   679  0318                     	;# 
   680  0319                     	;# 
   681  031A                     	;# 
   682  0394                     	;# 
   683  0395                     	;# 
   684  0396                     	;# 
   685  039A                     	;# 
   686  039C                     	;# 
   687  039D                     	;# 
   688  039E                     	;# 
   689  039F                     	;# 
   690  0415                     	;# 
   691  0416                     	;# 
   692  0417                     	;# 
   693  041C                     	;# 
   694  041D                     	;# 
   695  041E                     	;# 
   696  0FE4                     	;# 
   697  0FE5                     	;# 
   698  0FE6                     	;# 
   699  0FE7                     	;# 
   700  0FE8                     	;# 
   701  0FE9                     	;# 
   702  0FEA                     	;# 
   703  0FEB                     	;# 
   704  0FED                     	;# 
   705  0FEE                     	;# 
   706  0FEF                     	;# 
   707  0000                     	;# 
   708  0001                     	;# 
   709  0002                     	;# 
   710  0003                     	;# 
   711  0004                     	;# 
   712  0005                     	;# 
   713  0006                     	;# 
   714  0007                     	;# 
   715  0008                     	;# 
   716  0009                     	;# 
   717  000A                     	;# 
   718  000B                     	;# 
   719  000C                     	;# 
   720  000D                     	;# 
   721  0011                     	;# 
   722  0012                     	;# 
   723  0013                     	;# 
   724  0014                     	;# 
   725  0015                     	;# 
   726  0016                     	;# 
   727  0016                     	;# 
   728  0017                     	;# 
   729  0018                     	;# 
   730  0019                     	;# 
   731  001A                     	;# 
   732  001B                     	;# 
   733  001C                     	;# 
   734  001E                     	;# 
   735  001F                     	;# 
   736  008C                     	;# 
   737  008D                     	;# 
   738  0091                     	;# 
   739  0092                     	;# 
   740  0093                     	;# 
   741  0094                     	;# 
   742  0095                     	;# 
   743  0096                     	;# 
   744  0097                     	;# 
   745  0098                     	;# 
   746  0099                     	;# 
   747  009A                     	;# 
   748  009B                     	;# 
   749  009B                     	;# 
   750  009C                     	;# 
   751  009D                     	;# 
   752  009E                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  0111                     	;# 
   756  0112                     	;# 
   757  0113                     	;# 
   758  0114                     	;# 
   759  0115                     	;# 
   760  0116                     	;# 
   761  0117                     	;# 
   762  0118                     	;# 
   763  0119                     	;# 
   764  011A                     	;# 
   765  011B                     	;# 
   766  011D                     	;# 
   767  011E                     	;# 
   768  018C                     	;# 
   769  018D                     	;# 
   770  0191                     	;# 
   771  0191                     	;# 
   772  0192                     	;# 
   773  0193                     	;# 
   774  0193                     	;# 
   775  0193                     	;# 
   776  0194                     	;# 
   777  0195                     	;# 
   778  0196                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019B                     	;# 
   783  019B                     	;# 
   784  019B                     	;# 
   785  019C                     	;# 
   786  019C                     	;# 
   787  019D                     	;# 
   788  019E                     	;# 
   789  019F                     	;# 
   790  020C                     	;# 
   791  020D                     	;# 
   792  0211                     	;# 
   793  0211                     	;# 
   794  0212                     	;# 
   795  0212                     	;# 
   796  0213                     	;# 
   797  0213                     	;# 
   798  0214                     	;# 
   799  0214                     	;# 
   800  0215                     	;# 
   801  0215                     	;# 
   802  0215                     	;# 
   803  0216                     	;# 
   804  0216                     	;# 
   805  0217                     	;# 
   806  0217                     	;# 
   807  0219                     	;# 
   808  021A                     	;# 
   809  021B                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021E                     	;# 
   813  021F                     	;# 
   814  0291                     	;# 
   815  0291                     	;# 
   816  0292                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0295                     	;# 
   821  0296                     	;# 
   822  0298                     	;# 
   823  0298                     	;# 
   824  0299                     	;# 
   825  029A                     	;# 
   826  029B                     	;# 
   827  029C                     	;# 
   828  029C                     	;# 
   829  029D                     	;# 
   830  029E                     	;# 
   831  029E                     	;# 
   832  0311                     	;# 
   833  0311                     	;# 
   834  0312                     	;# 
   835  0313                     	;# 
   836  0318                     	;# 
   837  0318                     	;# 
   838  0319                     	;# 
   839  031A                     	;# 
   840  0394                     	;# 
   841  0395                     	;# 
   842  0396                     	;# 
   843  039A                     	;# 
   844  039C                     	;# 
   845  039D                     	;# 
   846  039E                     	;# 
   847  039F                     	;# 
   848  0415                     	;# 
   849  0416                     	;# 
   850  0417                     	;# 
   851  041C                     	;# 
   852  041D                     	;# 
   853  041E                     	;# 
   854  0FE4                     	;# 
   855  0FE5                     	;# 
   856  0FE6                     	;# 
   857  0FE7                     	;# 
   858  0FE8                     	;# 
   859  0FE9                     	;# 
   860  0FEA                     	;# 
   861  0FEB                     	;# 
   862  0FED                     	;# 
   863  0FEE                     	;# 
   864  0FEF                     	;# 
   865  0000                     	;# 
   866  0001                     	;# 
   867  0002                     	;# 
   868  0003                     	;# 
   869  0004                     	;# 
   870  0005                     	;# 
   871  0006                     	;# 
   872  0007                     	;# 
   873  0008                     	;# 
   874  0009                     	;# 
   875  000A                     	;# 
   876  000B                     	;# 
   877  000C                     	;# 
   878  000D                     	;# 
   879  0011                     	;# 
   880  0012                     	;# 
   881  0013                     	;# 
   882  0014                     	;# 
   883  0015                     	;# 
   884  0016                     	;# 
   885  0016                     	;# 
   886  0017                     	;# 
   887  0018                     	;# 
   888  0019                     	;# 
   889  001A                     	;# 
   890  001B                     	;# 
   891  001C                     	;# 
   892  001E                     	;# 
   893  001F                     	;# 
   894  008C                     	;# 
   895  008D                     	;# 
   896  0091                     	;# 
   897  0092                     	;# 
   898  0093                     	;# 
   899  0094                     	;# 
   900  0095                     	;# 
   901  0096                     	;# 
   902  0097                     	;# 
   903  0098                     	;# 
   904  0099                     	;# 
   905  009A                     	;# 
   906  009B                     	;# 
   907  009B                     	;# 
   908  009C                     	;# 
   909  009D                     	;# 
   910  009E                     	;# 
   911  010C                     	;# 
   912  010D                     	;# 
   913  0111                     	;# 
   914  0112                     	;# 
   915  0113                     	;# 
   916  0114                     	;# 
   917  0115                     	;# 
   918  0116                     	;# 
   919  0117                     	;# 
   920  0118                     	;# 
   921  0119                     	;# 
   922  011A                     	;# 
   923  011B                     	;# 
   924  011D                     	;# 
   925  011E                     	;# 
   926  018C                     	;# 
   927  018D                     	;# 
   928  0191                     	;# 
   929  0191                     	;# 
   930  0192                     	;# 
   931  0193                     	;# 
   932  0193                     	;# 
   933  0193                     	;# 
   934  0194                     	;# 
   935  0195                     	;# 
   936  0196                     	;# 
   937  0199                     	;# 
   938  019A                     	;# 
   939  019B                     	;# 
   940  019B                     	;# 
   941  019B                     	;# 
   942  019B                     	;# 
   943  019C                     	;# 
   944  019C                     	;# 
   945  019D                     	;# 
   946  019E                     	;# 
   947  019F                     	;# 
   948  020C                     	;# 
   949  020D                     	;# 
   950  0211                     	;# 
   951  0211                     	;# 
   952  0212                     	;# 
   953  0212                     	;# 
   954  0213                     	;# 
   955  0213                     	;# 
   956  0214                     	;# 
   957  0214                     	;# 
   958  0215                     	;# 
   959  0215                     	;# 
   960  0215                     	;# 
   961  0216                     	;# 
   962  0216                     	;# 
   963  0217                     	;# 
   964  0217                     	;# 
   965  0219                     	;# 
   966  021A                     	;# 
   967  021B                     	;# 
   968  021C                     	;# 
   969  021D                     	;# 
   970  021E                     	;# 
   971  021F                     	;# 
   972  0291                     	;# 
   973  0291                     	;# 
   974  0292                     	;# 
   975  0293                     	;# 
   976  0294                     	;# 
   977  0295                     	;# 
   978  0295                     	;# 
   979  0296                     	;# 
   980  0298                     	;# 
   981  0298                     	;# 
   982  0299                     	;# 
   983  029A                     	;# 
   984  029B                     	;# 
   985  029C                     	;# 
   986  029C                     	;# 
   987  029D                     	;# 
   988  029E                     	;# 
   989  029E                     	;# 
   990  0311                     	;# 
   991  0311                     	;# 
   992  0312                     	;# 
   993  0313                     	;# 
   994  0318                     	;# 
   995  0318                     	;# 
   996  0319                     	;# 
   997  031A                     	;# 
   998  0394                     	;# 
   999  0395                     	;# 
  1000  0396                     	;# 
  1001  039A                     	;# 
  1002  039C                     	;# 
  1003  039D                     	;# 
  1004  039E                     	;# 
  1005  039F                     	;# 
  1006  0415                     	;# 
  1007  0416                     	;# 
  1008  0417                     	;# 
  1009  041C                     	;# 
  1010  041D                     	;# 
  1011  041E                     	;# 
  1012  0FE4                     	;# 
  1013  0FE5                     	;# 
  1014  0FE6                     	;# 
  1015  0FE7                     	;# 
  1016  0FE8                     	;# 
  1017  0FE9                     	;# 
  1018  0FEA                     	;# 
  1019  0FEB                     	;# 
  1020  0FED                     	;# 
  1021  0FEE                     	;# 
  1022  0FEF                     	;# 
  1023  0000                     	;# 
  1024  0001                     	;# 
  1025  0002                     	;# 
  1026  0003                     	;# 
  1027  0004                     	;# 
  1028  0005                     	;# 
  1029  0006                     	;# 
  1030  0007                     	;# 
  1031  0008                     	;# 
  1032  0009                     	;# 
  1033  000A                     	;# 
  1034  000B                     	;# 
  1035  000C                     	;# 
  1036  000D                     	;# 
  1037  0011                     	;# 
  1038  0012                     	;# 
  1039  0013                     	;# 
  1040  0014                     	;# 
  1041  0015                     	;# 
  1042  0016                     	;# 
  1043  0016                     	;# 
  1044  0017                     	;# 
  1045  0018                     	;# 
  1046  0019                     	;# 
  1047  001A                     	;# 
  1048  001B                     	;# 
  1049  001C                     	;# 
  1050  001E                     	;# 
  1051  001F                     	;# 
  1052  008C                     	;# 
  1053  008D                     	;# 
  1054  0091                     	;# 
  1055  0092                     	;# 
  1056  0093                     	;# 
  1057  0094                     	;# 
  1058  0095                     	;# 
  1059  0096                     	;# 
  1060  0097                     	;# 
  1061  0098                     	;# 
  1062  0099                     	;# 
  1063  009A                     	;# 
  1064  009B                     	;# 
  1065  009B                     	;# 
  1066  009C                     	;# 
  1067  009D                     	;# 
  1068  009E                     	;# 
  1069  010C                     	;# 
  1070  010D                     	;# 
  1071  0111                     	;# 
  1072  0112                     	;# 
  1073  0113                     	;# 
  1074  0114                     	;# 
  1075  0115                     	;# 
  1076  0116                     	;# 
  1077  0117                     	;# 
  1078  0118                     	;# 
  1079  0119                     	;# 
  1080  011A                     	;# 
  1081  011B                     	;# 
  1082  011D                     	;# 
  1083  011E                     	;# 
  1084  018C                     	;# 
  1085  018D                     	;# 
  1086  0191                     	;# 
  1087  0191                     	;# 
  1088  0192                     	;# 
  1089  0193                     	;# 
  1090  0193                     	;# 
  1091  0193                     	;# 
  1092  0194                     	;# 
  1093  0195                     	;# 
  1094  0196                     	;# 
  1095  0199                     	;# 
  1096  019A                     	;# 
  1097  019B                     	;# 
  1098  019B                     	;# 
  1099  019B                     	;# 
  1100  019B                     	;# 
  1101  019C                     	;# 
  1102  019C                     	;# 
  1103  019D                     	;# 
  1104  019E                     	;# 
  1105  019F                     	;# 
  1106  020C                     	;# 
  1107  020D                     	;# 
  1108  0211                     	;# 
  1109  0211                     	;# 
  1110  0212                     	;# 
  1111  0212                     	;# 
  1112  0213                     	;# 
  1113  0213                     	;# 
  1114  0214                     	;# 
  1115  0214                     	;# 
  1116  0215                     	;# 
  1117  0215                     	;# 
  1118  0215                     	;# 
  1119  0216                     	;# 
  1120  0216                     	;# 
  1121  0217                     	;# 
  1122  0217                     	;# 
  1123  0219                     	;# 
  1124  021A                     	;# 
  1125  021B                     	;# 
  1126  021C                     	;# 
  1127  021D                     	;# 
  1128  021E                     	;# 
  1129  021F                     	;# 
  1130  0291                     	;# 
  1131  0291                     	;# 
  1132  0292                     	;# 
  1133  0293                     	;# 
  1134  0294                     	;# 
  1135  0295                     	;# 
  1136  0295                     	;# 
  1137  0296                     	;# 
  1138  0298                     	;# 
  1139  0298                     	;# 
  1140  0299                     	;# 
  1141  029A                     	;# 
  1142  029B                     	;# 
  1143  029C                     	;# 
  1144  029C                     	;# 
  1145  029D                     	;# 
  1146  029E                     	;# 
  1147  029E                     	;# 
  1148  0311                     	;# 
  1149  0311                     	;# 
  1150  0312                     	;# 
  1151  0313                     	;# 
  1152  0318                     	;# 
  1153  0318                     	;# 
  1154  0319                     	;# 
  1155  031A                     	;# 
  1156  0394                     	;# 
  1157  0395                     	;# 
  1158  0396                     	;# 
  1159  039A                     	;# 
  1160  039C                     	;# 
  1161  039D                     	;# 
  1162  039E                     	;# 
  1163  039F                     	;# 
  1164  0415                     	;# 
  1165  0416                     	;# 
  1166  0417                     	;# 
  1167  041C                     	;# 
  1168  041D                     	;# 
  1169  041E                     	;# 
  1170  0FE4                     	;# 
  1171  0FE5                     	;# 
  1172  0FE6                     	;# 
  1173  0FE7                     	;# 
  1174  0FE8                     	;# 
  1175  0FE9                     	;# 
  1176  0FEA                     	;# 
  1177  0FEB                     	;# 
  1178  0FED                     	;# 
  1179  0FEE                     	;# 
  1180  0FEF                     	;# 
  1181  0000                     	;# 
  1182  0001                     	;# 
  1183  0002                     	;# 
  1184  0003                     	;# 
  1185  0004                     	;# 
  1186  0005                     	;# 
  1187  0006                     	;# 
  1188  0007                     	;# 
  1189  0008                     	;# 
  1190  0009                     	;# 
  1191  000A                     	;# 
  1192  000B                     	;# 
  1193  000C                     	;# 
  1194  000D                     	;# 
  1195  0011                     	;# 
  1196  0012                     	;# 
  1197  0013                     	;# 
  1198  0014                     	;# 
  1199  0015                     	;# 
  1200  0016                     	;# 
  1201  0016                     	;# 
  1202  0017                     	;# 
  1203  0018                     	;# 
  1204  0019                     	;# 
  1205  001A                     	;# 
  1206  001B                     	;# 
  1207  001C                     	;# 
  1208  001E                     	;# 
  1209  001F                     	;# 
  1210  008C                     	;# 
  1211  008D                     	;# 
  1212  0091                     	;# 
  1213  0092                     	;# 
  1214  0093                     	;# 
  1215  0094                     	;# 
  1216  0095                     	;# 
  1217  0096                     	;# 
  1218  0097                     	;# 
  1219  0098                     	;# 
  1220  0099                     	;# 
  1221  009A                     	;# 
  1222  009B                     	;# 
  1223  009B                     	;# 
  1224  009C                     	;# 
  1225  009D                     	;# 
  1226  009E                     	;# 
  1227  010C                     	;# 
  1228  010D                     	;# 
  1229  0111                     	;# 
  1230  0112                     	;# 
  1231  0113                     	;# 
  1232  0114                     	;# 
  1233  0115                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0118                     	;# 
  1237  0119                     	;# 
  1238  011A                     	;# 
  1239  011B                     	;# 
  1240  011D                     	;# 
  1241  011E                     	;# 
  1242  018C                     	;# 
  1243  018D                     	;# 
  1244  0191                     	;# 
  1245  0191                     	;# 
  1246  0192                     	;# 
  1247  0193                     	;# 
  1248  0193                     	;# 
  1249  0193                     	;# 
  1250  0194                     	;# 
  1251  0195                     	;# 
  1252  0196                     	;# 
  1253  0199                     	;# 
  1254  019A                     	;# 
  1255  019B                     	;# 
  1256  019B                     	;# 
  1257  019B                     	;# 
  1258  019B                     	;# 
  1259  019C                     	;# 
  1260  019C                     	;# 
  1261  019D                     	;# 
  1262  019E                     	;# 
  1263  019F                     	;# 
  1264  020C                     	;# 
  1265  020D                     	;# 
  1266  0211                     	;# 
  1267  0211                     	;# 
  1268  0212                     	;# 
  1269  0212                     	;# 
  1270  0213                     	;# 
  1271  0213                     	;# 
  1272  0214                     	;# 
  1273  0214                     	;# 
  1274  0215                     	;# 
  1275  0215                     	;# 
  1276  0215                     	;# 
  1277  0216                     	;# 
  1278  0216                     	;# 
  1279  0217                     	;# 
  1280  0217                     	;# 
  1281  0219                     	;# 
  1282  021A                     	;# 
  1283  021B                     	;# 
  1284  021C                     	;# 
  1285  021D                     	;# 
  1286  021E                     	;# 
  1287  021F                     	;# 
  1288  0291                     	;# 
  1289  0291                     	;# 
  1290  0292                     	;# 
  1291  0293                     	;# 
  1292  0294                     	;# 
  1293  0295                     	;# 
  1294  0295                     	;# 
  1295  0296                     	;# 
  1296  0298                     	;# 
  1297  0298                     	;# 
  1298  0299                     	;# 
  1299  029A                     	;# 
  1300  029B                     	;# 
  1301  029C                     	;# 
  1302  029C                     	;# 
  1303  029D                     	;# 
  1304  029E                     	;# 
  1305  029E                     	;# 
  1306  0311                     	;# 
  1307  0311                     	;# 
  1308  0312                     	;# 
  1309  0313                     	;# 
  1310  0318                     	;# 
  1311  0318                     	;# 
  1312  0319                     	;# 
  1313  031A                     	;# 
  1314  0394                     	;# 
  1315  0395                     	;# 
  1316  0396                     	;# 
  1317  039A                     	;# 
  1318  039C                     	;# 
  1319  039D                     	;# 
  1320  039E                     	;# 
  1321  039F                     	;# 
  1322  0415                     	;# 
  1323  0416                     	;# 
  1324  0417                     	;# 
  1325  041C                     	;# 
  1326  041D                     	;# 
  1327  041E                     	;# 
  1328  0FE4                     	;# 
  1329  0FE5                     	;# 
  1330  0FE6                     	;# 
  1331  0FE7                     	;# 
  1332  0FE8                     	;# 
  1333  0FE9                     	;# 
  1334  0FEA                     	;# 
  1335  0FEB                     	;# 
  1336  0FED                     	;# 
  1337  0FEE                     	;# 
  1338  0FEF                     	;# 
  1339                           
  1340 ;; Function _readILCurrentADCRaw is unused but had its address taken
  1341  000D                     _PORTB	set	13
  1342  000C                     _PORTA	set	12
  1343  001C                     _T2CONbits	set	28
  1344  001B                     _PR2	set	27
  1345  0011                     _PIR1bits	set	17
  1346  000B                     _INTCONbits	set	11
  1347  009B                     _ADRESL	set	155
  1348  009C                     _ADRESH	set	156
  1349  009D                     _ADCON0bits	set	157
  1350  008D                     _TRISB	set	141
  1351  008C                     _TRISA	set	140
  1352  009E                     _ADCON1	set	158
  1353  009D                     _ADCON0	set	157
  1354  0095                     _OPTION_REG	set	149
  1355  0095                     _OPTION_REGbits	set	149
  1356  0091                     _PIE1bits	set	145
  1357  0099                     _OSCCONbits	set	153
  1358  010D                     _LATB	set	269
  1359  010C                     _LATA	set	268
  1360  011D                     _APFCON0bits	set	285
  1361  018D                     _ANSELB	set	397
  1362  018C                     _ANSELA	set	396
  1363  0293                     _CCP1CONbits	set	659
  1364  0296                     _PSTR1CONbits	set	662
  1365  0291                     _CCPR1L	set	657
  1366  0293                     _CCP1CON	set	659
  1367                           
  1368                           	psect	stringtext1
  1369  069E                     __pstringtext1:
  1370  069E                     STR_1:
  1371  069E  3428               	retlw	40	;'('
  1372  069F  3428               	retlw	40	;'('
  1373  06A0  3449               	retlw	73	;'I'
  1374  06A1  344E               	retlw	78	;'N'
  1375  06A2  3454               	retlw	84	;'T'
  1376  06A3  3443               	retlw	67	;'C'
  1377  06A4  344F               	retlw	79	;'O'
  1378  06A5  344E               	retlw	78	;'N'
  1379  06A6  3429               	retlw	41	;')'
  1380  06A7  3426               	retlw	38	;'&'
  1381  06A8  3430               	retlw	48	;'0'
  1382  06A9  3437               	retlw	55	;'7'
  1383  06AA  3446               	retlw	70	;'F'
  1384  06AB  3468               	retlw	104	;'h'
  1385  06AC  3429               	retlw	41	;')'
  1386  06AD  342C               	retlw	44	;','
  1387  06AE  3432               	retlw	50	;'2'
  1388  06AF  3400               	retlw	0
  1389                           
  1390                           	psect	stringtext2
  1391  06B0                     __pstringtext2:
  1392  06B0                     STR_3:
  1393  06B0  3428               	retlw	40	;'('
  1394  06B1  3428               	retlw	40	;'('
  1395  06B2  3450               	retlw	80	;'P'
  1396  06B3  3449               	retlw	73	;'I'
  1397  06B4  3452               	retlw	82	;'R'
  1398  06B5  3431               	retlw	49	;'1'
  1399  06B6  3429               	retlw	41	;')'
  1400  06B7  3426               	retlw	38	;'&'
  1401  06B8  3430               	retlw	48	;'0'
  1402  06B9  3437               	retlw	55	;'7'
  1403  06BA  3446               	retlw	70	;'F'
  1404  06BB  3468               	retlw	104	;'h'
  1405  06BC  3429               	retlw	41	;')'
  1406  06BD  342C               	retlw	44	;','
  1407  06BE  3432               	retlw	50	;'2'
  1408  06BF  3400               	retlw	0
  1409                           
  1410                           	psect	stringtext3
  1411  0000                     __pstringtext3:
  1412  06B0                     
  1413                           	psect	cinit
  1414  0074                     start_initialization:	
  1415                           ; #config settings
  1416                           
  1417  0074                     __initialization:
  1418                           
  1419                           ; Clear objects allocated to BANK0
  1420  0074  303D               	movlw	low __pbssBANK0
  1421  0075  0084               	movwf	4
  1422  0076  3000               	movlw	high __pbssBANK0
  1423  0077  0085               	movwf	5
  1424  0078  3018               	movlw	24
  1425  0079  3186  26D1  3180   	fcall	clear_ram0
  1426                           
  1427                           ; Clear objects allocated to BANK1
  1428  007C  30A0               	movlw	low __pbssBANK1
  1429  007D  0084               	movwf	4
  1430  007E  3000               	movlw	high __pbssBANK1
  1431  007F  0085               	movwf	5
  1432  0080  3040               	movlw	64
  1433  0081  3186  26D1  3180   	fcall	clear_ram0
  1434                           
  1435                           ; Clear objects allocated to BANK2
  1436  0084  3020               	movlw	low __pbssBANK2
  1437  0085  0084               	movwf	4
  1438  0086  3001               	movlw	high __pbssBANK2
  1439  0087  0085               	movwf	5
  1440  0088  3040               	movlw	64
  1441  0089  3186  26D1  3180   	fcall	clear_ram0
  1442  008C                     end_of_initialization:	
  1443                           ;End of C runtime variable initialization code
  1444                           
  1445  008C                     __end_of__initialization:
  1446  008C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1447  008D  0020               	movlb	0
  1448  008E  3186  2E4F         	ljmp	_main	;jump to C main() function
  1449                           
  1450                           	psect	bssBANK0
  1451  003D                     __pbssBANK0:
  1452  003D                     _clockFrequency:
  1453  003D                     	ds	4
  1454  0041                     _filteredDutyPot:
  1455  0041                     	ds	2
  1456  0043                     _filteredFreqPot:
  1457  0043                     	ds	2
  1458  0045                     _filteredIL:
  1459  0045                     	ds	2
  1460  0047                     _filteredIDS:
  1461  0047                     	ds	2
  1462  0049                     _latestIL1:
  1463  0049                     	ds	2
  1464  004B                     _prevDuty:
  1465  004B                     	ds	2
  1466  004D                     _setDuty:
  1467  004D                     	ds	2
  1468  004F                     _emergencyStop:
  1469  004F                     	ds	1
  1470  0050                     _timerSlotQuarter:
  1471  0050                     	ds	1
  1472  0051                     _timerSlotHalf:
  1473  0051                     	ds	1
  1474  0052                     _potSetCount:
  1475  0052                     	ds	1
  1476  0053                     _prevPeriod:
  1477  0053                     	ds	1
  1478  0054                     _setPeriod:
  1479  0054                     	ds	1
  1480                           
  1481                           	psect	bssBANK1
  1482  00A0                     __pbssBANK1:
  1483  00A0                     _currentILFIFO:
  1484  00A0                     	ds	32
  1485  00C0                     _currentIDSFIFO:
  1486  00C0                     	ds	32
  1487                           
  1488                           	psect	bssBANK2
  1489  0120                     __pbssBANK2:
  1490  0120                     _dutyPotFIFO:
  1491  0120                     	ds	32
  1492  0140                     _freqPotFIFO:
  1493  0140                     	ds	32
  1494                           
  1495                           	psect	clrtext
  1496  06D1                     clear_ram0:	
  1497                           ;	Called with FSR0 containing the base address, and
  1498                           ;	WREG with the size to clear
  1499                           
  1500  06D1  0064               	clrwdt	;clear the watchdog before getting into this loop
  1501  06D2                     clrloop0:
  1502  06D2  0180               	clrf	0	;clear RAM location pointed to by FSR
  1503  06D3  3101               	addfsr 0,1
  1504  06D4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1505  06D5  2ED2               	goto	clrloop0	;have we reached the end yet?
  1506  06D6  3400               	retlw	0	;all done for this memory range, return
  1507                           
  1508                           	psect	cstackCOMMON
  1509  0070                     __pcstackCOMMON:
  1510  0070                     ?_currentTripRead:
  1511  0070                     ?_setPWMDutyandPeriod:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_runPotScaling:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_setupInternalOscillator:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_setupPWM:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_setupTimer0Interrupt:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ?_initialiseADCModule:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_initialiseCurrentSensors:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_initialisePotentiometers:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_Tick980Hz:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_initialiseADCPin:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_readGPIO:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ??_readGPIO:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?i1_writeGPIO:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_readADCRaw:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?___wmul:	
  1554                           ; 2 bytes @ 0x0
  1555                           
  1556  0070                     ?___lmul:	
  1557                           ; 2 bytes @ 0x0
  1558                           
  1559  0070                     i1writeGPIO@writeValue:	
  1560                           ; 4 bytes @ 0x0
  1561                           
  1562  0070                     setPWMDutyandPeriod@dutyCycle:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ___wmul@multiplier:	
  1566                           ; 2 bytes @ 0x0
  1567                           
  1568  0070                     ___lmul@multiplier:	
  1569                           ; 2 bytes @ 0x0
  1570                           
  1571                           
  1572                           ; 4 bytes @ 0x0
  1573  0070                     	ds	1
  1574  0071                     ??i1_writeGPIO:
  1575                           
  1576                           ; 1 bytes @ 0x1
  1577  0071                     	ds	1
  1578  0072                     ??_readADCRaw:
  1579  0072                     setPWMDutyandPeriod@period:	
  1580                           ; 1 bytes @ 0x2
  1581                           
  1582  0072                     ___wmul@multiplicand:	
  1583                           ; 1 bytes @ 0x2
  1584                           
  1585                           
  1586                           ; 2 bytes @ 0x2
  1587  0072                     	ds	1
  1588  0073                     ??_setPWMDutyandPeriod:
  1589  0073                     readGPIO@portType:	
  1590                           ; 1 bytes @ 0x3
  1591                           
  1592  0073                     i1writeGPIO@portType:	
  1593                           ; 1 bytes @ 0x3
  1594                           
  1595                           
  1596                           ; 1 bytes @ 0x3
  1597  0073                     	ds	1
  1598  0074                     ??___wmul:
  1599  0074                     readGPIO@gpioNumber:	
  1600                           ; 1 bytes @ 0x4
  1601                           
  1602  0074                     i1writeGPIO@gpioNumber:	
  1603                           ; 1 bytes @ 0x4
  1604                           
  1605  0074                     readADCRaw@returnValue:	
  1606                           ; 1 bytes @ 0x4
  1607                           
  1608  0074                     ___wmul@product:	
  1609                           ; 2 bytes @ 0x4
  1610                           
  1611  0074                     ___lmul@multiplicand:	
  1612                           ; 2 bytes @ 0x4
  1613                           
  1614                           
  1615                           ; 4 bytes @ 0x4
  1616  0074                     	ds	1
  1617  0075                     readGPIO@portNumber:
  1618  0075                     i1writeGPIO@portNumber:	
  1619                           ; 1 bytes @ 0x5
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x5
  1623  0075                     	ds	1
  1624  0076                     ??_currentTripRead:
  1625  0076                     ?___lldiv:	
  1626                           ; 1 bytes @ 0x6
  1627                           
  1628  0076                     readADCRaw@channel:	
  1629                           ; 4 bytes @ 0x6
  1630                           
  1631  0076                     _currentTripRead$739:	
  1632                           ; 1 bytes @ 0x6
  1633                           
  1634  0076                     ___lldiv@divisor:	
  1635                           ; 1 bytes @ 0x6
  1636                           
  1637                           
  1638                           ; 4 bytes @ 0x6
  1639  0076                     	ds	1
  1640  0077                     readADCRaw@gpioValid:
  1641                           
  1642                           ; 1 bytes @ 0x7
  1643  0077                     	ds	1
  1644  0078                     ??___lmul:
  1645  0078                     readADCRaw@i:	
  1646                           ; 1 bytes @ 0x8
  1647                           
  1648  0078                     ___lmul@product:	
  1649                           ; 1 bytes @ 0x8
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0x8
  1653  0078                     	ds	1
  1654  0079                     readADCRaw@i_614:
  1655                           
  1656                           ; 1 bytes @ 0x9
  1657  0079                     	ds	1
  1658  007A                     readADCRaw@gpioNumber:
  1659  007A                     ___lldiv@dividend:	
  1660                           ; 1 bytes @ 0xA
  1661                           
  1662                           
  1663                           ; 4 bytes @ 0xA
  1664  007A                     	ds	1
  1665  007B                     ?_readFilteredDutyPot:
  1666  007B                     ?_readFilteredFreqPot:	
  1667                           ; 2 bytes @ 0xB
  1668                           
  1669                           
  1670                           ; 2 bytes @ 0xB
  1671  007B                     	ds	3
  1672                           
  1673                           	psect	cstackBANK0
  1674  0020                     __pcstackBANK0:
  1675  0020                     ??_readFilteredDutyPot:
  1676  0020                     ??_readFilteredFreqPot:	
  1677                           ; 1 bytes @ 0x0
  1678                           
  1679  0020                     ??___lldiv:	
  1680                           ; 1 bytes @ 0x0
  1681                           
  1682                           
  1683                           ; 1 bytes @ 0x0
  1684  0020                     	ds	1
  1685  0021                     ___lldiv@quotient:
  1686                           
  1687                           ; 4 bytes @ 0x1
  1688  0021                     	ds	3
  1689  0024                     readFilteredDutyPot@sumOfSamples:
  1690  0024                     readFilteredFreqPot@sumOfSamples:	
  1691                           ; 4 bytes @ 0x4
  1692                           
  1693                           
  1694                           ; 4 bytes @ 0x4
  1695  0024                     	ds	1
  1696  0025                     ___lldiv@counter:
  1697                           
  1698                           ; 1 bytes @ 0x5
  1699  0025                     	ds	1
  1700  0026                     ??_runPotScaling:
  1701                           
  1702                           ; 1 bytes @ 0x6
  1703  0026                     	ds	2
  1704  0028                     readFilteredDutyPot@i_696:
  1705  0028                     readFilteredFreqPot@i_700:	
  1706                           ; 1 bytes @ 0x8
  1707                           
  1708                           
  1709                           ; 1 bytes @ 0x8
  1710  0028                     	ds	1
  1711  0029                     readFilteredDutyPot@i:
  1712  0029                     readFilteredFreqPot@i:	
  1713                           ; 1 bytes @ 0x9
  1714                           
  1715                           
  1716                           ; 1 bytes @ 0x9
  1717  0029                     	ds	5
  1718  002E                     runPotScaling@maxDuty:
  1719                           
  1720                           ; 2 bytes @ 0xE
  1721  002E                     	ds	2
  1722  0030                     runPotScaling@minDuty:
  1723                           
  1724                           ; 2 bytes @ 0x10
  1725  0030                     	ds	2
  1726  0032                     ??_Tick980Hz:
  1727                           
  1728                           ; 1 bytes @ 0x12
  1729  0032                     	ds	1
  1730  0033                     ?_writeGPIO:
  1731  0033                     ??_setupInternalOscillator:	
  1732                           ; 1 bytes @ 0x13
  1733                           
  1734  0033                     ??_setupTimer0Interrupt:	
  1735                           ; 1 bytes @ 0x13
  1736                           
  1737  0033                     ??_initialiseADCModule:	
  1738                           ; 1 bytes @ 0x13
  1739                           
  1740  0033                     ?_initialiseGPIO:	
  1741                           ; 1 bytes @ 0x13
  1742                           
  1743  0033                     ??_initialiseADCPin:	
  1744                           ; 1 bytes @ 0x13
  1745                           
  1746  0033                     initialiseGPIO@direction:	
  1747                           ; 1 bytes @ 0x13
  1748                           
  1749  0033                     writeGPIO@writeValue:	
  1750                           ; 1 bytes @ 0x13
  1751                           
  1752                           
  1753                           ; 1 bytes @ 0x13
  1754  0033                     	ds	1
  1755  0034                     ??_writeGPIO:
  1756  0034                     ??_initialiseGPIO:	
  1757                           ; 1 bytes @ 0x14
  1758                           
  1759                           
  1760                           ; 1 bytes @ 0x14
  1761  0034                     	ds	1
  1762  0035                     setupInternalOscillator@selectedFreq:
  1763  0035                     initialiseADCPin@gpioValid:	
  1764                           ; 1 bytes @ 0x15
  1765                           
  1766                           
  1767                           ; 1 bytes @ 0x15
  1768  0035                     	ds	1
  1769  0036                     initialiseADCPin@portType:
  1770  0036                     initialiseGPIO@portType:	
  1771                           ; 1 bytes @ 0x16
  1772                           
  1773  0036                     writeGPIO@portType:	
  1774                           ; 1 bytes @ 0x16
  1775                           
  1776                           
  1777                           ; 1 bytes @ 0x16
  1778  0036                     	ds	1
  1779  0037                     initialiseADCPin@portNumber:
  1780  0037                     initialiseGPIO@gpioNumber:	
  1781                           ; 1 bytes @ 0x17
  1782                           
  1783  0037                     writeGPIO@gpioNumber:	
  1784                           ; 1 bytes @ 0x17
  1785                           
  1786                           
  1787                           ; 1 bytes @ 0x17
  1788  0037                     	ds	1
  1789  0038                     initialiseADCPin@gpioNumber:
  1790  0038                     initialiseGPIO@portNumber:	
  1791                           ; 1 bytes @ 0x18
  1792                           
  1793  0038                     writeGPIO@portNumber:	
  1794                           ; 1 bytes @ 0x18
  1795                           
  1796                           
  1797                           ; 1 bytes @ 0x18
  1798  0038                     	ds	1
  1799  0039                     ??_setupPWM:
  1800  0039                     ??_initialiseCurrentSensors:	
  1801                           ; 1 bytes @ 0x19
  1802                           
  1803  0039                     ??_initialisePotentiometers:	
  1804                           ; 1 bytes @ 0x19
  1805                           
  1806  0039                     ?_main:	
  1807                           ; 1 bytes @ 0x19
  1808                           
  1809  0039                     main@argc:	
  1810                           ; 2 bytes @ 0x19
  1811                           
  1812                           
  1813                           ; 2 bytes @ 0x19
  1814  0039                     	ds	2
  1815  003B                     main@argv:
  1816                           
  1817                           ; 2 bytes @ 0x1B
  1818  003B                     	ds	2
  1819  003D                     ??_main:
  1820                           
  1821                           	psect	maintext
  1822  064F                     __pmaintext:	
  1823                           ; 1 bytes @ 0x1D
  1824 ;;
  1825 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1826 ;;
  1827 ;; *************** function _main *****************
  1828 ;; Defined at:
  1829 ;;		line 103 in file "main.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  argc            2   25[BANK0 ] int 
  1832 ;;  argv            2   27[BANK0 ] PTR PTR unsigned char 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;		None
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2   25[BANK0 ] int 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : B1F/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1844 ;;      Params:         0       4       0       0       0       0
  1845 ;;      Locals:         0       0       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0       0
  1847 ;;      Totals:         0       4       0       0       0       0
  1848 ;;Total ram usage:        4 bytes
  1849 ;; Hardware stack levels required when called: 5
  1850 ;; This function calls:
  1851 ;;		_initialiseADCModule
  1852 ;;		_initialiseCurrentSensors
  1853 ;;		_initialiseGPIO
  1854 ;;		_initialisePotentiometers
  1855 ;;		_setupInternalOscillator
  1856 ;;		_setupPWM
  1857 ;;		_setupTimer0Interrupt
  1858 ;; This function is called by:
  1859 ;;		Startup code after reset
  1860 ;; This function uses a non-reentrant model
  1861 ;;
  1862                           
  1863  064F                     _main:	
  1864                           ;psect for function _main
  1865                           
  1866  064F                     l2070:	
  1867                           ;incstack = 0
  1868                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1869                           
  1870                           
  1871                           ;main.c: 105:     setupInternalOscillator(freq32M);
  1872  064F  300A               	movlw	10
  1873  0650  3181  2173  3186   	fcall	_setupInternalOscillator
  1874  0653                     l2072:
  1875                           
  1876                           ;main.c: 107:     setupPWM();
  1877  0653  3186  266B  3186   	fcall	_setupPWM
  1878  0656                     l2074:
  1879                           
  1880                           ;main.c: 108:     setupTimer0Interrupt();
  1881  0656  3186  26C9  3186   	fcall	_setupTimer0Interrupt
  1882  0659                     l2076:
  1883                           
  1884                           ;main.c: 109:     initialiseADCModule();
  1885  0659  3186  26D7  3186   	fcall	_initialiseADCModule
  1886  065C                     l2078:
  1887                           
  1888                           ;main.c: 110:     initialiseCurrentSensors();
  1889  065C  3186  260D  3186   	fcall	_initialiseCurrentSensors
  1890  065F                     l2080:
  1891                           
  1892                           ;main.c: 111:     initialisePotentiometers();
  1893  065F  3186  26C0  3186   	fcall	_initialisePotentiometers
  1894  0662                     l2082:
  1895                           
  1896                           ;main.c: 112:     initialiseGPIO(pinRB4, 0);
  1897  0662  0020               	movlb	0	; select bank0
  1898  0663  01B3               	clrf	initialiseGPIO@direction
  1899  0664  300C               	movlw	12
  1900  0665  3182  224E  3186   	fcall	_initialiseGPIO
  1901  0668                     l88:	
  1902                           ;main.c: 114:     while(1){
  1903                           
  1904  0668                     l89:	
  1905                           ;main.c: 116:     }
  1906                           
  1907  0668  2E68               	goto	l88
  1908  0669  3180  2872         	ljmp	start
  1909  066B                     __end_of_main:
  1910                           
  1911                           	psect	text1
  1912  06C9                     __ptext1:	
  1913 ;; *************** function _setupTimer0Interrupt *****************
  1914 ;; Defined at:
  1915 ;;		line 17 in file "Timer0.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;		None
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1929 ;;      Params:         0       0       0       0       0       0
  1930 ;;      Locals:         0       0       0       0       0       0
  1931 ;;      Temps:          0       0       0       0       0       0
  1932 ;;      Totals:         0       0       0       0       0       0
  1933 ;;Total ram usage:        0 bytes
  1934 ;; Hardware stack levels used: 1
  1935 ;; Hardware stack levels required when called: 3
  1936 ;; This function calls:
  1937 ;;		Nothing
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943  06C9                     _setupTimer0Interrupt:	
  1944                           ;psect for function _setupTimer0Interrupt
  1945                           
  1946  06C9                     l1998:	
  1947                           ;incstack = 0
  1948                           ; Regs used in _setupTimer0Interrupt: [wreg]
  1949                           
  1950                           
  1951                           ;Timer0.c: 19:     INTCONbits.GIE = 1;
  1952  06C9  178B               	bsf	11,7	;volatile
  1953                           
  1954                           ;Timer0.c: 20:     INTCONbits.TMR0IE = 1;
  1955  06CA  168B               	bsf	11,5	;volatile
  1956                           
  1957                           ;Timer0.c: 21:     OPTION_REGbits.TMR0CS = 0;
  1958  06CB  0021               	movlb	1	; select bank1
  1959  06CC  1295               	bcf	21,5	;volatile
  1960                           
  1961                           ;Timer0.c: 22:     OPTION_REGbits.PSA = 0;
  1962  06CD  1195               	bcf	21,3	;volatile
  1963  06CE                     l2000:
  1964                           
  1965                           ;Timer0.c: 23:     OPTION_REG = 0b100;
  1966  06CE  3004               	movlw	4
  1967  06CF  0095               	movwf	21	;volatile
  1968  06D0                     l165:
  1969  06D0  0008               	return
  1970  06D1                     __end_of_setupTimer0Interrupt:
  1971                           
  1972                           	psect	text2
  1973  066B                     __ptext2:	
  1974 ;; *************** function _setupPWM *****************
  1975 ;; Defined at:
  1976 ;;		line 16 in file "PWM.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;		None
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      void 
  1983 ;; Registers used:
  1984 ;;		wreg, status,2, status,0, pclath, cstack
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  1990 ;;      Params:         0       0       0       0       0       0
  1991 ;;      Locals:         0       0       0       0       0       0
  1992 ;;      Temps:          0       0       0       0       0       0
  1993 ;;      Totals:         0       0       0       0       0       0
  1994 ;;Total ram usage:        0 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 4
  1997 ;; This function calls:
  1998 ;;		_initialiseGPIO
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004  066B                     _setupPWM:	
  2005                           ;psect for function _setupPWM
  2006                           
  2007  066B                     l1976:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _setupPWM: [wreg+status,2+status,0+pclath+cstack]
  2010                           
  2011                           
  2012                           ;PWM.c: 18:     CCP1CON = 0b00001100;
  2013  066B  300C               	movlw	12
  2014  066C  0025               	movlb	5	; select bank5
  2015  066D  0093               	movwf	19	;volatile
  2016  066E                     l1978:
  2017                           
  2018                           ;PWM.c: 20:     PR2 = 0;
  2019  066E  0020               	movlb	0	; select bank0
  2020  066F  019B               	clrf	27	;volatile
  2021  0670                     l1980:
  2022                           
  2023                           ;PWM.c: 21:     CCPR1L = 0;
  2024  0670  0025               	movlb	5	; select bank5
  2025  0671  0191               	clrf	17	;volatile
  2026  0672                     l1982:
  2027                           
  2028                           ;PWM.c: 23:     APFCON0bits.P1DSEL = 1;
  2029  0672  0022               	movlb	2	; select bank2
  2030  0673  151D               	bsf	29,2	;volatile
  2031  0674                     l1984:
  2032                           
  2033                           ;PWM.c: 24:     PSTR1CONbits.STR1D = 1;
  2034  0674  0025               	movlb	5	; select bank5
  2035  0675  1596               	bsf	22,3	;volatile
  2036  0676                     l1986:
  2037                           
  2038                           ;PWM.c: 26:     T2CONbits.T2CKPS = 0b00;
  2039  0676  30FC               	movlw	-4
  2040  0677  0020               	movlb	0	; select bank0
  2041  0678  059C               	andwf	28,f	;volatile
  2042  0679                     l1988:
  2043                           
  2044                           ;PWM.c: 27:     PIE1bits.TMR2IE = 0;
  2045  0679  0021               	movlb	1	; select bank1
  2046  067A  1091               	bcf	17,1	;volatile
  2047  067B                     l1990:
  2048                           
  2049                           ;PWM.c: 28:     T2CONbits.TMR2ON = 1;
  2050  067B  0020               	movlb	0	; select bank0
  2051  067C  151C               	bsf	28,2	;volatile
  2052  067D                     l1992:
  2053                           
  2054                           ;PWM.c: 30:     INTCONbits.PEIE = 1;
  2055  067D  170B               	bsf	11,6	;volatile
  2056  067E                     l1994:
  2057                           
  2058                           ;PWM.c: 31:     PIE1bits.CCP1IE = 1;
  2059  067E  0021               	movlb	1	; select bank1
  2060  067F  1511               	bsf	17,2	;volatile
  2061  0680                     l1996:
  2062                           
  2063                           ;PWM.c: 35:     initialiseGPIO(pinRA6, 0);
  2064  0680  0020               	movlb	0	; select bank0
  2065  0681  01B3               	clrf	initialiseGPIO@direction
  2066  0682  3006               	movlw	6
  2067  0683  3182  224E  3186   	fcall	_initialiseGPIO
  2068  0686                     l140:
  2069  0686  0008               	return
  2070  0687                     __end_of_setupPWM:
  2071                           
  2072                           	psect	text3
  2073  0173                     __ptext3:	
  2074 ;; *************** function _setupInternalOscillator *****************
  2075 ;; Defined at:
  2076 ;;		line 125 in file "main.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  selectedFreq    1    wreg     const enum E2830
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  selectedFreq    1   21[BANK0 ] const enum E2830
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  1    wreg      void 
  2083 ;; Registers used:
  2084 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2090 ;;      Params:         0       0       0       0       0       0
  2091 ;;      Locals:         0       1       0       0       0       0
  2092 ;;      Temps:          0       2       0       0       0       0
  2093 ;;      Totals:         0       3       0       0       0       0
  2094 ;;Total ram usage:        3 bytes
  2095 ;; Hardware stack levels used: 1
  2096 ;; Hardware stack levels required when called: 3
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_main
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104  0173                     _setupInternalOscillator:	
  2105                           ;psect for function _setupInternalOscillator
  2106                           
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in _setupInternalOscillator: [wreg-fsr0h+status,2+status,0]
  2110                           ;setupInternalOscillator@selectedFreq stored from wreg
  2111  0173  0020               	movlb	0	; select bank0
  2112  0174  00B5               	movwf	setupInternalOscillator@selectedFreq
  2113  0175                     l1898:
  2114                           
  2115                           ;main.c: 129:     switch(selectedFreq){
  2116  0175  2A22               	goto	l1968
  2117  0176                     l1900:
  2118  0176  3087               	movlw	-121
  2119  0177  0021               	movlb	1	; select bank1
  2120  0178  0599               	andwf	25,f	;volatile
  2121  0179                     l1902:
  2122  0179  1399               	bcf	25,7	;volatile
  2123  017A                     l1904:
  2124  017A  3000               	movlw	0
  2125  017B  0020               	movlb	0	; select bank0
  2126  017C  00C0               	movwf	_clockFrequency+3
  2127  017D  3000               	movlw	0
  2128  017E  00BF               	movwf	_clockFrequency+2
  2129  017F  3079               	movlw	121
  2130  0180  00BE               	movwf	_clockFrequency+1
  2131  0181  3018               	movlw	24
  2132  0182  00BD               	movwf	_clockFrequency
  2133  0183  2A4D               	goto	l107
  2134  0184                     l1906:
  2135  0184  0021               	movlb	1	; select bank1
  2136  0185  0819               	movf	25,w	;volatile
  2137  0186  3987               	andlw	-121
  2138  0187  3820               	iorlw	32
  2139  0188  0099               	movwf	25	;volatile
  2140  0189                     l1908:
  2141  0189  1399               	bcf	25,7	;volatile
  2142  018A                     l1910:
  2143  018A  3000               	movlw	0
  2144  018B  0020               	movlb	0	; select bank0
  2145  018C  00C0               	movwf	_clockFrequency+3
  2146  018D  3000               	movlw	0
  2147  018E  00BF               	movwf	_clockFrequency+2
  2148  018F  30F4               	movlw	244
  2149  0190  00BE               	movwf	_clockFrequency+1
  2150  0191  3024               	movlw	36
  2151  0192  00BD               	movwf	_clockFrequency
  2152  0193  2A4D               	goto	l107
  2153  0194                     l1912:
  2154  0194  0021               	movlb	1	; select bank1
  2155  0195  0819               	movf	25,w	;volatile
  2156  0196  3987               	andlw	-121
  2157  0197  3828               	iorlw	40
  2158  0198  0099               	movwf	25	;volatile
  2159  0199                     l1914:
  2160  0199  1399               	bcf	25,7	;volatile
  2161  019A                     l1916:
  2162  019A  3000               	movlw	0
  2163  019B  0020               	movlb	0	; select bank0
  2164  019C  00C0               	movwf	_clockFrequency+3
  2165  019D  3001               	movlw	1
  2166  019E  00BF               	movwf	_clockFrequency+2
  2167  019F  30E8               	movlw	232
  2168  01A0  00BE               	movwf	_clockFrequency+1
  2169  01A1  3048               	movlw	72
  2170  01A2  00BD               	movwf	_clockFrequency
  2171  01A3  2A4D               	goto	l107
  2172  01A4                     l1918:
  2173  01A4  0021               	movlb	1	; select bank1
  2174  01A5  0819               	movf	25,w	;volatile
  2175  01A6  3987               	andlw	-121
  2176  01A7  3830               	iorlw	48
  2177  01A8  0099               	movwf	25	;volatile
  2178  01A9                     l1920:
  2179  01A9  1399               	bcf	25,7	;volatile
  2180  01AA                     l1922:
  2181  01AA  3000               	movlw	0
  2182  01AB  0020               	movlb	0	; select bank0
  2183  01AC  00C0               	movwf	_clockFrequency+3
  2184  01AD  3003               	movlw	3
  2185  01AE  00BF               	movwf	_clockFrequency+2
  2186  01AF  30D0               	movlw	208
  2187  01B0  00BE               	movwf	_clockFrequency+1
  2188  01B1  3090               	movlw	144
  2189  01B2  00BD               	movwf	_clockFrequency
  2190  01B3  2A4D               	goto	l107
  2191  01B4                     l1924:
  2192  01B4  0021               	movlb	1	; select bank1
  2193  01B5  0819               	movf	25,w	;volatile
  2194  01B6  3987               	andlw	-121
  2195  01B7  3838               	iorlw	56
  2196  01B8  0099               	movwf	25	;volatile
  2197  01B9                     l1926:
  2198  01B9  1399               	bcf	25,7	;volatile
  2199  01BA                     l1928:
  2200  01BA  3000               	movlw	0
  2201  01BB  0020               	movlb	0	; select bank0
  2202  01BC  00C0               	movwf	_clockFrequency+3
  2203  01BD  3007               	movlw	7
  2204  01BE  00BF               	movwf	_clockFrequency+2
  2205  01BF  30A1               	movlw	161
  2206  01C0  00BE               	movwf	_clockFrequency+1
  2207  01C1  3020               	movlw	32
  2208  01C2  00BD               	movwf	_clockFrequency
  2209  01C3  2A4D               	goto	l107
  2210  01C4                     l1930:
  2211  01C4  0021               	movlb	1	; select bank1
  2212  01C5  0819               	movf	25,w	;volatile
  2213  01C6  3987               	andlw	-121
  2214  01C7  3858               	iorlw	88
  2215  01C8  0099               	movwf	25	;volatile
  2216  01C9                     l1932:
  2217  01C9  1399               	bcf	25,7	;volatile
  2218  01CA                     l1934:
  2219  01CA  3000               	movlw	0
  2220  01CB  0020               	movlb	0	; select bank0
  2221  01CC  00C0               	movwf	_clockFrequency+3
  2222  01CD  300F               	movlw	15
  2223  01CE  00BF               	movwf	_clockFrequency+2
  2224  01CF  3042               	movlw	66
  2225  01D0  00BE               	movwf	_clockFrequency+1
  2226  01D1  3040               	movlw	64
  2227  01D2  00BD               	movwf	_clockFrequency
  2228  01D3  2A4D               	goto	l107
  2229  01D4                     l1936:
  2230  01D4  0021               	movlb	1	; select bank1
  2231  01D5  0819               	movf	25,w	;volatile
  2232  01D6  3987               	andlw	-121
  2233  01D7  3860               	iorlw	96
  2234  01D8  0099               	movwf	25	;volatile
  2235  01D9                     l1938:
  2236  01D9  1399               	bcf	25,7	;volatile
  2237  01DA                     l1940:
  2238  01DA  3000               	movlw	0
  2239  01DB  0020               	movlb	0	; select bank0
  2240  01DC  00C0               	movwf	_clockFrequency+3
  2241  01DD  301E               	movlw	30
  2242  01DE  00BF               	movwf	_clockFrequency+2
  2243  01DF  3084               	movlw	132
  2244  01E0  00BE               	movwf	_clockFrequency+1
  2245  01E1  3080               	movlw	128
  2246  01E2  00BD               	movwf	_clockFrequency
  2247  01E3  2A4D               	goto	l107
  2248  01E4                     l1942:
  2249  01E4  0021               	movlb	1	; select bank1
  2250  01E5  0819               	movf	25,w	;volatile
  2251  01E6  3987               	andlw	-121
  2252  01E7  3868               	iorlw	104
  2253  01E8  0099               	movwf	25	;volatile
  2254  01E9                     l1944:
  2255  01E9  1399               	bcf	25,7	;volatile
  2256  01EA                     l1946:
  2257  01EA  3000               	movlw	0
  2258  01EB  0020               	movlb	0	; select bank0
  2259  01EC  00C0               	movwf	_clockFrequency+3
  2260  01ED  303D               	movlw	61
  2261  01EE  00BF               	movwf	_clockFrequency+2
  2262  01EF  3009               	movlw	9
  2263  01F0  00BE               	movwf	_clockFrequency+1
  2264  01F1  3000               	movlw	0
  2265  01F2  00BD               	movwf	_clockFrequency
  2266  01F3  2A4D               	goto	l107
  2267  01F4                     l1948:
  2268  01F4  0021               	movlb	1	; select bank1
  2269  01F5  0819               	movf	25,w	;volatile
  2270  01F6  3987               	andlw	-121
  2271  01F7  3870               	iorlw	112
  2272  01F8  0099               	movwf	25	;volatile
  2273  01F9                     l1950:
  2274  01F9  1399               	bcf	25,7	;volatile
  2275  01FA                     l1952:
  2276  01FA  3000               	movlw	0
  2277  01FB  0020               	movlb	0	; select bank0
  2278  01FC  00C0               	movwf	_clockFrequency+3
  2279  01FD  307A               	movlw	122
  2280  01FE  00BF               	movwf	_clockFrequency+2
  2281  01FF  3012               	movlw	18
  2282  0200  00BE               	movwf	_clockFrequency+1
  2283  0201  3000               	movlw	0
  2284  0202  00BD               	movwf	_clockFrequency
  2285  0203  2A4D               	goto	l107
  2286  0204                     l1954:
  2287  0204  3078               	movlw	120
  2288  0205  0021               	movlb	1	; select bank1
  2289  0206  0499               	iorwf	25,f	;volatile
  2290  0207                     l1956:
  2291  0207  1399               	bcf	25,7	;volatile
  2292  0208                     l1958:
  2293  0208  3000               	movlw	0
  2294  0209  0020               	movlb	0	; select bank0
  2295  020A  00C0               	movwf	_clockFrequency+3
  2296  020B  30F4               	movlw	244
  2297  020C  00BF               	movwf	_clockFrequency+2
  2298  020D  3024               	movlw	36
  2299  020E  00BE               	movwf	_clockFrequency+1
  2300  020F  3000               	movlw	0
  2301  0210  00BD               	movwf	_clockFrequency
  2302  0211  2A4D               	goto	l107
  2303  0212                     l1960:
  2304  0212  0021               	movlb	1	; select bank1
  2305  0213  0819               	movf	25,w	;volatile
  2306  0214  3987               	andlw	-121
  2307  0215  3870               	iorlw	112
  2308  0216  0099               	movwf	25	;volatile
  2309  0217                     l1962:
  2310  0217  1799               	bsf	25,7	;volatile
  2311  0218                     l1964:
  2312  0218  3001               	movlw	1
  2313  0219  0020               	movlb	0	; select bank0
  2314  021A  00C0               	movwf	_clockFrequency+3
  2315  021B  30E8               	movlw	232
  2316  021C  00BF               	movwf	_clockFrequency+2
  2317  021D  3048               	movlw	72
  2318  021E  00BE               	movwf	_clockFrequency+1
  2319  021F  3000               	movlw	0
  2320  0220  00BD               	movwf	_clockFrequency
  2321  0221  2A4D               	goto	l107
  2322  0222                     l1968:
  2323  0222  0835               	movf	setupInternalOscillator@selectedFreq,w
  2324  0223  00B3               	movwf	??_setupInternalOscillator
  2325  0224  01B4               	clrf	??_setupInternalOscillator+1
  2326                           
  2327                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2328                           ; Switch size 1, requested type "simple"
  2329                           ; Number of cases is 1, Range of values is 0 to 0
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte            4     3 (average)
  2333                           ; direct_byte            8     6 (fixed)
  2334                           ; jumptable            260     6 (fixed)
  2335                           ;	Chosen strategy is simple_byte
  2336  0225  0834               	movf	??_setupInternalOscillator+1,w
  2337  0226  3A00               	xorlw	0	; case 0
  2338  0227  1903               	skipnz
  2339  0228  2A2A               	goto	l2170
  2340  0229  2A4D               	goto	l107
  2341  022A                     l2170:
  2342                           
  2343                           ; Switch size 1, requested type "simple"
  2344                           ; Number of cases is 11, Range of values is 0 to 10
  2345                           ; switch strategies available:
  2346                           ; Name         Instructions Cycles
  2347                           ; direct_byte           28     6 (fixed)
  2348                           ; simple_byte           34    18 (average)
  2349                           ; jumptable            260     6 (fixed)
  2350                           ;	Chosen strategy is simple_byte
  2351  022A  0833               	movf	??_setupInternalOscillator,w
  2352  022B  3A00               	xorlw	0	; case 0
  2353  022C  1903               	skipnz
  2354  022D  2976               	goto	l1900
  2355  022E  3A01               	xorlw	1	; case 1
  2356  022F  1903               	skipnz
  2357  0230  2984               	goto	l1906
  2358  0231  3A03               	xorlw	3	; case 2
  2359  0232  1903               	skipnz
  2360  0233  2994               	goto	l1912
  2361  0234  3A01               	xorlw	1	; case 3
  2362  0235  1903               	skipnz
  2363  0236  29A4               	goto	l1918
  2364  0237  3A07               	xorlw	7	; case 4
  2365  0238  1903               	skipnz
  2366  0239  29B4               	goto	l1924
  2367  023A  3A01               	xorlw	1	; case 5
  2368  023B  1903               	skipnz
  2369  023C  29C4               	goto	l1930
  2370  023D  3A03               	xorlw	3	; case 6
  2371  023E  1903               	skipnz
  2372  023F  29D4               	goto	l1936
  2373  0240  3A01               	xorlw	1	; case 7
  2374  0241  1903               	skipnz
  2375  0242  29E4               	goto	l1942
  2376  0243  3A0F               	xorlw	15	; case 8
  2377  0244  1903               	skipnz
  2378  0245  29F4               	goto	l1948
  2379  0246  3A01               	xorlw	1	; case 9
  2380  0247  1903               	skipnz
  2381  0248  2A04               	goto	l1954
  2382  0249  3A03               	xorlw	3	; case 10
  2383  024A  1903               	skipnz
  2384  024B  2A12               	goto	l1960
  2385  024C  2A4D               	goto	l107
  2386  024D                     l107:
  2387  024D  0008               	return
  2388  024E                     __end_of_setupInternalOscillator:
  2389                           
  2390                           	psect	text4
  2391  06C0                     __ptext4:	
  2392 ;; *************** function _initialisePotentiometers *****************
  2393 ;; Defined at:
  2394 ;;		line 15 in file "Potentiometer.c"
  2395 ;; Parameters:    Size  Location     Type
  2396 ;;		None
  2397 ;; Auto vars:     Size  Location     Type
  2398 ;;		None
  2399 ;; Return value:  Size  Location     Type
  2400 ;;                  1    wreg      void 
  2401 ;; Registers used:
  2402 ;;		wreg, status,2, status,0, pclath, cstack
  2403 ;; Tracked objects:
  2404 ;;		On entry : 0/0
  2405 ;;		On exit  : 0/0
  2406 ;;		Unchanged: 0/0
  2407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2408 ;;      Params:         0       0       0       0       0       0
  2409 ;;      Locals:         0       0       0       0       0       0
  2410 ;;      Temps:          0       0       0       0       0       0
  2411 ;;      Totals:         0       0       0       0       0       0
  2412 ;;Total ram usage:        0 bytes
  2413 ;; Hardware stack levels used: 1
  2414 ;; Hardware stack levels required when called: 4
  2415 ;; This function calls:
  2416 ;;		_initialiseADCPin
  2417 ;; This function is called by:
  2418 ;;		_main
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422  06C0                     _initialisePotentiometers:	
  2423                           ;psect for function _initialisePotentiometers
  2424                           
  2425  06C0                     l2006:	
  2426                           ;incstack = 0
  2427                           ; Regs used in _initialisePotentiometers: [wreg+status,2+status,0+pclath+cstack]
  2428                           
  2429                           
  2430                           ;Potentiometer.c: 16:     initialiseADCPin(pinRB1);
  2431  06C0  3009               	movlw	9
  2432  06C1  3182  22CA  3186   	fcall	_initialiseADCPin
  2433                           
  2434                           ;Potentiometer.c: 17:     initialiseADCPin(pinRB2);
  2435  06C4  300A               	movlw	10
  2436  06C5  3182  22CA  3186   	fcall	_initialiseADCPin
  2437  06C8                     l317:
  2438  06C8  0008               	return
  2439  06C9                     __end_of_initialisePotentiometers:
  2440                           
  2441                           	psect	text5
  2442  060D                     __ptext5:	
  2443 ;; *************** function _initialiseCurrentSensors *****************
  2444 ;; Defined at:
  2445 ;;		line 17 in file "CurrentSensor.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;		None
  2448 ;; Auto vars:     Size  Location     Type
  2449 ;;		None
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      void 
  2452 ;; Registers used:
  2453 ;;		wreg, status,2, status,0, pclath, cstack
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2459 ;;      Params:         0       0       0       0       0       0
  2460 ;;      Locals:         0       0       0       0       0       0
  2461 ;;      Temps:          0       0       0       0       0       0
  2462 ;;      Totals:         0       0       0       0       0       0
  2463 ;;Total ram usage:        0 bytes
  2464 ;; Hardware stack levels used: 1
  2465 ;; Hardware stack levels required when called: 4
  2466 ;; This function calls:
  2467 ;;		_initialiseADCPin
  2468 ;;		_initialiseGPIO
  2469 ;;		_writeGPIO
  2470 ;; This function is called by:
  2471 ;;		_main
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475  060D                     _initialiseCurrentSensors:	
  2476                           ;psect for function _initialiseCurrentSensors
  2477                           
  2478  060D                     l2004:	
  2479                           ;incstack = 0
  2480                           ; Regs used in _initialiseCurrentSensors: [wreg+status,2+status,0+pclath+cstack]
  2481                           
  2482                           
  2483                           ;CurrentSensor.c: 18:     initialiseGPIO(pinRA3, 1);
  2484  060D  0020               	movlb	0	; select bank0
  2485  060E  01B3               	clrf	initialiseGPIO@direction
  2486  060F  0AB3               	incf	initialiseGPIO@direction,f
  2487  0610  3003               	movlw	3
  2488  0611  3182  224E  3186   	fcall	_initialiseGPIO
  2489                           
  2490                           ;CurrentSensor.c: 19:     initialiseGPIO(pinRA1, 1);
  2491  0614  0020               	movlb	0	; select bank0
  2492  0615  01B3               	clrf	initialiseGPIO@direction
  2493  0616  0AB3               	incf	initialiseGPIO@direction,f
  2494  0617  3001               	movlw	1
  2495  0618  3182  224E  3186   	fcall	_initialiseGPIO
  2496                           
  2497                           ;CurrentSensor.c: 20:     initialiseADCPin(pinRA0);
  2498  061B  3000               	movlw	0
  2499  061C  3182  22CA  3186   	fcall	_initialiseADCPin
  2500                           
  2501                           ;CurrentSensor.c: 21:     initialiseADCPin(pinRA3);
  2502  061F  3003               	movlw	3
  2503  0620  3182  22CA  3186   	fcall	_initialiseADCPin
  2504                           
  2505                           ;CurrentSensor.c: 22:     initialiseGPIO(pinRB3, 0);
  2506  0623  0020               	movlb	0	; select bank0
  2507  0624  01B3               	clrf	initialiseGPIO@direction
  2508  0625  300B               	movlw	11
  2509  0626  3182  224E  3186   	fcall	_initialiseGPIO
  2510                           
  2511                           ;CurrentSensor.c: 23:     writeGPIO(9, 0);
  2512  0629  0020               	movlb	0	; select bank0
  2513  062A  01B3               	clrf	writeGPIO@writeValue
  2514  062B  3009               	movlw	9
  2515  062C  3183  2396  3186   	fcall	_writeGPIO
  2516  062F                     l370:
  2517  062F  0008               	return
  2518  0630                     __end_of_initialiseCurrentSensors:
  2519                           
  2520                           	psect	text6
  2521  0396                     __ptext6:	
  2522 ;; *************** function _writeGPIO *****************
  2523 ;; Defined at:
  2524 ;;		line 52 in file "GPIO.c"
  2525 ;; Parameters:    Size  Location     Type
  2526 ;;  gpioNumber      1    wreg     const enum E2798
  2527 ;;  writeValue      1   19[BANK0 ] unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2530 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2531 ;;  portType        1   22[BANK0 ] unsigned char 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  1    wreg      void 
  2534 ;; Registers used:
  2535 ;;		wreg, status,2, status,0
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2541 ;;      Params:         0       1       0       0       0       0
  2542 ;;      Locals:         0       3       0       0       0       0
  2543 ;;      Temps:          0       2       0       0       0       0
  2544 ;;      Totals:         0       6       0       0       0       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 3
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_initialiseCurrentSensors
  2552 ;;		_currentTripReset
  2553 ;; This function uses a non-reentrant model
  2554 ;;
  2555                           
  2556  0396                     _writeGPIO:	
  2557                           ;psect for function _writeGPIO
  2558                           
  2559                           
  2560                           ;incstack = 0
  2561                           ; Regs used in _writeGPIO: [wreg+status,2+status,0]
  2562                           ;writeGPIO@gpioNumber stored from wreg
  2563  0396  0020               	movlb	0	; select bank0
  2564  0397  00B7               	movwf	writeGPIO@gpioNumber
  2565  0398                     l1596:
  2566                           
  2567                           ;GPIO.c: 54:     uint8_t portType = 0;
  2568  0398  01B6               	clrf	writeGPIO@portType
  2569  0399                     l1598:
  2570                           
  2571                           ;GPIO.c: 55:     if(gpioNumber > 7){
  2572  0399  3008               	movlw	8
  2573  039A  0237               	subwf	writeGPIO@gpioNumber,w
  2574  039B  1C03               	skipc
  2575  039C  2B9E               	goto	u1011
  2576  039D  2B9F               	goto	u1010
  2577  039E                     u1011:
  2578  039E  2BA7               	goto	l1604
  2579  039F                     u1010:
  2580  039F                     l1600:
  2581                           
  2582                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  2583  039F  0837               	movf	writeGPIO@gpioNumber,w
  2584  03A0  3EF8               	addlw	248
  2585  03A1  00B4               	movwf	??_writeGPIO
  2586  03A2  0834               	movf	??_writeGPIO,w
  2587  03A3  00B8               	movwf	writeGPIO@portNumber
  2588  03A4                     l1602:
  2589                           
  2590                           ;GPIO.c: 57:         portType = 1;
  2591  03A4  01B6               	clrf	writeGPIO@portType
  2592  03A5  0AB6               	incf	writeGPIO@portType,f
  2593                           
  2594                           ;GPIO.c: 58:     }
  2595  03A6  2BAC               	goto	l1608
  2596  03A7                     l1604:
  2597                           
  2598                           ;GPIO.c: 60:         portNumber = gpioNumber;
  2599  03A7  0837               	movf	writeGPIO@gpioNumber,w
  2600  03A8  00B4               	movwf	??_writeGPIO
  2601  03A9  0834               	movf	??_writeGPIO,w
  2602  03AA  00B8               	movwf	writeGPIO@portNumber
  2603  03AB                     l1606:
  2604                           
  2605                           ;GPIO.c: 61:         portType = 0;
  2606  03AB  01B6               	clrf	writeGPIO@portType
  2607  03AC                     l1608:
  2608                           
  2609                           ;GPIO.c: 64:     if(portType == 0){
  2610  03AC  0836               	movf	writeGPIO@portType,w
  2611  03AD  1D03               	btfss	3,2
  2612  03AE  2BB0               	goto	u1021
  2613  03AF  2BB1               	goto	u1020
  2614  03B0                     u1021:
  2615  03B0  2BD1               	goto	l1616
  2616  03B1                     u1020:
  2617  03B1                     l1610:
  2618                           
  2619                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  2620  03B1  0833               	movf	writeGPIO@writeValue,w
  2621  03B2  1903               	btfsc	3,2
  2622  03B3  2BB5               	goto	u1031
  2623  03B4  2BB6               	goto	u1030
  2624  03B5                     u1031:
  2625  03B5  2BC3               	goto	l1614
  2626  03B6                     u1030:
  2627  03B6                     l1612:
  2628  03B6  3001               	movlw	1
  2629  03B7  00B4               	movwf	??_writeGPIO
  2630  03B8  0A38               	incf	writeGPIO@portNumber,w
  2631  03B9  2BBB               	goto	u1044
  2632  03BA                     u1045:
  2633  03BA  35B4               	lslf	??_writeGPIO,f
  2634  03BB                     u1044:
  2635  03BB  0B89               	decfsz	9,f
  2636  03BC  2BBA               	goto	u1045
  2637  03BD  0834               	movf	??_writeGPIO,w
  2638  03BE  00B5               	movwf	??_writeGPIO+1
  2639  03BF  0835               	movf	??_writeGPIO+1,w
  2640  03C0  0022               	movlb	2	; select bank2
  2641  03C1  048C               	iorwf	12,f	;volatile
  2642  03C2  2BF5               	goto	l280
  2643  03C3                     l1614:
  2644  03C3  3001               	movlw	1
  2645  03C4  00B4               	movwf	??_writeGPIO
  2646  03C5  0A38               	incf	writeGPIO@portNumber,w
  2647  03C6  2BC8               	goto	u1054
  2648  03C7                     u1055:
  2649  03C7  35B4               	lslf	??_writeGPIO,f
  2650  03C8                     u1054:
  2651  03C8  0B89               	decfsz	9,f
  2652  03C9  2BC7               	goto	u1055
  2653  03CA  0834               	movf	??_writeGPIO,w
  2654  03CB  3AFF               	xorlw	255
  2655  03CC  00B5               	movwf	??_writeGPIO+1
  2656  03CD  0835               	movf	??_writeGPIO+1,w
  2657  03CE  0022               	movlb	2	; select bank2
  2658  03CF  058C               	andwf	12,f	;volatile
  2659  03D0  2BF5               	goto	l280
  2660  03D1                     l1616:
  2661  03D1  0336               	decf	writeGPIO@portType,w
  2662  03D2  1D03               	btfss	3,2
  2663  03D3  2BD5               	goto	u1061
  2664  03D4  2BD6               	goto	u1060
  2665  03D5                     u1061:
  2666  03D5  2BF5               	goto	l280
  2667  03D6                     u1060:
  2668  03D6                     l1618:
  2669                           
  2670                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  2671  03D6  0833               	movf	writeGPIO@writeValue,w
  2672  03D7  1903               	btfsc	3,2
  2673  03D8  2BDA               	goto	u1071
  2674  03D9  2BDB               	goto	u1070
  2675  03DA                     u1071:
  2676  03DA  2BE8               	goto	l1622
  2677  03DB                     u1070:
  2678  03DB                     l1620:
  2679  03DB  3001               	movlw	1
  2680  03DC  00B4               	movwf	??_writeGPIO
  2681  03DD  0A38               	incf	writeGPIO@portNumber,w
  2682  03DE  2BE0               	goto	u1084
  2683  03DF                     u1085:
  2684  03DF  35B4               	lslf	??_writeGPIO,f
  2685  03E0                     u1084:
  2686  03E0  0B89               	decfsz	9,f
  2687  03E1  2BDF               	goto	u1085
  2688  03E2  0834               	movf	??_writeGPIO,w
  2689  03E3  00B5               	movwf	??_writeGPIO+1
  2690  03E4  0835               	movf	??_writeGPIO+1,w
  2691  03E5  0022               	movlb	2	; select bank2
  2692  03E6  048D               	iorwf	13,f	;volatile
  2693  03E7  2BF5               	goto	l280
  2694  03E8                     l1622:
  2695  03E8  3001               	movlw	1
  2696  03E9  00B4               	movwf	??_writeGPIO
  2697  03EA  0A38               	incf	writeGPIO@portNumber,w
  2698  03EB  2BED               	goto	u1094
  2699  03EC                     u1095:
  2700  03EC  35B4               	lslf	??_writeGPIO,f
  2701  03ED                     u1094:
  2702  03ED  0B89               	decfsz	9,f
  2703  03EE  2BEC               	goto	u1095
  2704  03EF  0834               	movf	??_writeGPIO,w
  2705  03F0  3AFF               	xorlw	255
  2706  03F1  00B5               	movwf	??_writeGPIO+1
  2707  03F2  0835               	movf	??_writeGPIO+1,w
  2708  03F3  0022               	movlb	2	; select bank2
  2709  03F4  058D               	andwf	13,f	;volatile
  2710  03F5                     l280:
  2711  03F5  0008               	return
  2712  03F6                     __end_of_writeGPIO:
  2713                           
  2714                           	psect	text7
  2715  024E                     __ptext7:	
  2716 ;; *************** function _initialiseGPIO *****************
  2717 ;; Defined at:
  2718 ;;		line 18 in file "GPIO.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  gpioNumber      1    wreg     const enum E2798
  2721 ;;  direction       1   19[BANK0 ] unsigned char 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;  gpioNumber      1   23[BANK0 ] const enum E2798
  2724 ;;  portNumber      1   24[BANK0 ] unsigned char 
  2725 ;;  portType        1   22[BANK0 ] unsigned char 
  2726 ;; Return value:  Size  Location     Type
  2727 ;;                  1    wreg      void 
  2728 ;; Registers used:
  2729 ;;		wreg, status,2, status,0
  2730 ;; Tracked objects:
  2731 ;;		On entry : 0/0
  2732 ;;		On exit  : 0/0
  2733 ;;		Unchanged: 0/0
  2734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2735 ;;      Params:         0       1       0       0       0       0
  2736 ;;      Locals:         0       3       0       0       0       0
  2737 ;;      Temps:          0       2       0       0       0       0
  2738 ;;      Totals:         0       6       0       0       0       0
  2739 ;;Total ram usage:        6 bytes
  2740 ;; Hardware stack levels used: 1
  2741 ;; Hardware stack levels required when called: 3
  2742 ;; This function calls:
  2743 ;;		Nothing
  2744 ;; This function is called by:
  2745 ;;		_main
  2746 ;;		_setupPWM
  2747 ;;		_initialiseCurrentSensors
  2748 ;; This function uses a non-reentrant model
  2749 ;;
  2750                           
  2751  024E                     _initialiseGPIO:	
  2752                           ;psect for function _initialiseGPIO
  2753                           
  2754                           
  2755                           ;incstack = 0
  2756                           ; Regs used in _initialiseGPIO: [wreg+status,2+status,0]
  2757                           ;initialiseGPIO@gpioNumber stored from wreg
  2758  024E  0020               	movlb	0	; select bank0
  2759  024F  00B7               	movwf	initialiseGPIO@gpioNumber
  2760  0250                     l1624:
  2761                           
  2762                           ;GPIO.c: 20:     uint8_t portType = 0;
  2763  0250  01B6               	clrf	initialiseGPIO@portType
  2764  0251                     l1626:
  2765                           
  2766                           ;GPIO.c: 21:     if(gpioNumber > 7){
  2767  0251  3008               	movlw	8
  2768  0252  0237               	subwf	initialiseGPIO@gpioNumber,w
  2769  0253  1C03               	skipc
  2770  0254  2A56               	goto	u1101
  2771  0255  2A57               	goto	u1100
  2772  0256                     u1101:
  2773  0256  2A5F               	goto	l1632
  2774  0257                     u1100:
  2775  0257                     l1628:
  2776                           
  2777                           ;GPIO.c: 22:         portNumber = gpioNumber - 8;
  2778  0257  0837               	movf	initialiseGPIO@gpioNumber,w
  2779  0258  3EF8               	addlw	248
  2780  0259  00B4               	movwf	??_initialiseGPIO
  2781  025A  0834               	movf	??_initialiseGPIO,w
  2782  025B  00B8               	movwf	initialiseGPIO@portNumber
  2783  025C                     l1630:
  2784                           
  2785                           ;GPIO.c: 23:         portType = 1;
  2786  025C  01B6               	clrf	initialiseGPIO@portType
  2787  025D  0AB6               	incf	initialiseGPIO@portType,f
  2788                           
  2789                           ;GPIO.c: 24:     }
  2790  025E  2A64               	goto	l1636
  2791  025F                     l1632:
  2792                           
  2793                           ;GPIO.c: 26:         portNumber = gpioNumber;
  2794  025F  0837               	movf	initialiseGPIO@gpioNumber,w
  2795  0260  00B4               	movwf	??_initialiseGPIO
  2796  0261  0834               	movf	??_initialiseGPIO,w
  2797  0262  00B8               	movwf	initialiseGPIO@portNumber
  2798  0263                     l1634:
  2799                           
  2800                           ;GPIO.c: 27:         portType = 0;
  2801  0263  01B6               	clrf	initialiseGPIO@portType
  2802  0264                     l1636:
  2803                           
  2804                           ;GPIO.c: 30:     if(portType == 0){
  2805  0264  0836               	movf	initialiseGPIO@portType,w
  2806  0265  1D03               	btfss	3,2
  2807  0266  2A68               	goto	u1111
  2808  0267  2A69               	goto	u1110
  2809  0268                     u1111:
  2810  0268  2A97               	goto	l1644
  2811  0269                     u1110:
  2812  0269                     l1638:
  2813                           
  2814                           ;GPIO.c: 31:         if(direction){
  2815  0269  0833               	movf	initialiseGPIO@direction,w
  2816  026A  1903               	btfsc	3,2
  2817  026B  2A6D               	goto	u1121
  2818  026C  2A6E               	goto	u1120
  2819  026D                     u1121:
  2820  026D  2A89               	goto	l1642
  2821  026E                     u1120:
  2822  026E                     l1640:
  2823                           
  2824                           ;GPIO.c: 32:             TRISA |= (1 << (uint8_t)portNumber);
  2825  026E  3001               	movlw	1
  2826  026F  00B4               	movwf	??_initialiseGPIO
  2827  0270  0A38               	incf	initialiseGPIO@portNumber,w
  2828  0271  2A73               	goto	u1134
  2829  0272                     u1135:
  2830  0272  35B4               	lslf	??_initialiseGPIO,f
  2831  0273                     u1134:
  2832  0273  0B89               	decfsz	9,f
  2833  0274  2A72               	goto	u1135
  2834  0275  0834               	movf	??_initialiseGPIO,w
  2835  0276  00B5               	movwf	??_initialiseGPIO+1
  2836  0277  0835               	movf	??_initialiseGPIO+1,w
  2837  0278  0021               	movlb	1	; select bank1
  2838  0279  048C               	iorwf	12,f	;volatile
  2839                           
  2840                           ;GPIO.c: 33:             ANSELA &= ~(1 << (uint8_t)portNumber);
  2841  027A  3001               	movlw	1
  2842  027B  0020               	movlb	0	; select bank0
  2843  027C  00B4               	movwf	??_initialiseGPIO
  2844  027D  0A38               	incf	initialiseGPIO@portNumber,w
  2845  027E  2A80               	goto	u1144
  2846  027F                     u1145:
  2847  027F  35B4               	lslf	??_initialiseGPIO,f
  2848  0280                     u1144:
  2849  0280  0B89               	decfsz	9,f
  2850  0281  2A7F               	goto	u1145
  2851  0282  0834               	movf	??_initialiseGPIO,w
  2852  0283  3AFF               	xorlw	255
  2853  0284  00B5               	movwf	??_initialiseGPIO+1
  2854  0285  0835               	movf	??_initialiseGPIO+1,w
  2855  0286  0023               	movlb	3	; select bank3
  2856  0287  058C               	andwf	12,f	;volatile
  2857                           
  2858                           ;GPIO.c: 34:         }
  2859  0288  2AC9               	goto	l266
  2860  0289                     l1642:
  2861  0289  3001               	movlw	1
  2862  028A  00B4               	movwf	??_initialiseGPIO
  2863  028B  0A38               	incf	initialiseGPIO@portNumber,w
  2864  028C  2A8E               	goto	u1154
  2865  028D                     u1155:
  2866  028D  35B4               	lslf	??_initialiseGPIO,f
  2867  028E                     u1154:
  2868  028E  0B89               	decfsz	9,f
  2869  028F  2A8D               	goto	u1155
  2870  0290  0834               	movf	??_initialiseGPIO,w
  2871  0291  3AFF               	xorlw	255
  2872  0292  00B5               	movwf	??_initialiseGPIO+1
  2873  0293  0835               	movf	??_initialiseGPIO+1,w
  2874  0294  0021               	movlb	1	; select bank1
  2875  0295  058C               	andwf	12,f	;volatile
  2876  0296  2AC9               	goto	l266
  2877  0297                     l1644:
  2878  0297  0336               	decf	initialiseGPIO@portType,w
  2879  0298  1D03               	btfss	3,2
  2880  0299  2A9B               	goto	u1161
  2881  029A  2A9C               	goto	u1160
  2882  029B                     u1161:
  2883  029B  2AC9               	goto	l266
  2884  029C                     u1160:
  2885  029C                     l1646:
  2886                           
  2887                           ;GPIO.c: 38:         if(direction){
  2888  029C  0833               	movf	initialiseGPIO@direction,w
  2889  029D  1903               	btfsc	3,2
  2890  029E  2AA0               	goto	u1171
  2891  029F  2AA1               	goto	u1170
  2892  02A0                     u1171:
  2893  02A0  2ABC               	goto	l1650
  2894  02A1                     u1170:
  2895  02A1                     l1648:
  2896                           
  2897                           ;GPIO.c: 39:             TRISB |= (1 << (uint8_t)portNumber);
  2898  02A1  3001               	movlw	1
  2899  02A2  00B4               	movwf	??_initialiseGPIO
  2900  02A3  0A38               	incf	initialiseGPIO@portNumber,w
  2901  02A4  2AA6               	goto	u1184
  2902  02A5                     u1185:
  2903  02A5  35B4               	lslf	??_initialiseGPIO,f
  2904  02A6                     u1184:
  2905  02A6  0B89               	decfsz	9,f
  2906  02A7  2AA5               	goto	u1185
  2907  02A8  0834               	movf	??_initialiseGPIO,w
  2908  02A9  00B5               	movwf	??_initialiseGPIO+1
  2909  02AA  0835               	movf	??_initialiseGPIO+1,w
  2910  02AB  0021               	movlb	1	; select bank1
  2911  02AC  048D               	iorwf	13,f	;volatile
  2912                           
  2913                           ;GPIO.c: 40:             ANSELB &= ~(1 << (uint8_t)portNumber);
  2914  02AD  3001               	movlw	1
  2915  02AE  0020               	movlb	0	; select bank0
  2916  02AF  00B4               	movwf	??_initialiseGPIO
  2917  02B0  0A38               	incf	initialiseGPIO@portNumber,w
  2918  02B1  2AB3               	goto	u1194
  2919  02B2                     u1195:
  2920  02B2  35B4               	lslf	??_initialiseGPIO,f
  2921  02B3                     u1194:
  2922  02B3  0B89               	decfsz	9,f
  2923  02B4  2AB2               	goto	u1195
  2924  02B5  0834               	movf	??_initialiseGPIO,w
  2925  02B6  3AFF               	xorlw	255
  2926  02B7  00B5               	movwf	??_initialiseGPIO+1
  2927  02B8  0835               	movf	??_initialiseGPIO+1,w
  2928  02B9  0023               	movlb	3	; select bank3
  2929  02BA  058D               	andwf	13,f	;volatile
  2930                           
  2931                           ;GPIO.c: 41:         }
  2932  02BB  2AC9               	goto	l266
  2933  02BC                     l1650:
  2934  02BC  3001               	movlw	1
  2935  02BD  00B4               	movwf	??_initialiseGPIO
  2936  02BE  0A38               	incf	initialiseGPIO@portNumber,w
  2937  02BF  2AC1               	goto	u1204
  2938  02C0                     u1205:
  2939  02C0  35B4               	lslf	??_initialiseGPIO,f
  2940  02C1                     u1204:
  2941  02C1  0B89               	decfsz	9,f
  2942  02C2  2AC0               	goto	u1205
  2943  02C3  0834               	movf	??_initialiseGPIO,w
  2944  02C4  3AFF               	xorlw	255
  2945  02C5  00B5               	movwf	??_initialiseGPIO+1
  2946  02C6  0835               	movf	??_initialiseGPIO+1,w
  2947  02C7  0021               	movlb	1	; select bank1
  2948  02C8  058D               	andwf	13,f	;volatile
  2949  02C9                     l266:
  2950  02C9  0008               	return
  2951  02CA                     __end_of_initialiseGPIO:
  2952                           
  2953                           	psect	text8
  2954  02CA                     __ptext8:	
  2955 ;; *************** function _initialiseADCPin *****************
  2956 ;; Defined at:
  2957 ;;		line 37 in file "ADC.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  gpioNumber      1    wreg     const enum E2798
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;  gpioNumber      1   24[BANK0 ] const enum E2798
  2962 ;;  portNumber      1   23[BANK0 ] unsigned char 
  2963 ;;  portType        1   22[BANK0 ] unsigned char 
  2964 ;;  gpioValid       1   21[BANK0 ] unsigned char 
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, status,2, status,0
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2974 ;;      Params:         0       0       0       0       0       0
  2975 ;;      Locals:         0       4       0       0       0       0
  2976 ;;      Temps:          0       2       0       0       0       0
  2977 ;;      Totals:         0       6       0       0       0       0
  2978 ;;Total ram usage:        6 bytes
  2979 ;; Hardware stack levels used: 1
  2980 ;; Hardware stack levels required when called: 3
  2981 ;; This function calls:
  2982 ;;		Nothing
  2983 ;; This function is called by:
  2984 ;;		_initialisePotentiometers
  2985 ;;		_initialiseCurrentSensors
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989  02CA                     _initialiseADCPin:	
  2990                           ;psect for function _initialiseADCPin
  2991                           
  2992                           
  2993                           ;incstack = 0
  2994                           ; Regs used in _initialiseADCPin: [wreg+status,2+status,0]
  2995                           ;initialiseADCPin@gpioNumber stored from wreg
  2996  02CA  0020               	movlb	0	; select bank0
  2997  02CB  00B8               	movwf	initialiseADCPin@gpioNumber
  2998  02CC                     l1652:
  2999                           
  3000                           ;ADC.c: 39:     uint8_t portNumber = 0;
  3001  02CC  01B7               	clrf	initialiseADCPin@portNumber
  3002                           
  3003                           ;ADC.c: 40:     uint8_t portType = 0;
  3004  02CD  01B6               	clrf	initialiseADCPin@portType
  3005                           
  3006                           ;ADC.c: 41:     uint8_t gpioValid = 0;
  3007  02CE  01B5               	clrf	initialiseADCPin@gpioValid
  3008  02CF                     l1654:
  3009                           
  3010                           ;ADC.c: 43:     if(gpioNumber < 4){
  3011  02CF  3004               	movlw	4
  3012  02D0  0238               	subwf	initialiseADCPin@gpioNumber,w
  3013  02D1  1803               	skipnc
  3014  02D2  2AD4               	goto	u1211
  3015  02D3  2AD5               	goto	u1210
  3016  02D4                     u1211:
  3017  02D4  2ADC               	goto	l1662
  3018  02D5                     u1210:
  3019  02D5                     l1656:
  3020                           
  3021                           ;ADC.c: 44:         portNumber = gpioNumber;
  3022  02D5  0838               	movf	initialiseADCPin@gpioNumber,w
  3023  02D6  00B3               	movwf	??_initialiseADCPin
  3024  02D7  0833               	movf	??_initialiseADCPin,w
  3025  02D8  00B7               	movwf	initialiseADCPin@portNumber
  3026  02D9                     l1658:
  3027                           
  3028                           ;ADC.c: 45:         portType = 0;
  3029  02D9  01B6               	clrf	initialiseADCPin@portType
  3030  02DA                     l1660:
  3031                           
  3032                           ;ADC.c: 46:         gpioValid = 1;
  3033  02DA  01B5               	clrf	initialiseADCPin@gpioValid
  3034  02DB  0AB5               	incf	initialiseADCPin@gpioValid,f
  3035  02DC                     l1662:
  3036                           
  3037                           ;ADC.c: 49:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  3038  02DC  3009               	movlw	9
  3039  02DD  0238               	subwf	initialiseADCPin@gpioNumber,w
  3040  02DE  1C03               	skipc
  3041  02DF  2AE1               	goto	u1221
  3042  02E0  2AE2               	goto	u1220
  3043  02E1                     u1221:
  3044  02E1  2AF1               	goto	l200
  3045  02E2                     u1220:
  3046  02E2                     l1664:
  3047  02E2  3010               	movlw	16
  3048  02E3  0238               	subwf	initialiseADCPin@gpioNumber,w
  3049  02E4  1803               	skipnc
  3050  02E5  2AE7               	goto	u1231
  3051  02E6  2AE8               	goto	u1230
  3052  02E7                     u1231:
  3053  02E7  2AF1               	goto	l200
  3054  02E8                     u1230:
  3055  02E8                     l1666:
  3056                           
  3057                           ;ADC.c: 50:         portNumber = gpioNumber - 8;
  3058  02E8  0838               	movf	initialiseADCPin@gpioNumber,w
  3059  02E9  3EF8               	addlw	248
  3060  02EA  00B3               	movwf	??_initialiseADCPin
  3061  02EB  0833               	movf	??_initialiseADCPin,w
  3062  02EC  00B7               	movwf	initialiseADCPin@portNumber
  3063  02ED                     l1668:
  3064                           
  3065                           ;ADC.c: 51:         portType = 1;
  3066  02ED  01B6               	clrf	initialiseADCPin@portType
  3067  02EE  0AB6               	incf	initialiseADCPin@portType,f
  3068  02EF                     l1670:
  3069                           
  3070                           ;ADC.c: 52:         gpioValid = 1;
  3071  02EF  01B5               	clrf	initialiseADCPin@gpioValid
  3072  02F0  0AB5               	incf	initialiseADCPin@gpioValid,f
  3073  02F1                     l200:	
  3074                           ;ADC.c: 53:     }
  3075                           
  3076                           
  3077                           ;ADC.c: 55:     if(gpioValid){
  3078  02F1  0835               	movf	initialiseADCPin@gpioValid,w
  3079  02F2  1903               	btfsc	3,2
  3080  02F3  2AF5               	goto	u1241
  3081  02F4  2AF6               	goto	u1240
  3082  02F5                     u1241:
  3083  02F5  2B33               	goto	l205
  3084  02F6                     u1240:
  3085  02F6                     l1672:
  3086                           
  3087                           ;ADC.c: 56:         if(portType == 0){
  3088  02F6  0836               	movf	initialiseADCPin@portType,w
  3089  02F7  1D03               	btfss	3,2
  3090  02F8  2AFA               	goto	u1251
  3091  02F9  2AFB               	goto	u1250
  3092  02FA                     u1251:
  3093  02FA  2B15               	goto	l1676
  3094  02FB                     u1250:
  3095  02FB                     l1674:
  3096                           
  3097                           ;ADC.c: 57:             TRISA |= (1 << (uint8_t)portNumber);
  3098  02FB  3001               	movlw	1
  3099  02FC  00B3               	movwf	??_initialiseADCPin
  3100  02FD  0A37               	incf	initialiseADCPin@portNumber,w
  3101  02FE  2B00               	goto	u1264
  3102  02FF                     u1265:
  3103  02FF  35B3               	lslf	??_initialiseADCPin,f
  3104  0300                     u1264:
  3105  0300  0B89               	decfsz	9,f
  3106  0301  2AFF               	goto	u1265
  3107  0302  0833               	movf	??_initialiseADCPin,w
  3108  0303  00B4               	movwf	??_initialiseADCPin+1
  3109  0304  0834               	movf	??_initialiseADCPin+1,w
  3110  0305  0021               	movlb	1	; select bank1
  3111  0306  048C               	iorwf	12,f	;volatile
  3112                           
  3113                           ;ADC.c: 58:             ANSELA |= (1 << (uint8_t)portNumber);
  3114  0307  3001               	movlw	1
  3115  0308  0020               	movlb	0	; select bank0
  3116  0309  00B3               	movwf	??_initialiseADCPin
  3117  030A  0A37               	incf	initialiseADCPin@portNumber,w
  3118  030B  2B0D               	goto	u1274
  3119  030C                     u1275:
  3120  030C  35B3               	lslf	??_initialiseADCPin,f
  3121  030D                     u1274:
  3122  030D  0B89               	decfsz	9,f
  3123  030E  2B0C               	goto	u1275
  3124  030F  0833               	movf	??_initialiseADCPin,w
  3125  0310  00B4               	movwf	??_initialiseADCPin+1
  3126  0311  0834               	movf	??_initialiseADCPin+1,w
  3127  0312  0023               	movlb	3	; select bank3
  3128  0313  048C               	iorwf	12,f	;volatile
  3129                           
  3130                           ;ADC.c: 59:         }
  3131  0314  2B33               	goto	l205
  3132  0315                     l1676:
  3133  0315  0336               	decf	initialiseADCPin@portType,w
  3134  0316  1D03               	btfss	3,2
  3135  0317  2B19               	goto	u1281
  3136  0318  2B1A               	goto	u1280
  3137  0319                     u1281:
  3138  0319  2B33               	goto	l205
  3139  031A                     u1280:
  3140  031A                     l1678:
  3141                           
  3142                           ;ADC.c: 61:             TRISB |= (1 << (uint8_t)portNumber);
  3143  031A  3001               	movlw	1
  3144  031B  00B3               	movwf	??_initialiseADCPin
  3145  031C  0A37               	incf	initialiseADCPin@portNumber,w
  3146  031D  2B1F               	goto	u1294
  3147  031E                     u1295:
  3148  031E  35B3               	lslf	??_initialiseADCPin,f
  3149  031F                     u1294:
  3150  031F  0B89               	decfsz	9,f
  3151  0320  2B1E               	goto	u1295
  3152  0321  0833               	movf	??_initialiseADCPin,w
  3153  0322  00B4               	movwf	??_initialiseADCPin+1
  3154  0323  0834               	movf	??_initialiseADCPin+1,w
  3155  0324  0021               	movlb	1	; select bank1
  3156  0325  048D               	iorwf	13,f	;volatile
  3157                           
  3158                           ;ADC.c: 62:             ANSELB |= (1 << (uint8_t)portNumber);
  3159  0326  3001               	movlw	1
  3160  0327  0020               	movlb	0	; select bank0
  3161  0328  00B3               	movwf	??_initialiseADCPin
  3162  0329  0A37               	incf	initialiseADCPin@portNumber,w
  3163  032A  2B2C               	goto	u1304
  3164  032B                     u1305:
  3165  032B  35B3               	lslf	??_initialiseADCPin,f
  3166  032C                     u1304:
  3167  032C  0B89               	decfsz	9,f
  3168  032D  2B2B               	goto	u1305
  3169  032E  0833               	movf	??_initialiseADCPin,w
  3170  032F  00B4               	movwf	??_initialiseADCPin+1
  3171  0330  0834               	movf	??_initialiseADCPin+1,w
  3172  0331  0023               	movlb	3	; select bank3
  3173  0332  048D               	iorwf	13,f	;volatile
  3174  0333                     l205:
  3175  0333  0008               	return
  3176  0334                     __end_of_initialiseADCPin:
  3177                           
  3178                           	psect	text9
  3179  06D7                     __ptext9:	
  3180 ;; *************** function _initialiseADCModule *****************
  3181 ;; Defined at:
  3182 ;;		line 14 in file "ADC.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;		None
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3196 ;;      Params:         0       0       0       0       0       0
  3197 ;;      Locals:         0       0       0       0       0       0
  3198 ;;      Temps:          0       0       0       0       0       0
  3199 ;;      Totals:         0       0       0       0       0       0
  3200 ;;Total ram usage:        0 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 3
  3203 ;; This function calls:
  3204 ;;		Nothing
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210  06D7                     _initialiseADCModule:	
  3211                           ;psect for function _initialiseADCModule
  3212                           
  3213  06D7                     l2002:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _initialiseADCModule: [wreg]
  3216                           
  3217                           
  3218                           ;ADC.c: 16:     ADCON0 = 0b00000001;
  3219  06D7  3001               	movlw	1
  3220  06D8  0021               	movlb	1	; select bank1
  3221  06D9  009D               	movwf	29	;volatile
  3222                           
  3223                           ;ADC.c: 22:     ADCON1 = 0b10000000;
  3224  06DA  3080               	movlw	128
  3225  06DB  009E               	movwf	30	;volatile
  3226  06DC                     l196:
  3227  06DC  0008               	return
  3228  06DD                     __end_of_initialiseADCModule:
  3229                           
  3230                           	psect	intentry
  3231  0004                     __pintentry:	
  3232 ;; *************** function _Tick980Hz *****************
  3233 ;; Defined at:
  3234 ;;		line 41 in file "main.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3248 ;;      Params:         0       0       0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0
  3250 ;;      Temps:          0       1       0       0       0       0
  3251 ;;      Totals:         0       1       0       0       0       0
  3252 ;;Total ram usage:        1 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; Hardware stack levels required when called: 2
  3255 ;; This function calls:
  3256 ;;		_currentTripRead
  3257 ;;		_readFilteredDutyPot
  3258 ;;		_readFilteredFreqPot
  3259 ;;		_runPotScaling
  3260 ;;		_setPWMDutyandPeriod
  3261 ;;		i1_writeGPIO
  3262 ;; This function is called by:
  3263 ;;		Interrupt level 1
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267  0004                     _Tick980Hz:
  3268                           
  3269                           ;incstack = 0
  3270  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3271                           
  3272                           ; Regs used in _Tick980Hz: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3273  0005  3180               	pagesel	$
  3274  0006                     i1l2036:
  3275                           
  3276                           ;main.c: 52:         if(currentTripRead() < 1){
  3277  0006  3186  2687  3180   	fcall	_currentTripRead
  3278  0009  3A00               	xorlw	0
  3279  000A  1D03               	skipz
  3280  000B  280D               	goto	u183_21
  3281  000C  280E               	goto	u183_20
  3282  000D                     u183_21:
  3283  000D  281A               	goto	i1l2042
  3284  000E                     u183_20:
  3285  000E                     i1l2038:
  3286                           
  3287                           ;main.c: 53:             emergencyStop = 1;
  3288  000E  3001               	movlw	1
  3289  000F  0020               	movlb	0	; select bank0
  3290  0010  00B2               	movwf	??_Tick980Hz
  3291  0011  0832               	movf	??_Tick980Hz,w
  3292  0012  00CF               	movwf	_emergencyStop	;volatile
  3293  0013                     i1l2040:
  3294                           
  3295                           ;main.c: 54:             setPWMDutyandPeriod(0, 0);
  3296  0013  3000               	movlw	0
  3297  0014  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3298  0015  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3299  0016  01F2               	clrf	setPWMDutyandPeriod@period
  3300  0017  3185  25E2  3180   	fcall	_setPWMDutyandPeriod
  3301  001A                     i1l2042:
  3302                           
  3303                           ;main.c: 57:         if(timerSlotHalf == 0){
  3304  001A  0020               	movlb	0	; select bank0
  3305  001B  0851               	movf	_timerSlotHalf,w	;volatile
  3306  001C  1D03               	btfss	3,2
  3307  001D  281F               	goto	u184_21
  3308  001E  2820               	goto	u184_20
  3309  001F                     u184_21:
  3310  001F  2825               	goto	i1l2046
  3311  0020                     u184_20:
  3312  0020                     i1l2044:
  3313                           
  3314                           ;main.c: 59:             writeGPIO(pinRB4, 0);
  3315  0020  01F0               	clrf	i1writeGPIO@writeValue
  3316  0021  300C               	movlw	12
  3317  0022  3183  23F6  3180   	fcall	i1_writeGPIO
  3318  0025                     i1l2046:
  3319                           
  3320                           ;main.c: 61:         if(timerSlotHalf == 1){
  3321  0025  0020               	movlb	0	; select bank0
  3322  0026  0351               	decf	_timerSlotHalf,w	;volatile
  3323  0027  1D03               	btfss	3,2
  3324  0028  282A               	goto	u185_21
  3325  0029  282B               	goto	u185_20
  3326  002A                     u185_21:
  3327  002A  2860               	goto	i1l78
  3328  002B                     u185_20:
  3329  002B                     i1l2048:
  3330                           
  3331                           ;main.c: 65:             if(timerSlotQuarter == 0){
  3332  002B  0850               	movf	_timerSlotQuarter,w	;volatile
  3333  002C  1D03               	btfss	3,2
  3334  002D  282F               	goto	u186_21
  3335  002E  2830               	goto	u186_20
  3336  002F                     u186_21:
  3337  002F  2855               	goto	i1l2062
  3338  0030                     u186_20:
  3339  0030                     i1l2050:
  3340                           
  3341                           ;main.c: 67:                 writeGPIO(pinRB4, 1);
  3342  0030  01F0               	clrf	i1writeGPIO@writeValue
  3343  0031  0AF0               	incf	i1writeGPIO@writeValue,f
  3344  0032  300C               	movlw	12
  3345  0033  3183  23F6  3180   	fcall	i1_writeGPIO
  3346                           
  3347                           ;main.c: 68:                 writeGPIO(9, 1);
  3348  0036  01F0               	clrf	i1writeGPIO@writeValue
  3349  0037  0AF0               	incf	i1writeGPIO@writeValue,f
  3350  0038  3009               	movlw	9
  3351  0039  3183  23F6  3180   	fcall	i1_writeGPIO
  3352  003C                     i1l2052:
  3353                           
  3354                           ;main.c: 70:                 filteredDutyPot = readFilteredDutyPot();
  3355  003C  3185  250B  3180   	fcall	_readFilteredDutyPot
  3356  003F  087C               	movf	?_readFilteredDutyPot+1,w
  3357  0040  0020               	movlb	0	; select bank0
  3358  0041  00C2               	movwf	_filteredDutyPot+1
  3359  0042  087B               	movf	?_readFilteredDutyPot,w
  3360  0043  00C1               	movwf	_filteredDutyPot
  3361  0044                     i1l2054:
  3362                           
  3363                           ;main.c: 71:                 filteredFreqPot = readFilteredFreqPot();
  3364  0044  3184  24B0  3180   	fcall	_readFilteredFreqPot
  3365  0047  087C               	movf	?_readFilteredFreqPot+1,w
  3366  0048  0020               	movlb	0	; select bank0
  3367  0049  00C4               	movwf	_filteredFreqPot+1
  3368  004A  087B               	movf	?_readFilteredFreqPot,w
  3369  004B  00C3               	movwf	_filteredFreqPot
  3370  004C                     i1l2056:
  3371                           
  3372                           ;main.c: 73:                 if(~emergencyStop){
  3373  004C  034F               	decf	_emergencyStop,w	;volatile
  3374  004D  1903               	btfsc	3,2
  3375  004E  2850               	goto	u187_21
  3376  004F  2851               	goto	u187_20
  3377  0050                     u187_21:
  3378  0050  2855               	goto	i1l2060
  3379  0051                     u187_20:
  3380  0051                     i1l2058:
  3381                           
  3382                           ;main.c: 74:                     runPotScaling();
  3383  0051  3180  2090  3180   	fcall	_runPotScaling
  3384  0054  2855               	goto	i1l2062
  3385  0055                     i1l2060:
  3386  0055                     i1l2062:
  3387                           
  3388                           ;main.c: 82:             timerSlotQuarter = ~timerSlotQuarter;
  3389  0055  0020               	movlb	0	; select bank0
  3390  0056  0350               	decf	_timerSlotQuarter,w	;volatile
  3391  0057  1D03               	btfss	3,2
  3392  0058  285A               	goto	u188_21
  3393  0059  285C               	goto	u188_20
  3394  005A                     u188_21:
  3395  005A  3001               	movlw	1
  3396  005B  285D               	goto	u189_20
  3397  005C                     u188_20:
  3398  005C  3000               	movlw	0
  3399  005D                     u189_20:
  3400  005D  00B2               	movwf	??_Tick980Hz
  3401  005E  0832               	movf	??_Tick980Hz,w
  3402  005F  00D0               	movwf	_timerSlotQuarter	;volatile
  3403  0060                     i1l78:	
  3404                           ;main.c: 83:         }
  3405                           
  3406                           
  3407                           ;main.c: 85:         timerSlotHalf = ~timerSlotHalf;
  3408  0060  0351               	decf	_timerSlotHalf,w	;volatile
  3409  0061  1D03               	btfss	3,2
  3410  0062  2864               	goto	u190_21
  3411  0063  2866               	goto	u190_20
  3412  0064                     u190_21:
  3413  0064  3001               	movlw	1
  3414  0065  2867               	goto	u191_20
  3415  0066                     u190_20:
  3416  0066  3000               	movlw	0
  3417  0067                     u191_20:
  3418  0067  00B2               	movwf	??_Tick980Hz
  3419  0068  0832               	movf	??_Tick980Hz,w
  3420  0069  00D1               	movwf	_timerSlotHalf	;volatile
  3421  006A                     i1l2064:
  3422                           
  3423                           ;main.c: 86:         INTCONbits.TMR0IF = 0;
  3424  006A  110B               	bcf	11,2	;volatile
  3425  006B                     i1l2066:
  3426                           
  3427                           ;main.c: 91:         latestIL1 = readILCurrentADCRaw;
  3428  006B  3000               	movlw	0
  3429  006C  00C9               	movwf	_latestIL1	;volatile
  3430  006D  3000               	movlw	0
  3431  006E  00CA               	movwf	_latestIL1+1	;volatile
  3432  006F                     i1l2068:
  3433                           
  3434                           ;main.c: 92:         PIR1bits.CCP1IF = 0;
  3435  006F  1111               	bcf	17,2	;volatile
  3436  0070                     i1l83:
  3437  0070  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3438  0071  0009               	retfie
  3439  0072                     __end_of_Tick980Hz:
  3440                           
  3441                           	psect	text11
  3442  03F6                     __ptext11:	
  3443 ;; *************** function i1_writeGPIO *****************
  3444 ;; Defined at:
  3445 ;;		line 52 in file "GPIO.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  gpioNumber      1    wreg     const enum E2798
  3448 ;;  writeValue      1    0[COMMON] unsigned char 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  gpioNumber      1    4[COMMON] const enum E2798
  3451 ;;  portNumber      1    5[COMMON] unsigned char 
  3452 ;;  portType        1    3[COMMON] unsigned char 
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, status,2, status,0
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/0
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3462 ;;      Params:         1       0       0       0       0       0
  3463 ;;      Locals:         3       0       0       0       0       0
  3464 ;;      Temps:          2       0       0       0       0       0
  3465 ;;      Totals:         6       0       0       0       0       0
  3466 ;;Total ram usage:        6 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; This function calls:
  3469 ;;		Nothing
  3470 ;; This function is called by:
  3471 ;;		_Tick980Hz
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475  03F6                     i1_writeGPIO:	
  3476                           ;psect for function i1_writeGPIO
  3477                           
  3478                           
  3479                           ;incstack = 0
  3480                           ; Regs used in i1_writeGPIO: [wreg+status,2+status,0]
  3481                           ;i1writeGPIO@gpioNumber stored from wreg
  3482  03F6  00F4               	movwf	i1writeGPIO@gpioNumber
  3483  03F7                     i1l2008:
  3484                           
  3485                           ;GPIO.c: 54:     uint8_t portType = 0;
  3486  03F7  01F3               	clrf	i1writeGPIO@portType
  3487  03F8                     i1l2010:
  3488                           
  3489                           ;GPIO.c: 55:     if(gpioNumber > 7){
  3490  03F8  3008               	movlw	8
  3491  03F9  0274               	subwf	i1writeGPIO@gpioNumber,w
  3492  03FA  1C03               	skipc
  3493  03FB  2BFD               	goto	u174_21
  3494  03FC  2BFE               	goto	u174_20
  3495  03FD                     u174_21:
  3496  03FD  2C06               	goto	i1l2016
  3497  03FE                     u174_20:
  3498  03FE                     i1l2012:
  3499                           
  3500                           ;GPIO.c: 56:         portNumber = gpioNumber - 8;
  3501  03FE  0874               	movf	i1writeGPIO@gpioNumber,w
  3502  03FF  3EF8               	addlw	248
  3503  0400  00F1               	movwf	??i1_writeGPIO
  3504  0401  0871               	movf	??i1_writeGPIO,w
  3505  0402  00F5               	movwf	i1writeGPIO@portNumber
  3506  0403                     i1l2014:
  3507                           
  3508                           ;GPIO.c: 57:         portType = 1;
  3509  0403  01F3               	clrf	i1writeGPIO@portType
  3510  0404  0AF3               	incf	i1writeGPIO@portType,f
  3511                           
  3512                           ;GPIO.c: 58:     }
  3513  0405  2C0B               	goto	i1l2020
  3514  0406                     i1l2016:
  3515                           
  3516                           ;GPIO.c: 60:         portNumber = gpioNumber;
  3517  0406  0874               	movf	i1writeGPIO@gpioNumber,w
  3518  0407  00F1               	movwf	??i1_writeGPIO
  3519  0408  0871               	movf	??i1_writeGPIO,w
  3520  0409  00F5               	movwf	i1writeGPIO@portNumber
  3521  040A                     i1l2018:
  3522                           
  3523                           ;GPIO.c: 61:         portType = 0;
  3524  040A  01F3               	clrf	i1writeGPIO@portType
  3525  040B                     i1l2020:
  3526                           
  3527                           ;GPIO.c: 64:     if(portType == 0){
  3528  040B  0873               	movf	i1writeGPIO@portType,w
  3529  040C  1D03               	btfss	3,2
  3530  040D  2C0F               	goto	u175_21
  3531  040E  2C10               	goto	u175_20
  3532  040F                     u175_21:
  3533  040F  2C30               	goto	i1l2028
  3534  0410                     u175_20:
  3535  0410                     i1l2022:
  3536                           
  3537                           ;GPIO.c: 65:         if(writeValue) LATA |= (1 << (uint8_t)portNumber);
  3538  0410  0870               	movf	i1writeGPIO@writeValue,w
  3539  0411  1903               	btfsc	3,2
  3540  0412  2C14               	goto	u176_21
  3541  0413  2C15               	goto	u176_20
  3542  0414                     u176_21:
  3543  0414  2C22               	goto	i1l2026
  3544  0415                     u176_20:
  3545  0415                     i1l2024:
  3546  0415  3001               	movlw	1
  3547  0416  00F1               	movwf	??i1_writeGPIO
  3548  0417  0A75               	incf	i1writeGPIO@portNumber,w
  3549  0418  2C1A               	goto	u177_24
  3550  0419                     u177_25:
  3551  0419  35F1               	lslf	??i1_writeGPIO,f
  3552  041A                     u177_24:
  3553  041A  0B89               	decfsz	9,f
  3554  041B  2C19               	goto	u177_25
  3555  041C  0871               	movf	??i1_writeGPIO,w
  3556  041D  00F2               	movwf	??i1_writeGPIO+1
  3557  041E  0872               	movf	??i1_writeGPIO+1,w
  3558  041F  0022               	movlb	2	; select bank2
  3559  0420  048C               	iorwf	12,f	;volatile
  3560  0421  2C54               	goto	i1l280
  3561  0422                     i1l2026:
  3562  0422  3001               	movlw	1
  3563  0423  00F1               	movwf	??i1_writeGPIO
  3564  0424  0A75               	incf	i1writeGPIO@portNumber,w
  3565  0425  2C27               	goto	u178_24
  3566  0426                     u178_25:
  3567  0426  35F1               	lslf	??i1_writeGPIO,f
  3568  0427                     u178_24:
  3569  0427  0B89               	decfsz	9,f
  3570  0428  2C26               	goto	u178_25
  3571  0429  0871               	movf	??i1_writeGPIO,w
  3572  042A  3AFF               	xorlw	255
  3573  042B  00F2               	movwf	??i1_writeGPIO+1
  3574  042C  0872               	movf	??i1_writeGPIO+1,w
  3575  042D  0022               	movlb	2	; select bank2
  3576  042E  058C               	andwf	12,f	;volatile
  3577  042F  2C54               	goto	i1l280
  3578  0430                     i1l2028:
  3579  0430  0373               	decf	i1writeGPIO@portType,w
  3580  0431  1D03               	btfss	3,2
  3581  0432  2C34               	goto	u179_21
  3582  0433  2C35               	goto	u179_20
  3583  0434                     u179_21:
  3584  0434  2C54               	goto	i1l280
  3585  0435                     u179_20:
  3586  0435                     i1l2030:
  3587                           
  3588                           ;GPIO.c: 69:         if(writeValue) LATB |= (1 << (uint8_t)portNumber);
  3589  0435  0870               	movf	i1writeGPIO@writeValue,w
  3590  0436  1903               	btfsc	3,2
  3591  0437  2C39               	goto	u180_21
  3592  0438  2C3A               	goto	u180_20
  3593  0439                     u180_21:
  3594  0439  2C47               	goto	i1l2034
  3595  043A                     u180_20:
  3596  043A                     i1l2032:
  3597  043A  3001               	movlw	1
  3598  043B  00F1               	movwf	??i1_writeGPIO
  3599  043C  0A75               	incf	i1writeGPIO@portNumber,w
  3600  043D  2C3F               	goto	u181_24
  3601  043E                     u181_25:
  3602  043E  35F1               	lslf	??i1_writeGPIO,f
  3603  043F                     u181_24:
  3604  043F  0B89               	decfsz	9,f
  3605  0440  2C3E               	goto	u181_25
  3606  0441  0871               	movf	??i1_writeGPIO,w
  3607  0442  00F2               	movwf	??i1_writeGPIO+1
  3608  0443  0872               	movf	??i1_writeGPIO+1,w
  3609  0444  0022               	movlb	2	; select bank2
  3610  0445  048D               	iorwf	13,f	;volatile
  3611  0446  2C54               	goto	i1l280
  3612  0447                     i1l2034:
  3613  0447  3001               	movlw	1
  3614  0448  00F1               	movwf	??i1_writeGPIO
  3615  0449  0A75               	incf	i1writeGPIO@portNumber,w
  3616  044A  2C4C               	goto	u182_24
  3617  044B                     u182_25:
  3618  044B  35F1               	lslf	??i1_writeGPIO,f
  3619  044C                     u182_24:
  3620  044C  0B89               	decfsz	9,f
  3621  044D  2C4B               	goto	u182_25
  3622  044E  0871               	movf	??i1_writeGPIO,w
  3623  044F  3AFF               	xorlw	255
  3624  0450  00F2               	movwf	??i1_writeGPIO+1
  3625  0451  0872               	movf	??i1_writeGPIO+1,w
  3626  0452  0022               	movlb	2	; select bank2
  3627  0453  058D               	andwf	13,f	;volatile
  3628  0454                     i1l280:
  3629  0454  0008               	return
  3630  0455                     __end_ofi1_writeGPIO:
  3631                           
  3632                           	psect	text12
  3633  0090                     __ptext12:	
  3634 ;; *************** function _runPotScaling *****************
  3635 ;; Defined at:
  3636 ;;		line 55 in file "Potentiometer.c"
  3637 ;; Parameters:    Size  Location     Type
  3638 ;;		None
  3639 ;; Auto vars:     Size  Location     Type
  3640 ;;  minDuty         2   16[BANK0 ] unsigned short 
  3641 ;;  maxDuty         2   14[BANK0 ] unsigned short 
  3642 ;; Return value:  Size  Location     Type
  3643 ;;                  1    wreg      void 
  3644 ;; Registers used:
  3645 ;;		wreg, status,2, status,0, pclath, cstack
  3646 ;; Tracked objects:
  3647 ;;		On entry : 0/0
  3648 ;;		On exit  : 0/0
  3649 ;;		Unchanged: 0/0
  3650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3651 ;;      Params:         0       0       0       0       0       0
  3652 ;;      Locals:         0       4       0       0       0       0
  3653 ;;      Temps:          0       8       0       0       0       0
  3654 ;;      Totals:         0      12       0       0       0       0
  3655 ;;Total ram usage:       12 bytes
  3656 ;; Hardware stack levels used: 1
  3657 ;; Hardware stack levels required when called: 1
  3658 ;; This function calls:
  3659 ;;		___lldiv
  3660 ;;		___lmul
  3661 ;;		___wmul
  3662 ;;		_setPWMDutyandPeriod
  3663 ;; This function is called by:
  3664 ;;		_Tick980Hz
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668  0090                     _runPotScaling:	
  3669                           ;psect for function _runPotScaling
  3670                           
  3671  0090                     i1l1884:	
  3672                           ;incstack = 0
  3673                           ; Regs used in _runPotScaling: [wreg+status,2+status,0+pclath+cstack]
  3674                           
  3675                           
  3676                           ;Potentiometer.c: 57:     potSetCount++;
  3677  0090  3001               	movlw	1
  3678  0091  0020               	movlb	0	; select bank0
  3679  0092  00A6               	movwf	??_runPotScaling
  3680  0093  0826               	movf	??_runPotScaling,w
  3681  0094  07D2               	addwf	_potSetCount,f
  3682                           
  3683                           ;Potentiometer.c: 59:     if(potSetCount == 32){
  3684  0095  3020               	movlw	32
  3685  0096  0652               	xorwf	_potSetCount,w
  3686  0097  1D03               	btfss	3,2
  3687  0098  289A               	goto	u169_21
  3688  0099  289B               	goto	u169_20
  3689  009A                     u169_21:
  3690  009A  2972               	goto	i1l337
  3691  009B                     u169_20:
  3692  009B                     i1l1886:
  3693                           
  3694                           ;Potentiometer.c: 61:         setPeriod = ((uint32_t)((filteredFreqPot - 45) * (uint32_t
      +                          )(159u - 15u)) >> 10 ) + 15u;
  3695  009B  0843               	movf	_filteredFreqPot,w
  3696  009C  3ED3               	addlw	211
  3697  009D  00F0               	movwf	___lmul@multiplier
  3698  009E  30FF               	movlw	255
  3699  009F  3D44               	addwfc	_filteredFreqPot+1,w
  3700  00A0  00F1               	movwf	___lmul@multiplier+1
  3701  00A1  01F2               	clrf	___lmul@multiplier+2
  3702  00A2  01F3               	clrf	___lmul@multiplier+3
  3703  00A3  3000               	movlw	0
  3704  00A4  00F7               	movwf	___lmul@multiplicand+3
  3705  00A5  3000               	movlw	0
  3706  00A6  00F6               	movwf	___lmul@multiplicand+2
  3707  00A7  3000               	movlw	0
  3708  00A8  00F5               	movwf	___lmul@multiplicand+1
  3709  00A9  3090               	movlw	144
  3710  00AA  00F4               	movwf	___lmul@multiplicand
  3711  00AB  3185  25AF  3180   	fcall	___lmul
  3712  00AE  0870               	movf	?___lmul,w
  3713  00AF  0020               	movlb	0	; select bank0
  3714  00B0  00A6               	movwf	??_runPotScaling
  3715  00B1  0871               	movf	?___lmul+1,w
  3716  00B2  00A7               	movwf	??_runPotScaling+1
  3717  00B3  0872               	movf	?___lmul+2,w
  3718  00B4  00A8               	movwf	??_runPotScaling+2
  3719  00B5  0873               	movf	?___lmul+3,w
  3720  00B6  00A9               	movwf	??_runPotScaling+3
  3721  00B7  300A               	movlw	10
  3722  00B8                     u170_25:
  3723  00B8  36A9               	lsrf	??_runPotScaling+3,f
  3724  00B9  0CA8               	rrf	??_runPotScaling+2,f
  3725  00BA  0CA7               	rrf	??_runPotScaling+1,f
  3726  00BB  0CA6               	rrf	??_runPotScaling,f
  3727  00BC                     u170_20:
  3728  00BC  0B89               	decfsz	9,f
  3729  00BD  28B8               	goto	u170_25
  3730  00BE  0826               	movf	??_runPotScaling,w
  3731  00BF  3E0F               	addlw	15
  3732  00C0  00AA               	movwf	??_runPotScaling+4
  3733  00C1  082A               	movf	??_runPotScaling+4,w
  3734  00C2  00D4               	movwf	_setPeriod
  3735                           
  3736                           ;Potentiometer.c: 63:         setDuty = (uint32_t)((uint32_t)((filteredDutyPot-45) * (ui
      +                          nt32_t)setPeriod )) >> 8;
  3737  00C3  0841               	movf	_filteredDutyPot,w
  3738  00C4  3ED3               	addlw	211
  3739  00C5  00F0               	movwf	___lmul@multiplier
  3740  00C6  30FF               	movlw	255
  3741  00C7  3D42               	addwfc	_filteredDutyPot+1,w
  3742  00C8  00F1               	movwf	___lmul@multiplier+1
  3743  00C9  01F2               	clrf	___lmul@multiplier+2
  3744  00CA  01F3               	clrf	___lmul@multiplier+3
  3745  00CB  0854               	movf	_setPeriod,w
  3746  00CC  00A6               	movwf	??_runPotScaling
  3747  00CD  01A7               	clrf	??_runPotScaling+1
  3748  00CE  01A8               	clrf	??_runPotScaling+2
  3749  00CF  01A9               	clrf	??_runPotScaling+3
  3750  00D0  0829               	movf	??_runPotScaling+3,w
  3751  00D1  00F7               	movwf	___lmul@multiplicand+3
  3752  00D2  0828               	movf	??_runPotScaling+2,w
  3753  00D3  00F6               	movwf	___lmul@multiplicand+2
  3754  00D4  0827               	movf	??_runPotScaling+1,w
  3755  00D5  00F5               	movwf	___lmul@multiplicand+1
  3756  00D6  0826               	movf	??_runPotScaling,w
  3757  00D7  00F4               	movwf	___lmul@multiplicand
  3758  00D8  3185  25AF  3180   	fcall	___lmul
  3759  00DB  0870               	movf	?___lmul,w
  3760  00DC  0020               	movlb	0	; select bank0
  3761  00DD  00AA               	movwf	??_runPotScaling+4
  3762  00DE  0871               	movf	?___lmul+1,w
  3763  00DF  00AB               	movwf	??_runPotScaling+5
  3764  00E0  0872               	movf	?___lmul+2,w
  3765  00E1  00AC               	movwf	??_runPotScaling+6
  3766  00E2  0873               	movf	?___lmul+3,w
  3767  00E3  00AD               	movwf	??_runPotScaling+7
  3768  00E4  3008               	movlw	8
  3769  00E5                     u171_25:
  3770  00E5  36AD               	lsrf	??_runPotScaling+7,f
  3771  00E6  0CAC               	rrf	??_runPotScaling+6,f
  3772  00E7  0CAB               	rrf	??_runPotScaling+5,f
  3773  00E8  0CAA               	rrf	??_runPotScaling+4,f
  3774  00E9                     u171_20:
  3775  00E9  0B89               	decfsz	9,f
  3776  00EA  28E5               	goto	u171_25
  3777  00EB  082B               	movf	??_runPotScaling+5,w
  3778  00EC  00CE               	movwf	_setDuty+1
  3779  00ED  082A               	movf	??_runPotScaling+4,w
  3780  00EE  00CD               	movwf	_setDuty
  3781                           
  3782                           ;Potentiometer.c: 66:         uint16_t maxDuty = (uint16_t) (((uint32_t)(((uint16_t) 90)
      +                           * setPeriod)) / 25);
  3783  00EF  3000               	movlw	0
  3784  00F0  00F9               	movwf	___lldiv@divisor+3
  3785  00F1  3000               	movlw	0
  3786  00F2  00F8               	movwf	___lldiv@divisor+2
  3787  00F3  3000               	movlw	0
  3788  00F4  00F7               	movwf	___lldiv@divisor+1
  3789  00F5  3019               	movlw	25
  3790  00F6  00F6               	movwf	___lldiv@divisor
  3791  00F7  305A               	movlw	90
  3792  00F8  00F2               	movwf	___wmul@multiplicand
  3793  00F9  3000               	movlw	0
  3794  00FA  00F3               	movwf	___wmul@multiplicand+1
  3795  00FB  0854               	movf	_setPeriod,w
  3796  00FC  00A6               	movwf	??_runPotScaling
  3797  00FD  01A7               	clrf	??_runPotScaling+1
  3798  00FE  0826               	movf	??_runPotScaling,w
  3799  00FF  00F0               	movwf	___wmul@multiplier
  3800  0100  0827               	movf	??_runPotScaling+1,w
  3801  0101  00F1               	movwf	___wmul@multiplier+1
  3802  0102  3186  2630  3180   	fcall	___wmul
  3803  0105  0870               	movf	?___wmul,w
  3804  0106  0020               	movlb	0	; select bank0
  3805  0107  00A8               	movwf	??_runPotScaling+2
  3806  0108  0871               	movf	?___wmul+1,w
  3807  0109  00A9               	movwf	??_runPotScaling+3
  3808  010A  01AA               	clrf	??_runPotScaling+4
  3809  010B  01AB               	clrf	??_runPotScaling+5
  3810  010C  082B               	movf	??_runPotScaling+5,w
  3811  010D  00FD               	movwf	___lldiv@dividend+3
  3812  010E  082A               	movf	??_runPotScaling+4,w
  3813  010F  00FC               	movwf	___lldiv@dividend+2
  3814  0110  0829               	movf	??_runPotScaling+3,w
  3815  0111  00FB               	movwf	___lldiv@dividend+1
  3816  0112  0828               	movf	??_runPotScaling+2,w
  3817  0113  00FA               	movwf	___lldiv@dividend
  3818  0114  3184  2455  3180   	fcall	___lldiv
  3819  0117  0877               	movf	?___lldiv+1,w
  3820  0118  0020               	movlb	0	; select bank0
  3821  0119  00AF               	movwf	runPotScaling@maxDuty+1
  3822  011A  0876               	movf	?___lldiv,w
  3823  011B  00AE               	movwf	runPotScaling@maxDuty
  3824                           
  3825                           ;Potentiometer.c: 67:         uint16_t minDuty = (uint16_t) (((uint32_t)(((uint16_t) 10)
      +                           * setPeriod)) / 25);
  3826  011C  3000               	movlw	0
  3827  011D  00F9               	movwf	___lldiv@divisor+3
  3828  011E  3000               	movlw	0
  3829  011F  00F8               	movwf	___lldiv@divisor+2
  3830  0120  3000               	movlw	0
  3831  0121  00F7               	movwf	___lldiv@divisor+1
  3832  0122  3019               	movlw	25
  3833  0123  00F6               	movwf	___lldiv@divisor
  3834  0124  300A               	movlw	10
  3835  0125  00F2               	movwf	___wmul@multiplicand
  3836  0126  3000               	movlw	0
  3837  0127  00F3               	movwf	___wmul@multiplicand+1
  3838  0128  0854               	movf	_setPeriod,w
  3839  0129  00A6               	movwf	??_runPotScaling
  3840  012A  01A7               	clrf	??_runPotScaling+1
  3841  012B  0826               	movf	??_runPotScaling,w
  3842  012C  00F0               	movwf	___wmul@multiplier
  3843  012D  0827               	movf	??_runPotScaling+1,w
  3844  012E  00F1               	movwf	___wmul@multiplier+1
  3845  012F  3186  2630  3180   	fcall	___wmul
  3846  0132  0870               	movf	?___wmul,w
  3847  0133  0020               	movlb	0	; select bank0
  3848  0134  00A8               	movwf	??_runPotScaling+2
  3849  0135  0871               	movf	?___wmul+1,w
  3850  0136  00A9               	movwf	??_runPotScaling+3
  3851  0137  01AA               	clrf	??_runPotScaling+4
  3852  0138  01AB               	clrf	??_runPotScaling+5
  3853  0139  082B               	movf	??_runPotScaling+5,w
  3854  013A  00FD               	movwf	___lldiv@dividend+3
  3855  013B  082A               	movf	??_runPotScaling+4,w
  3856  013C  00FC               	movwf	___lldiv@dividend+2
  3857  013D  0829               	movf	??_runPotScaling+3,w
  3858  013E  00FB               	movwf	___lldiv@dividend+1
  3859  013F  0828               	movf	??_runPotScaling+2,w
  3860  0140  00FA               	movwf	___lldiv@dividend
  3861  0141  3184  2455  3180   	fcall	___lldiv
  3862  0144  0877               	movf	?___lldiv+1,w
  3863  0145  0020               	movlb	0	; select bank0
  3864  0146  00B1               	movwf	runPotScaling@minDuty+1
  3865  0147  0876               	movf	?___lldiv,w
  3866  0148  00B0               	movwf	runPotScaling@minDuty
  3867  0149                     i1l1888:
  3868                           
  3869                           ;Potentiometer.c: 68:         if(setDuty > maxDuty) setDuty = maxDuty;
  3870  0149  084E               	movf	_setDuty+1,w
  3871  014A  022F               	subwf	runPotScaling@maxDuty+1,w
  3872  014B  1D03               	skipz
  3873  014C  294F               	goto	u172_25
  3874  014D  084D               	movf	_setDuty,w
  3875  014E  022E               	subwf	runPotScaling@maxDuty,w
  3876  014F                     u172_25:
  3877  014F  1803               	skipnc
  3878  0150  2952               	goto	u172_21
  3879  0151  2953               	goto	u172_20
  3880  0152                     u172_21:
  3881  0152  2957               	goto	i1l335
  3882  0153                     u172_20:
  3883  0153                     i1l1890:
  3884  0153  082F               	movf	runPotScaling@maxDuty+1,w
  3885  0154  00CE               	movwf	_setDuty+1
  3886  0155  082E               	movf	runPotScaling@maxDuty,w
  3887  0156  00CD               	movwf	_setDuty
  3888  0157                     i1l335:
  3889                           
  3890                           ;Potentiometer.c: 69:         if(setDuty < minDuty) setDuty = minDuty;
  3891  0157  0831               	movf	runPotScaling@minDuty+1,w
  3892  0158  024E               	subwf	_setDuty+1,w
  3893  0159  1D03               	skipz
  3894  015A  295D               	goto	u173_25
  3895  015B  0830               	movf	runPotScaling@minDuty,w
  3896  015C  024D               	subwf	_setDuty,w
  3897  015D                     u173_25:
  3898  015D  1803               	skipnc
  3899  015E  2960               	goto	u173_21
  3900  015F  2961               	goto	u173_20
  3901  0160                     u173_21:
  3902  0160  2965               	goto	i1l1894
  3903  0161                     u173_20:
  3904  0161                     i1l1892:
  3905  0161  0831               	movf	runPotScaling@minDuty+1,w
  3906  0162  00CE               	movwf	_setDuty+1
  3907  0163  0830               	movf	runPotScaling@minDuty,w
  3908  0164  00CD               	movwf	_setDuty
  3909  0165                     i1l1894:
  3910                           
  3911                           ;Potentiometer.c: 71:         setPWMDutyandPeriod(setDuty, setPeriod);
  3912  0165  084E               	movf	_setDuty+1,w
  3913  0166  00F1               	movwf	setPWMDutyandPeriod@dutyCycle+1
  3914  0167  084D               	movf	_setDuty,w
  3915  0168  00F0               	movwf	setPWMDutyandPeriod@dutyCycle
  3916  0169  0854               	movf	_setPeriod,w
  3917  016A  00A6               	movwf	??_runPotScaling
  3918  016B  0826               	movf	??_runPotScaling,w
  3919  016C  00F2               	movwf	setPWMDutyandPeriod@period
  3920  016D  3185  25E2  3180   	fcall	_setPWMDutyandPeriod
  3921  0170                     i1l1896:
  3922                           
  3923                           ;Potentiometer.c: 72:         potSetCount = 0;
  3924  0170  0020               	movlb	0	; select bank0
  3925  0171  01D2               	clrf	_potSetCount
  3926  0172                     i1l337:
  3927  0172  0008               	return
  3928  0173                     __end_of_runPotScaling:
  3929                           
  3930                           	psect	text13
  3931  05E2                     __ptext13:	
  3932 ;; *************** function _setPWMDutyandPeriod *****************
  3933 ;; Defined at:
  3934 ;;		line 48 in file "PWM.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  dutyCycle       2    0[COMMON] unsigned short 
  3937 ;;  period          1    2[COMMON] unsigned char 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3949 ;;      Params:         3       0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0
  3951 ;;      Temps:          2       0       0       0       0       0
  3952 ;;      Totals:         5       0       0       0       0       0
  3953 ;;Total ram usage:        5 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; This function calls:
  3956 ;;		Nothing
  3957 ;; This function is called by:
  3958 ;;		_Tick980Hz
  3959 ;;		_runPotScaling
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963  05E2                     _setPWMDutyandPeriod:	
  3964                           ;psect for function _setPWMDutyandPeriod
  3965                           
  3966  05E2                     i1l1590:	
  3967                           ;incstack = 0
  3968                           ; Regs used in _setPWMDutyandPeriod: [wreg+status,2+status,0]
  3969                           
  3970                           
  3971                           ;PWM.c: 49:     PR2 = period;
  3972  05E2  0872               	movf	setPWMDutyandPeriod@period,w
  3973  05E3  0020               	movlb	0	; select bank0
  3974  05E4  009B               	movwf	27	;volatile
  3975  05E5                     i1l1592:
  3976                           
  3977                           ;PWM.c: 50:     CCPR1L = dutyCycle >> 2;
  3978  05E5  0871               	movf	setPWMDutyandPeriod@dutyCycle+1,w
  3979  05E6  00F4               	movwf	??_setPWMDutyandPeriod+1
  3980  05E7  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3981  05E8  00F3               	movwf	??_setPWMDutyandPeriod
  3982  05E9  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3983  05EA  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3984  05EB  36F4               	lsrf	??_setPWMDutyandPeriod+1,f
  3985  05EC  0CF3               	rrf	??_setPWMDutyandPeriod,f
  3986  05ED  0873               	movf	??_setPWMDutyandPeriod,w
  3987  05EE  0025               	movlb	5	; select bank5
  3988  05EF  0091               	movwf	17	;volatile
  3989  05F0                     i1l1594:
  3990                           
  3991                           ;PWM.c: 51:     CCP1CONbits.DC1B0 = dutyCycle & 1;
  3992  05F0  0870               	movf	setPWMDutyandPeriod@dutyCycle,w
  3993  05F1  3901               	andlw	1
  3994  05F2  00F3               	movwf	??_setPWMDutyandPeriod
  3995  05F3  0EF3               	swapf	??_setPWMDutyandPeriod,f
  3996  05F4  0813               	movf	19,w	;volatile
  3997  05F5  0673               	xorwf	??_setPWMDutyandPeriod,w
  3998  05F6  39EF               	andlw	-17
  3999  05F7  0673               	xorwf	??_setPWMDutyandPeriod,w
  4000  05F8  0093               	movwf	19	;volatile
  4001                           
  4002                           ;PWM.c: 52:     CCP1CONbits.DC1B1 = (dutyCycle & 2) > 1;
  4003  05F9  3002               	movlw	2
  4004  05FA  0570               	andwf	setPWMDutyandPeriod@dutyCycle,w
  4005  05FB  00F3               	movwf	??_setPWMDutyandPeriod
  4006  05FC  3000               	movlw	0
  4007  05FD  0571               	andwf	setPWMDutyandPeriod@dutyCycle+1,w
  4008  05FE  00F4               	movwf	??_setPWMDutyandPeriod+1
  4009  05FF  3000               	movlw	0
  4010  0600  0274               	subwf	??_setPWMDutyandPeriod+1,w
  4011  0601  3002               	movlw	2
  4012  0602  1903               	skipnz
  4013  0603  0273               	subwf	??_setPWMDutyandPeriod,w
  4014  0604  1803               	skipnc
  4015  0605  2E07               	goto	u99_21
  4016  0606  2E0A               	goto	u99_20
  4017  0607                     u99_21:
  4018  0607  0025               	movlb	5	; select bank5
  4019  0608  1693               	bsf	19,5	;volatile
  4020  0609  2E0C               	goto	u100_24
  4021  060A                     u99_20:
  4022  060A  0025               	movlb	5	; select bank5
  4023  060B  1293               	bcf	19,5	;volatile
  4024  060C                     u100_24:
  4025  060C                     i1l143:
  4026  060C  0008               	return
  4027  060D                     __end_of_setPWMDutyandPeriod:
  4028                           
  4029                           	psect	text14
  4030  0630                     __ptext14:	
  4031 ;; *************** function ___wmul *****************
  4032 ;; Defined at:
  4033 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  4034 ;; Parameters:    Size  Location     Type
  4035 ;;  multiplier      2    0[COMMON] unsigned int 
  4036 ;;  multiplicand    2    2[COMMON] unsigned int 
  4037 ;; Auto vars:     Size  Location     Type
  4038 ;;  product         2    4[COMMON] unsigned int 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    0[COMMON] unsigned int 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4048 ;;      Params:         4       0       0       0       0       0
  4049 ;;      Locals:         2       0       0       0       0       0
  4050 ;;      Temps:          0       0       0       0       0       0
  4051 ;;      Totals:         6       0       0       0       0       0
  4052 ;;Total ram usage:        6 bytes
  4053 ;; Hardware stack levels used: 1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_runPotScaling
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061  0630                     ___wmul:	
  4062                           ;psect for function ___wmul
  4063                           
  4064  0630                     i1l1756:	
  4065                           ;incstack = 0
  4066                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4067                           
  4068  0630  01F4               	clrf	___wmul@product
  4069  0631  01F5               	clrf	___wmul@product+1
  4070  0632                     i1l1758:
  4071  0632  1C70               	btfss	___wmul@multiplier,0
  4072  0633  2E35               	goto	u146_21
  4073  0634  2E36               	goto	u146_20
  4074  0635                     u146_21:
  4075  0635  2E3A               	goto	i1l542
  4076  0636                     u146_20:
  4077  0636                     i1l1760:
  4078  0636  0872               	movf	___wmul@multiplicand,w
  4079  0637  07F4               	addwf	___wmul@product,f
  4080  0638  0873               	movf	___wmul@multiplicand+1,w
  4081  0639  3DF5               	addwfc	___wmul@product+1,f
  4082  063A                     i1l542:
  4083  063A  3001               	movlw	1
  4084  063B                     u147_25:
  4085  063B  35F2               	lslf	___wmul@multiplicand,f
  4086  063C  0DF3               	rlf	___wmul@multiplicand+1,f
  4087  063D  0B89               	decfsz	9,f
  4088  063E  2E3B               	goto	u147_25
  4089  063F                     i1l1762:
  4090  063F  3001               	movlw	1
  4091  0640                     u148_25:
  4092  0640  36F1               	lsrf	___wmul@multiplier+1,f
  4093  0641  0CF0               	rrf	___wmul@multiplier,f
  4094  0642  0B89               	decfsz	9,f
  4095  0643  2E40               	goto	u148_25
  4096  0644                     i1l1764:
  4097  0644  0870               	movf	___wmul@multiplier,w
  4098  0645  0471               	iorwf	___wmul@multiplier+1,w
  4099  0646  1D03               	btfss	3,2
  4100  0647  2E49               	goto	u149_21
  4101  0648  2E4A               	goto	u149_20
  4102  0649                     u149_21:
  4103  0649  2E32               	goto	i1l1758
  4104  064A                     u149_20:
  4105  064A                     i1l1766:
  4106  064A  0875               	movf	___wmul@product+1,w
  4107  064B  00F1               	movwf	?___wmul+1
  4108  064C  0874               	movf	___wmul@product,w
  4109  064D  00F0               	movwf	?___wmul
  4110  064E                     i1l544:
  4111  064E  0008               	return
  4112  064F                     __end_of___wmul:
  4113                           
  4114                           	psect	text15
  4115  05AF                     __ptext15:	
  4116 ;; *************** function ___lmul *****************
  4117 ;; Defined at:
  4118 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul32.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  multiplier      4    0[COMMON] unsigned long 
  4121 ;;  multiplicand    4    4[COMMON] unsigned long 
  4122 ;; Auto vars:     Size  Location     Type
  4123 ;;  product         4    8[COMMON] unsigned long 
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  4    0[COMMON] unsigned long 
  4126 ;; Registers used:
  4127 ;;		wreg, status,2, status,0
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4133 ;;      Params:         8       0       0       0       0       0
  4134 ;;      Locals:         4       0       0       0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0
  4136 ;;      Totals:        12       0       0       0       0       0
  4137 ;;Total ram usage:       12 bytes
  4138 ;; Hardware stack levels used: 1
  4139 ;; This function calls:
  4140 ;;		Nothing
  4141 ;; This function is called by:
  4142 ;;		_runPotScaling
  4143 ;; This function uses a non-reentrant model
  4144 ;;
  4145                           
  4146  05AF                     ___lmul:	
  4147                           ;psect for function ___lmul
  4148                           
  4149  05AF                     i1l1770:	
  4150                           ;incstack = 0
  4151                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  4152                           
  4153  05AF  3000               	movlw	0
  4154  05B0  00FB               	movwf	___lmul@product+3
  4155  05B1  3000               	movlw	0
  4156  05B2  00FA               	movwf	___lmul@product+2
  4157  05B3  3000               	movlw	0
  4158  05B4  00F9               	movwf	___lmul@product+1
  4159  05B5  3000               	movlw	0
  4160  05B6  00F8               	movwf	___lmul@product
  4161  05B7                     i1l1772:
  4162  05B7  1C70               	btfss	___lmul@multiplier,0
  4163  05B8  2DBA               	goto	u150_21
  4164  05B9  2DBB               	goto	u150_20
  4165  05BA                     u150_21:
  4166  05BA  2DC3               	goto	i1l1776
  4167  05BB                     u150_20:
  4168  05BB                     i1l1774:
  4169  05BB  0874               	movf	___lmul@multiplicand,w
  4170  05BC  07F8               	addwf	___lmul@product,f
  4171  05BD  0875               	movf	___lmul@multiplicand+1,w
  4172  05BE  3DF9               	addwfc	___lmul@product+1,f
  4173  05BF  0876               	movf	___lmul@multiplicand+2,w
  4174  05C0  3DFA               	addwfc	___lmul@product+2,f
  4175  05C1  0877               	movf	___lmul@multiplicand+3,w
  4176  05C2  3DFB               	addwfc	___lmul@product+3,f
  4177  05C3                     i1l1776:
  4178  05C3  3001               	movlw	1
  4179  05C4                     u151_25:
  4180  05C4  35F4               	lslf	___lmul@multiplicand,f
  4181  05C5  0DF5               	rlf	___lmul@multiplicand+1,f
  4182  05C6  0DF6               	rlf	___lmul@multiplicand+2,f
  4183  05C7  0DF7               	rlf	___lmul@multiplicand+3,f
  4184  05C8  0B89               	decfsz	9,f
  4185  05C9  2DC4               	goto	u151_25
  4186  05CA                     i1l1778:
  4187  05CA  3001               	movlw	1
  4188  05CB                     u152_25:
  4189  05CB  36F3               	lsrf	___lmul@multiplier+3,f
  4190  05CC  0CF2               	rrf	___lmul@multiplier+2,f
  4191  05CD  0CF1               	rrf	___lmul@multiplier+1,f
  4192  05CE  0CF0               	rrf	___lmul@multiplier,f
  4193  05CF  0B89               	decfsz	9,f
  4194  05D0  2DCB               	goto	u152_25
  4195  05D1  0873               	movf	___lmul@multiplier+3,w
  4196  05D2  0472               	iorwf	___lmul@multiplier+2,w
  4197  05D3  0471               	iorwf	___lmul@multiplier+1,w
  4198  05D4  0470               	iorwf	___lmul@multiplier,w
  4199  05D5  1D03               	skipz
  4200  05D6  2DD8               	goto	u153_21
  4201  05D7  2DD9               	goto	u153_20
  4202  05D8                     u153_21:
  4203  05D8  2DB7               	goto	i1l1772
  4204  05D9                     u153_20:
  4205  05D9                     i1l1780:
  4206  05D9  087B               	movf	___lmul@product+3,w
  4207  05DA  00F3               	movwf	?___lmul+3
  4208  05DB  087A               	movf	___lmul@product+2,w
  4209  05DC  00F2               	movwf	?___lmul+2
  4210  05DD  0879               	movf	___lmul@product+1,w
  4211  05DE  00F1               	movwf	?___lmul+1
  4212  05DF  0878               	movf	___lmul@product,w
  4213  05E0  00F0               	movwf	?___lmul
  4214  05E1                     i1l556:
  4215  05E1  0008               	return
  4216  05E2                     __end_of___lmul:
  4217                           
  4218                           	psect	text16
  4219  0455                     __ptext16:	
  4220 ;; *************** function ___lldiv *****************
  4221 ;; Defined at:
  4222 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__lldiv.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  divisor         4    6[COMMON] unsigned long 
  4225 ;;  dividend        4   10[COMMON] unsigned long 
  4226 ;; Auto vars:     Size  Location     Type
  4227 ;;  quotient        4    1[BANK0 ] unsigned long 
  4228 ;;  counter         1    5[BANK0 ] unsigned char 
  4229 ;; Return value:  Size  Location     Type
  4230 ;;                  4    6[COMMON] unsigned long 
  4231 ;; Registers used:
  4232 ;;		wreg, status,2, status,0
  4233 ;; Tracked objects:
  4234 ;;		On entry : 0/0
  4235 ;;		On exit  : 0/0
  4236 ;;		Unchanged: 0/0
  4237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4238 ;;      Params:         8       0       0       0       0       0
  4239 ;;      Locals:         0       5       0       0       0       0
  4240 ;;      Temps:          0       1       0       0       0       0
  4241 ;;      Totals:         8       6       0       0       0       0
  4242 ;;Total ram usage:       14 bytes
  4243 ;; Hardware stack levels used: 1
  4244 ;; This function calls:
  4245 ;;		Nothing
  4246 ;; This function is called by:
  4247 ;;		_runPotScaling
  4248 ;; This function uses a non-reentrant model
  4249 ;;
  4250                           
  4251  0455                     ___lldiv:	
  4252                           ;psect for function ___lldiv
  4253                           
  4254  0455                     i1l1784:	
  4255                           ;incstack = 0
  4256                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4257                           
  4258  0455  3000               	movlw	0
  4259  0456  0020               	movlb	0	; select bank0
  4260  0457  00A4               	movwf	___lldiv@quotient+3
  4261  0458  3000               	movlw	0
  4262  0459  00A3               	movwf	___lldiv@quotient+2
  4263  045A  3000               	movlw	0
  4264  045B  00A2               	movwf	___lldiv@quotient+1
  4265  045C  3000               	movlw	0
  4266  045D  00A1               	movwf	___lldiv@quotient
  4267  045E  0879               	movf	___lldiv@divisor+3,w
  4268  045F  0478               	iorwf	___lldiv@divisor+2,w
  4269  0460  0477               	iorwf	___lldiv@divisor+1,w
  4270  0461  0476               	iorwf	___lldiv@divisor,w
  4271  0462  1903               	skipnz
  4272  0463  2C65               	goto	u154_21
  4273  0464  2C66               	goto	u154_20
  4274  0465                     u154_21:
  4275  0465  2CA7               	goto	i1l1804
  4276  0466                     u154_20:
  4277  0466                     i1l1786:
  4278  0466  01A5               	clrf	___lldiv@counter
  4279  0467  0AA5               	incf	___lldiv@counter,f
  4280  0468  2C74               	goto	i1l1790
  4281  0469                     i1l1788:
  4282  0469  3001               	movlw	1
  4283  046A                     u155_25:
  4284  046A  35F6               	lslf	___lldiv@divisor,f
  4285  046B  0DF7               	rlf	___lldiv@divisor+1,f
  4286  046C  0DF8               	rlf	___lldiv@divisor+2,f
  4287  046D  0DF9               	rlf	___lldiv@divisor+3,f
  4288  046E  0B89               	decfsz	9,f
  4289  046F  2C6A               	goto	u155_25
  4290  0470  3001               	movlw	1
  4291  0471  00A0               	movwf	??___lldiv
  4292  0472  0820               	movf	??___lldiv,w
  4293  0473  07A5               	addwf	___lldiv@counter,f
  4294  0474                     i1l1790:
  4295  0474  1FF9               	btfss	___lldiv@divisor+3,7
  4296  0475  2C77               	goto	u156_21
  4297  0476  2C78               	goto	u156_20
  4298  0477                     u156_21:
  4299  0477  2C69               	goto	i1l1788
  4300  0478                     u156_20:
  4301  0478                     i1l1792:
  4302  0478  3001               	movlw	1
  4303  0479                     u157_25:
  4304  0479  35A1               	lslf	___lldiv@quotient,f
  4305  047A  0DA2               	rlf	___lldiv@quotient+1,f
  4306  047B  0DA3               	rlf	___lldiv@quotient+2,f
  4307  047C  0DA4               	rlf	___lldiv@quotient+3,f
  4308  047D  0B89               	decfsz	9,f
  4309  047E  2C79               	goto	u157_25
  4310  047F                     i1l1794:
  4311  047F  0879               	movf	___lldiv@divisor+3,w
  4312  0480  027D               	subwf	___lldiv@dividend+3,w
  4313  0481  1D03               	skipz
  4314  0482  2C8D               	goto	u158_25
  4315  0483  0878               	movf	___lldiv@divisor+2,w
  4316  0484  027C               	subwf	___lldiv@dividend+2,w
  4317  0485  1D03               	skipz
  4318  0486  2C8D               	goto	u158_25
  4319  0487  0877               	movf	___lldiv@divisor+1,w
  4320  0488  027B               	subwf	___lldiv@dividend+1,w
  4321  0489  1D03               	skipz
  4322  048A  2C8D               	goto	u158_25
  4323  048B  0876               	movf	___lldiv@divisor,w
  4324  048C  027A               	subwf	___lldiv@dividend,w
  4325  048D                     u158_25:
  4326  048D  1C03               	skipc
  4327  048E  2C90               	goto	u158_21
  4328  048F  2C91               	goto	u158_20
  4329  0490                     u158_21:
  4330  0490  2C9A               	goto	i1l1800
  4331  0491                     u158_20:
  4332  0491                     i1l1796:
  4333  0491  0876               	movf	___lldiv@divisor,w
  4334  0492  02FA               	subwf	___lldiv@dividend,f
  4335  0493  0877               	movf	___lldiv@divisor+1,w
  4336  0494  3BFB               	subwfb	___lldiv@dividend+1,f
  4337  0495  0878               	movf	___lldiv@divisor+2,w
  4338  0496  3BFC               	subwfb	___lldiv@dividend+2,f
  4339  0497  0879               	movf	___lldiv@divisor+3,w
  4340  0498  3BFD               	subwfb	___lldiv@dividend+3,f
  4341  0499                     i1l1798:
  4342  0499  1421               	bsf	___lldiv@quotient,0
  4343  049A                     i1l1800:
  4344  049A  3001               	movlw	1
  4345  049B                     u159_25:
  4346  049B  36F9               	lsrf	___lldiv@divisor+3,f
  4347  049C  0CF8               	rrf	___lldiv@divisor+2,f
  4348  049D  0CF7               	rrf	___lldiv@divisor+1,f
  4349  049E  0CF6               	rrf	___lldiv@divisor,f
  4350  049F  0B89               	decfsz	9,f
  4351  04A0  2C9B               	goto	u159_25
  4352  04A1                     i1l1802:
  4353  04A1  3001               	movlw	1
  4354  04A2  02A5               	subwf	___lldiv@counter,f
  4355  04A3  1D03               	btfss	3,2
  4356  04A4  2CA6               	goto	u160_21
  4357  04A5  2CA7               	goto	u160_20
  4358  04A6                     u160_21:
  4359  04A6  2C78               	goto	i1l1792
  4360  04A7                     u160_20:
  4361  04A7                     i1l1804:
  4362  04A7  0824               	movf	___lldiv@quotient+3,w
  4363  04A8  00F9               	movwf	?___lldiv+3
  4364  04A9  0823               	movf	___lldiv@quotient+2,w
  4365  04AA  00F8               	movwf	?___lldiv+2
  4366  04AB  0822               	movf	___lldiv@quotient+1,w
  4367  04AC  00F7               	movwf	?___lldiv+1
  4368  04AD  0821               	movf	___lldiv@quotient,w
  4369  04AE  00F6               	movwf	?___lldiv
  4370  04AF                     i1l578:
  4371  04AF  0008               	return
  4372  04B0                     __end_of___lldiv:
  4373                           
  4374                           	psect	text17
  4375  04B0                     __ptext17:	
  4376 ;; *************** function _readFilteredFreqPot *****************
  4377 ;; Defined at:
  4378 ;;		line 39 in file "Potentiometer.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  i               1    8[BANK0 ] unsigned char 
  4383 ;;  i               1    9[BANK0 ] unsigned char 
  4384 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  2   11[COMMON] unsigned short 
  4387 ;; Registers used:
  4388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4394 ;;      Params:         2       0       0       0       0       0
  4395 ;;      Locals:         0       6       0       0       0       0
  4396 ;;      Temps:          0       4       0       0       0       0
  4397 ;;      Totals:         2      10       0       0       0       0
  4398 ;;Total ram usage:       12 bytes
  4399 ;; Hardware stack levels used: 1
  4400 ;; Hardware stack levels required when called: 1
  4401 ;; This function calls:
  4402 ;;		_readADCRaw
  4403 ;; This function is called by:
  4404 ;;		_Tick980Hz
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408  04B0                     _readFilteredFreqPot:	
  4409                           ;psect for function _readFilteredFreqPot
  4410                           
  4411  04B0                     i1l1852:	
  4412                           ;incstack = 0
  4413                           ; Regs used in _readFilteredFreqPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4414                           
  4415                           
  4416                           ;Potentiometer.c: 40:     for(uint8_t i=0; i<16 -1; i++) freqPotFIFO[i] = freqPotFIFO[i+
      +                          1];
  4417  04B0  0020               	movlb	0	; select bank0
  4418  04B1  01A9               	clrf	readFilteredFreqPot@i
  4419  04B2                     i1l1858:
  4420  04B2  3529               	lslf	readFilteredFreqPot@i,w
  4421  04B3  3E42               	addlw	(low ((_freqPotFIFO| (0+256)+2)))& (0+255)
  4422  04B4  0086               	movwf	6
  4423  04B5  3001               	movlw	1	; select bank2/3
  4424  04B6  0087               	movwf	7
  4425  04B7  3529               	lslf	readFilteredFreqPot@i,w
  4426  04B8  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4427  04B9  0084               	movwf	4
  4428  04BA  3001               	movlw	1	; select bank2/3
  4429  04BB  0085               	movwf	5
  4430  04BC  3F40               	moviw [0]fsr1
  4431  04BD  3F80               	movwi [0]fsr0
  4432  04BE  3F41               	moviw [1]fsr1
  4433  04BF  3F81               	movwi [1]fsr0
  4434  04C0                     i1l1860:
  4435  04C0  3001               	movlw	1
  4436  04C1  00A0               	movwf	??_readFilteredFreqPot
  4437  04C2  0820               	movf	??_readFilteredFreqPot,w
  4438  04C3  07A9               	addwf	readFilteredFreqPot@i,f
  4439  04C4                     i1l1862:
  4440  04C4  300F               	movlw	15
  4441  04C5  0229               	subwf	readFilteredFreqPot@i,w
  4442  04C6  1C03               	skipc
  4443  04C7  2CC9               	goto	u166_21
  4444  04C8  2CCA               	goto	u166_20
  4445  04C9                     u166_21:
  4446  04C9  2CB2               	goto	i1l1858
  4447  04CA                     u166_20:
  4448  04CA                     i1l1864:
  4449                           
  4450                           ;Potentiometer.c: 41:     freqPotFIFO[16 -1] = readADCRaw(pinRB2);
  4451  04CA  300A               	movlw	10
  4452  04CB  3183  2334  3184   	fcall	_readADCRaw
  4453  04CE  0871               	movf	?_readADCRaw+1,w
  4454  04CF  0022               	movlb	2	; select bank2
  4455  04D0  00DF               	movwf	((_freqPotFIFO+1)^(0+256)+30)
  4456  04D1  0870               	movf	?_readADCRaw,w
  4457  04D2  00DE               	movwf	(_freqPotFIFO^(0+256)+30)
  4458  04D3                     i1l1866:
  4459                           
  4460                           ;Potentiometer.c: 42:     uint32_t sumOfSamples = 0;
  4461  04D3  3000               	movlw	0
  4462  04D4  0020               	movlb	0	; select bank0
  4463  04D5  00A7               	movwf	readFilteredFreqPot@sumOfSamples+3
  4464  04D6  3000               	movlw	0
  4465  04D7  00A6               	movwf	readFilteredFreqPot@sumOfSamples+2
  4466  04D8  3000               	movlw	0
  4467  04D9  00A5               	movwf	readFilteredFreqPot@sumOfSamples+1
  4468  04DA  3000               	movlw	0
  4469  04DB  00A4               	movwf	readFilteredFreqPot@sumOfSamples
  4470  04DC                     i1l1868:
  4471                           
  4472                           ;Potentiometer.c: 43:     for(uint8_t i=0; i<16; i++) sumOfSamples += freqPotFIFO[i];
  4473  04DC  01A8               	clrf	readFilteredFreqPot@i_700
  4474  04DD                     i1l1874:
  4475  04DD  3528               	lslf	readFilteredFreqPot@i_700,w
  4476  04DE  3E40               	addlw	(low (_freqPotFIFO| (0+256)))& (0+255)
  4477  04DF  0086               	movwf	6
  4478  04E0  3001               	movlw	1	; select bank2/3
  4479  04E1  0087               	movwf	7
  4480  04E2  3F40               	moviw [0]fsr1
  4481  04E3  00A0               	movwf	??_readFilteredFreqPot
  4482  04E4  3F41               	moviw [1]fsr1
  4483  04E5  00A1               	movwf	??_readFilteredFreqPot+1
  4484  04E6  0820               	movf	??_readFilteredFreqPot,w
  4485  04E7  07A4               	addwf	readFilteredFreqPot@sumOfSamples,f
  4486  04E8  0821               	movf	??_readFilteredFreqPot+1,w
  4487  04E9  3DA5               	addwfc	readFilteredFreqPot@sumOfSamples+1,f
  4488  04EA  3000               	movlw	0
  4489  04EB  3DA6               	addwfc	readFilteredFreqPot@sumOfSamples+2,f
  4490  04EC  3DA7               	addwfc	readFilteredFreqPot@sumOfSamples+3,f
  4491  04ED                     i1l1876:
  4492  04ED  3001               	movlw	1
  4493  04EE  00A0               	movwf	??_readFilteredFreqPot
  4494  04EF  0820               	movf	??_readFilteredFreqPot,w
  4495  04F0  07A8               	addwf	readFilteredFreqPot@i_700,f
  4496  04F1                     i1l1878:
  4497  04F1  3010               	movlw	16
  4498  04F2  0228               	subwf	readFilteredFreqPot@i_700,w
  4499  04F3  1C03               	skipc
  4500  04F4  2CF6               	goto	u167_21
  4501  04F5  2CF7               	goto	u167_20
  4502  04F6                     u167_21:
  4503  04F6  2CDD               	goto	i1l1874
  4504  04F7                     u167_20:
  4505  04F7                     i1l1880:
  4506                           
  4507                           ;Potentiometer.c: 45:     return (sumOfSamples >> 4);
  4508  04F7  0824               	movf	readFilteredFreqPot@sumOfSamples,w
  4509  04F8  00A0               	movwf	??_readFilteredFreqPot
  4510  04F9  0825               	movf	readFilteredFreqPot@sumOfSamples+1,w
  4511  04FA  00A1               	movwf	??_readFilteredFreqPot+1
  4512  04FB  0826               	movf	readFilteredFreqPot@sumOfSamples+2,w
  4513  04FC  00A2               	movwf	??_readFilteredFreqPot+2
  4514  04FD  0827               	movf	readFilteredFreqPot@sumOfSamples+3,w
  4515  04FE  00A3               	movwf	??_readFilteredFreqPot+3
  4516  04FF  3004               	movlw	4
  4517  0500                     u168_25:
  4518  0500  36A3               	lsrf	??_readFilteredFreqPot+3,f
  4519  0501  0CA2               	rrf	??_readFilteredFreqPot+2,f
  4520  0502  0CA1               	rrf	??_readFilteredFreqPot+1,f
  4521  0503  0CA0               	rrf	??_readFilteredFreqPot,f
  4522  0504                     u168_20:
  4523  0504  0B89               	decfsz	9,f
  4524  0505  2D00               	goto	u168_25
  4525  0506  0821               	movf	??_readFilteredFreqPot+1,w
  4526  0507  00FC               	movwf	?_readFilteredFreqPot+1
  4527  0508  0820               	movf	??_readFilteredFreqPot,w
  4528  0509  00FB               	movwf	?_readFilteredFreqPot
  4529  050A                     i1l331:
  4530  050A  0008               	return
  4531  050B                     __end_of_readFilteredFreqPot:
  4532                           
  4533                           	psect	text18
  4534  050B                     __ptext18:	
  4535 ;; *************** function _readFilteredDutyPot *****************
  4536 ;; Defined at:
  4537 ;;		line 25 in file "Potentiometer.c"
  4538 ;; Parameters:    Size  Location     Type
  4539 ;;		None
  4540 ;; Auto vars:     Size  Location     Type
  4541 ;;  i               1    8[BANK0 ] unsigned char 
  4542 ;;  i               1    9[BANK0 ] unsigned char 
  4543 ;;  sumOfSamples    4    4[BANK0 ] unsigned long 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  2   11[COMMON] unsigned short 
  4546 ;; Registers used:
  4547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4553 ;;      Params:         2       0       0       0       0       0
  4554 ;;      Locals:         0       6       0       0       0       0
  4555 ;;      Temps:          0       4       0       0       0       0
  4556 ;;      Totals:         2      10       0       0       0       0
  4557 ;;Total ram usage:       12 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 1
  4560 ;; This function calls:
  4561 ;;		_readADCRaw
  4562 ;; This function is called by:
  4563 ;;		_Tick980Hz
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567  050B                     _readFilteredDutyPot:	
  4568                           ;psect for function _readFilteredDutyPot
  4569                           
  4570  050B                     i1l1820:	
  4571                           ;incstack = 0
  4572                           ; Regs used in _readFilteredDutyPot: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4573                           
  4574                           
  4575                           ;Potentiometer.c: 26:     for(uint8_t i=0; i<16 -1; i++) dutyPotFIFO[i] = dutyPotFIFO[i+
      +                          1];
  4576  050B  0020               	movlb	0	; select bank0
  4577  050C  01A9               	clrf	readFilteredDutyPot@i
  4578  050D                     i1l1826:
  4579  050D  3529               	lslf	readFilteredDutyPot@i,w
  4580  050E  3E22               	addlw	(low ((_dutyPotFIFO| (0+256)+2)))& (0+255)
  4581  050F  0086               	movwf	6
  4582  0510  3001               	movlw	1	; select bank2/3
  4583  0511  0087               	movwf	7
  4584  0512  3529               	lslf	readFilteredDutyPot@i,w
  4585  0513  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4586  0514  0084               	movwf	4
  4587  0515  3001               	movlw	1	; select bank2/3
  4588  0516  0085               	movwf	5
  4589  0517  3F40               	moviw [0]fsr1
  4590  0518  3F80               	movwi [0]fsr0
  4591  0519  3F41               	moviw [1]fsr1
  4592  051A  3F81               	movwi [1]fsr0
  4593  051B                     i1l1828:
  4594  051B  3001               	movlw	1
  4595  051C  00A0               	movwf	??_readFilteredDutyPot
  4596  051D  0820               	movf	??_readFilteredDutyPot,w
  4597  051E  07A9               	addwf	readFilteredDutyPot@i,f
  4598  051F                     i1l1830:
  4599  051F  300F               	movlw	15
  4600  0520  0229               	subwf	readFilteredDutyPot@i,w
  4601  0521  1C03               	skipc
  4602  0522  2D24               	goto	u163_21
  4603  0523  2D25               	goto	u163_20
  4604  0524                     u163_21:
  4605  0524  2D0D               	goto	i1l1826
  4606  0525                     u163_20:
  4607  0525                     i1l1832:
  4608                           
  4609                           ;Potentiometer.c: 27:     dutyPotFIFO[16 -1] = readADCRaw(pinRB1);
  4610  0525  3009               	movlw	9
  4611  0526  3183  2334  3185   	fcall	_readADCRaw
  4612  0529  0871               	movf	?_readADCRaw+1,w
  4613  052A  0022               	movlb	2	; select bank2
  4614  052B  00BF               	movwf	((_dutyPotFIFO+1)^(0+256)+30)
  4615  052C  0870               	movf	?_readADCRaw,w
  4616  052D  00BE               	movwf	(_dutyPotFIFO^(0+256)+30)
  4617  052E                     i1l1834:
  4618                           
  4619                           ;Potentiometer.c: 28:     uint32_t sumOfSamples = 0;
  4620  052E  3000               	movlw	0
  4621  052F  0020               	movlb	0	; select bank0
  4622  0530  00A7               	movwf	readFilteredDutyPot@sumOfSamples+3
  4623  0531  3000               	movlw	0
  4624  0532  00A6               	movwf	readFilteredDutyPot@sumOfSamples+2
  4625  0533  3000               	movlw	0
  4626  0534  00A5               	movwf	readFilteredDutyPot@sumOfSamples+1
  4627  0535  3000               	movlw	0
  4628  0536  00A4               	movwf	readFilteredDutyPot@sumOfSamples
  4629  0537                     i1l1836:
  4630                           
  4631                           ;Potentiometer.c: 29:     for(uint8_t i=0; i<16; i++) sumOfSamples += dutyPotFIFO[i];
  4632  0537  01A8               	clrf	readFilteredDutyPot@i_696
  4633  0538                     i1l1842:
  4634  0538  3528               	lslf	readFilteredDutyPot@i_696,w
  4635  0539  3E20               	addlw	(low (_dutyPotFIFO| (0+256)))& (0+255)
  4636  053A  0086               	movwf	6
  4637  053B  3001               	movlw	1	; select bank2/3
  4638  053C  0087               	movwf	7
  4639  053D  3F40               	moviw [0]fsr1
  4640  053E  00A0               	movwf	??_readFilteredDutyPot
  4641  053F  3F41               	moviw [1]fsr1
  4642  0540  00A1               	movwf	??_readFilteredDutyPot+1
  4643  0541  0820               	movf	??_readFilteredDutyPot,w
  4644  0542  07A4               	addwf	readFilteredDutyPot@sumOfSamples,f
  4645  0543  0821               	movf	??_readFilteredDutyPot+1,w
  4646  0544  3DA5               	addwfc	readFilteredDutyPot@sumOfSamples+1,f
  4647  0545  3000               	movlw	0
  4648  0546  3DA6               	addwfc	readFilteredDutyPot@sumOfSamples+2,f
  4649  0547  3DA7               	addwfc	readFilteredDutyPot@sumOfSamples+3,f
  4650  0548                     i1l1844:
  4651  0548  3001               	movlw	1
  4652  0549  00A0               	movwf	??_readFilteredDutyPot
  4653  054A  0820               	movf	??_readFilteredDutyPot,w
  4654  054B  07A8               	addwf	readFilteredDutyPot@i_696,f
  4655  054C                     i1l1846:
  4656  054C  3010               	movlw	16
  4657  054D  0228               	subwf	readFilteredDutyPot@i_696,w
  4658  054E  1C03               	skipc
  4659  054F  2D51               	goto	u164_21
  4660  0550  2D52               	goto	u164_20
  4661  0551                     u164_21:
  4662  0551  2D38               	goto	i1l1842
  4663  0552                     u164_20:
  4664  0552                     i1l1848:
  4665                           
  4666                           ;Potentiometer.c: 31:     return (sumOfSamples >> 4);
  4667  0552  0824               	movf	readFilteredDutyPot@sumOfSamples,w
  4668  0553  00A0               	movwf	??_readFilteredDutyPot
  4669  0554  0825               	movf	readFilteredDutyPot@sumOfSamples+1,w
  4670  0555  00A1               	movwf	??_readFilteredDutyPot+1
  4671  0556  0826               	movf	readFilteredDutyPot@sumOfSamples+2,w
  4672  0557  00A2               	movwf	??_readFilteredDutyPot+2
  4673  0558  0827               	movf	readFilteredDutyPot@sumOfSamples+3,w
  4674  0559  00A3               	movwf	??_readFilteredDutyPot+3
  4675  055A  3004               	movlw	4
  4676  055B                     u165_25:
  4677  055B  36A3               	lsrf	??_readFilteredDutyPot+3,f
  4678  055C  0CA2               	rrf	??_readFilteredDutyPot+2,f
  4679  055D  0CA1               	rrf	??_readFilteredDutyPot+1,f
  4680  055E  0CA0               	rrf	??_readFilteredDutyPot,f
  4681  055F                     u165_20:
  4682  055F  0B89               	decfsz	9,f
  4683  0560  2D5B               	goto	u165_25
  4684  0561  0821               	movf	??_readFilteredDutyPot+1,w
  4685  0562  00FC               	movwf	?_readFilteredDutyPot+1
  4686  0563  0820               	movf	??_readFilteredDutyPot,w
  4687  0564  00FB               	movwf	?_readFilteredDutyPot
  4688  0565                     i1l324:
  4689  0565  0008               	return
  4690  0566                     __end_of_readFilteredDutyPot:
  4691                           
  4692                           	psect	text19
  4693  0334                     __ptext19:	
  4694 ;; *************** function _readADCRaw *****************
  4695 ;; Defined at:
  4696 ;;		line 71 in file "ADC.c"
  4697 ;; Parameters:    Size  Location     Type
  4698 ;;  gpioNumber      1    wreg     const enum E2798
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  gpioNumber      1   10[COMMON] const enum E2798
  4701 ;;  i               1    9[COMMON] unsigned char 
  4702 ;;  i               1    8[COMMON] unsigned char 
  4703 ;;  returnValue     2    4[COMMON] unsigned int 
  4704 ;;  gpioValid       1    7[COMMON] unsigned char 
  4705 ;;  channel         1    6[COMMON] unsigned char 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    0[COMMON] unsigned short 
  4708 ;; Registers used:
  4709 ;;		wreg, status,2, status,0
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4715 ;;      Params:         2       0       0       0       0       0
  4716 ;;      Locals:         7       0       0       0       0       0
  4717 ;;      Temps:          2       0       0       0       0       0
  4718 ;;      Totals:        11       0       0       0       0       0
  4719 ;;Total ram usage:       11 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; This function calls:
  4722 ;;		Nothing
  4723 ;; This function is called by:
  4724 ;;		_readFilteredDutyPot
  4725 ;;		_readFilteredFreqPot
  4726 ;;		_readFilteredIDS
  4727 ;; This function uses a non-reentrant model
  4728 ;;
  4729                           
  4730  0334                     _readADCRaw:	
  4731                           ;psect for function _readADCRaw
  4732                           
  4733                           
  4734                           ;incstack = 0
  4735                           ; Regs used in _readADCRaw: [wreg+status,2+status,0]
  4736                           ;readADCRaw@gpioNumber stored from wreg
  4737  0334  00FA               	movwf	readADCRaw@gpioNumber
  4738  0335                     i1l1680:
  4739                           
  4740                           ;ADC.c: 72:     uint8_t channel = 0;
  4741  0335  01F6               	clrf	readADCRaw@channel
  4742                           
  4743                           ;ADC.c: 73:     uint8_t gpioValid = 0;
  4744  0336  01F7               	clrf	readADCRaw@gpioValid
  4745  0337                     i1l1682:
  4746                           
  4747                           ;ADC.c: 75:     if(gpioNumber < 4){
  4748  0337  3004               	movlw	4
  4749  0338  027A               	subwf	readADCRaw@gpioNumber,w
  4750  0339  1803               	skipnc
  4751  033A  2B3C               	goto	u131_21
  4752  033B  2B3D               	goto	u131_20
  4753  033C                     u131_21:
  4754  033C  2B43               	goto	i1l208
  4755  033D                     u131_20:
  4756  033D                     i1l1684:
  4757                           
  4758                           ;ADC.c: 76:         channel = gpioNumber;
  4759  033D  087A               	movf	readADCRaw@gpioNumber,w
  4760  033E  00F2               	movwf	??_readADCRaw
  4761  033F  0872               	movf	??_readADCRaw,w
  4762  0340  00F6               	movwf	readADCRaw@channel
  4763  0341                     i1l1686:
  4764                           
  4765                           ;ADC.c: 77:         gpioValid = 1;
  4766  0341  01F7               	clrf	readADCRaw@gpioValid
  4767  0342  0AF7               	incf	readADCRaw@gpioValid,f
  4768  0343                     i1l208:	
  4769                           ;ADC.c: 78:     }
  4770                           
  4771                           
  4772                           ;ADC.c: 79:     if((gpioNumber > 8u) && (gpioNumber <= 15u)){
  4773  0343  3009               	movlw	9
  4774  0344  027A               	subwf	readADCRaw@gpioNumber,w
  4775  0345  1C03               	skipc
  4776  0346  2B48               	goto	u132_21
  4777  0347  2B49               	goto	u132_20
  4778  0348                     u132_21:
  4779  0348  2B56               	goto	i1l209
  4780  0349                     u132_20:
  4781  0349                     i1l1688:
  4782  0349  3010               	movlw	16
  4783  034A  027A               	subwf	readADCRaw@gpioNumber,w
  4784  034B  1803               	skipnc
  4785  034C  2B4E               	goto	u133_21
  4786  034D  2B4F               	goto	u133_20
  4787  034E                     u133_21:
  4788  034E  2B56               	goto	i1l209
  4789  034F                     u133_20:
  4790  034F                     i1l1690:
  4791                           
  4792                           ;ADC.c: 80:         channel = 12u - (gpioNumber - 8);
  4793  034F  087A               	movf	readADCRaw@gpioNumber,w
  4794  0350  3C14               	sublw	20
  4795  0351  00F2               	movwf	??_readADCRaw
  4796  0352  0872               	movf	??_readADCRaw,w
  4797  0353  00F6               	movwf	readADCRaw@channel
  4798  0354                     i1l1692:
  4799                           
  4800                           ;ADC.c: 81:         gpioValid = 1;
  4801  0354  01F7               	clrf	readADCRaw@gpioValid
  4802  0355  0AF7               	incf	readADCRaw@gpioValid,f
  4803  0356                     i1l209:	
  4804                           ;ADC.c: 82:     }
  4805                           
  4806                           
  4807                           ;ADC.c: 83:     if(gpioValid){
  4808  0356  0877               	movf	readADCRaw@gpioValid,w
  4809  0357  1903               	btfsc	3,2
  4810  0358  2B5A               	goto	u134_21
  4811  0359  2B5B               	goto	u134_20
  4812  035A                     u134_21:
  4813  035A  2B95               	goto	i1l219
  4814  035B                     u134_20:
  4815  035B                     i1l1694:
  4816                           
  4817                           ;ADC.c: 85:         if(~ADCON0bits.GO_nDONE){
  4818  035B  0021               	movlb	1	; select bank1
  4819  035C  081D               	movf	29,w	;volatile
  4820  035D                     i1l1696:
  4821                           
  4822                           ;ADC.c: 86:             ADCON0 &= ~(0b01111100);
  4823  035D  3083               	movlw	131
  4824  035E  00F2               	movwf	??_readADCRaw
  4825  035F  0872               	movf	??_readADCRaw,w
  4826  0360  059D               	andwf	29,f	;volatile
  4827  0361                     i1l1698:
  4828                           
  4829                           ;ADC.c: 87:             ADCON0 |= (channel << 2);
  4830  0361  0876               	movf	readADCRaw@channel,w	;volatile
  4831  0362  00F2               	movwf	??_readADCRaw
  4832  0363  3001               	movlw	1
  4833  0364                     u135_25:
  4834  0364  35F2               	lslf	??_readADCRaw,f
  4835  0365  3EFF               	addlw	-1
  4836  0366  1D03               	skipz
  4837  0367  2B64               	goto	u135_25
  4838  0368  3572               	lslf	??_readADCRaw,w
  4839  0369  00F3               	movwf	??_readADCRaw+1
  4840  036A  0873               	movf	??_readADCRaw+1,w
  4841  036B  049D               	iorwf	29,f	;volatile
  4842  036C                     i1l1700:
  4843                           
  4844                           ;ADC.c: 88:             for(uint8_t i = 0; i < 8; i++);
  4845  036C  01F8               	clrf	readADCRaw@i
  4846  036D                     i1l1706:
  4847  036D  3001               	movlw	1
  4848  036E  00F2               	movwf	??_readADCRaw
  4849  036F  0872               	movf	??_readADCRaw,w
  4850  0370  07F8               	addwf	readADCRaw@i,f
  4851  0371                     i1l1708:
  4852  0371  3008               	movlw	8
  4853  0372  0278               	subwf	readADCRaw@i,w
  4854  0373  1C03               	skipc
  4855  0374  2B76               	goto	u136_21
  4856  0375  2B77               	goto	u136_20
  4857  0376                     u136_21:
  4858  0376  2B6D               	goto	i1l1706
  4859  0377                     u136_20:
  4860  0377                     i1l213:
  4861                           
  4862                           ;ADC.c: 90:             ADCON0bits.GO_nDONE = 1;
  4863  0377  0021               	movlb	1	; select bank1
  4864  0378  149D               	bsf	29,1	;volatile
  4865  0379                     i1l214:	
  4866                           ;ADC.c: 91:             while(ADCON0bits.GO_nDONE);
  4867                           
  4868  0379  189D               	btfsc	29,1	;volatile
  4869  037A  2B7C               	goto	u137_21
  4870  037B  2B7D               	goto	u137_20
  4871  037C                     u137_21:
  4872  037C  2B79               	goto	i1l214
  4873  037D                     u137_20:
  4874  037D                     i1l1710:
  4875                           
  4876                           ;ADC.c: 92:             unsigned int returnValue = ((ADRESH<<8)+ADRESL);
  4877  037D  081C               	movf	28,w	;volatile
  4878  037E  00F5               	movwf	readADCRaw@returnValue+1
  4879  037F  081B               	movf	27,w	;volatile
  4880  0380  00F4               	movwf	readADCRaw@returnValue
  4881  0381                     i1l1712:
  4882                           
  4883                           ;ADC.c: 93:             ADCON0 &= ~(0b01111100);
  4884  0381  3083               	movlw	131
  4885  0382  00F2               	movwf	??_readADCRaw
  4886  0383  0872               	movf	??_readADCRaw,w
  4887  0384  059D               	andwf	29,f	;volatile
  4888  0385                     i1l1714:
  4889                           
  4890                           ;ADC.c: 94:             ADCON0 |= (0b010 << 2);
  4891  0385  159D               	bsf	29,3	;volatile
  4892  0386                     i1l1716:
  4893                           
  4894                           ;ADC.c: 95:             for(uint8_t i = 0; i < 8; i++);
  4895  0386  01F9               	clrf	readADCRaw@i_614
  4896  0387                     i1l1722:
  4897  0387  3001               	movlw	1
  4898  0388  00F2               	movwf	??_readADCRaw
  4899  0389  0872               	movf	??_readADCRaw,w
  4900  038A  07F9               	addwf	readADCRaw@i_614,f
  4901  038B                     i1l1724:
  4902  038B  3008               	movlw	8
  4903  038C  0279               	subwf	readADCRaw@i_614,w
  4904  038D  1C03               	skipc
  4905  038E  2B90               	goto	u138_21
  4906  038F  2B91               	goto	u138_20
  4907  0390                     u138_21:
  4908  0390  2B87               	goto	i1l1722
  4909  0391                     u138_20:
  4910  0391                     i1l1726:
  4911                           
  4912                           ;ADC.c: 97:             return returnValue;
  4913  0391  0875               	movf	readADCRaw@returnValue+1,w
  4914  0392  00F1               	movwf	?_readADCRaw+1
  4915  0393  0874               	movf	readADCRaw@returnValue,w
  4916  0394  00F0               	movwf	?_readADCRaw
  4917  0395                     i1l219:
  4918  0395  0008               	return
  4919  0396                     __end_of_readADCRaw:
  4920                           
  4921                           	psect	text20
  4922  0687                     __ptext20:	
  4923 ;; *************** function _currentTripRead *****************
  4924 ;; Defined at:
  4925 ;;		line 30 in file "CurrentSensor.c"
  4926 ;; Parameters:    Size  Location     Type
  4927 ;;		None
  4928 ;; Auto vars:     Size  Location     Type
  4929 ;;		None
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      unsigned char 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, pclath, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4939 ;;      Params:         0       0       0       0       0       0
  4940 ;;      Locals:         1       0       0       0       0       0
  4941 ;;      Temps:          0       0       0       0       0       0
  4942 ;;      Totals:         1       0       0       0       0       0
  4943 ;;Total ram usage:        1 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 1
  4946 ;; This function calls:
  4947 ;;		_readGPIO
  4948 ;; This function is called by:
  4949 ;;		_Tick980Hz
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953  0687                     _currentTripRead:	
  4954                           ;psect for function _currentTripRead
  4955                           
  4956  0687                     i1l1808:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _currentTripRead: [wreg+status,2+status,0+pclath+cstack]
  4959                           
  4960                           
  4961                           ;CurrentSensor.c: 31:     return (~(readGPIO(pinRA3) || readGPIO(pinRA1)));
  4962  0687  01F6               	clrf	_currentTripRead$739
  4963  0688  0AF6               	incf	_currentTripRead$739,f
  4964  0689                     i1l1810:
  4965  0689  3003               	movlw	3
  4966  068A  3185  2566  3186   	fcall	_readGPIO
  4967  068D  3A00               	xorlw	0
  4968  068E  1D03               	skipz
  4969  068F  2E91               	goto	u161_21
  4970  0690  2E92               	goto	u161_20
  4971  0691                     u161_21:
  4972  0691  2E9C               	goto	i1l1816
  4973  0692                     u161_20:
  4974  0692                     i1l1812:
  4975  0692  3001               	movlw	1
  4976  0693  3185  2566  3186   	fcall	_readGPIO
  4977  0696  3A00               	xorlw	0
  4978  0697  1D03               	skipz
  4979  0698  2E9A               	goto	u162_21
  4980  0699  2E9B               	goto	u162_20
  4981  069A                     u162_21:
  4982  069A  2E9C               	goto	i1l1816
  4983  069B                     u162_20:
  4984  069B                     i1l1814:
  4985  069B  01F6               	clrf	_currentTripRead$739
  4986  069C                     i1l1816:
  4987  069C  0976               	comf	_currentTripRead$739,w
  4988  069D                     i1l375:
  4989  069D  0008               	return
  4990  069E                     __end_of_currentTripRead:
  4991                           
  4992                           	psect	text21
  4993  0566                     __ptext21:	
  4994 ;; *************** function _readGPIO *****************
  4995 ;; Defined at:
  4996 ;;		line 79 in file "GPIO.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  gpioNumber      1    wreg     const enum E2798
  4999 ;; Auto vars:     Size  Location     Type
  5000 ;;  gpioNumber      1    4[COMMON] const enum E2798
  5001 ;;  portNumber      1    5[COMMON] unsigned char 
  5002 ;;  portType        1    3[COMMON] unsigned char 
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      _Bool 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : 0/0
  5009 ;;		On exit  : 0/0
  5010 ;;		Unchanged: 0/0
  5011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5012 ;;      Params:         0       0       0       0       0       0
  5013 ;;      Locals:         3       0       0       0       0       0
  5014 ;;      Temps:          3       0       0       0       0       0
  5015 ;;      Totals:         6       0       0       0       0       0
  5016 ;;Total ram usage:        6 bytes
  5017 ;; Hardware stack levels used: 1
  5018 ;; This function calls:
  5019 ;;		Nothing
  5020 ;; This function is called by:
  5021 ;;		_currentTripRead
  5022 ;; This function uses a non-reentrant model
  5023 ;;
  5024                           
  5025  0566                     _readGPIO:	
  5026                           ;psect for function _readGPIO
  5027                           
  5028                           
  5029                           ;incstack = 0
  5030                           ; Regs used in _readGPIO: [wreg+status,2+status,0]
  5031                           ;readGPIO@gpioNumber stored from wreg
  5032  0566  00F4               	movwf	readGPIO@gpioNumber
  5033  0567                     i1l1730:
  5034                           
  5035                           ;GPIO.c: 81:     uint8_t portType = 0;
  5036  0567  01F3               	clrf	readGPIO@portType
  5037  0568                     i1l1732:
  5038                           
  5039                           ;GPIO.c: 82:     if(gpioNumber > 7){
  5040  0568  3008               	movlw	8
  5041  0569  0274               	subwf	readGPIO@gpioNumber,w
  5042  056A  1C03               	skipc
  5043  056B  2D6D               	goto	u139_21
  5044  056C  2D6E               	goto	u139_20
  5045  056D                     u139_21:
  5046  056D  2D76               	goto	i1l1738
  5047  056E                     u139_20:
  5048  056E                     i1l1734:
  5049                           
  5050                           ;GPIO.c: 83:         portNumber = gpioNumber - 8;
  5051  056E  0874               	movf	readGPIO@gpioNumber,w
  5052  056F  3EF8               	addlw	248
  5053  0570  00F0               	movwf	??_readGPIO
  5054  0571  0870               	movf	??_readGPIO,w
  5055  0572  00F5               	movwf	readGPIO@portNumber
  5056  0573                     i1l1736:
  5057                           
  5058                           ;GPIO.c: 84:         portType = 1;
  5059  0573  01F3               	clrf	readGPIO@portType
  5060  0574  0AF3               	incf	readGPIO@portType,f
  5061                           
  5062                           ;GPIO.c: 85:     }
  5063  0575  2D7B               	goto	i1l1742
  5064  0576                     i1l1738:
  5065                           
  5066                           ;GPIO.c: 87:         portNumber = gpioNumber;
  5067  0576  0874               	movf	readGPIO@gpioNumber,w
  5068  0577  00F0               	movwf	??_readGPIO
  5069  0578  0870               	movf	??_readGPIO,w
  5070  0579  00F5               	movwf	readGPIO@portNumber
  5071  057A                     i1l1740:
  5072                           
  5073                           ;GPIO.c: 88:         portType = 0;
  5074  057A  01F3               	clrf	readGPIO@portType
  5075  057B                     i1l1742:
  5076                           
  5077                           ;GPIO.c: 91:     if(portType == 0){
  5078  057B  0873               	movf	readGPIO@portType,w
  5079  057C  1D03               	btfss	3,2
  5080  057D  2D7F               	goto	u140_21
  5081  057E  2D80               	goto	u140_20
  5082  057F                     u140_21:
  5083  057F  2D95               	goto	i1l1750
  5084  0580                     u140_20:
  5085  0580                     i1l1744:
  5086                           
  5087                           ;GPIO.c: 92:         return ((PORTA &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  5088  0580  3001               	movlw	1
  5089  0581  00F0               	movwf	??_readGPIO
  5090  0582  0A75               	incf	readGPIO@portNumber,w
  5091  0583  2D85               	goto	u141_24
  5092  0584                     u141_25:
  5093  0584  35F0               	lslf	??_readGPIO,f
  5094  0585                     u141_24:
  5095  0585  0B89               	decfsz	9,f
  5096  0586  2D84               	goto	u141_25
  5097  0587  0870               	movf	??_readGPIO,w
  5098  0588  00F1               	movwf	??_readGPIO+1
  5099  0589  0871               	movf	??_readGPIO+1,w
  5100  058A  0020               	movlb	0	; select bank0
  5101  058B  058C               	andwf	12,f	;volatile
  5102  058C  080C               	movf	12,w	;volatile
  5103  058D  00F2               	movwf	??_readGPIO+2
  5104  058E  0A75               	incf	readGPIO@portNumber,w
  5105  058F  2D91               	goto	u142_24
  5106  0590                     u142_25:
  5107  0590  36F2               	lsrf	??_readGPIO+2,f
  5108  0591                     u142_24:
  5109  0591  0B89               	decfsz	9,f
  5110  0592  2D90               	goto	u142_25
  5111  0593  0872               	movf	??_readGPIO+2,w
  5112  0594  2DAE               	goto	i1l286
  5113  0595                     i1l1750:
  5114  0595  0373               	decf	readGPIO@portType,w
  5115  0596  1D03               	btfss	3,2
  5116  0597  2D99               	goto	u143_21
  5117  0598  2D9A               	goto	u143_20
  5118  0599                     u143_21:
  5119  0599  2DAE               	goto	i1l286
  5120  059A                     u143_20:
  5121  059A                     i1l1752:
  5122                           
  5123                           ;GPIO.c: 95:         return ((PORTB &= (1 << (uint8_t)portNumber)) >> (uint8_t)portNumbe
      +                          r);
  5124  059A  3001               	movlw	1
  5125  059B  00F0               	movwf	??_readGPIO
  5126  059C  0A75               	incf	readGPIO@portNumber,w
  5127  059D  2D9F               	goto	u144_24
  5128  059E                     u144_25:
  5129  059E  35F0               	lslf	??_readGPIO,f
  5130  059F                     u144_24:
  5131  059F  0B89               	decfsz	9,f
  5132  05A0  2D9E               	goto	u144_25
  5133  05A1  0870               	movf	??_readGPIO,w
  5134  05A2  00F1               	movwf	??_readGPIO+1
  5135  05A3  0871               	movf	??_readGPIO+1,w
  5136  05A4  0020               	movlb	0	; select bank0
  5137  05A5  058D               	andwf	13,f	;volatile
  5138  05A6  080D               	movf	13,w	;volatile
  5139  05A7  00F2               	movwf	??_readGPIO+2
  5140  05A8  0A75               	incf	readGPIO@portNumber,w
  5141  05A9  2DAB               	goto	u145_24
  5142  05AA                     u145_25:
  5143  05AA  36F2               	lsrf	??_readGPIO+2,f
  5144  05AB                     u145_24:
  5145  05AB  0B89               	decfsz	9,f
  5146  05AC  2DAA               	goto	u145_25
  5147  05AD  0872               	movf	??_readGPIO+2,w
  5148  05AE                     i1l286:
  5149  05AE  0008               	return
  5150  05AF                     __end_of_readGPIO:
  5151  007E                     btemp	set	126	;btemp
  5152  007E                     int$flags	set	126
  5153  007E                     wtemp0	set	126
  5154                           
  5155                           	psect	idloc
  5156                           
  5157                           ;Config register IDLOC0 @ 0x8000
  5158                           ;	unspecified, using default values
  5159  8000                     	org	32768
  5160  8000  3FFF               	dw	16383
  5161                           
  5162                           ;Config register IDLOC1 @ 0x8001
  5163                           ;	unspecified, using default values
  5164  8001                     	org	32769
  5165  8001  3FFF               	dw	16383
  5166                           
  5167                           ;Config register IDLOC2 @ 0x8002
  5168                           ;	unspecified, using default values
  5169  8002                     	org	32770
  5170  8002  3FFF               	dw	16383
  5171                           
  5172                           ;Config register IDLOC3 @ 0x8003
  5173                           ;	unspecified, using default values
  5174  8003                     	org	32771
  5175  8003  3FFF               	dw	16383
  5176                           
  5177                           	psect	config
  5178                           
  5179                           ;Config register CONFIG1 @ 0x8007
  5180                           ;	Oscillator Selection
  5181                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5182                           ;	Watchdog Timer Enable
  5183                           ;	WDTE = OFF, WDT disabled
  5184                           ;	Power-up Timer Enable
  5185                           ;	PWRTE = OFF, PWRT disabled
  5186                           ;	MCLR Pin Function Select
  5187                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
  5188                           ;	Flash Program Memory Code Protection
  5189                           ;	CP = OFF, Program memory code protection is disabled
  5190                           ;	Data Memory Code Protection
  5191                           ;	CPD = OFF, Data memory code protection is disabled
  5192                           ;	Brown-out Reset Enable
  5193                           ;	BOREN = ON, Brown-out Reset enabled
  5194                           ;	Clock Out Enable
  5195                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5196                           ;	Internal/External Switchover
  5197                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5198                           ;	Fail-Safe Clock Monitor Enable
  5199                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5200  8007                     	org	32775
  5201  8007  0FA4               	dw	4004
  5202                           
  5203                           ;Config register CONFIG2 @ 0x8008
  5204                           ;	Flash Memory Self-Write Protection
  5205                           ;	WRT = OFF, Write protection off
  5206                           ;	PLL Enable
  5207                           ;	PLLEN = OFF, 4x PLL disabled
  5208                           ;	Stack Overflow/Underflow Reset Enable
  5209                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  5210                           ;	Brown-out Reset Voltage Selection
  5211                           ;	BORV = 0x1, unprogrammed default
  5212                           ;	Low-Voltage Programming Enable
  5213                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  5214  8008                     	org	32776
  5215  8008  1CFF               	dw	7423

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         152
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      53
    BANK1            80      0      64
    BANK2            80      0      64
    BANK3            80      0       0
    BANK4            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _Tick980Hz in COMMON

    _runPotScaling->___lldiv
    ___lldiv->___wmul
    _readFilteredFreqPot->_readADCRaw
    _readFilteredDutyPot->_readADCRaw
    _currentTripRead->_readGPIO

Critical Paths under _main in BANK0

    _main->_initialiseGPIO
    _setupPWM->_initialiseGPIO
    _initialisePotentiometers->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseADCPin
    _initialiseCurrentSensors->_initialiseGPIO
    _initialiseCurrentSensors->_writeGPIO

Critical Paths under _Tick980Hz in BANK0

    _Tick980Hz->_runPotScaling
    _runPotScaling->___lldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _Tick980Hz in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Tick980Hz in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Tick980Hz in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Tick980Hz in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     0      4    3134
                                             25 BANK0      4     0      4
                _initialiseADCModule
           _initialiseCurrentSensors
                     _initialiseGPIO
           _initialisePotentiometers
            _setupInternalOscillator
                           _setupPWM
               _setupTimer0Interrupt
 ---------------------------------------------------------------------------------
 (1) _setupTimer0Interrupt                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setupPWM                                             0     0      0     672
                     _initialiseGPIO
 ---------------------------------------------------------------------------------
 (1) _setupInternalOscillator                              3     3      0      22
                                             19 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _initialisePotentiometers                             0     0      0     273
                   _initialiseADCPin
 ---------------------------------------------------------------------------------
 (1) _initialiseCurrentSensors                             0     0      0    1495
                   _initialiseADCPin
                     _initialiseGPIO
                          _writeGPIO
 ---------------------------------------------------------------------------------
 (2) _writeGPIO                                            6     5      1     550
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseGPIO                                       6     5      1     672
                                             19 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) _initialiseADCPin                                     6     6      0     273
                                             19 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _initialiseADCModule                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _Tick980Hz                                            1     1      0    3600
                                             18 BANK0      1     1      0
                    _currentTripRead
                _readFilteredDutyPot
                _readFilteredFreqPot
                      _runPotScaling
                _setPWMDutyandPeriod
                        i1_writeGPIO
 ---------------------------------------------------------------------------------
 (4) i1_writeGPIO                                          6     5      1     326
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (4) _runPotScaling                                       12    12      0    1740
                                              6 BANK0     12    12      0
                            ___lldiv
                             ___lmul
                             ___wmul
                _setPWMDutyandPeriod
 ---------------------------------------------------------------------------------
 (4) _setPWMDutyandPeriod                                  5     2      3     392
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     396
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             14     6      8     466
                                              6 COMMON     8     0      8
                                              0 BANK0      6     6      0
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (4) _readFilteredFreqPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (4) _readFilteredDutyPot                                 12    10      2     457
                                             11 COMMON     2     0      2
                                              0 BANK0     10    10      0
                         _readADCRaw
 ---------------------------------------------------------------------------------
 (5) _readADCRaw                                          11     9      2     275
                                              0 COMMON    11     9      2
 ---------------------------------------------------------------------------------
 (4) _currentTripRead                                      1     1      0     228
                                              6 COMMON     1     1      0
                           _readGPIO
 ---------------------------------------------------------------------------------
 (5) _readGPIO                                             6     6      0     204
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialiseADCModule
   _initialiseCurrentSensors
     _initialiseADCPin
     _initialiseGPIO
     _writeGPIO
   _initialiseGPIO
   _initialisePotentiometers
     _initialiseADCPin
   _setupInternalOscillator
   _setupPWM
     _initialiseGPIO
   _setupTimer0Interrupt

 _Tick980Hz (ROOT)
   _currentTripRead
     _readGPIO
   _readFilteredDutyPot
     _readADCRaw
   _readFilteredFreqPot
     _readADCRaw
   _runPotScaling
     ___lldiv
       ___wmul (ARG)
     ___lmul
     ___wmul
     _setPWMDutyandPeriod
   _setPWMDutyandPeriod
   i1_writeGPIO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      C3       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     1D      35       6       66.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      40       8       80.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0      40      10       80.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               30      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      C3      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 31 11:42:17 2023

                                 l88 0668                                   l89 0668  
                ___wmul@multiplicand 0072                                  l200 02F1  
                                l107 024D                                  l140 0686  
                                l205 0333                                  l317 06C8  
                                l165 06D0                                  l280 03F5  
                                l266 02C9                                  l370 062F  
                                l196 06DC                                  _PR2 001B  
                                wreg 0009                  __end_ofi1_writeGPIO 0455  
              ??_setPWMDutyandPeriod 0073                     ??_initialiseGPIO 0034  
                               l2000 06CE                                 l2002 06D7  
                               l2004 060D                                 l2006 06C0  
                               l2070 064F                                 l1600 039F  
                               l2080 065F                                 l2072 0653  
                               l1610 03B1                                 l1602 03A4  
                               l2170 022A                                 l2082 0662  
                               l2074 0656                                 l1620 03DB  
                               l1612 03B6                                 l1604 03A7  
                               l2076 0659                                 l1630 025C  
                               l1622 03E8                                 l1614 03C3  
                               l1606 03AB                                 l2078 065C  
                               l1640 026E                                 l1632 025F  
                               l1624 0250                                 l1616 03D1  
                               l1608 03AC                                 l1650 02BC  
                               l1642 0289                                 l1634 0263  
                               l1626 0251                                 l1618 03D6  
                               l1660 02DA                                 l1652 02CC  
                               l1644 0297                                 l1636 0264  
                               l1628 0257                                 l1900 0176  
                               l1670 02EF                                 l1662 02DC  
                               l1654 02CF                                 l1646 029C  
                               l1638 0269                                 l1910 018A  
                               l1902 0179                                 l1672 02F6  
                               l1664 02E2                                 l1656 02D5  
                               l1648 02A1                                 l1920 01A9  
                               l1912 0194                                 l1904 017A  
                               l1674 02FB                                 l1666 02E8  
                               l1658 02D9                                 l1930 01C4  
                               l1922 01AA                                 l1914 0199  
                               l1906 0184                                 l1676 0315  
                               l1668 02ED                                 l1596 0398  
                               l1940 01DA                                 l1932 01C9  
                               l1924 01B4                                 l1916 019A  
                               l1908 0189                                 l1678 031A  
                               l1598 0399                                 l1950 01F9  
                               l1942 01E4                                 l1934 01CA  
                               l1926 01B9                                 l1918 01A4  
                               l1960 0212                                 l1952 01FA  
                               l1944 01E9                                 l1936 01D4  
                               l1928 01BA                                 l1962 0217  
                               l1954 0204                                 l1946 01EA  
                               l1938 01D9                                 l1964 0218  
                               l1956 0207                                 l1948 01F4  
                               l1980 0670                                 l1958 0208  
                               l1990 067B                                 l1982 0672  
                               l1968 0222                                 l1992 067D  
                               l1984 0674                                 l1976 066B  
                               l1898 0175                                 l1994 067E  
                               l1986 0676                                 l1978 066E  
                               l1996 0680                                 l1988 0679  
                               l1998 06C9                                 STR_1 069E  
                               STR_3 06B0                                 u1010 039F  
                               u1011 039E                                 u1100 0257  
                               u1020 03B1                                 u1101 0256  
                               u1021 03B0                                 u1110 0269  
                               u1030 03B6                                 u1111 0268  
                               u1031 03B5                                 u1120 026E  
                               u1121 026D                                 u1210 02D5  
                               u1211 02D4                                 u1220 02E2  
                               u1204 02C1                                 u1060 03D6  
                               u1044 03BB                                 u1221 02E1  
                               u1205 02C0                                 u1061 03D5  
                               u1045 03BA                                 u1230 02E8  
                               u1134 0273                                 u1070 03DB  
                               u1054 03C8                                 u1231 02E7  
                               u1135 0272                                 u1071 03DA  
                               u1055 03C7                                 u1304 032C  
                               u1240 02F6                                 u1160 029C  
                               u1144 0280                                 u1305 032B  
                               u1241 02F5                                 u1161 029B  
                               u1145 027F                                 u1250 02FB  
                               u1170 02A1                                 u1154 028E  
                               u1251 02FA                                 u1171 02A0  
                               u1155 028D                                 u1084 03E0  
                               u1085 03DF                                 _LATA 010C  
                               u1094 03ED                                 _LATB 010D  
                               u1095 03EC                                 u1280 031A  
                               u1264 0300                                 u1184 02A6  
                               u1281 0319                                 u1265 02FF  
                               u1185 02A5                                 u1274 030D  
                               u1194 02B3                                 u1275 030C  
                               u1195 02B2                                 u1294 031F  
                               u1295 031E                                 i1l83 0070  
                               i1l78 0060                      _filteredFreqPot 0043  
                    _filteredDutyPot 0041                                 _main 064F  
                               fsr0h 0005                                 fsr1h 0007  
                               indf0 0000                                 fsr0l 0004  
                               fsr1l 0006                                 btemp 007E  
                     ?_runPotScaling 0070                                 start 0072  
          ??_setupInternalOscillator 0033                                ?_main 0039  
                    __end_of___lldiv 04B0                                i1l213 0377  
                              i1l214 0379                                i1l143 060C  
                              i1l208 0343                                i1l209 0356  
                              i1l219 0395                                i1l331 050A  
                              i1l324 0565                                i1l335 0157  
                              i1l280 0454                                i1l337 0172  
                              i1l286 05AE                                i1l542 063A  
                              i1l375 069D                                i1l544 064E  
                              i1l556 05E1                                i1l578 04AF  
                              _PORTA 000C                                _PORTB 000D  
                              _TRISA 008C                                _TRISB 008D  
                              u99_20 060A                                u99_21 0607  
                ___lmul@multiplicand 0074                          readADCRaw@i 0078  
               readFilteredFreqPot@i 0029             readFilteredDutyPot@i_696 0028  
                              status 0003                                wtemp0 007E  
             initialiseGPIO@portType 0036                  _initialiseADCModule 06D7  
               readFilteredDutyPot@i 0029           initialiseADCPin@gpioNumber 0038  
                    __initialization 0074                         __end_of_main 066B  
                  ?_initialiseADCPin 0070                          i1_writeGPIO 03F6  
                             ??_main 003D                   ??_initialiseADCPin 0033  
               ?_initialiseADCModule 0070           ??_initialiseCurrentSensors 0039  
    __end_of_setupInternalOscillator 024E  setupInternalOscillator@selectedFreq 0035  
                             _ADCON0 009D                               _ADCON1 009E  
                             _ADRESH 009C                               _ADRESL 009B  
                             _CCPR1L 0291                               _ANSELA 018C  
                             _ANSELB 018D                               u100_24 060C  
                             i1l2010 03F8                               i1l2020 040B  
                             i1l2012 03FE                               i1l2030 0435  
                             i1l2022 0410                               i1l2014 0403  
                             i1l2032 043A                               i1l2024 0415  
                             i1l2016 0406                               i1l2008 03F7  
                             i1l2040 0013                               i1l2034 0447  
                             i1l2026 0422                               i1l2018 040A  
                             i1l2050 0030                               i1l2042 001A  
                             i1l2028 0430                               i1l2060 0055  
                             i1l2052 003C                               i1l2044 0020  
                             i1l2036 0006                               i1l2054 0044  
                             i1l2062 0055                               i1l2046 0025  
                             i1l2038 000E                               i1l2064 006A  
                             i1l2056 004C                               i1l2048 002B  
                             i1l2066 006B                               i1l2058 0051  
                             i1l1700 036C                               i1l2068 006F  
                             i1l1710 037D                               i1l1712 0381  
                             i1l1800 049A                               i1l1730 0567  
                             i1l1810 0689                               i1l1722 0387  
                             i1l1714 0385                               i1l1706 036D  
                             i1l1802 04A1                               i1l1740 057A  
                             i1l1732 0568                               i1l1812 0692  
                             i1l1724 038B                               i1l1716 0386  
                             i1l1708 0371                               i1l1820 050B  
                             i1l1804 04A7                               i1l1750 0595  
                             i1l1742 057B                               i1l1734 056E  
                             i1l1814 069B                               i1l1726 0391  
                             i1l1830 051F                               i1l1590 05E2  
                             i1l1752 059A                               i1l1744 0580  
                             i1l1736 0573                               i1l1816 069C  
                             i1l1808 0687                               i1l1680 0335  
                             i1l1832 0525                               i1l1760 0636  
                             i1l1592 05E5                               i1l1738 0576  
                             i1l1690 034F                               i1l1682 0337  
                             i1l1842 0538                               i1l1834 052E  
                             i1l1826 050D                               i1l1770 05AF  
                             i1l1762 063F                               i1l1594 05F0  
                             i1l1692 0354                               i1l1684 033D  
                             i1l1844 0548                               i1l1836 0537  
                             i1l1828 051B                               i1l1860 04C0  
                             i1l1852 04B0                               i1l1780 05D9  
                             i1l1772 05B7                               i1l1764 0644  
                             i1l1756 0630                               i1l1694 035B  
                             i1l1686 0341                               i1l1846 054C  
                             i1l1862 04C4                               i1l1790 0474  
                             i1l1774 05BB                               i1l1766 064A  
                             i1l1758 0632                               i1l1696 035D  
                             i1l1688 0349                               u131_20 033D  
                             i1l1848 0552                               i1l1880 04F7  
                             i1l1864 04CA                               i1l1792 0478  
                             i1l1784 0455                               i1l1776 05C3  
                             u131_21 033C                               i1l1698 0361  
                             i1l1874 04DD                               i1l1866 04D3  
                             i1l1858 04B2                               i1l1794 047F  
                             i1l1786 0466                               i1l1778 05CA  
                             i1l1890 0153                               i1l1876 04ED  
                             i1l1868 04DC                               i1l1796 0491  
                             i1l1788 0469                               i1l1892 0161  
                             i1l1884 0090                               i1l1878 04F1  
                             i1l1798 0499                               i1l1894 0165  
                             i1l1886 009B                               u140_20 0580  
                             u132_20 0349                               i1l1896 0170  
                             i1l1888 0149                               u140_21 057F  
                             u132_21 0348                               u133_20 034F  
                             u133_21 034E                               u141_24 0585  
                             u141_25 0584                               u134_20 035B  
                             u150_20 05BB                               u134_21 035A  
                             u150_21 05BA                               u142_24 0591  
                             u142_25 0590                               u143_20 059A  
                             u143_21 0599                               u135_25 0364  
                             u151_25 05C4                               u136_20 0377  
                             u160_20 04A7                               u136_21 0376  
                             u160_21 04A6                               u144_24 059F  
                             u144_25 059E                               u152_25 05CB  
                             u161_20 0692                               u137_20 037D  
                             u153_20 05D9                               u161_21 0691  
                             u137_21 037C                               u153_21 05D8  
                             u145_24 05AB                               u145_25 05AA  
                             u162_20 069B                               u138_20 0391  
                             u154_20 0466                               u146_20 0636  
                             u170_20 00BC                               u162_21 069A  
                             u138_21 0390                               u154_21 0465  
                             u146_21 0635                               u170_25 00B8  
                             u139_20 056E                               u163_20 0525  
                             u171_20 00E9                               u139_21 056D  
                             u163_21 0524                               u155_25 046A  
                             u147_25 063B                               u171_25 00E5  
                             u164_20 0552                               u156_20 0478  
                             u172_20 0153                               u180_20 043A  
                             u164_21 0551                               u156_21 0477  
                             u172_21 0152                               u180_21 0439  
                             u148_25 0640                               u172_25 014F  
                             u165_20 055F                               u149_20 064A  
                             u173_20 0161                               u149_21 0649  
                             u173_21 0160                               u181_24 043F  
                             u165_25 055B                               u157_25 0479  
                             u173_25 015D                               u181_25 043E  
                             u166_20 04CA                               u158_20 0491  
                             u174_20 03FE                               u190_20 0066  
                             u166_21 04C9                               u158_21 0490  
                             u174_21 03FD                               u190_21 0064  
                             u182_24 044C                               u158_25 048D  
                             u182_25 044B                               u167_20 04F7  
                             u175_20 0410                               u191_20 0067  
                             u183_20 000E                               u167_21 04F6  
                             u175_21 040F                               u183_21 000D  
                             u159_25 049B                               u168_20 0504  
                             u176_20 0415                               u184_20 0020  
                             u176_21 0414                               u184_21 001F  
                             u168_25 0500                               u169_20 009B  
                             u185_20 002B                               u169_21 009A  
                             u185_21 002A                               u177_24 041A  
                             u177_25 0419                               u186_20 0030  
                             u186_21 002F                               u178_24 0427  
                             u178_25 0426                               u179_20 0435  
                             u187_20 0051                               u179_21 0434  
                             u187_21 0050                               u188_20 005C  
                             u188_21 005A                      ??_runPotScaling 0026  
                             u189_20 005D              initialiseGPIO@direction 0033  
                   readGPIO@portType 0073                  readADCRaw@gpioValid 0077  
                             ___lmul 05AF                               ___wmul 0630  
                          ??___lldiv 0020                     __end_of_readGPIO 05AF  
          setPWMDutyandPeriod@period 0072                ??_initialiseADCModule 0033  
           _initialisePotentiometers 06C0           initialiseADCPin@portNumber 0037  
                   __end_of_setupPWM 0687                      _currentTripRead 0687  
            __end_of__initialization 008C                       __pcstackCOMMON 0070  
          initialiseADCPin@gpioValid 0035                i1writeGPIO@gpioNumber 0074  
                      _currentILFIFO 00A0                       _OPTION_REGbits 0095  
                  __end_of_Tick980Hz 0072                           __pbssBANK0 003D  
                         __pbssBANK1 00A0                           __pbssBANK2 0120  
                         __pmaintext 064F                              ?___lmul 0070  
                            ?___wmul 0070                           __pintentry 0004  
                            _CCP1CON 0293                       ___lmul@product 0078  
            __end_of_currentTripRead 069E          __end_of_setPWMDutyandPeriod 060D  
   __end_of_initialiseCurrentSensors 0630             initialiseADCPin@portType 0036  
              i1writeGPIO@portNumber 0075                           _filteredIL 0045  
                          ?_readGPIO 0070                           _readADCRaw 0334  
                _readFilteredFreqPot 04B0                  _readFilteredDutyPot 050B  
                          ?_setupPWM 0070                 readADCRaw@gpioNumber 007A  
           initialiseGPIO@gpioNumber 0037                              ___lldiv 0455  
                       ?i1_writeGPIO 0070                 ?_readFilteredFreqPot 007B  
                            __ptext1 06C9                              __ptext2 066B  
                            __ptext3 0173                              __ptext4 06C0  
                            __ptext5 060D                              __ptext6 0396  
                            __ptext7 024E                              __ptext8 02CA  
                            __ptext9 06D7                 ?_readFilteredDutyPot 007B  
                          _T2CONbits 001C                              _setDuty 004D  
              i1writeGPIO@writeValue 0070                              clrloop0 06D2  
               end_of_initialization 008C                           ??_readGPIO 0070  
           ?_setupInternalOscillator 0070                      ___lldiv@divisor 0076  
                    ___lldiv@counter 0025                           ??_setupPWM 0039  
         ??_initialisePotentiometers 0039                           _prevPeriod 0053  
                  writeGPIO@portType 0036                ??_readFilteredFreqPot 0020  
              ??_readFilteredDutyPot 0020                     ?_currentTripRead 0070  
                  __end_of_writeGPIO 03F6             initialiseGPIO@portNumber 0038  
                        ?_readADCRaw 0070                          _CCP1CONbits 0293  
              __end_of_runPotScaling 0173            ?_initialiseCurrentSensors 0070  
                     __end_of___lmul 05E2          __end_of_initialiseADCModule 06DD  
                     __end_of___wmul 064F                       _clockFrequency 003D  
                start_initialization 0074         __end_of_setupTimer0Interrupt 06D1  
                     _currentIDSFIFO 00C0                            _Tick980Hz 0004  
                        _APFCON0bits 011D                             ??___lmul 0078  
                           ??___wmul 0074                            ___latbits 0001  
                      __pcstackBANK0 0020                           ?_Tick980Hz 0070  
                   _initialiseADCPin 02CA                   readGPIO@gpioNumber 0074  
                     _initialiseGPIO 024E     __end_of_initialisePotentiometers 06C9  
                           ?___lldiv 0076                      readADCRaw@i_614 0079  
                          _latestIL1 0049      readFilteredDutyPot@sumOfSamples 0024  
                     ___wmul@product 0074               __end_of_initialiseGPIO 02CA  
                          clear_ram0 06D1                            _setPeriod 0054  
                           _PIE1bits 0091                             _PIR1bits 0011  
       setPWMDutyandPeriod@dutyCycle 0070                 _setupTimer0Interrupt 06C9  
                _currentTripRead$739 0076                          _filteredIDS 0047  
                         _ADCON0bits 009D                    ___wmul@multiplier 0070  
                 readGPIO@portNumber 0075                          _freqPotFIFO 0140  
                          _writeGPIO 0396                          ??_Tick980Hz 0032  
                  ___lmul@multiplier 0070                  _readILCurrentADCRaw 0000  
                       ??_readADCRaw 0072                      ?_initialiseGPIO 0033  
                  readADCRaw@channel 0076                ?_setupTimer0Interrupt 0070  
        __end_of_readFilteredFreqPot 050B          __end_of_readFilteredDutyPot 0566  
               runPotScaling@maxDuty 002E                 runPotScaling@minDuty 0030  
                writeGPIO@gpioNumber 0037                   __end_of_readADCRaw 0396  
           readFilteredFreqPot@i_700 0028                           ?_writeGPIO 0033  
                           __ptext11 03F6                             __ptext20 0687  
                           __ptext12 0090                             __ptext21 0566  
                           __ptext13 05E2                             __ptext14 0630  
                           __ptext15 05AF                             __ptext16 0455  
                           __ptext17 04B0                             __ptext18 050B  
                           __ptext19 0334            ?_initialisePotentiometers 0070  
                        _dutyPotFIFO 0120                  i1writeGPIO@portType 0073  
                           _readGPIO 0566                        _timerSlotHalf 0051  
                       _PSTR1CONbits 0296                             _prevDuty 004B  
                           _setupPWM 066B                             int$flags 007E  
           __end_of_initialiseADCPin 0334                             main@argc 0039  
                           main@argv 003B      readFilteredFreqPot@sumOfSamples 0024  
                   _timerSlotQuarter 0050                           _INTCONbits 000B  
                writeGPIO@portNumber 0038                             intlevel1 0000  
           _initialiseCurrentSensors 060D                     ___lldiv@dividend 007A  
             ??_setupTimer0Interrupt 0033                           _OSCCONbits 0099  
                        _potSetCount 0052                  _setPWMDutyandPeriod 05E2  
            _setupInternalOscillator 0173                        _emergencyStop 004F  
                      ??i1_writeGPIO 0071                        __pstringtext1 069E  
                      __pstringtext2 06B0                        __pstringtext3 0000  
                         _OPTION_REG 0095                     ___lldiv@quotient 0021  
                writeGPIO@writeValue 0033                          ??_writeGPIO 0034  
               ?_setPWMDutyandPeriod 0070                readADCRaw@returnValue 0074  
                  ??_currentTripRead 0076                        _runPotScaling 0090  
